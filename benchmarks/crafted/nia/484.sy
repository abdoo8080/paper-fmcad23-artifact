(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_1 Int) (Start_12 Int) (Start_6 Int) (Start_3 Int) (Start_9 Int) (StartBool_1 Bool) (Start_2 Int) (StartBool_3 Bool) (Start_8 Int) (StartBool_2 Bool) (Start_5 Int) (Start_4 Int) (Start_7 Int) (Start_10 Int))
  ((Start Int (3 1 (- Start_1 Start)))
   (StartBool Bool (true (= Start_8 Start_5) (>= Start_11 Start_4) (> Start_9 Start_5)))
   (Start_11 Int (1 y (* Start_4 Start_9) (div Start_3 Start_11) (ite StartBool_1 Start_3 Start_5)))
   (Start_1 Int (0 (- Start_1) (- Start Start) (+ Start_2 Start_2) (mod Start_1 Start_2) (ite StartBool Start_2 Start_3)))
   (Start_12 Int (1 (- Start_5) (- Start_12 Start_7) (abs Start_10)))
   (Start_6 Int (5 (- Start_7) (+ Start Start_4) (div Start_5 Start_7) (ite StartBool_3 Start_4 Start_3)))
   (Start_3 Int (0 (- Start_2 Start) (* Start_1 Start_4) (mod Start_5 Start_2) (ite StartBool_1 Start Start_1)))
   (Start_9 Int (0 2 (- Start_5) (- Start_8 Start_5) (div Start_6 Start_10) (mod Start_3 Start_5) (abs Start_3)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool StartBool_3) (or StartBool StartBool_3) (<= Start Start_4) (> Start_2 Start_3)))
   (Start_2 Int (5 1 4 (+ Start_12 Start_12) (* Start_1 Start_2) (abs Start_1) (ite StartBool_3 Start_5 Start_1)))
   (StartBool_3 Bool (false true (and StartBool_2 StartBool_2) (or StartBool StartBool_1) (<= Start_3 Start_1) (= Start_5 Start_2)))
   (Start_8 Int (x 5 2 y 1 (- Start_8 Start_10) (+ Start_7 Start_2) (* Start Start_11) (abs Start_9)))
   (StartBool_2 Bool (false true (or StartBool StartBool_1) (< Start_2 Start_5) (= Start_4 Start_3)))
   (Start_5 Int (5 (- Start_3) (+ Start_5 Start_1) (div Start Start_4) (ite StartBool_2 Start_6 Start_3)))
   (Start_4 Int (5 (- Start_6) (- Start_2 Start_8) (+ Start_7 Start_6) (* Start_3 Start_8) (div Start_9 Start_1)))
   (Start_7 Int (0 (- Start_2) (- Start_2 Start_2) (+ Start_1 Start_5) (* Start Start_6) (abs Start_2)))
   (Start_10 Int (2 x (- Start_9 Start_8) (* Start_2 Start_4) (ite StartBool_2 Start_8 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ x (- (mod 5 x)))))

(check-synth)
