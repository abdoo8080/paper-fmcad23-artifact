(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_7 Int) (Start_13 Int) (Start_8 Int) (Start_4 Int) (Start_6 Int) (Start_3 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_19 Int) (Start_10 Int) (Start_15 Int) (Start_21 Int) (Start_12 Int) (Start_16 Int) (Start_14 Int) (Start_18 Int) (Start_17 Int) (StartBool_3 Bool) (Start_20 Int) (StartBool_5 Bool) (StartBool_6 Bool) (Start_9 Int) (Start_5 Int) (Start_2 Int) (StartBool_7 Bool) (StartBool_4 Bool) (Start_1 Int))
  ((Start Int (4 (- Start) (- Start Start_1) (* Start_2 Start_2) (div Start_3 Start_2) (mod Start_4 Start_4) (abs Start_4) (ite StartBool_1 Start_1 Start_2)))
   (StartBool Bool (true false (and StartBool_4 StartBool_2) (<= Start_11 Start_18) (= Start_15 Start_17) (> Start_20 Start_2)))
   (Start_11 Int (2 x (- Start_4) (- Start_4 Start) (* Start Start_9) (mod Start_12 Start_9) (abs Start_1) (ite StartBool_3 Start_9 Start_3)))
   (Start_7 Int (3 (- Start_10) (+ Start_11 Start_4) (* Start_6 Start_8) (mod Start_4 Start_3)))
   (Start_13 Int (2 (+ Start_4 Start_1) (* Start_11 Start_6) (mod Start_8 Start_9) (ite StartBool_2 Start_1 Start)))
   (Start_8 Int (y (+ Start_6 Start_7) (* Start_2 Start_4) (div Start_9 Start_5) (mod Start_7 Start_5)))
   (Start_4 Int (1 5 (- Start Start_5) (div Start_1 Start_4) (mod Start_4 Start_1) (abs Start_6) (ite StartBool Start_3 Start)))
   (Start_6 Int (0 (- Start) (- Start_6 Start_2) (+ Start_5 Start_4) (* Start_3 Start_2) (mod Start Start_4) (abs Start_6) (ite StartBool Start_3 Start_2)))
   (Start_3 Int (1 2 y (- Start_7) (+ Start Start_5) (abs Start_8)))
   (StartBool_2 Bool (false (not StartBool_2) (< Start_1 Start_5) (<= Start_2 Start_1)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_2 StartBool_2) (= Start Start_4) (> Start_3 Start)))
   (Start_19 Int (4 3 (- Start_7) (+ Start_15 Start_17) (* Start_17 Start_20) (div Start_1 Start_11) (mod Start_5 Start_18) (abs Start_2)))
   (Start_10 Int (2 (- Start_5) (- Start_10 Start_20) (* Start_21 Start_6) (mod Start_7 Start_21) (ite StartBool_6 Start_21 Start_11)))
   (Start_15 Int (2 0 (- Start_4) (div Start_1 Start_16) (mod Start_2 Start) (abs Start_6) (ite StartBool Start_1 Start_1)))
   (Start_21 Int (3 y 0 5 (- Start_4) (- Start Start_20) (+ Start_2 Start_9) (div Start_9 Start) (abs Start_10)))
   (Start_12 Int (0 2 (ite StartBool_3 Start_14 Start_8)))
   (Start_16 Int (3 (- Start_14) (- Start_10 Start_5) (+ Start_7 Start_9) (* Start_3 Start_5) (mod Start_7 Start_17) (abs Start_9) (ite StartBool_1 Start_18 Start)))
   (Start_14 Int (1 (- Start_11) (+ Start_4 Start_10) (div Start_12 Start) (mod Start_12 Start_6) (abs Start_15) (ite StartBool_2 Start_1 Start_14)))
   (Start_18 Int (y (- Start_18) (* Start_15 Start) (div Start_10 Start_10) (mod Start_16 Start_2) (ite StartBool_3 Start_16 Start_6)))
   (Start_17 Int (x (- Start_10 Start_6) (+ Start_8 Start_13) (mod Start_19 Start_11) (abs Start_6) (ite StartBool Start_14 Start)))
   (StartBool_3 Bool (true false (not StartBool_3) (< Start_13 Start_9) (>= Start_7 Start_3) (> Start_5 Start_7)))
   (Start_20 Int (5 0 (div Start_6 Start_17) (mod Start Start_17) (abs Start_4) (ite StartBool_4 Start_10 Start_17)))
   (StartBool_5 Bool (true false (not StartBool_5) (and StartBool StartBool_5) (<= Start_9 Start_20) (= Start_8 Start_8) (>= Start_1 Start_8) (> Start_4 Start_20)))
   (StartBool_6 Bool (false (and StartBool_1 StartBool_7) (< Start_7 Start_11) (<= Start_21 Start_10) (= Start_15 Start_11) (>= Start_10 Start_6)))
   (Start_9 Int (x (- Start_8) (div Start_7 Start_9) (abs Start_9)))
   (Start_5 Int (5 1 (div Start_3 Start) (mod Start Start_3)))
   (Start_2 Int (0 (* Start_15 Start_6) (div Start_12 Start_15) (mod Start_8 Start_1) (ite StartBool_6 Start_12 Start_9)))
   (StartBool_7 Bool (true (< Start_1 Start_3) (= Start_10 Start_1) (>= Start_4 Start_1) (> Start_11 Start_9)))
   (StartBool_4 Bool (false (and StartBool_1 StartBool_1) (or StartBool_1 StartBool_5) (<= Start_14 Start_12)))
   (Start_1 Int (3 y (- Start_19) (- Start_10 Start_12) (+ Start_7 Start_19) (* Start_17 Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 5 (* 5 y))))

(check-synth)
