(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_21 Int) (Start_10 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_20 Int) (Start_6 Int) (Start_4 Int) (Start_11 Int) (Start_16 Int) (Start_2 Int) (Start_1 Int) (Start_5 Int) (Start_13 Int) (StartBool_1 Bool) (Start_22 Int) (Start_15 Int) (Start_3 Int) (Start_17 Int) (StartBool_5 Bool) (Start_18 Int) (Start_12 Int) (Start_9 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_14 Int) (Start_7 Int) (Start_8 Int) (Start_19 Int))
  ((Start Int (3 (- Start) (- Start_1 Start_1) (+ Start_1 Start_1) (div Start Start_2) (mod Start_2 Start_1)))
   (StartBool Bool (true false (or StartBool_1 StartBool_5) (< Start_15 Start_13) (>= Start_21 Start_22) (> Start_14 Start_5)))
   (Start_21 Int (x 2 5 4 (- Start_19) (- Start_9 Start_16) (+ Start_16 Start_8) (* Start_4 Start_22) (abs Start_9)))
   (Start_10 Int (3 (- Start Start_2) (div Start_9 Start_12) (mod Start_4 Start_5) (abs Start_13)))
   (StartBool_3 Bool (false true (not StartBool_2) (or StartBool_2 StartBool_4) (< Start_1 Start_1) (<= Start_10 Start_3) (= Start_11 Start_6) (>= Start_2 Start_8)))
   (StartBool_2 Bool (true false (not StartBool_3) (or StartBool_3 StartBool_1) (= Start_8 Start_7) (>= Start Start_5)))
   (Start_20 Int (2 (+ Start_3 Start_1) (div Start_2 Start_9) (ite StartBool_3 Start_19 Start_20)))
   (Start_6 Int (3 5 (- Start Start) (div Start_6 Start_5) (ite StartBool_1 Start_1 Start_3)))
   (Start_4 Int (y x (- Start_4) (- Start Start) (* Start_1 Start_4)))
   (Start_11 Int (4 (- Start_3) (* Start_8 Start) (abs Start_1) (ite StartBool_4 Start_10 Start_7)))
   (Start_16 Int (4 3 y x (- Start_15) (+ Start_8 Start_17)))
   (Start_2 Int (4 2 0 3 1 y (* Start Start) (div Start_3 Start_2) (mod Start Start_4)))
   (Start_1 Int (0 3 2 (- Start_6 Start_7) (div Start_3 Start_2) (mod Start_1 Start_3) (abs Start_8) (ite StartBool_1 Start_9 Start_3)))
   (Start_5 Int (1 3 4 0 (- Start_5 Start_4)))
   (Start_13 Int (y (* Start_4 Start_1)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool) (< Start_6 Start_2) (<= Start_1 Start_6) (> Start_3 Start_2)))
   (Start_22 Int (0 x 3 2 (- Start_5) (+ Start_2 Start_4) (* Start_15 Start_22) (mod Start_15 Start_18) (abs Start_13) (ite StartBool_4 Start_2 Start_3)))
   (Start_15 Int (0 x (- Start) (- Start_14 Start_8) (+ Start_14 Start_4) (* Start_1 Start_7) (div Start_7 Start_4)))
   (Start_3 Int (5 2 x 0 3 1 y 4 (div Start_5 Start_3) (mod Start_5 Start_1) (abs Start_1) (ite StartBool_1 Start_5 Start_2)))
   (Start_17 Int (1 0 3 y 5 4 (+ Start_18 Start_9)))
   (StartBool_5 Bool (true (and StartBool_2 StartBool_5) (or StartBool_1 StartBool_4)))
   (Start_18 Int (3 5 (- Start_6 Start_14) (+ Start_2 Start_2) (* Start_9 Start_13) (ite StartBool_5 Start_17 Start_2)))
   (Start_12 Int (3 (- Start Start_7) (div Start Start_3) (mod Start_6 Start_14) (abs Start_11) (ite StartBool_5 Start_11 Start_15)))
   (Start_9 Int (x (- Start) (div Start_9 Start_7) (mod Start_1 Start_4) (abs Start_1) (ite StartBool_2 Start_2 Start_1)))
   (StartBool_4 Bool (true (not StartBool_6) (and StartBool StartBool_3) (or StartBool_2 StartBool_2) (< Start_7 Start_16) (<= Start_12 Start_16) (>= Start_10 Start_14) (> Start_3 Start_14)))
   (StartBool_6 Bool (false true (not StartBool_4) (or StartBool_4 StartBool_4)))
   (Start_14 Int (2 (- Start_5 Start_15) (div Start_8 Start_6) (mod Start_4 Start_7) (ite StartBool_2 Start_8 Start_14)))
   (Start_7 Int (0 y x 2 4 (- Start_19) (- Start_17 Start_4) (+ Start_6 Start) (div Start_2 Start_1) (mod Start_1 Start_17) (abs Start_2)))
   (Start_8 Int (y 0 x 2 1 (- Start_9) (+ Start_13 Start_11) (div Start_2 Start_17)))
   (Start_19 Int (2 (- Start_8) (- Start Start_5) (* Start_9 Start_7) (mod Start_13 Start_16) (abs Start_5) (ite StartBool_4 Start_17 Start_20)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (* x 2) (mod (mod 0 0) x))))

(check-synth)
