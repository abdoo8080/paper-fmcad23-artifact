(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_3 Bool) (Start_11 Int) (StartBool_4 Bool) (StartBool_1 Bool) (StartBool_6 Bool) (Start_8 Int) (Start_7 Int) (Start_14 Int) (Start_17 Int) (Start_4 Int) (StartBool_2 Bool) (Start_3 Int) (Start_9 Int) (Start_16 Int) (Start_15 Int) (Start_13 Int) (Start_18 Int) (Start_2 Int) (Start_12 Int) (StartBool_5 Bool) (Start_5 Int) (Start_20 Int) (Start_1 Int) (Start_19 Int) (Start_10 Int) (Start_22 Int) (Start_6 Int) (Start_21 Int))
  ((Start Int (3 2 (- Start) (+ Start_1 Start) (mod Start Start_1) (abs Start_2) (ite StartBool Start_3 Start)))
   (StartBool Bool (true (or StartBool_4 StartBool_7) (< Start_6 Start_17) (<= Start_7 Start_5) (> Start_7 Start_22)))
   (StartBool_7 Bool (true (not StartBool_5) (< Start_3 Start_9) (<= Start_7 Start_1) (> Start_3 Start_3)))
   (StartBool_3 Bool (true false (>= Start_7 Start_1)))
   (Start_11 Int (y (- Start_1) (- Start_12 Start_9) (* Start Start_10) (div Start_9 Start_3) (ite StartBool_1 Start_2 Start_2)))
   (StartBool_4 Bool (false true (not StartBool_2) (< Start_11 Start_4) (= Start_6 Start_8) (>= Start_16 Start_4) (> Start_15 Start_3)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool_2 StartBool_3) (< Start_3 Start_5) (> Start_8 Start)))
   (StartBool_6 Bool (true false (not StartBool_5) (and StartBool_1 StartBool_5) (= Start_15 Start_2) (>= Start_13 Start_17) (> Start_16 Start_10)))
   (Start_8 Int (4 x y 2 3 (+ Start_2 Start_6) (* Start_4 Start_4) (mod Start_3 Start_3) (abs Start_4) (ite StartBool Start_2 Start_1)))
   (Start_7 Int (5 (- Start_4) (- Start_3 Start_6) (* Start_4 Start_2) (mod Start_2 Start) (ite StartBool Start_8 Start_4)))
   (Start_14 Int (0 (- Start_8) (- Start_8 Start_11) (div Start_13 Start_12) (mod Start_15 Start_3) (abs Start_7) (ite StartBool_3 Start_14 Start_2)))
   (Start_17 Int (4 (- Start_17) (+ Start_15 Start_17) (* Start_3 Start_1) (div Start_2 Start_1) (mod Start_15 Start_17)))
   (Start_4 Int (x (- Start_1) (- Start_5 Start_6) (* Start_2 Start_7) (mod Start_1 Start_1)))
   (StartBool_2 Bool (true false (not StartBool_1) (or StartBool_2 StartBool_4) (< Start_13 Start_11) (<= Start_14 Start_9)))
   (Start_3 Int (2 3 (+ Start_1 Start_2) (abs Start_3)))
   (Start_9 Int (1 (- Start_8) (- Start_8 Start) (* Start_5 Start_10) (mod Start_11 Start_11)))
   (Start_16 Int (2 (+ Start_7 Start_2) (* Start_15 Start_4) (div Start_7 Start_17) (mod Start_3 Start_17) (abs Start_14) (ite StartBool_4 Start_6 Start_7)))
   (Start_15 Int (x 2 (- Start_1) (- Start Start_4) (+ Start_16 Start_5) (div Start_8 Start_9)))
   (Start_13 Int (0 3 (- Start_12) (+ Start_18 Start_12) (ite StartBool_3 Start_12 Start_16)))
   (Start_18 Int (2 3 (- Start_4) (div Start Start_1) (ite StartBool_4 Start_12 Start_10)))
   (Start_2 Int (1 3 (+ Start_1 Start) (div Start_4 Start)))
   (Start_12 Int (2 4 x y 1 (- Start_9) (+ Start_7 Start_13) (ite StartBool Start_19 Start_20)))
   (StartBool_5 Bool (false true (not StartBool) (and StartBool_6 StartBool_2) (or StartBool_5 StartBool) (< Start_9 Start_19) (<= Start_9 Start_14) (>= Start_5 Start_3) (> Start_16 Start_13)))
   (Start_5 Int (y 5 2 (- Start_12) (- Start_10 Start_22) (div Start Start_3) (mod Start_14 Start_6) (abs Start_2)))
   (Start_20 Int (y 3 (+ Start_1 Start_3) (abs Start_10) (ite StartBool Start_9 Start)))
   (Start_1 Int (5 (* Start Start_5) (div Start_16 Start_11) (mod Start_22 Start_5)))
   (Start_19 Int (x y (- Start_5) (+ Start_2 Start_3) (div Start_12 Start_2) (abs Start_2) (ite StartBool_5 Start_5 Start_1)))
   (Start_10 Int (x 1 (- Start_17) (+ Start_9 Start_21) (abs Start_22)))
   (Start_22 Int (1 5 (* Start Start_5)))
   (Start_6 Int (5 0 (- Start_9 Start) (+ Start_8 Start_2) (* Start_2 Start_7) (abs Start_8) (ite StartBool Start_8 Start_6)))
   (Start_21 Int (0 (- Start_19) (+ Start_20 Start_16) (ite StartBool_5 Start_9 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 (* x 4))))

(check-synth)
