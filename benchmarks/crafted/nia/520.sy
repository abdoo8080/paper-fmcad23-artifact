(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (StartBool_4 Bool) (Start_1 Int) (Start_14 Int) (Start_3 Int) (Start_9 Int) (Start_4 Int) (Start_8 Int) (StartBool_1 Bool) (Start_11 Int) (Start_7 Int) (Start_12 Int) (Start_10 Int) (Start_6 Int) (Start_2 Int) (Start_5 Int) (Start_13 Int) (StartBool_3 Bool) (StartBool_2 Bool))
  ((Start Int (0 2 4 (- Start) (- Start_1 Start_2) (+ Start Start) (mod Start_3 Start_3) (ite StartBool_1 Start Start)))
   (StartBool Bool (false true (not StartBool_4) (< Start_13 Start_8) (>= Start_3 Start_8) (> Start_6 Start_5)))
   (StartBool_5 Bool (true false (not StartBool) (< Start_10 Start_2) (<= Start Start_2) (> Start_2 Start_6)))
   (StartBool_4 Bool (false true (or StartBool_5 StartBool) (<= Start_13 Start) (= Start_4 Start_11) (> Start_4 Start_6)))
   (Start_1 Int (0 1 2 (- Start_6) (* Start_4 Start_12) (div Start_9 Start_12) (mod Start_7 Start_9) (abs Start_1)))
   (Start_14 Int (y 0 2 (- Start_14 Start_8) (* Start_7 Start_2) (ite StartBool_3 Start_13 Start_11)))
   (Start_3 Int (3 (- Start_5 Start) (+ Start_2 Start_5) (mod Start_3 Start) (abs Start_8) (ite StartBool_3 Start_12 Start_12)))
   (Start_9 Int (1 (+ Start_10 Start_11) (* Start_2 Start_6) (div Start_4 Start_4) (ite StartBool_1 Start_5 Start_6)))
   (Start_4 Int (y 5 0 (- Start) (- Start_1 Start_4) (+ Start_1 Start_2) (* Start_5 Start_2) (div Start_1 Start_6) (mod Start_7 Start_8)))
   (Start_8 Int (2 (- Start_8 Start_8) (+ Start_4 Start_3) (* Start_7 Start_2) (mod Start_9 Start_4)))
   (StartBool_1 Bool (false true (not StartBool) (or StartBool_2 StartBool) (< Start_1 Start_4)))
   (Start_11 Int (5 (+ Start_9 Start_11) (div Start_10 Start_2) (abs Start_4)))
   (Start_7 Int (2 5 x y 1 (+ Start_12 Start_2) (div Start_4 Start_9) (mod Start_6 Start_7)))
   (Start_12 Int (5))
   (Start_10 Int (0 (- Start_9) (- Start_6 Start) (* Start_8 Start_12) (abs Start_2)))
   (Start_6 Int (y 3 1 x 5 2 (- Start_6) (- Start_6 Start_9) (* Start_3 Start_9) (div Start_1 Start_11) (mod Start_4 Start_5) (ite StartBool Start_10 Start_8)))
   (Start_2 Int (5 (- Start_12) (+ Start_12 Start_13) (* Start_12 Start_12) (div Start_8 Start_1) (abs Start_13) (ite StartBool_1 Start_14 Start_3)))
   (Start_5 Int (x (- Start_6) (+ Start_7 Start_11) (* Start_10 Start_13) (mod Start_2 Start_4) (ite StartBool Start_13 Start_13)))
   (Start_13 Int (2 (- Start_3 Start_6) (+ Start_11 Start_1) (* Start Start_7) (div Start_10 Start_11) (abs Start_5)))
   (StartBool_3 Bool (true (<= Start_13 Start) (>= Start_2 Start_13) (> Start_5 Start_6)))
   (StartBool_2 Bool (false (< Start_9 Start_6) (<= Start_11 Start) (> Start_8 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* (* 4 5) 3))))

(check-synth)
