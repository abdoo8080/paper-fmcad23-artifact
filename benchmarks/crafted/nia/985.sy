(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_14 Int) (Start_17 Int) (Start_4 Int) (StartBool_1 Bool) (Start_1 Int) (Start_7 Int) (Start_12 Int) (Start_6 Int) (StartBool_3 Bool) (Start_8 Int) (Start_11 Int) (Start_15 Int) (Start_9 Int) (Start_5 Int) (Start_3 Int) (Start_13 Int) (Start_16 Int) (Start_10 Int) (StartBool_2 Bool))
  ((Start Int (2 3 (- Start_1 Start_2) (+ Start_1 Start_2) (* Start_2 Start_3) (mod Start Start_1) (abs Start_4) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true (= Start_5 Start_13) (>= Start_13 Start_13) (> Start Start_8)))
   (Start_2 Int (4 (+ Start_8 Start_17) (div Start_8 Start_4) (ite StartBool_1 Start_14 Start_14)))
   (Start_14 Int (0 (- Start_16) (* Start_1 Start_14) (abs Start_10)))
   (Start_17 Int (y (- Start_1 Start_14) (div Start_11 Start_6) (abs Start_9) (ite StartBool_3 Start_6 Start_4)))
   (Start_4 Int (0 4 5 y x (- Start_14 Start_7) (+ Start_5 Start_15) (div Start_11 Start_8) (mod Start_13 Start_4) (abs Start_14)))
   (StartBool_1 Bool (true (or StartBool_2 StartBool_3) (< Start_5 Start_1) (= Start_6 Start_7)))
   (Start_1 Int (3 y (- Start_6) (- Start_11 Start_11) (div Start_11 Start_1) (mod Start_1 Start_12)))
   (Start_7 Int (0 2 5 1 x 3 (- Start_5) (- Start_2 Start_4) (mod Start_3 Start_6) (abs Start_7)))
   (Start_12 Int (3 (- Start_13 Start_13) (+ Start_1 Start_13) (abs Start_9)))
   (Start_6 Int (5 2 3 (div Start_1 Start_1) (abs Start_8)))
   (StartBool_3 Bool (true (or StartBool_1 StartBool) (<= Start_8 Start_10) (>= Start Start_5) (> Start_6 Start_3)))
   (Start_8 Int (0 y (* Start_9 Start_1) (div Start_3 Start)))
   (Start_11 Int (y (- Start_4) (* Start_9 Start_6) (mod Start_11 Start_12) (abs Start_5) (ite StartBool_3 Start_6 Start_8)))
   (Start_15 Int (y (- Start_13) (+ Start_4 Start_16) (div Start Start_2) (ite StartBool_3 Start_15 Start_11)))
   (Start_9 Int (3 0 x 2 1 4 5 y (+ Start_1 Start_4) (* Start_4 Start_3) (div Start_2 Start_9) (abs Start_5)))
   (Start_5 Int (2 (- Start_4) (- Start_2 Start_4) (div Start Start)))
   (Start_3 Int (1 (abs Start_8)))
   (Start_13 Int (x (- Start_8 Start_2) (+ Start_13 Start_9) (div Start_6 Start_2) (ite StartBool_3 Start_1 Start_5)))
   (Start_16 Int (1 (- Start_12) (+ Start_12 Start_7) (div Start_15 Start_2) (mod Start_15 Start_1) (abs Start_6) (ite StartBool Start_12 Start_17)))
   (Start_10 Int (0 y (- Start_9) (div Start_1 Start_6) (mod Start_8 Start_4) (abs Start_11) (ite StartBool_2 Start_1 Start_4)))
   (StartBool_2 Bool (true (not StartBool) (and StartBool_2 StartBool_3) (< Start_10 Start_13) (<= Start_4 Start_2) (= Start_13 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (abs y) (mod 2 y))))

(check-synth)
