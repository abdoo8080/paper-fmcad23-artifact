(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_3 Int) (StartBool_3 Bool) (Start_2 Int) (StartBool_1 Bool) (Start_9 Int) (Start_5 Int) (Start_7 Int) (Start_6 Int) (StartBool_4 Bool) (Start_10 Int) (Start_8 Int) (StartBool_2 Bool) (Start_4 Int))
  ((Start Int (1 3 y (+ Start Start)))
   (StartBool Bool (false true (not StartBool) (and StartBool StartBool) (or StartBool StartBool) (<= Start Start_1) (>= Start_2 Start_2)))
   (Start_1 Int (x 1 (- Start_3 Start_8) (div Start_6 Start_5) (abs Start_4)))
   (Start_3 Int (0 2 (- Start_4) (+ Start_2 Start_4) (div Start_6 Start_3) (mod Start_1 Start_7) (abs Start_10) (ite StartBool Start_1 Start_2)))
   (StartBool_3 Bool (false true (not StartBool_4) (<= Start_5 Start_3) (= Start_2 Start_1) (>= Start_3 Start_5)))
   (Start_2 Int (5 (- Start) (+ Start_2 Start_2) (div Start_3 Start_1) (mod Start_4 Start) (abs Start_4) (ite StartBool_1 Start Start_1)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool) (or StartBool_2 StartBool_3) (< Start Start_4) (> Start_4 Start_4)))
   (Start_9 Int (4 (- Start_3 Start) (abs Start_3)))
   (Start_5 Int (0 x (- Start_2) (- Start Start_1) (+ Start Start_3) (div Start_4 Start_3)))
   (Start_7 Int (y (- Start_3) (+ Start_6 Start_2) (div Start_7 Start_8) (mod Start_2 Start_9) (ite StartBool Start_9 Start)))
   (Start_6 Int (3 y 1 (- Start Start_2) (mod Start_4 Start_3) (abs Start_5)))
   (StartBool_4 Bool (false (and StartBool_3 StartBool_3) (< Start_1 Start_4) (<= Start_6 Start) (= Start_5 Start_3) (>= Start_4 Start_6) (> Start_4 Start)))
   (Start_10 Int (3 (- Start_2) (- Start_4 Start_2) (* Start_10 Start_5) (div Start_9 Start_3) (mod Start_10 Start_1)))
   (Start_8 Int (1 4 x (- Start_10) (- Start_5 Start_4) (+ Start_10 Start_3) (abs Start)))
   (StartBool_2 Bool (true false (and StartBool_3 StartBool_4) (< Start_1 Start_4) (>= Start Start_1)))
   (Start_4 Int (5 (- Start_1 Start_7) (+ Start_5 Start_1) (* Start Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div x y))))

(check-synth)
