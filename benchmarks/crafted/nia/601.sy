(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_20 Int) (Start_13 Int) (Start_5 Int) (Start_8 Int) (Start_1 Int) (Start_10 Int) (StartBool_5 Bool) (Start_12 Int) (Start_2 Int) (Start_9 Int) (Start_7 Int) (StartBool_3 Bool) (Start_23 Int) (Start_15 Int) (Start_6 Int) (Start_4 Int) (Start_3 Int) (Start_21 Int) (Start_16 Int) (Start_17 Int) (Start_14 Int) (StartBool_4 Bool) (StartBool_6 Bool) (StartBool_7 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_19 Int) (Start_11 Int) (StartBool_8 Bool) (Start_22 Int))
  ((Start Int (x (- Start_1) (* Start Start_2) (mod Start_3 Start_3)))
   (StartBool Bool (true false (or StartBool_5 StartBool_5) (< Start_4 Start_19) (>= Start_3 Start_1)))
   (Start_18 Int (y (- Start_21) (- Start_1 Start_21) (+ Start_16 Start_14) (mod Start_5 Start_12) (abs Start_1) (ite StartBool_3 Start_10 Start_20)))
   (Start_20 Int (1 (- Start_23 Start_6) (+ Start_22 Start_4) (* Start_14 Start_8) (div Start_14 Start_23) (abs Start_16)))
   (Start_13 Int (5 (- Start_3 Start_14) (ite StartBool_3 Start_2 Start_14)))
   (Start_5 Int (x (- Start_4 Start_5) (+ Start_8 Start_13) (* Start_6 Start_8) (ite StartBool_5 Start_17 Start_3)))
   (Start_8 Int (1 3 (* Start_9 Start_9) (abs Start_1) (ite StartBool Start_2 Start_5)))
   (Start_1 Int (x (div Start_17 Start_18) (mod Start_19 Start_13) (ite StartBool Start_14 Start_1)))
   (Start_10 Int (2 (* Start_9 Start_11) (div Start_8 Start_8)))
   (StartBool_5 Bool (false (not StartBool_5) (or StartBool StartBool_5) (<= Start_8 Start_1) (= Start_14 Start_11) (>= Start_14 Start_5)))
   (Start_12 Int (y (- Start_10) (- Start_9 Start_9) (+ Start_10 Start_7) (mod Start_7 Start_2) (ite StartBool_3 Start_3 Start_10)))
   (Start_2 Int (2 1 (- Start_16 Start_15) (+ Start_6 Start_10) (div Start_14 Start) (mod Start_7 Start_8) (ite StartBool_6 Start_15 Start_17)))
   (Start_9 Int (4 2 1 (- Start_5) (+ Start_5 Start_7) (mod Start_5 Start_10) (ite StartBool_2 Start_10 Start_11)))
   (Start_7 Int (5 y (- Start_5 Start_4) (+ Start_12 Start_4) (* Start_3 Start_4) (abs Start_3) (ite StartBool_2 Start_6 Start_11)))
   (StartBool_3 Bool (false true (not StartBool_4) (or StartBool_5 StartBool_2) (< Start_9 Start_9) (<= Start_13 Start_1) (>= Start_6 Start_10)))
   (Start_23 Int (0 (- Start_20) (- Start_7 Start_23) (div Start_23 Start_9) (mod Start_14 Start_18) (ite StartBool_4 Start_5 Start)))
   (Start_15 Int (1 3 (- Start_16) (- Start_6 Start_13) (+ Start_8 Start_2) (abs Start_3) (ite StartBool Start_15 Start_2)))
   (Start_6 Int (1 0 (- Start_7) (+ Start_4 Start_8) (div Start Start) (mod Start Start_9) (ite StartBool Start_2 Start_9)))
   (Start_4 Int (1 (- Start_1) (+ Start_3 Start_5) (* Start Start_4) (mod Start_1 Start_4) (abs Start_2) (ite StartBool_1 Start_6 Start_2)))
   (Start_3 Int (x (- Start_4) (+ Start_3 Start_1) (* Start_4 Start_1) (abs Start) (ite StartBool Start_4 Start_3)))
   (Start_21 Int (1 (+ Start_12 Start_16) (* Start_22 Start_19) (div Start_21 Start_1) (abs Start_17) (ite StartBool_8 Start_13 Start_12)))
   (Start_16 Int (x (- Start_8) (* Start_15 Start_16) (ite StartBool_5 Start_3 Start_10)))
   (Start_17 Int (y (- Start_5 Start_3) (* Start_4 Start_3) (div Start_11 Start_14) (abs Start_15) (ite StartBool_1 Start_15 Start_7)))
   (Start_14 Int (4 (- Start_11) (- Start_9 Start_15) (+ Start_5 Start_3) (mod Start Start) (abs Start_2)))
   (StartBool_4 Bool (false true (not StartBool_4) (and StartBool_6 StartBool_7) (<= Start_1 Start_14)))
   (StartBool_6 Bool (false (or StartBool_3 StartBool_1) (< Start_14 Start_10) (<= Start_2 Start_13) (= Start_4 Start_11) (>= Start_3 Start) (> Start_10 Start_3)))
   (StartBool_7 Bool (false (and StartBool_7 StartBool_3) (or StartBool_3 StartBool_1) (< Start_14 Start_9)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_1) (<= Start_11 Start_1) (> Start_9 Start_3)))
   (StartBool_1 Bool (true false (not StartBool_7) (and StartBool_4 StartBool_3) (<= Start_6 Start_3) (>= Start_2 Start_4) (> Start_15 Start_7)))
   (Start_19 Int (1 2 y x (- Start_12) (* Start_19 Start_20) (div Start Start_21) (mod Start_18 Start_8) (abs Start_16)))
   (Start_11 Int (1 (- Start_10) (+ Start_6 Start_5) (div Start_1 Start_1)))
   (StartBool_8 Bool (false (and StartBool_2 StartBool_7) (<= Start_4 Start) (>= Start_16 Start_20) (> Start_18 Start_9)))
   (Start_22 Int (2 3 5 x (- Start_13) (+ Start_15 Start_9) (div Start_3 Start_7) (mod Start_3 Start_14) (ite StartBool_7 Start_2 Start_14)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div (abs y) y))))

(check-synth)
