(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_16 Int) (Start_17 Int) (Start_15 Int) (Start_1 Int) (Start_13 Int) (Start_7 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_8 Int) (Start_3 Int) (StartBool_1 Bool) (Start_5 Int) (Start_18 Int) (Start_6 Int) (StartBool_7 Bool) (StartBool_3 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (Start_14 Int) (Start_4 Int) (Start_9 Int) (Start_10 Int) (Start_11 Int) (Start_12 Int))
  ((Start Int (5 (- Start_1) (- Start_2 Start_2) (div Start_2 Start_3)))
   (StartBool Bool (true false (>= Start_2 Start_14)))
   (Start_2 Int (x 0 5 (+ Start_15 Start_13) (* Start_4 Start_11) (ite StartBool_5 Start Start_6)))
   (Start_16 Int (x (- Start_16 Start_15) (* Start_15 Start_14) (abs Start_6)))
   (Start_17 Int (4 x 2 1 y 0 (- Start_3) (+ Start_17 Start_5) (div Start Start_8)))
   (Start_15 Int (2 (- Start_13) (- Start_15 Start_16) (+ Start_7 Start_17) (div Start_9 Start_13) (mod Start_12 Start_10)))
   (Start_1 Int (y 2 (+ Start_18 Start_6) (ite StartBool_4 Start_7 Start_10)))
   (Start_13 Int (4 (+ Start_13 Start_4) (* Start_2 Start_4) (abs Start_12) (ite StartBool_2 Start_9 Start)))
   (Start_7 Int (5 (- Start_1 Start_13) (* Start_6 Start_2) (ite StartBool_3 Start_8 Start_8)))
   (StartBool_4 Bool (false true (not StartBool_3) (and StartBool_5 StartBool_3) (> Start_7 Start_1)))
   (StartBool_6 Bool (true false (not StartBool) (< Start_5 Start_5) (<= Start_8 Start_8) (= Start_10 Start_11) (>= Start_1 Start_8) (> Start_11 Start_11)))
   (Start_8 Int (5 1 4 (- Start_3) (- Start_12 Start_4) (* Start Start_1) (div Start_8 Start_5)))
   (Start_3 Int (4 3 (mod Start_1 Start_2) (abs Start_1) (ite StartBool_1 Start_3 Start_3)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool_1 StartBool_1) (< Start_4 Start_4) (<= Start_4 Start) (> Start_5 Start)))
   (Start_5 Int (3 x (* Start_3 Start_5) (div Start_6 Start_5) (ite StartBool_2 Start_3 Start_3)))
   (Start_18 Int (4 (- Start_6) (+ Start_10 Start_6) (div Start_17 Start_5) (abs Start_18) (ite StartBool_7 Start_10 Start_6)))
   (Start_6 Int (5 (- Start_7) (+ Start_1 Start_5) (* Start Start_4) (div Start_4 Start) (abs Start_8) (ite StartBool_3 Start_8 Start_4)))
   (StartBool_7 Bool (false true (and StartBool_1 StartBool_4) (or StartBool_3 StartBool_1) (< Start_7 Start_10) (<= Start_10 Start_16) (>= Start_4 Start_10) (> Start_5 Start_10)))
   (StartBool_3 Bool (true (not StartBool) (and StartBool_4 StartBool_5) (<= Start_3 Start_6)))
   (StartBool_2 Bool (false true (not StartBool_1) (or StartBool_1 StartBool_1) (<= Start Start_1) (> Start_2 Start)))
   (StartBool_5 Bool (true false (<= Start_8 Start_9) (= Start_7 Start_9) (>= Start_3 Start_7)))
   (Start_14 Int (x (- Start_17 Start_12) (div Start_18 Start_10) (mod Start_5 Start_14) (abs Start_16)))
   (Start_4 Int (1 (- Start_1) (- Start_14 Start_15) (* Start_15 Start_9) (mod Start_8 Start_11)))
   (Start_9 Int (3 (- Start_3) (- Start_4 Start_5) (* Start_8 Start_6) (div Start_2 Start_5) (abs Start_1) (ite StartBool_6 Start_2 Start_2)))
   (Start_10 Int (y (- Start_10) (+ Start_10 Start_1) (* Start Start_10) (mod Start_1 Start_3) (ite StartBool_1 Start_12 Start_3)))
   (Start_11 Int (3 (- Start_11 Start_12) (* Start_8 Start_7) (ite StartBool_6 Start_5 Start_8)))
   (Start_12 Int (3 (* Start_10 Start_5) (div Start_12 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (< 4 y) x y)))

(check-synth)
