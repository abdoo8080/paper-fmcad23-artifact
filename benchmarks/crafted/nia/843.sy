(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_14 Int) (Start_3 Int) (Start_8 Int) (StartBool_4 Bool) (Start_2 Int) (Start_13 Int) (StartBool_3 Bool) (Start_12 Int) (Start_1 Int) (Start_5 Int) (StartBool_1 Bool) (Start_7 Int) (Start_11 Int) (StartBool_2 Bool) (Start_10 Int) (Start_6 Int) (Start_4 Int) (Start_9 Int))
  ((Start Int (5 0 (- Start_1 Start) (* Start Start_1) (abs Start_1)))
   (StartBool Bool (true (not StartBool_4) (and StartBool StartBool_2) (> Start_13 Start_2)))
   (StartBool_5 Bool (true false (<= Start_9 Start_2) (= Start_10 Start_12) (>= Start_5 Start_7)))
   (Start_14 Int (2 x 3 (+ Start_11 Start_9) (div Start_4 Start_14) (abs Start_13)))
   (Start_3 Int (y 3 5 (- Start_8) (mod Start_3 Start_11) (ite StartBool_4 Start_5 Start_9)))
   (Start_8 Int (5 (- Start_5) (+ Start_11 Start_3) (div Start_6 Start_12) (abs Start_13) (ite StartBool Start_9 Start_3)))
   (StartBool_4 Bool (false true (and StartBool_4 StartBool_3) (or StartBool_1 StartBool_5) (< Start_10 Start_4) (= Start_6 Start_11) (> Start_7 Start_14)))
   (Start_2 Int (4 y (- Start_3) (- Start_4 Start) (+ Start_4 Start_1) (div Start_2 Start_3) (mod Start_2 Start_1) (ite StartBool_1 Start_2 Start_1)))
   (Start_13 Int (5 3 (abs Start_3)))
   (StartBool_3 Bool (false true (or StartBool_2 StartBool_1) (<= Start_2 Start) (= Start_4 Start_2) (>= Start Start_5)))
   (Start_12 Int (y 2 0 5 (- Start_8) (- Start_9 Start_13) (+ Start_2 Start_2) (mod Start_10 Start)))
   (Start_1 Int (x (- Start Start_1) (+ Start_2 Start_2) (* Start_2 Start_1) (mod Start_1 Start_2) (ite StartBool Start Start_2)))
   (Start_5 Int (5 2 x y (- Start_2) (+ Start Start_6) (* Start_3 Start_6) (abs Start_2)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_1 StartBool_1) (or StartBool_2 StartBool_3) (> Start_3 Start_3)))
   (Start_7 Int (x 2 (- Start_3) (* Start_1 Start_5) (div Start_5 Start_5)))
   (Start_11 Int (3 (- Start_5) (- Start_1 Start_1) (+ Start_5 Start_9) (* Start_8 Start_8) (mod Start_11 Start_9) (ite StartBool_1 Start Start_2)))
   (StartBool_2 Bool (true))
   (Start_10 Int (4 x (- Start_3) (+ Start Start_12) (* Start_1 Start_11) (div Start Start_13) (abs Start_13)))
   (Start_6 Int (2 0 1 (- Start_6 Start_4) (+ Start_1 Start_6) (mod Start_7 Start_3) (ite StartBool_3 Start_1 Start_4)))
   (Start_4 Int (1 (- Start_6) (+ Start_4 Start_4) (* Start_7 Start_1) (div Start_8 Start) (mod Start_1 Start_2) (abs Start_9) (ite StartBool_1 Start_3 Start_9)))
   (Start_9 Int (3 (- Start_5) (* Start_10 Start_11) (abs Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (+ x 5))))

(check-synth)
