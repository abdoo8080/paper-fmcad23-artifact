(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (Start_16 Int) (Start_15 Int) (Start_8 Int) (StartBool_6 Bool) (Start_14 Int) (Start_12 Int) (Start_13 Int) (StartBool_4 Bool) (Start_3 Int) (Start_5 Int) (StartBool_1 Bool) (Start_4 Int) (Start_10 Int) (Start_7 Int) (StartBool_2 Bool) (Start_2 Int) (Start_11 Int) (Start_1 Int) (Start_9 Int) (Start_6 Int) (StartBool_5 Bool) (StartBool_3 Bool))
  ((Start Int (3 (- Start_1 Start) (* Start_1 Start_1) (div Start Start_2) (mod Start_2 Start_2) (abs Start_3)))
   (StartBool Bool (true (and StartBool_7 StartBool_6) (or StartBool_2 StartBool_4) (< Start_11 Start_5)))
   (StartBool_7 Bool (false true (and StartBool_4 StartBool_3) (<= Start Start)))
   (Start_16 Int (0 3 5 (div Start_14 Start_3) (mod Start_12 Start_8) (abs Start_4) (ite StartBool_1 Start_16 Start_10)))
   (Start_15 Int (y 3 5 4 2 (- Start_7) (+ Start_9 Start_2) (div Start_1 Start_7) (abs Start_6)))
   (Start_8 Int (1 (- Start_14) (+ Start_3 Start_6) (div Start_10 Start_7) (mod Start_15 Start_4)))
   (StartBool_6 Bool (false (or StartBool_3 StartBool) (< Start_6 Start_10)))
   (Start_14 Int (1 4 (+ Start_10 Start_14) (div Start_1 Start_8) (ite StartBool_6 Start_1 Start)))
   (Start_12 Int (4 0 (- Start_8) (- Start_11 Start_2) (+ Start_5 Start) (* Start_13 Start_2) (abs Start_6) (ite StartBool Start_7 Start_9)))
   (Start_13 Int (y 4 (- Start_7 Start_10) (+ Start_13 Start_1) (div Start_10 Start_11) (mod Start_9 Start_10)))
   (StartBool_4 Bool (true (and StartBool_4 StartBool_4) (or StartBool_2 StartBool_5)))
   (Start_3 Int (3 (- Start_2) (* Start_2 Start_2) (div Start_3 Start) (ite StartBool Start_1 Start_3)))
   (Start_5 Int (2 y (- Start_2) (+ Start_7 Start_3) (* Start Start_8) (div Start_5 Start_9) (ite StartBool_1 Start_9 Start)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool_1 StartBool_1) (<= Start_4 Start_5) (= Start_4 Start_2) (>= Start Start_4)))
   (Start_4 Int (5 0 (- Start_3) (abs Start_14)))
   (Start_10 Int (4 3 (- Start_4 Start_14) (mod Start_2 Start_12)))
   (Start_7 Int (1 (- Start_1) (- Start_6 Start_6) (+ Start_1 Start_6) (* Start_7 Start_2) (div Start_4 Start) (abs Start_1) (ite StartBool Start_2 Start_4)))
   (StartBool_2 Bool (false (not StartBool_3) (and StartBool_1 StartBool_4) (>= Start_4 Start_2)))
   (Start_2 Int (y (- Start_4 Start_1) (+ Start_1 Start_5) (* Start_2 Start_3) (mod Start_3 Start_6) (abs Start_3)))
   (Start_11 Int (0 (+ Start_11 Start_3) (* Start_12 Start_11) (div Start_1 Start_11) (abs Start_4)))
   (Start_1 Int (1 (- Start_10) (* Start_14 Start_1) (div Start_3 Start_11) (mod Start_16 Start_3) (abs Start_13)))
   (Start_9 Int (5 0 1 (- Start_1 Start_5) (+ Start_8 Start_8) (* Start_10 Start_3) (mod Start_3 Start_1) (abs Start_6) (ite StartBool_2 Start_3 Start_2)))
   (Start_6 Int (2 4 (- Start_7 Start_7)))
   (StartBool_5 Bool (true (and StartBool_5 StartBool_3) (<= Start_8 Start_10) (= Start_8 Start_7) (>= Start_10 Start_2) (> Start_8 Start_10)))
   (StartBool_3 Bool (false (< Start_1 Start_1) (<= Start_10 Start_9) (= Start_10 Start_10) (>= Start_9 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (abs (* 2 y)) 0)))

(check-synth)
