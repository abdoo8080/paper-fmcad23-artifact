(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_13 Int) (StartBool_2 Bool) (Start_12 Int) (Start_1 Int) (Start_3 Int) (Start_8 Int) (Start_6 Int) (Start_4 Int) (StartBool_3 Bool) (StartBool_1 Bool) (Start_9 Int) (Start_5 Int) (Start_11 Int) (Start_2 Int) (Start_7 Int) (Start_10 Int))
  ((Start Int (4 (- Start Start) (div Start Start_1)))
   (StartBool Bool (false true (not StartBool) (and StartBool StartBool_3) (= Start_2 Start_14) (>= Start_7 Start_7) (> Start_7 Start_6)))
   (Start_14 Int (3 (- Start) (* Start_5 Start_13) (div Start_14 Start_6) (mod Start_10 Start_14)))
   (Start_13 Int (y 2 (- Start Start_4) (div Start_7 Start_2) (mod Start_3 Start_11) (abs Start_6) (ite StartBool_1 Start Start_3)))
   (StartBool_2 Bool (false true (and StartBool_1 StartBool_3) (< Start_10 Start_2) (<= Start_11 Start_7) (= Start_10 Start_6) (> Start_2 Start)))
   (Start_12 Int (3 (- Start_12) (+ Start Start_6)))
   (Start_1 Int (5 (- Start) (- Start Start_2) (ite StartBool_1 Start Start_3)))
   (Start_3 Int (4 (+ Start Start_3) (* Start Start_1) (div Start_1 Start_1) (mod Start_1 Start) (abs Start_1) (ite StartBool Start_3 Start_1)))
   (Start_8 Int (0 y (- Start_6) (- Start_2 Start_2) (+ Start_9 Start_7) (div Start Start_3) (abs Start_5)))
   (Start_6 Int (5 (- Start) (+ Start_4 Start_3) (* Start_2 Start_3) (div Start_3 Start_2)))
   (Start_4 Int (2 (- Start Start_7) (+ Start_5 Start_2) (div Start_1 Start) (ite StartBool_2 Start Start_8)))
   (StartBool_3 Bool (true (and StartBool_1 StartBool_3) (<= Start_2 Start_10) (>= Start_12 Start_11)))
   (StartBool_1 Bool (true false (and StartBool StartBool_1) (or StartBool_2 StartBool_2) (= Start_1 Start_4) (> Start_5 Start_1)))
   (Start_9 Int (5 1 (- Start_3) (- Start_5 Start_4) (abs Start_7) (ite StartBool_1 Start_7 Start_2)))
   (Start_5 Int (1 3 (- Start) (- Start_1 Start_6) (+ Start_6 Start_3)))
   (Start_11 Int (5 x (- Start_7) (+ Start_2 Start_10) (div Start_1 Start_9) (abs Start_3)))
   (Start_2 Int (3 (- Start_12 Start_4) (+ Start_4 Start_13) (div Start_11 Start_13) (mod Start_12 Start_13) (ite StartBool_3 Start_13 Start_12)))
   (Start_7 Int (x 0 (- Start_2 Start_10) (div Start_6 Start) (mod Start Start_6) (ite StartBool_2 Start_10 Start_9)))
   (Start_10 Int (2 (- Start_11 Start_2) (+ Start Start_9) (* Start_10 Start) (div Start_1 Start) (mod Start_1 Start_6) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (* x 2) 2)))

(check-synth)
