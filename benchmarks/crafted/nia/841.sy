(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (Start_16 Int) (Start_14 Int) (Start_3 Int) (Start_11 Int) (Start_7 Int) (Start_15 Int) (Start_8 Int) (Start_6 Int) (Start_4 Int) (StartBool_3 Bool) (Start_5 Int) (Start_9 Int) (Start_10 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_12 Int) (Start_13 Int))
  ((Start Int (3 0 (- Start_1 Start_1) (+ Start_1 Start_2) (* Start_2 Start_3) (div Start_2 Start_2) (mod Start_1 Start_2) (abs Start_3) (ite StartBool Start Start_3)))
   (StartBool Bool (true (and StartBool StartBool_1) (<= Start_6 Start_3) (= Start_13 Start_15) (> Start_11 Start_8)))
   (Start_1 Int (5 1 (- Start_12 Start_15) (abs Start_2)))
   (Start_2 Int (x 5 (- Start_2) (* Start_14 Start_9) (div Start_6 Start_11) (mod Start_13 Start_8) (abs Start_7) (ite StartBool_3 Start_5 Start_13)))
   (Start_16 Int (4 0 5 (+ Start_6 Start_10) (* Start_2 Start_8) (div Start_9 Start_4) (abs Start_4) (ite StartBool_1 Start_9 Start_10)))
   (Start_14 Int (0 (- Start_3) (- Start_15 Start_3) (* Start_6 Start_5) (mod Start_13 Start_4)))
   (Start_3 Int (3 y x (- Start_3 Start_2) (ite StartBool_1 Start_1 Start)))
   (Start_11 Int (y (- Start_6) (- Start Start_6) (+ Start_13 Start_3) (div Start_3 Start) (mod Start Start) (abs Start_4) (ite StartBool_3 Start Start_5)))
   (Start_7 Int (2 5 (- Start_3) (- Start Start_5) (* Start_4 Start) (div Start_7 Start_2)))
   (Start_15 Int (5 4 (- Start_6 Start_15) (+ Start_6 Start_8) (div Start_5 Start_1) (ite StartBool_1 Start_13 Start)))
   (Start_8 Int (5 y (- Start_1 Start_2) (* Start_2 Start_6) (abs Start_3) (ite StartBool Start_1 Start_4)))
   (Start_6 Int (5 2 1 (- Start_5 Start_1) (+ Start_6 Start_5) (div Start_8 Start_3) (ite StartBool Start_6 Start_7)))
   (Start_4 Int (3 (- Start_2 Start_7) (+ Start_8 Start) (* Start_9 Start_9) (abs Start) (ite StartBool_2 Start_5 Start_2)))
   (StartBool_3 Bool (false true (not StartBool) (< Start_2 Start_14) (= Start_9 Start_5) (>= Start_5 Start_4)))
   (Start_5 Int (x (- Start_4) (+ Start_6 Start_2) (* Start_3 Start_3) (div Start_4 Start_1) (mod Start_2 Start) (abs Start_7)))
   (Start_9 Int (3 (- Start_2) (+ Start_10 Start_7) (* Start_8 Start_9) (div Start_8 Start_8) (mod Start_11 Start_10) (ite StartBool_2 Start_12 Start_3)))
   (Start_10 Int (4 y 3 2 (- Start_3) (- Start_3 Start_10) (* Start_4 Start_15) (div Start_15 Start_8) (mod Start_4 Start_8) (abs Start_16)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool StartBool) (< Start_4 Start_1) (<= Start_5 Start_4) (= Start_3 Start_3) (>= Start Start_2) (> Start_6 Start_7)))
   (StartBool_2 Bool (false (or StartBool_1 StartBool_1) (>= Start_8 Start_4) (> Start Start_1)))
   (Start_12 Int (1 3 (- Start_1 Start_13) (+ Start_12 Start_8) (* Start_5 Start_2) (mod Start_1 Start) (abs Start_8)))
   (Start_13 Int (5 (- Start_8 Start_8) (div Start_11 Start_7) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 2 (- (div 4 x) (+ y x)))))

(check-synth)
