(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (Start_4 Int) (Start_8 Int) (Start_5 Int) (Start_9 Int) (Start_7 Int) (Start_3 Int) (Start_1 Int) (Start_6 Int) (StartBool_3 Bool) (Start_2 Int) (StartBool_5 Bool) (Start_10 Int) (StartBool_4 Bool) (StartBool_2 Bool))
  ((Start Int (1 (- Start_1) (- Start_2 Start) (+ Start Start_2) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true false (or StartBool StartBool_3) (> Start_3 Start_2)))
   (StartBool_1 Bool (true false (not StartBool_2) (or StartBool_3 StartBool_2) (<= Start_2 Start_3) (>= Start_4 Start_5) (> Start Start)))
   (Start_4 Int (5 (- Start_2 Start) (+ Start_5 Start_5) (* Start_3 Start_4) (mod Start_2 Start_1)))
   (Start_8 Int (4 y (- Start_1) (* Start Start_3) (div Start_2 Start) (mod Start_5 Start) (ite StartBool_2 Start_4 Start_8)))
   (Start_5 Int (0 2 (- Start_1 Start_1) (+ Start_2 Start_4) (div Start_3 Start_2) (mod Start_3 Start) (abs Start) (ite StartBool Start_2 Start_3)))
   (Start_9 Int (3 5 0 y 2 (- Start_9) (+ Start_4 Start_9) (abs Start_3) (ite StartBool_1 Start_4 Start_8)))
   (Start_7 Int (4 0 1 (div Start_5 Start_7)))
   (Start_3 Int (1 (- Start_6) (- Start_4 Start_5) (div Start_7 Start_7) (mod Start_7 Start_3) (ite StartBool_4 Start_4 Start_6)))
   (Start_1 Int (5 (- Start_9 Start_5) (* Start_1 Start_5) (mod Start_2 Start_8) (abs Start_1)))
   (Start_6 Int (4 5 x 3 (- Start_4 Start_7) (div Start Start_6) (mod Start Start_6) (abs Start_6)))
   (StartBool_3 Bool (true false (not StartBool_5) (> Start_1 Start_8)))
   (Start_2 Int (2 (+ Start_10 Start_5) (* Start_10 Start_9) (abs Start_9) (ite StartBool_5 Start_1 Start_10)))
   (StartBool_5 Bool (true (or StartBool_3 StartBool_4) (< Start_9 Start_6) (>= Start_8 Start_9)))
   (Start_10 Int (4 (- Start_8) (abs Start_1)))
   (StartBool_4 Bool (true (not StartBool_1) (and StartBool_1 StartBool_2) (< Start Start_1) (<= Start_5 Start_6) (>= Start_7 Start_1) (> Start_2 Start_6)))
   (StartBool_2 Bool (false true (not StartBool_2) (and StartBool_1 StartBool_1) (< Start_8 Start_2) (<= Start_6 Start_6) (= Start_4 Start_1) (>= Start_10 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 5 (- (mod x 5) 3)))))

(check-synth)
