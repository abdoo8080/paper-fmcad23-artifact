(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_9 Int) (Start_20 Int) (StartBool_6 Bool) (Start_5 Int) (StartBool_2 Bool) (Start_11 Int) (Start_7 Int) (Start_6 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_1 Int) (Start_22 Int) (Start_4 Int) (Start_3 Int) (Start_15 Int) (Start_21 Int) (Start_16 Int) (Start_17 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_8 Int) (Start_13 Int) (Start_14 Int) (Start_19 Int) (Start_18 Int) (Start_2 Int) (Start_12 Int) (StartBool_8 Bool) (StartBool_7 Bool))
  ((Start Int (4 3 5 (- Start_1 Start_1) (+ Start Start_2) (mod Start_2 Start_1) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (false true (or StartBool_5 StartBool_6) (>= Start_17 Start_8)))
   (Start_10 Int (1 x 0 2 (- Start_13) (+ Start_11 Start) (* Start_12 Start_9) (div Start_2 Start_6) (abs Start_14) (ite StartBool_4 Start_14 Start_15)))
   (Start_9 Int (0 (+ Start_3 Start_7) (div Start_10 Start_9) (mod Start Start_11) (abs Start_12)))
   (Start_20 Int (2 (- Start_11) (+ Start_20 Start_7) (* Start_16 Start_18) (div Start_15 Start_3) (ite StartBool_3 Start_18 Start)))
   (StartBool_6 Bool (true (not StartBool_7) (and StartBool_2 StartBool_8) (= Start_7 Start_13) (>= Start Start_14) (> Start_5 Start_5)))
   (Start_5 Int (1 (- Start_9) (- Start_1 Start_4) (abs Start_5) (ite StartBool_3 Start_5 Start_3)))
   (StartBool_2 Bool (false (< Start Start_8) (<= Start_7 Start_2) (= Start Start_4) (> Start_6 Start)))
   (Start_11 Int (4 (div Start_2 Start_10) (abs Start_3) (ite StartBool Start Start_5)))
   (Start_7 Int (3 (- Start_4 Start_2) (div Start_4 Start_7) (abs Start_7) (ite StartBool_3 Start_5 Start_1)))
   (Start_6 Int (2 0 x (- Start_2) (+ Start_3 Start_7) (* Start_5 Start_7) (mod Start_5 Start_2) (abs Start)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_3) (or StartBool_1 StartBool_2) (< Start_4 Start_5) (<= Start_3 Start_6) (>= Start_2 Start_2)))
   (StartBool_3 Bool (false (not StartBool_2) (or StartBool_1 StartBool_3) (<= Start_1 Start_3)))
   (Start_1 Int (0 (- Start_3) (+ Start_18 Start_15) (abs Start_7) (ite StartBool Start_12 Start_3)))
   (Start_22 Int (2 3 0 (* Start_13 Start_20) (mod Start_7 Start_15)))
   (Start_4 Int (3 1 (- Start_18 Start_9) (* Start_10 Start_5) (div Start_7 Start_12) (mod Start_2 Start_14)))
   (Start_3 Int (0 (- Start_4 Start_1) (mod Start_3 Start_5) (abs Start_1) (ite StartBool_1 Start Start_1)))
   (Start_15 Int (3 (mod Start_16 Start_7) (abs Start_7)))
   (Start_21 Int (y 5 0 (- Start_9) (- Start_22 Start_9) (+ Start_20 Start_15) (mod Start_16 Start_17) (abs Start_21) (ite StartBool_6 Start_19 Start_7)))
   (Start_16 Int (5 0 3 (div Start_11 Start_12) (abs Start_3)))
   (Start_17 Int (0 4 (* Start_2 Start_10) (ite StartBool_2 Start_3 Start_5)))
   (StartBool_4 Bool (true (not StartBool_1) (and StartBool_1 StartBool_2)))
   (StartBool_5 Bool (true (not StartBool_5) (and StartBool StartBool_1) (or StartBool_7 StartBool_5) (<= Start_5 Start_21) (= Start_13 Start_1)))
   (Start_8 Int (y 0 4 (- Start_7) (* Start_1 Start_4) (mod Start_6 Start_6)))
   (Start_13 Int (2 (* Start_17 Start_16)))
   (Start_14 Int (5 (- Start_8)))
   (Start_19 Int (4 (- Start_15 Start_10) (* Start_4 Start_2) (abs Start_19)))
   (Start_18 Int (x 0 (- Start_14 Start_16) (* Start Start_2) (mod Start_11 Start_13) (abs Start_11) (ite StartBool_4 Start_12 Start_19)))
   (Start_2 Int (4 5 (+ Start_6 Start_4) (div Start_5 Start_15) (abs Start_4) (ite StartBool_3 Start_15 Start_20)))
   (Start_12 Int (3 2 1 x (- Start Start_9) (+ Start_3 Start_8) (div Start_9 Start_9)))
   (StartBool_8 Bool (false true (<= Start_12 Start_9) (= Start_7 Start_19) (>= Start_11 Start_19)))
   (StartBool_7 Bool (false true (not StartBool_3) (or StartBool_2 StartBool_5) (= Start_11 Start_9) (> Start_1 Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* 3 5) (abs (+ 2 (abs x))))))

(check-synth)
