(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_3 Int) (Start_2 Int) (Start_16 Int) (Start_4 Int) (Start_11 Int) (Start_14 Int) (Start_5 Int) (Start_12 Int) (Start_15 Int) (Start_6 Int) (Start_10 Int) (Start_7 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_8 Int) (Start_13 Int) (StartBool_4 Bool) (StartBool_2 Bool) (Start_9 Int))
  ((Start Int (2 y 3 4 (+ Start_1 Start) (* Start_2 Start) (div Start_2 Start_3) (mod Start_1 Start_4) (abs Start) (ite StartBool_1 Start_3 Start_3)))
   (StartBool Bool (true (not StartBool_2) (< Start_2 Start_3) (>= Start_8 Start_5) (> Start_13 Start_16)))
   (Start_1 Int (2 (- Start_4) (- Start_14 Start_2) (+ Start_2 Start_6) (* Start_15 Start_5)))
   (Start_3 Int (1 (- Start_5) (+ Start_4 Start_15) (* Start_4 Start_10) (mod Start Start_5)))
   (Start_2 Int (0 (- Start_2 Start_2) (+ Start_6 Start_7) (* Start_8 Start_5) (abs Start)))
   (Start_16 Int (0 2 (- Start_10) (+ Start_11 Start_3) (div Start_7 Start_2) (mod Start_10 Start_2) (abs Start_1)))
   (Start_4 Int (5 (+ Start_13 Start_14) (* Start_2 Start_13) (div Start_3 Start_2)))
   (Start_11 Int (2 x 4 3 5 1 y 0 (* Start_7 Start_3) (div Start_7 Start_3) (mod Start_6 Start_8) (abs Start)))
   (Start_14 Int (2 (- Start_6) (- Start_9 Start_7) (* Start_7 Start_4) (div Start_9 Start_7) (mod Start_2 Start_8) (ite StartBool_3 Start_9 Start_4)))
   (Start_5 Int (x 5 (+ Start Start_3) (* Start_2 Start_1)))
   (Start_12 Int (3 1 (- Start_11) (+ Start_11 Start_4) (* Start_10 Start_2)))
   (Start_15 Int (1 3 4 2 (- Start_16 Start_11) (* Start_11 Start) (abs Start_5) (ite StartBool Start_1 Start_3)))
   (Start_6 Int (2 (- Start_3) (- Start Start_4) (+ Start Start_2) (* Start_7 Start_7) (mod Start_8 Start_5) (abs Start_8)))
   (Start_10 Int (2 x (- Start_6) (- Start_7 Start_9) (mod Start_5 Start_7) (abs Start_2) (ite StartBool_2 Start_1 Start_11)))
   (Start_7 Int (5 (- Start) (- Start_5 Start_12) (* Start_10 Start_11) (mod Start_9 Start_10) (abs Start_9)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool StartBool_2) (< Start_1 Start) (<= Start_2 Start_4) (= Start_2 Start_5) (>= Start_2 Start_5) (> Start_4 Start_4)))
   (StartBool_3 Bool (false (or StartBool StartBool_2) (>= Start_3 Start_6) (> Start_3 Start_1)))
   (Start_8 Int (5 1 3 (* Start_8 Start_9) (div Start_7 Start_5) (abs Start_3) (ite StartBool_4 Start_7 Start_7)))
   (Start_13 Int (y (* Start_15 Start_10) (div Start_11 Start_16) (mod Start Start_10) (abs Start_7)))
   (StartBool_4 Bool (false true (not StartBool_2) (< Start_5 Start_8) (<= Start_2 Start_6) (= Start_10 Start_2) (>= Start_3 Start_10) (> Start_6 Start_2)))
   (StartBool_2 Bool (true false (not StartBool_3) (= Start Start_2) (> Start_3 Start_1)))
   (Start_9 Int (x 1 (- Start_3) (- Start_2 Start) (div Start_2 Start_6) (abs Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- x) y)))

(check-synth)
