(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_14 Int) (Start_15 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_2 Int) (Start_4 Int) (Start_6 Int) (Start_5 Int) (Start_16 Int) (Start_12 Int) (Start_1 Int) (Start_7 Int) (Start_8 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_9 Int) (Start_10 Int) (StartBool_7 Bool) (Start_13 Int) (Start_11 Int) (Start_3 Int) (StartBool_2 Bool))
  ((Start Int (y 3 (- Start) (div Start_1 Start_1) (mod Start Start_1) (abs Start_1) (ite StartBool Start_1 Start)))
   (StartBool Bool (true false (and StartBool_2 StartBool_2) (or StartBool_1 StartBool_2) (>= Start_7 Start_13)))
   (StartBool_5 Bool (true (and StartBool_6 StartBool) (or StartBool_7 StartBool_3) (< Start_7 Start) (> Start_13 Start_11)))
   (Start_14 Int (x (- Start_12 Start_13) (* Start_8 Start_7) (abs Start_15)))
   (Start_15 Int (y (- Start_9) (* Start_11 Start_11) (ite StartBool_5 Start_13 Start_15)))
   (StartBool_4 Bool (false (not StartBool_5) (< Start_8 Start_14)))
   (StartBool_6 Bool (true (not StartBool_7) (or StartBool_1 StartBool_3) (<= Start_5 Start) (= Start_3 Start_14) (> Start_1 Start_13)))
   (Start_2 Int (3 (- Start_10) (- Start_5 Start_9) (* Start_10 Start_11) (div Start_11 Start_12) (ite StartBool_3 Start_1 Start_2)))
   (Start_4 Int (y (- Start_5) (* Start_6 Start_3) (mod Start_4 Start_2) (ite StartBool Start_2 Start_2)))
   (Start_6 Int (3 4 (div Start Start_2) (mod Start_2 Start_3) (abs Start_1)))
   (Start_5 Int (3 (- Start_7) (div Start_1 Start)))
   (Start_16 Int (4 1 (- Start_13) (- Start_12 Start_3) (* Start_15 Start)))
   (Start_12 Int (1 (- Start_9) (+ Start_1 Start_3) (* Start_7 Start_9) (mod Start_6 Start_2)))
   (Start_1 Int (4 2 (- Start Start_2) (* Start_2 Start_3) (mod Start_1 Start_4) (abs Start_4)))
   (Start_7 Int (1 (- Start_1) (+ Start_3 Start_2) (div Start_5 Start_8) (mod Start_8 Start_7)))
   (Start_8 Int (0 x 1 4 (- Start_5 Start_4) (* Start Start_9) (abs Start_3) (ite StartBool Start_9 Start_9)))
   (StartBool_1 Bool (true (<= Start_9 Start_3) (= Start Start_5) (>= Start_3 Start_5)))
   (StartBool_3 Bool (true false (< Start_12 Start_9) (<= Start_10 Start_5) (= Start_8 Start_12) (>= Start_12 Start_9) (> Start_7 Start_7)))
   (Start_9 Int (0 (div Start_3 Start_6) (mod Start_2 Start_4) (ite StartBool_1 Start_8 Start_9)))
   (Start_10 Int (1 (- Start_11 Start_9) (+ Start_1 Start_3) (* Start_6 Start_5) (div Start_12 Start_9) (abs Start_12)))
   (StartBool_7 Bool (false true (= Start_16 Start_14) (>= Start_13 Start_5) (> Start_16 Start_15)))
   (Start_13 Int (5 (- Start_9) (+ Start_4 Start_6) (* Start_8 Start_9) (mod Start_9 Start_4) (ite StartBool_4 Start_11 Start_10)))
   (Start_11 Int (4 x 0 2 (- Start_10) (* Start_10 Start_12) (mod Start_6 Start_5) (ite StartBool_3 Start_3 Start_12)))
   (Start_3 Int (y x (- Start_10 Start_7) (+ Start_10 Start_1) (mod Start_10 Start_9) (ite StartBool_2 Start_4 Start_8)))
   (StartBool_2 Bool (true (not StartBool_2) (or StartBool_1 StartBool_2) (< Start_8 Start_6) (= Start_10 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div 4 y))))

(check-synth)
