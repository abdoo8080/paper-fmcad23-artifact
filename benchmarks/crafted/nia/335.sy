(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (Start_21 Int) (StartBool_4 Bool) (Start_8 Int) (Start_19 Int) (Start_15 Int) (Start_11 Int) (Start_12 Int) (Start_13 Int) (Start_9 Int) (Start_10 Int) (Start_5 Int) (StartBool_1 Bool) (Start_6 Int) (Start_2 Int) (StartBool_5 Bool) (StartBool_3 Bool) (Start_16 Int) (StartBool_2 Bool) (Start_3 Int) (Start_20 Int) (StartBool_7 Bool) (Start_14 Int) (Start_17 Int) (StartBool_6 Bool) (Start_4 Int) (Start_1 Int) (Start_7 Int) (Start_18 Int))
  ((Start Int (5 2 (- Start Start_1) (mod Start Start_2)))
   (StartBool Bool (true (not StartBool_8) (< Start_13 Start_2) (<= Start_14 Start_11) (> Start_20 Start_12)))
   (StartBool_8 Bool (true false (not StartBool_8) (and StartBool_1 StartBool_8) (<= Start_12 Start_8) (= Start_5 Start_2) (> Start_12 Start_10)))
   (Start_21 Int (x (* Start_16 Start_19)))
   (StartBool_4 Bool (true false (and StartBool StartBool_2) (<= Start_6 Start_10)))
   (Start_8 Int (0 y (* Start_9 Start_6) (div Start_7 Start_12) (mod Start_7 Start_5) (abs Start_11)))
   (Start_19 Int (3 x 5 0 (- Start_16) (- Start Start_3) (+ Start_18 Start_15) (mod Start_10 Start_4)))
   (Start_15 Int (4 0 x 5 (- Start_13) (+ Start_4 Start_3) (* Start_16 Start_11) (div Start_16 Start_17) (mod Start_17 Start_12) (abs Start_4)))
   (Start_11 Int (0 4 (- Start_10 Start_10) (* Start_3 Start_2) (mod Start_7 Start_7) (abs Start_8)))
   (Start_12 Int (1 y 3 5 (+ Start_2 Start_6) (div Start_7 Start_1) (abs Start_5) (ite StartBool_2 Start_7 Start_1)))
   (Start_13 Int (y (* Start_10 Start_11) (div Start_1 Start_9) (ite StartBool_5 Start_9 Start_1)))
   (Start_9 Int (y 1 3 5 (- Start_10 Start_11) (+ Start_8 Start_11) (* Start_9 Start_7)))
   (Start_10 Int (0 x (- Start_11) (- Start_11 Start_5) (+ Start Start) (div Start_9 Start_2) (abs Start_6) (ite StartBool_4 Start_9 Start_1)))
   (Start_5 Int (5 (- Start_3 Start_5) (* Start_8 Start_13) (abs Start_9) (ite StartBool_4 Start_12 Start_7)))
   (StartBool_1 Bool (false (or StartBool_2 StartBool_3) (= Start_5 Start_3) (>= Start_5 Start_4) (> Start_6 Start_6)))
   (Start_6 Int (3 0 y (- Start_7) (- Start_3 Start_2) (+ Start_8 Start_1) (* Start_9 Start_2) (div Start_4 Start_5) (ite StartBool Start_3 Start_9)))
   (Start_2 Int (5 2 (- Start) (+ Start_2 Start_3) (* Start_2 Start_3) (mod Start_1 Start_4) (ite StartBool_1 Start_4 Start_3)))
   (StartBool_5 Bool (false true (and StartBool_3 StartBool_4) (or StartBool StartBool_2) (< Start_2 Start_3)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool_2) (< Start_1 Start_5) (= Start_6 Start_14) (>= Start_11 Start_4) (> Start_12 Start_14)))
   (Start_16 Int (x 2 0 (- Start_10) (+ Start_6 Start_7) (ite StartBool Start_1 Start_13)))
   (StartBool_2 Bool (false (and StartBool_6 StartBool_3) (or StartBool_5 StartBool_7) (< Start_14 Start_12) (>= Start_10 Start)))
   (Start_3 Int (4 (* Start_11 Start_16) (abs Start_9)))
   (Start_20 Int (y x (+ Start_21 Start_6) (* Start_18 Start_16)))
   (StartBool_7 Bool (true (not StartBool) (<= Start Start_12) (= Start_12 Start_10) (>= Start_15 Start_15)))
   (Start_14 Int (3 (- Start_3) (- Start_6 Start_1) (+ Start_6 Start_14) (* Start_10 Start_12) (div Start_7 Start_3) (ite StartBool Start_7 Start)))
   (Start_17 Int (4 x y (- Start_4) (+ Start Start_16) (* Start_1 Start_7) (mod Start_8 Start_11) (abs Start_11)))
   (StartBool_6 Bool (true))
   (Start_4 Int (4 (- Start_16) (+ Start_2 Start) (mod Start_2 Start_11)))
   (Start_1 Int (x 3 5 (- Start_3) (* Start_8 Start_18) (div Start_7 Start_13) (mod Start_19 Start_17)))
   (Start_7 Int (y (* Start_4 Start_8) (div Start_3 Start_12) (ite StartBool_2 Start_7 Start_4)))
   (Start_18 Int (4 1 (- Start_3 Start_10) (+ Start_9 Start_13) (* Start_11 Start_14) (ite StartBool_4 Start_13 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (- x) 4)))

(check-synth)
