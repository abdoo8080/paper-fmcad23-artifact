(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_2 Int) (Start_11 Int) (Start_1 Int) (Start_5 Int) (Start_12 Int) (Start_4 Int) (Start_8 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_7 Int) (Start_9 Int) (Start_6 Int) (Start_3 Int) (StartBool_3 Bool))
  ((Start Int (x y 3 4 2 1 (- Start) (- Start Start) (+ Start_1 Start_1)))
   (StartBool Bool (true false (and StartBool_3 StartBool) (<= Start_11 Start_1) (= Start_3 Start_1) (> Start_4 Start_6)))
   (Start_10 Int (4 (- Start_8 Start_1) (+ Start_7 Start_6) (div Start_2 Start_5) (mod Start Start_3) (abs Start_3) (ite StartBool_3 Start_2 Start_4)))
   (Start_2 Int (1 (* Start_6 Start_11) (div Start_9 Start_7) (abs Start_10)))
   (Start_11 Int (1 (- Start_11 Start_10) (abs Start_7)))
   (Start_1 Int (y (- Start_2) (* Start_1 Start_1) (div Start_3 Start_4) (abs Start_1)))
   (Start_5 Int (0 5 (- Start_4) (- Start_6 Start_1) (+ Start_7 Start_8) (div Start_5 Start_3)))
   (Start_12 Int (5 2 (div Start_6 Start_5) (mod Start_9 Start_8) (abs Start_11)))
   (Start_4 Int (2 (- Start_1 Start_4) (+ Start_1 Start_2) (* Start Start_5) (mod Start_2 Start_2) (abs Start_2)))
   (Start_8 Int (0 2 (- Start_1 Start_5) (* Start_9 Start_7) (div Start_1 Start_5) (mod Start_8 Start_6) (ite StartBool_1 Start_6 Start_2)))
   (StartBool_1 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_1) (or StartBool_1 StartBool_1)))
   (StartBool_2 Bool (true (< Start_5 Start_4)))
   (Start_7 Int (5 (- Start_3) (- Start_5 Start_9) (+ Start_2 Start_6) (* Start Start_6) (mod Start_6 Start_2) (abs Start_7)))
   (Start_9 Int (1 (- Start_8) (- Start_7 Start_8) (+ Start_7 Start_6) (* Start_5 Start_8) (div Start_9 Start) (abs Start)))
   (Start_6 Int (4 5 (- Start_1) (+ Start Start_2) (* Start_7 Start_5) (mod Start_4 Start) (abs Start_1)))
   (Start_3 Int (1 3 5 (- Start_5) (- Start_1 Start_2) (+ Start_10 Start_2) (* Start Start_4) (abs Start_10) (ite StartBool_3 Start_8 Start_8)))
   (StartBool_3 Bool (false true (and StartBool_3 StartBool_1) (< Start_8 Start_7) (= Start_11 Start_1) (>= Start_12 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div 2 y))))

(check-synth)
