(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_17 Int) (Start_2 Int) (Start_15 Int) (StartBool_4 Bool) (Start_4 Int) (Start_14 Int) (StartBool_1 Bool) (Start_3 Int) (Start_8 Int) (Start_5 Int) (Start_16 Int) (Start_7 Int) (Start_12 Int) (StartBool_3 Bool) (Start_9 Int) (Start_10 Int) (Start_6 Int) (Start_13 Int) (Start_11 Int) (StartBool_2 Bool))
  ((Start Int (x (- Start_1) (- Start_2 Start) (+ Start_1 Start) (div Start Start_1) (mod Start_3 Start_4)))
   (StartBool Bool (false true (not StartBool_4) (or StartBool StartBool_4) (<= Start_8 Start_6)))
   (Start_1 Int (1 5 4 0 y 2 (- Start_12 Start_6) (div Start_13 Start_7) (mod Start_12 Start_15)))
   (Start_17 Int (4 (- Start_3 Start_9) (+ Start_1 Start_10) (* Start_7 Start_17) (abs Start_9) (ite StartBool_3 Start_1 Start_5)))
   (Start_2 Int (3 (- Start_9 Start_4) (+ Start_4 Start_6) (* Start_17 Start_12) (div Start_13 Start_5) (abs Start_2) (ite StartBool_1 Start_11 Start_2)))
   (Start_15 Int (0 4 (- Start_11) (+ Start_3 Start_14) (mod Start_3 Start_10) (abs Start_9)))
   (StartBool_4 Bool (false true (not StartBool_1) (or StartBool_1 StartBool_2) (< Start_12 Start_2) (<= Start_11 Start_1) (>= Start_14 Start_11) (> Start_12 Start_1)))
   (Start_4 Int (3 y (- Start_5) (- Start_5 Start_2) (* Start_1 Start_4) (div Start_4 Start_4) (ite StartBool_1 Start_2 Start_3)))
   (Start_14 Int (y (- Start_15) (- Start_9 Start_5) (+ Start_2 Start_8) (div Start_15 Start_9) (mod Start_12 Start_14) (abs Start_15)))
   (StartBool_1 Bool (true false (= Start_6 Start_4) (> Start_5 Start_7)))
   (Start_3 Int (y 3 (- Start_7 Start_17) (div Start_4 Start_4)))
   (Start_8 Int (5 (- Start_8 Start_3) (+ Start_6 Start_7) (* Start_6 Start) (mod Start_9 Start_9)))
   (Start_5 Int (x 4 (- Start_6 Start_2) (+ Start_9 Start_10) (div Start_1 Start_6) (mod Start_7 Start_5) (abs Start_5) (ite StartBool_1 Start_9 Start)))
   (Start_16 Int (3 (* Start_16 Start_15) (mod Start_2 Start) (abs Start_17)))
   (Start_7 Int (y 4 x (- Start_7) (* Start_6 Start_8) (abs Start_5) (ite StartBool Start_9 Start_4)))
   (Start_12 Int (x (- Start_4) (* Start_16 Start_15) (mod Start_12 Start_15) (ite StartBool Start_11 Start_11)))
   (StartBool_3 Bool (false true (and StartBool_1 StartBool_3) (< Start_1 Start_2) (= Start_10 Start_13)))
   (Start_9 Int (1 (- Start_5) (* Start_8 Start_8) (div Start_4 Start_6) (mod Start_9 Start_2)))
   (Start_10 Int (2 (- Start_8 Start_8) (+ Start_9 Start_2) (div Start_4 Start_1) (mod Start_11 Start_7) (abs Start_4) (ite StartBool_1 Start_2 Start)))
   (Start_6 Int (3 (- Start_9) (- Start_8 Start_9) (+ Start Start_8) (* Start_7 Start_2) (div Start_3 Start_7) (mod Start_4 Start_2)))
   (Start_13 Int (0 x y 2 1 (- Start_14 Start_4) (+ Start_15 Start_8) (div Start_4 Start_10) (abs Start_3)))
   (Start_11 Int (2 (div Start_12 Start_12) (mod Start_4 Start_6) (abs Start_10) (ite StartBool_2 Start_4 Start_8)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool StartBool_3) (< Start_7 Start_9) (<= Start_5 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (* 5 5) 3)))

(check-synth)
