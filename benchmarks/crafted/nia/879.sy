(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_11 Int) (Start_12 Int) (Start_13 Int) (StartBool_2 Bool) (Start_14 Int) (Start_10 Int) (StartBool_5 Bool) (Start_1 Int) (Start_2 Int) (Start_6 Int) (Start_8 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_3 Int) (Start_5 Int) (Start_7 Int) (Start_4 Int) (StartBool_3 Bool) (Start_9 Int))
  ((Start Int (1 (- Start_1) (div Start_1 Start_1) (ite StartBool Start_1 Start)))
   (StartBool Bool (false true (not StartBool_1) (or StartBool_2 StartBool_3) (<= Start_1 Start_2) (>= Start_2 Start) (> Start_1 Start)))
   (Start_15 Int (x (- Start_7) (mod Start_6 Start_14) (ite StartBool_5 Start_11 Start_15)))
   (Start_11 Int (4 (- Start_13) (div Start_6 Start_14) (ite StartBool_1 Start_5 Start_8)))
   (Start_12 Int (5 (+ Start_5 Start_8) (* Start Start) (ite StartBool_4 Start_3 Start_4)))
   (Start_13 Int (0 2 5 (- Start_15) (- Start_4 Start_3) (+ Start_4 Start_3) (div Start_9 Start_5) (mod Start_6 Start_6) (abs Start_7)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool_5 StartBool_2) (<= Start_3 Start_2) (>= Start_10 Start_5)))
   (Start_14 Int (3 (- Start) (+ Start_6 Start_15)))
   (Start_10 Int (5 4 (+ Start_5 Start_8) (abs Start_4) (ite StartBool_5 Start_2 Start_9)))
   (StartBool_5 Bool (false (and StartBool_3 StartBool) (< Start_3 Start_4) (= Start_8 Start_2) (> Start Start_10)))
   (Start_1 Int (4 (- Start) (+ Start Start) (div Start_1 Start) (mod Start Start_1) (abs Start_1)))
   (Start_2 Int (4 5 (- Start_2) (- Start_2 Start_1) (+ Start_2 Start) (* Start_1 Start) (div Start Start_1) (mod Start_2 Start_1) (abs Start)))
   (Start_6 Int (1 (- Start) (* Start_1 Start_1) (mod Start Start_2) (abs Start_6) (ite StartBool_2 Start_5 Start_6)))
   (Start_8 Int (4 (- Start_5) (* Start_1 Start_2) (mod Start_2 Start_5) (abs Start_9)))
   (StartBool_1 Bool (true (and StartBool_1 StartBool_4) (or StartBool_2 StartBool_1) (<= Start_11 Start_12)))
   (StartBool_4 Bool (false (and StartBool StartBool_5) (or StartBool_3 StartBool) (< Start_4 Start_7) (<= Start_6 Start_2) (= Start_6 Start_1) (>= Start_5 Start_6)))
   (Start_3 Int (y (- Start_1) (mod Start_4 Start) (abs Start_2) (ite StartBool_1 Start_1 Start_3)))
   (Start_5 Int (0 (- Start Start_6) (+ Start_1 Start_3) (* Start_1 Start) (div Start_5 Start_6) (abs Start_2) (ite StartBool_4 Start_4 Start_4)))
   (Start_7 Int (1 4 (+ Start_4 Start) (* Start_7 Start_1) (div Start_3 Start_8) (mod Start_7 Start_5) (abs Start_4) (ite StartBool Start_2 Start_1)))
   (Start_4 Int (x 2 (- Start_5) (+ Start_5 Start) (* Start Start_3) (div Start_5 Start_2) (mod Start_6 Start_4) (abs Start_6) (ite StartBool_3 Start_4 Start_3)))
   (StartBool_3 Bool (false (not StartBool) (<= Start_2 Start) (= Start_1 Start_1) (> Start_3 Start_3)))
   (Start_9 Int (4 (- Start_6) (mod Start_3 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 0 0) y)))

(check-synth)
