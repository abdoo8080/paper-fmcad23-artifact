(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_1 Int) (Start_7 Int) (StartBool_5 Bool) (Start_6 Int) (Start_2 Int) (Start_4 Int) (Start_3 Int) (Start_10 Int) (Start_12 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_5 Int) (Start_8 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_9 Int) (Start_11 Int) (StartBool_4 Bool))
  ((Start Int (0 (- Start_1) (mod Start_1 Start_2) (abs Start)))
   (StartBool Bool (false true (and StartBool_5 StartBool_2) (<= Start_8 Start_1) (= Start_4 Start_7)))
   (Start_13 Int (4 x 2 (* Start_11 Start_3) (div Start_7 Start_6)))
   (Start_1 Int (y 3 1 (- Start_4) (- Start_7 Start_8) (+ Start_9 Start_9) (* Start_2 Start_1) (abs Start_7)))
   (Start_7 Int (2 4 (- Start) (+ Start_3 Start_7) (abs Start_10)))
   (StartBool_5 Bool (false true (and StartBool_6 StartBool_5) (< Start_9 Start_9) (<= Start_12 Start)))
   (Start_6 Int (5 (- Start_4 Start_5) (* Start_7 Start_6) (mod Start_8 Start_9) (abs Start_4) (ite StartBool_1 Start_8 Start_4)))
   (Start_2 Int (0 y (+ Start_3 Start_2) (* Start Start_2) (mod Start_2 Start_3) (abs Start_1) (ite StartBool Start_3 Start_4)))
   (Start_4 Int (2 3 5 (+ Start Start_4) (div Start_3 Start_3) (mod Start_2 Start_4)))
   (Start_3 Int (2 (+ Start Start_5) (ite StartBool Start Start_6)))
   (Start_10 Int (y (- Start_10) (+ Start_9 Start_5) (* Start_8 Start_8) (mod Start_5 Start) (ite StartBool Start_9 Start_2)))
   (Start_12 Int (0 5 (- Start_2) (- Start_9 Start_5) (* Start_5 Start_3) (div Start_4 Start_9) (abs Start_6) (ite StartBool_3 Start_6 Start_7)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_2 StartBool_1) (or StartBool_2 StartBool) (<= Start_2 Start_4)))
   (StartBool_6 Bool (true false (not StartBool_3) (or StartBool StartBool_6) (< Start_3 Start_7) (<= Start_9 Start_13)))
   (Start_5 Int (1 (- Start_7 Start_8) (mod Start_7 Start_9) (ite StartBool_2 Start_4 Start_1)))
   (Start_8 Int (1 (- Start_6) (* Start_9 Start_5) (div Start_8 Start_4) (mod Start_8 Start_2) (abs Start_7) (ite StartBool_4 Start_11 Start_3)))
   (StartBool_2 Bool (true false (and StartBool StartBool_1) (or StartBool_3 StartBool_2) (< Start_4 Start_8)))
   (StartBool_3 Bool (true (not StartBool) (< Start_10 Start_1) (= Start_8 Start_7) (> Start Start_10)))
   (Start_9 Int (0 (+ Start_11 Start_8) (div Start_11 Start_1) (abs Start_10)))
   (Start_11 Int (0 x 1 2 y (- Start_6) (- Start_10 Start_5) (+ Start_11 Start) (* Start_10 Start_5) (abs Start_9) (ite StartBool Start_6 Start_10)))
   (StartBool_4 Bool (true false (<= Start_2 Start_10) (= Start_3 Start_3) (>= Start_11 Start) (> Start_6 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* y (+ 5 2))))

(check-synth)
