(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (StartBool_7 Bool) (StartBool_4 Bool) (Start_2 Int) (Start_4 Int) (Start_5 Int) (StartBool_6 Bool) (Start_20 Int) (Start_6 Int) (StartBool_5 Bool) (Start_19 Int) (StartBool_2 Bool) (Start_1 Int) (Start_9 Int) (Start_11 Int) (Start_17 Int) (Start_21 Int) (Start_3 Int) (Start_8 Int) (StartBool_8 Bool) (Start_10 Int) (StartBool_3 Bool) (Start_12 Int) (Start_13 Int) (Start_14 Int) (Start_7 Int) (Start_16 Int) (Start_15 Int) (Start_18 Int))
  ((Start Int (x (abs Start) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (false true (not StartBool_7) (< Start_3 Start_13) (<= Start_15 Start_1) (= Start_9 Start_15) (>= Start_21 Start_1) (> Start Start_19)))
   (StartBool_1 Bool (false true (not StartBool_6) (and StartBool_1 StartBool_2) (< Start Start) (<= Start_13 Start_11) (>= Start Start_7)))
   (StartBool_7 Bool (true (not StartBool_8) (or StartBool_2 StartBool_1) (< Start_4 Start_9) (>= Start_7 Start_8) (> Start Start_4)))
   (StartBool_4 Bool (true false (not StartBool_6) (and StartBool_8 StartBool_3) (= Start_3 Start_8)))
   (Start_2 Int (1 y 3 (* Start_1 Start_2) (div Start Start) (mod Start_3 Start_1) (abs Start_2) (ite StartBool_2 Start_1 Start)))
   (Start_4 Int (5 2 (- Start_7) (+ Start_9 Start_7) (* Start_5 Start_4) (mod Start_3 Start_4) (abs Start_7) (ite StartBool Start_6 Start_6)))
   (Start_5 Int (1 4 (- Start_3) (- Start_1 Start_6)))
   (StartBool_6 Bool (true (or StartBool_1 StartBool_3) (>= Start_5 Start_6)))
   (Start_20 Int (y 5 4 3 (- Start_17) (- Start_21 Start_8) (* Start_9 Start_2) (mod Start Start_15) (abs Start_2)))
   (Start_6 Int (2 (- Start_6) (- Start_1 Start_2) (* Start_4 Start_7) (div Start Start) (abs Start_5) (ite StartBool_5 Start_2 Start_6)))
   (StartBool_5 Bool (false (not StartBool_6)))
   (Start_19 Int (0 x (- Start_13) (- Start Start_17) (* Start_17 Start_13) (div Start_19 Start_21)))
   (StartBool_2 Bool (true (and StartBool_3 StartBool) (or StartBool_4 StartBool_2) (< Start_4 Start_2) (<= Start Start_1) (= Start_5 Start_4)))
   (Start_1 Int (5 0 (+ Start Start_2) (abs Start_1)))
   (Start_9 Int (x 3 (- Start_2 Start_1) (* Start_2 Start_5) (div Start_4 Start_4) (mod Start Start_2) (ite StartBool_7 Start_7 Start_9)))
   (Start_11 Int (5 y 1 (- Start_5) (* Start_1 Start_12) (div Start_7 Start_8) (mod Start_6 Start_9) (ite StartBool_1 Start Start_8)))
   (Start_17 Int (2 (- Start_11 Start_13) (+ Start_8 Start_8) (* Start_5 Start_13) (abs Start_17) (ite StartBool_8 Start_18 Start_9)))
   (Start_21 Int (5 4 0 (- Start_9 Start_3) (+ Start_8 Start_7) (mod Start_6 Start_3)))
   (Start_3 Int (2 y x 0 1 (- Start_10) (- Start_7 Start_12) (abs Start_4) (ite StartBool_6 Start_3 Start_8)))
   (Start_8 Int (x (- Start) (div Start_2 Start_7) (mod Start_8 Start_4) (ite StartBool_2 Start_4 Start_2)))
   (StartBool_8 Bool (true (not StartBool_5) (or StartBool_8 StartBool_4) (<= Start_6 Start) (= Start_5 Start_10) (>= Start_2 Start_10)))
   (Start_10 Int (y 1 (- Start_9) (- Start_7 Start_1) (+ Start_4 Start_4) (* Start_1 Start) (mod Start_4 Start_1)))
   (StartBool_3 Bool (true false (not StartBool_7) (and StartBool_1 StartBool_3) (< Start_5 Start_8) (<= Start_11 Start_7) (> Start Start_1)))
   (Start_12 Int (3 5 (- Start_4) (div Start_9 Start_4) (abs Start_3) (ite StartBool_2 Start_8 Start_8)))
   (Start_13 Int (5 y 4 3 2 1 (- Start_6) (- Start_3 Start_12) (+ Start_4 Start_6) (div Start_14 Start_15) (mod Start_3 Start_3) (abs Start_9) (ite StartBool_1 Start_5 Start_2)))
   (Start_14 Int (x (- Start_13 Start_14) (+ Start_15 Start_15) (* Start_2 Start_8) (abs Start_4) (ite StartBool_4 Start_5 Start_16)))
   (Start_7 Int (3 y 2 (- Start_4) (+ Start_1 Start_8) (* Start_8 Start_3) (mod Start_1 Start_7) (abs Start_1) (ite StartBool Start_4 Start_5)))
   (Start_16 Int (x (+ Start Start_17) (div Start_1 Start_2) (mod Start_15 Start_13)))
   (Start_15 Int (0 (- Start_14 Start_13) (* Start_15 Start_5) (div Start Start_3) (abs Start_14)))
   (Start_18 Int (y x 3 (- Start_19 Start_5) (+ Start_5 Start_13) (* Start_9 Start_1) (div Start_4 Start) (mod Start_20 Start_15) (abs Start_20)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 3 (- x 1))))

(check-synth)
