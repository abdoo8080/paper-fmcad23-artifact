(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (StartBool_5 Bool) (Start_15 Int) (Start_14 Int) (Start_11 Int) (Start_1 Int) (StartBool_4 Bool) (Start_6 Int) (StartBool_1 Bool) (Start_5 Int) (Start_8 Int) (Start_3 Int) (Start_12 Int) (Start_7 Int) (Start_9 Int) (Start_2 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_4 Int) (Start_10 Int))
  ((Start Int (x (- Start) (* Start_1 Start) (mod Start_1 Start) (abs Start_1)))
   (StartBool Bool (true (not StartBool) (or StartBool_1 StartBool_4) (<= Start_14 Start_15) (>= Start Start_7) (> Start_10 Start_6)))
   (Start_13 Int (2 (- Start_3) (* Start_8 Start_15) (ite StartBool_3 Start_11 Start_14)))
   (StartBool_5 Bool (false (not StartBool_3) (< Start_7 Start_14) (>= Start_15 Start_9)))
   (Start_15 Int (4 1 2 x (+ Start_5 Start_1) (* Start_10 Start_5) (ite StartBool Start_14 Start_13)))
   (Start_14 Int (5 (div Start_1 Start_11) (mod Start_1 Start_15) (ite StartBool_1 Start_3 Start_15)))
   (Start_11 Int (x y 3 (- Start_2) (- Start_1 Start_7) (div Start_5 Start_13) (mod Start_8 Start_6) (abs Start_6) (ite StartBool_2 Start_10 Start_14)))
   (Start_1 Int (3 1 y x (- Start) (- Start_1 Start_2) (* Start_3 Start_2) (abs Start_4)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_2 StartBool_2) (or StartBool_5 StartBool_2) (< Start_13 Start_10) (= Start_8 Start_12)))
   (Start_6 Int (3 0 (* Start_6 Start) (div Start Start_6) (mod Start_4 Start_3)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_1 StartBool) (< Start_9 Start_3) (= Start_9 Start_1) (>= Start_2 Start_7)))
   (Start_5 Int (y (+ Start_7 Start_6) (* Start_3 Start_7) (abs Start_4)))
   (Start_8 Int (0 y x (* Start_8 Start)))
   (Start_3 Int (y 2 5 (+ Start_9 Start_2) (* Start_1 Start) (div Start Start_3)))
   (Start_12 Int (1 5 3 (- Start_12 Start_12) (+ Start Start_12) (* Start_12 Start_8) (mod Start_2 Start_6)))
   (Start_7 Int (5 2 4 (- Start_2) (+ Start_4 Start_7) (* Start_7 Start_8) (div Start_7 Start_3) (abs Start_6) (ite StartBool_1 Start_5 Start_6)))
   (Start_9 Int (5 (+ Start_6 Start_8) (div Start_6 Start_3)))
   (Start_2 Int (4 5 3 (- Start_1 Start_9) (+ Start_7 Start_6) (mod Start_1 Start_7) (abs Start_10) (ite StartBool Start Start_9)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_1) (< Start_13 Start_8)))
   (StartBool_2 Bool (false (and StartBool_2 StartBool) (or StartBool_2 StartBool) (< Start_10 Start_15) (>= Start_7 Start_5)))
   (Start_4 Int (0 5 2 (- Start_1 Start_5) (* Start_3 Start_4) (div Start Start_2) (abs Start_6)))
   (Start_10 Int (y 3 (+ Start_11 Start_6) (* Start_12 Start_7) (mod Start Start_5) (abs Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 2 (div (- x) 3))))

(check-synth)
