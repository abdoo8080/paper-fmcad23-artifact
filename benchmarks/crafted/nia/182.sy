(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (Start_9 Int) (Start_1 Int) (Start_3 Int) (Start_11 Int) (Start_6 Int) (Start_2 Int) (Start_5 Int) (Start_10 Int) (Start_12 Int) (Start_4 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_7 Int) (Start_8 Int))
  ((Start Int (x (+ Start Start) (* Start Start) (div Start Start_1)))
   (StartBool Bool (true (and StartBool_2 StartBool_3) (<= Start_7 Start_11) (= Start_12 Start_4) (>= Start_9 Start_6) (> Start_3 Start_12)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool) (<= Start_8 Start_7) (= Start_11 Start_11) (> Start Start_9)))
   (Start_9 Int (4 y 2 1 (* Start_12 Start_4) (abs Start_6)))
   (Start_1 Int (4 y 1 (- Start_2) (- Start_3 Start) (* Start Start) (div Start_1 Start)))
   (Start_3 Int (5 (* Start_2 Start_1) (div Start_2 Start_2) (mod Start Start) (abs Start_3)))
   (Start_11 Int (y))
   (Start_6 Int (x y 5 3 2 0 4 (* Start_1 Start) (mod Start_6 Start_1) (abs Start_3) (ite StartBool_2 Start_2 Start_3)))
   (Start_2 Int (1 (- Start_4 Start) (+ Start_2 Start_3) (div Start_5 Start) (abs Start_5)))
   (Start_5 Int (5 (- Start_4 Start_4) (div Start_1 Start_2)))
   (Start_10 Int (x 1 4 (+ Start_2 Start_9) (div Start_3 Start_4) (abs Start_8) (ite StartBool_1 Start_11 Start_10)))
   (Start_12 Int (y 4 (- Start_1) (+ Start_4 Start_12) (* Start_4 Start_12) (div Start_3 Start_5) (mod Start Start_4)))
   (Start_4 Int (y 1 (- Start_2) (- Start Start_3) (+ Start_6 Start_3) (* Start_3 Start_6) (ite StartBool_1 Start_1 Start_4)))
   (StartBool_1 Bool (false true (= Start Start_1) (> Start_3 Start_6)))
   (StartBool_2 Bool (true false (<= Start_7 Start) (> Start_4 Start_4)))
   (Start_7 Int (3 x 4 2 5 1 0 y (* Start_1 Start_1) (div Start_2 Start_8) (abs Start_7) (ite StartBool Start_4 Start_5)))
   (Start_8 Int (4 x y (- Start_4) (+ Start_4 Start_4) (* Start_8 Start_9) (div Start_10 Start_5) (mod Start_4 Start_10) (ite StartBool_1 Start_8 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* (mod 1 y) (- y 1)))))

(check-synth)
