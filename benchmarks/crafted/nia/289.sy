(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (StartBool_6 Bool) (Start_13 Int) (StartBool_5 Bool) (StartBool_4 Bool) (StartBool_3 Bool) (Start_12 Int) (Start_9 Int) (Start_7 Int) (Start_10 Int) (Start_3 Int) (Start_2 Int) (Start_11 Int) (StartBool_1 Bool) (Start_1 Int) (StartBool_2 Bool) (StartBool_7 Bool) (Start_4 Int) (Start_8 Int) (Start_5 Int) (Start_6 Int))
  ((Start Int (1 x y 0 (- Start_1) (- Start_2 Start) (div Start Start_3) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (true false (not StartBool) (and StartBool_1 StartBool_1) (or StartBool_1 StartBool_1) (<= Start_2 Start_1) (>= Start_1 Start_6) (> Start_6 Start_4)))
   (Start_14 Int (x (+ Start_2 Start_6) (div Start_2 Start_1) (abs Start)))
   (StartBool_6 Bool (false true (and StartBool_7 StartBool_6) (or StartBool_7 StartBool_6) (= Start_11 Start_3) (>= Start_6 Start_14) (> Start_6 Start_12)))
   (Start_13 Int (4 1 (- Start_12) (+ Start_2 Start_3) (div Start_8 Start_5) (ite StartBool_6 Start_4 Start_12)))
   (StartBool_5 Bool (true (or StartBool_4 StartBool_4) (< Start_9 Start_8) (<= Start Start_13) (> Start_9 Start_2)))
   (StartBool_4 Bool (false (not StartBool_3) (and StartBool_2 StartBool_5) (or StartBool_3 StartBool) (< Start_7 Start_9) (= Start_12 Start_7) (>= Start_7 Start_11) (> Start_2 Start_11)))
   (StartBool_3 Bool (false true (not StartBool_1) (= Start_6 Start_8) (>= Start_10 Start_1) (> Start_6 Start)))
   (Start_12 Int (y 4 3 (+ Start_8 Start_5) (div Start_1 Start_1) (mod Start_5 Start_1)))
   (Start_9 Int (y (- Start) (+ Start_2 Start_9) (* Start Start_9) (div Start Start_1) (ite StartBool_3 Start_6 Start_12)))
   (Start_7 Int (x (- Start_8) (+ Start_6 Start_8) (mod Start Start_8) (abs Start)))
   (Start_10 Int (x y 0 3 (- Start_8) (+ Start_11 Start_6) (div Start_2 Start_1) (ite StartBool_2 Start_2 Start_2)))
   (Start_3 Int (0 1 (- Start Start_2) (mod Start_2 Start)))
   (Start_2 Int (3 1 4 2 x 5 0 y))
   (Start_11 Int (0 y 5 4 (- Start_10 Start_7) (* Start_10 Start_1) (div Start_4 Start_4) (mod Start_3 Start_11) (abs Start_10) (ite StartBool Start_10 Start)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_1 StartBool_4) (= Start_3 Start_7) (>= Start_9 Start_8)))
   (Start_1 Int (y 3 2 4 5 (- Start Start_1) (mod Start_4 Start)))
   (StartBool_2 Bool (false true (not StartBool_2) (and StartBool_2 StartBool) (or StartBool_2 StartBool) (< Start_6 Start)))
   (StartBool_7 Bool (true false (and StartBool_2 StartBool_7) (< Start_1 Start_13) (>= Start_4 Start_8)))
   (Start_4 Int (5 (div Start_5 Start_3) (ite StartBool Start_5 Start_3)))
   (Start_8 Int (2 3 (- Start_1) (- Start_5 Start_3) (+ Start_4 Start_7) (* Start_9 Start_10)))
   (Start_5 Int (y (- Start_3 Start_1) (mod Start_1 Start_1) (abs Start_5)))
   (Start_6 Int (3 (- Start_3) (+ Start_5 Start_2) (* Start_7 Start_6) (div Start_4 Start_2) (ite StartBool_2 Start_4 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (mod (+ (abs x) 4) x) 3)))

(check-synth)
