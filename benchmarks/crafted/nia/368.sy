(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_24 Int) (StartBool_4 Bool) (Start_8 Int) (StartBool_3 Bool) (Start_11 Int) (Start_17 Int) (StartBool_2 Bool) (Start_20 Int) (Start_2 Int) (Start_9 Int) (Start_6 Int) (Start_7 Int) (Start_19 Int) (Start_4 Int) (Start_18 Int) (Start_5 Int) (StartBool_5 Bool) (Start_1 Int) (Start_21 Int) (Start_15 Int) (StartBool_1 Bool) (Start_13 Int) (Start_14 Int) (Start_16 Int) (Start_23 Int) (Start_10 Int) (Start_22 Int) (Start_3 Int))
  ((Start Int (1 y (- Start) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (false (not StartBool_1) (or StartBool_3 StartBool_1) (= Start_6 Start_2) (>= Start_4 Start_24)))
   (Start_12 Int (5 2 (- Start_1 Start_8) (+ Start_5 Start_3) (* Start_6 Start_7) (div Start_10 Start_11) (mod Start Start_9) (ite StartBool_5 Start_9 Start_6)))
   (Start_24 Int (0 (mod Start_23 Start_20) (abs Start_19) (ite StartBool_2 Start_10 Start_11)))
   (StartBool_4 Bool (true false (or StartBool_2 StartBool_3) (< Start_4 Start_10) (<= Start_12 Start_2) (>= Start_4 Start_4) (> Start_2 Start_7)))
   (Start_8 Int (4 (+ Start_1 Start_7) (mod Start_8 Start_10) (abs Start) (ite StartBool_2 Start_7 Start_5)))
   (StartBool_3 Bool (true (and StartBool_4 StartBool_4) (or StartBool_3 StartBool_3) (< Start_8 Start_6) (<= Start_5 Start_2) (>= Start_7 Start_4)))
   (Start_11 Int (3 (+ Start Start_9) (* Start_5 Start_10) (mod Start_9 Start_11) (abs Start_3) (ite StartBool_1 Start_7 Start_4)))
   (Start_17 Int (3 y (+ Start_8 Start_11) (* Start_6 Start_14) (abs Start_1) (ite StartBool_4 Start Start_17)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool StartBool_1) (or StartBool_2 StartBool_3) (< Start_8 Start_8) (= Start_11 Start_1) (>= Start_6 Start_10)))
   (Start_20 Int (2 (- Start_16) (- Start Start_12) (+ Start_21 Start_7) (* Start_11 Start_16) (mod Start_6 Start_8)))
   (Start_2 Int (4 (+ Start_15 Start_24) (mod Start_3 Start_12)))
   (Start_9 Int (y 3 (- Start_9) (- Start_6 Start_6) (+ Start_4 Start) (* Start_9 Start_2) (div Start_4 Start_2)))
   (Start_6 Int (4 x 0 1 (- Start_4) (+ Start_2 Start_7) (* Start_1 Start_2) (mod Start_1 Start) (abs Start_4)))
   (Start_7 Int (x 3 (- Start_6) (+ Start_5 Start_7) (* Start_4 Start_8) (div Start_7 Start_6) (mod Start_8 Start_7) (ite StartBool Start_8 Start_9)))
   (Start_19 Int (2 3 (div Start Start_2) (abs Start_1)))
   (Start_4 Int (x (- Start_6 Start_17) (+ Start_13 Start_18) (div Start_1 Start_23) (mod Start_19 Start_23) (abs Start_22) (ite StartBool_5 Start_20 Start)))
   (Start_18 Int (x (- Start_10) (mod Start_2 Start_1) (abs Start_19) (ite StartBool_2 Start_3 Start_12)))
   (Start_5 Int (y 0 (- Start_3) (+ Start_2 Start) (* Start_3 Start_6) (mod Start Start_6) (ite StartBool_1 Start_3 Start_3)))
   (StartBool_5 Bool (true (not StartBool_5) (and StartBool_1 StartBool_5) (= Start_13 Start_3) (>= Start_7 Start_3)))
   (Start_1 Int (0 (- Start_2) (- Start Start_3) (+ Start_4 Start_2) (div Start_2 Start_5)))
   (Start_21 Int (0 5 x 4 y (- Start_7 Start_19) (+ Start_18 Start_14) (* Start_4 Start_22) (div Start_6 Start_6)))
   (Start_15 Int (2 (- Start_16) (- Start_13 Start_2) (+ Start_10 Start_2) (* Start_17 Start_9) (div Start_11 Start_16) (mod Start_12 Start_16) (ite StartBool_2 Start_4 Start_14)))
   (StartBool_1 Bool (true false (not StartBool) (= Start_3 Start)))
   (Start_13 Int (4 (- Start Start_13) (+ Start_10 Start_4) (mod Start_14 Start_2)))
   (Start_14 Int (1 0 (- Start_8) (* Start_5 Start_2) (div Start_4 Start_11) (mod Start Start_15) (ite StartBool_5 Start Start_3)))
   (Start_16 Int (4 y (+ Start_2 Start) (mod Start_18 Start_11) (abs Start_14) (ite StartBool Start_19 Start_9)))
   (Start_23 Int (4 0 2 5 (* Start_1 Start) (mod Start_2 Start_16) (ite StartBool_3 Start_6 Start_21)))
   (Start_10 Int (4 (- Start_17) (- Start_5 Start_4) (+ Start_20 Start_6) (div Start_13 Start) (abs Start_2)))
   (Start_22 Int (2 (* Start Start_21) (abs Start_7) (ite StartBool_4 Start_2 Start_18)))
   (Start_3 Int (x 1 4 (- Start_1) (+ Start_16 Start_10) (div Start_13 Start_18) (mod Start_22 Start_23) (abs Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* x (div 4 (div (- 1) x)))))

(check-synth)
