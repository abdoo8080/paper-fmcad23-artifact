(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_12 Int) (Start_13 Int) (Start_3 Int) (Start_11 Int) (StartBool_5 Bool) (Start_5 Int) (StartBool_2 Bool) (Start_4 Int) (StartBool_4 Bool) (Start_1 Int) (Start_9 Int) (StartBool_1 Bool) (Start_6 Int) (StartBool_3 Bool) (Start_8 Int) (Start_7 Int) (Start_10 Int))
  ((Start Int (5 0 4 2 (- Start) (- Start Start) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true (and StartBool StartBool_1) (<= Start_1 Start_1) (>= Start Start_1)))
   (Start_2 Int (1 (- Start_10) (- Start_8 Start_11) (div Start_13 Start_8) (mod Start_2 Start_11) (abs Start_11)))
   (Start_12 Int (0 4 x (+ Start_3 Start) (abs Start_12) (ite StartBool Start_12 Start_7)))
   (Start_13 Int (y (- Start_10)))
   (Start_3 Int (5 y (- Start Start_7) (+ Start_12 Start_8) (* Start_8 Start_1) (ite StartBool_5 Start_3 Start_10)))
   (Start_11 Int (4 1 3 (- Start_7) (+ Start_2 Start_4) (mod Start_6 Start_3) (abs Start_11)))
   (StartBool_5 Bool (true (or StartBool StartBool_3) (= Start_13 Start_9) (>= Start_13 Start_11) (> Start_3 Start_7)))
   (Start_5 Int (1 (+ Start_11 Start_5) (abs Start_2)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool) (> Start_4 Start_8)))
   (Start_4 Int (x (- Start) (* Start_5 Start_5) (mod Start Start_2) (ite StartBool_2 Start_6 Start_2)))
   (StartBool_4 Bool (true false (or StartBool StartBool) (= Start_3 Start)))
   (Start_1 Int (1 3))
   (Start_9 Int (0 1 (+ Start_3 Start) (mod Start_8 Start_2) (abs Start_8)))
   (StartBool_1 Bool (false (or StartBool_1 StartBool_1) (< Start_2 Start_3) (= Start_1 Start_4)))
   (Start_6 Int (4 (- Start_7) (* Start_4 Start_4) (mod Start Start_6) (abs Start_4) (ite StartBool_3 Start_4 Start)))
   (StartBool_3 Bool (false true (not StartBool_1) (or StartBool StartBool_4) (= Start_4 Start_3) (>= Start_4 Start_1)))
   (Start_8 Int (2 3 5 (- Start_8 Start_8) (+ Start_1 Start_10) (div Start_5 Start_1)))
   (Start_7 Int (3 x 1 (- Start_8) (- Start_3 Start) (* Start_9 Start_7) (mod Start_9 Start) (ite StartBool_3 Start_6 Start_6)))
   (Start_10 Int (5 (+ Start Start_5) (* Start_3 Start_4) (mod Start_4 Start_6) (abs Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div x y)))

(check-synth)
