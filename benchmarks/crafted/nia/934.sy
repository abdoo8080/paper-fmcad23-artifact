(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_1 Int) (Start_3 Int) (Start_13 Int) (Start_6 Int) (StartBool_2 Bool) (Start_2 Int) (Start_4 Int) (Start_11 Int) (Start_5 Int) (Start_10 Int) (Start_7 Int) (Start_9 Int) (Start_12 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_8 Int))
  ((Start Int (4 (+ Start Start) (* Start_1 Start_1) (div Start Start_1) (abs Start_2)))
   (StartBool Bool (true (and StartBool_2 StartBool_4) (<= Start_1 Start_9)))
   (StartBool_4 Bool (false true (and StartBool_1 StartBool_3) (= Start_12 Start_8)))
   (Start_1 Int (0 1 2 y (- Start_10 Start_5) (+ Start_12 Start_10) (abs Start_3)))
   (Start_3 Int (4 y (- Start_8) (- Start Start_3) (+ Start_13 Start_5) (div Start_3 Start_11) (mod Start_6 Start_13) (abs Start_3) (ite StartBool Start Start_3)))
   (Start_13 Int (4 1 0 x (- Start Start_13) (+ Start_12 Start_5) (* Start_13 Start_10) (mod Start_10 Start_8)))
   (Start_6 Int (1 y (- Start_3) (+ Start_4 Start_1) (mod Start_5 Start_2) (ite StartBool Start_7 Start_2)))
   (StartBool_2 Bool (false true (or StartBool_3 StartBool_1) (= Start_3 Start_3) (> Start Start_9)))
   (Start_2 Int (2 x 3 4 (- Start_1) (+ Start Start_1) (div Start_3 Start_2) (mod Start_1 Start) (abs Start) (ite StartBool_1 Start_1 Start_3)))
   (Start_4 Int (y (- Start_1) (+ Start_2 Start_3) (mod Start_5 Start_6) (abs Start_6)))
   (Start_11 Int (x 5 2 (- Start_1 Start_11) (+ Start_7 Start_7) (div Start_11 Start) (mod Start_12 Start_1)))
   (Start_5 Int (0 1 x (- Start_10) (div Start_6 Start_7) (mod Start_8 Start_12) (ite StartBool_2 Start_6 Start)))
   (Start_10 Int (y (- Start_8 Start_5) (div Start_6 Start_6) (ite StartBool_2 Start_4 Start_4)))
   (Start_7 Int (x (- Start_1 Start_4) (* Start_4 Start_1) (div Start_3 Start_8) (mod Start_1 Start_2) (abs Start_9) (ite StartBool Start_4 Start_6)))
   (Start_9 Int (y (- Start_2 Start_4) (+ Start_4 Start) (* Start_1 Start_10) (mod Start_10 Start_5) (abs Start_11)))
   (Start_12 Int (y (- Start_1) (- Start_2 Start_6) (+ Start_2 Start_9) (abs Start_2)))
   (StartBool_1 Bool (false (not StartBool) (< Start_2 Start_1) (<= Start Start_4) (>= Start_4 Start)))
   (StartBool_3 Bool (true false (not StartBool_1) (and StartBool StartBool_3) (or StartBool_3 StartBool_3) (= Start_2 Start_7) (>= Start_4 Start_1) (> Start_2 Start_4)))
   (Start_8 Int (0 (+ Start_13 Start_8) (div Start_3 Start_11) (mod Start_4 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (+ 5 y) 2)))

(check-synth)
