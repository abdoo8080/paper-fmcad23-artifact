(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_2 Bool) (StartBool_6 Bool) (Start_3 Int) (Start_1 Int) (Start_4 Int) (Start_6 Int) (StartBool_4 Bool) (Start_7 Int) (StartBool_1 Bool) (Start_5 Int) (Start_8 Int) (StartBool_3 Bool) (StartBool_5 Bool) (StartBool_7 Bool) (Start_9 Int))
  ((Start Int (1 y 0 (- Start Start) (+ Start_1 Start) (abs Start_2) (ite StartBool_1 Start_2 Start_3)))
   (StartBool Bool (true false (not StartBool_7) (<= Start Start_3) (= Start_6 Start) (> Start_1 Start_3)))
   (Start_2 Int (1 4 y 5 3 x 0 (- Start_3) (+ Start_4 Start_2) (abs Start_4) (ite StartBool_3 Start_9 Start_5)))
   (StartBool_2 Bool (false (< Start_5 Start_3) (<= Start Start_4) (> Start_2 Start_4)))
   (StartBool_6 Bool (true false (and StartBool StartBool_5) (< Start_5 Start_9) (<= Start Start_9)))
   (Start_3 Int (2 0 1 (- Start_3 Start) (div Start Start_4) (mod Start_1 Start_4)))
   (Start_1 Int (2 (- Start_6) (* Start_9 Start) (mod Start_1 Start_9) (ite StartBool_6 Start_4 Start_8)))
   (Start_4 Int (0 (+ Start_5 Start_2) (* Start_4 Start_2) (div Start_1 Start_6) (mod Start Start_5) (abs Start_7)))
   (Start_6 Int (0 (- Start_4) (+ Start_6 Start_5) (abs Start_1) (ite StartBool Start_3 Start_6)))
   (StartBool_4 Bool (false true (not StartBool_2) (<= Start Start_5) (>= Start_8 Start_2) (> Start_2 Start_8)))
   (Start_7 Int (5 (- Start_6) (* Start_5 Start_2) (div Start_7 Start_5)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_2 StartBool_2) (or StartBool_3 StartBool_4) (= Start_7 Start_5) (>= Start_6 Start_7)))
   (Start_5 Int (2 4 5 (div Start_7 Start_5) (ite StartBool_1 Start_4 Start_2)))
   (Start_8 Int (3 (- Start_1 Start_2) (+ Start_5 Start_1) (* Start_6 Start) (mod Start_3 Start_6) (ite StartBool_4 Start_2 Start_4)))
   (StartBool_3 Bool (true (and StartBool_5 StartBool) (or StartBool_4 StartBool_1) (< Start_8 Start_4)))
   (StartBool_5 Bool (true (not StartBool_6) (or StartBool_1 StartBool_7) (< Start_7 Start_5) (<= Start_5 Start_1) (= Start_6 Start_3) (> Start_5 Start)))
   (StartBool_7 Bool (true false (< Start Start_8) (>= Start_6 Start_9)))
   (Start_9 Int (1 (+ Start Start_6) (* Start_5 Start_9) (div Start_1 Start_9) (mod Start_3 Start_6) (abs Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 1 (ite (<= y 1) 4 5))))

(check-synth)
