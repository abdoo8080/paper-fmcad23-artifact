(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (Start_16 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_15 Int) (Start_13 Int) (Start_9 Int) (Start_1 Int) (Start_2 Int) (Start_4 Int) (Start_5 Int) (Start_6 Int) (Start_7 Int) (StartBool_4 Bool) (Start_14 Int) (Start_11 Int) (Start_8 Int) (Start_10 Int) (Start_3 Int) (Start_12 Int))
  ((Start Int (x (- Start) (div Start Start_1) (abs Start_1)))
   (StartBool Bool (false (not StartBool_1) (or StartBool_2 StartBool_3) (>= Start_2 Start_3) (> Start_2 Start_4)))
   (StartBool_1 Bool (true false (not StartBool) (or StartBool_2 StartBool) (< Start_8 Start_11) (<= Start_3 Start_2) (>= Start_10 Start_14)))
   (Start_16 Int (0 5 (- Start_11) (+ Start_15 Start_11) (div Start_8 Start_7) (mod Start_6 Start_10) (ite StartBool_2 Start_10 Start_8)))
   (StartBool_2 Bool (false true (not StartBool_1) (<= Start_8 Start_14) (>= Start_16 Start_2) (> Start_16 Start_5)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_3 StartBool) (or StartBool_1 StartBool_1) (= Start_7 Start_10) (>= Start_7 Start_14)))
   (Start_15 Int (2 (ite StartBool_1 Start_14 Start_1)))
   (Start_13 Int (5 1 (- Start_8) (+ Start_8 Start_8) (abs Start_10)))
   (Start_9 Int (1 (* Start Start_1) (div Start Start_1) (abs Start_3) (ite StartBool_1 Start_2 Start_7)))
   (Start_1 Int (5 1 (div Start Start_1)))
   (Start_2 Int (1 5 (- Start_10) (* Start_14 Start_11) (div Start_1 Start_14) (mod Start_6 Start_11) (ite StartBool_3 Start_11 Start_4)))
   (Start_4 Int (3 (- Start_2) (- Start_4 Start_3) (+ Start_5 Start_3) (mod Start_2 Start_5) (abs Start)))
   (Start_5 Int (5 (- Start_3) (+ Start_4 Start_5) (div Start_5 Start_1) (abs Start_1) (ite StartBool_3 Start_3 Start_1)))
   (Start_6 Int (0 x (- Start_1) (- Start Start_10) (+ Start_1 Start_8) (* Start_2 Start_1) (div Start_4 Start_13)))
   (Start_7 Int (x 0 y (- Start_4 Start) (+ Start_2 Start_8) (* Start_5 Start_1) (div Start_2 Start_6) (mod Start_3 Start_7) (abs Start_9)))
   (StartBool_4 Bool (true false (not StartBool) (or StartBool_3 StartBool_2) (>= Start_3 Start_9)))
   (Start_14 Int (0 (- Start_4) (- Start_6 Start) (+ Start_7 Start_11) (* Start_5 Start) (mod Start_12 Start_15) (ite StartBool_4 Start Start_8)))
   (Start_11 Int (1 (- Start_11) (div Start Start_12) (mod Start_11 Start_11)))
   (Start_8 Int (x 5 y 3 4 (* Start_1 Start_10) (div Start_3 Start_1) (mod Start_4 Start_6) (abs Start_9) (ite StartBool Start_10 Start_7)))
   (Start_10 Int (2 (* Start_4 Start_9) (div Start_11 Start_2) (mod Start_7 Start_2)))
   (Start_3 Int (1 4 (- Start_6) (* Start_7 Start_1) (div Start_5 Start_7) (abs Start_2) (ite StartBool_2 Start_4 Start)))
   (Start_12 Int (0 x 3 4 (div Start_4 Start_2) (ite StartBool_1 Start_7 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (abs (mod 2 0)) 1)))

(check-synth)
