(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_11 Int) (Start_3 Int) (Start_1 Int) (Start_10 Int) (StartBool_2 Bool) (Start_5 Int) (Start_6 Int) (Start_4 Int) (Start_7 Int) (Start_9 Int) (StartBool_1 Bool) (Start_8 Int) (Start_2 Int) (StartBool_3 Bool))
  ((Start Int (x (- Start_1) (+ Start Start_2) (* Start_3 Start_1) (div Start Start_1) (mod Start_1 Start_2)))
   (StartBool Bool (false (not StartBool_3) (and StartBool_3 StartBool_3) (< Start_10 Start) (<= Start_12 Start_4) (>= Start_2 Start_5) (> Start_9 Start_7)))
   (Start_12 Int (2 0 5 (- Start_5 Start_9) (abs Start_12)))
   (Start_11 Int (2 x 4 (- Start_5) (* Start_8 Start_8) (div Start_6 Start_11) (ite StartBool_3 Start_11 Start_4)))
   (Start_3 Int (5 (* Start_3 Start)))
   (Start_1 Int (5 (- Start_1) (- Start_5 Start_3) (* Start_3 Start_6) (mod Start_7 Start_7)))
   (Start_10 Int (y (* Start_6 Start_3) (ite StartBool_3 Start_9 Start_3)))
   (StartBool_2 Bool (false true (or StartBool_3 StartBool_3) (< Start_4 Start) (<= Start_3 Start_2) (= Start_6 Start_6) (> Start_9 Start)))
   (Start_5 Int (4 (- Start_2) (- Start_4 Start) (+ Start_5 Start_4) (* Start_2 Start_2) (ite StartBool Start_5 Start_4)))
   (Start_6 Int (2 4 (- Start_2) (- Start_8 Start_2) (mod Start_4 Start_2) (ite StartBool Start_8 Start_5)))
   (Start_4 Int (1 5 (- Start_1) (- Start_3 Start_1) (+ Start Start_1) (div Start_4 Start_2) (abs Start) (ite StartBool Start_4 Start_2)))
   (Start_7 Int (4 (- Start_8 Start_7) (ite StartBool_1 Start Start_5)))
   (Start_9 Int (1 (- Start_5 Start_2) (div Start_3 Start_9) (abs Start_6) (ite StartBool Start_10 Start_9)))
   (StartBool_1 Bool (true false (not StartBool_1) (= Start_2 Start_8) (>= Start_8 Start_2) (> Start_6 Start_3)))
   (Start_8 Int (0 1 (- Start_5) (+ Start_3 Start_3) (* Start Start_7) (div Start_4 Start_6) (abs Start_8) (ite StartBool_2 Start_5 Start_1)))
   (Start_2 Int (4 (+ Start_4 Start_2) (ite StartBool Start_5 Start)))
   (StartBool_3 Bool (false true (not StartBool_2) (= Start_11 Start_1) (> Start_7 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (div 2 x) (+ 5 5))))

(check-synth)
