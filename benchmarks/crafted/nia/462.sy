(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_25 Int) (Start_21 Int) (Start_22 Int) (StartBool_6 Bool) (Start_8 Int) (Start_5 Int) (Start_19 Int) (Start_12 Int) (Start_20 Int) (StartBool_2 Bool) (Start_13 Int) (Start_4 Int) (Start_3 Int) (Start_6 Int) (Start_9 Int) (StartBool_4 Bool) (Start_15 Int) (Start_7 Int) (StartBool_3 Bool) (Start_10 Int) (Start_16 Int) (Start_1 Int) (StartBool_1 Bool) (Start_14 Int) (Start_17 Int) (Start_18 Int) (Start_11 Int) (Start_23 Int) (Start_2 Int) (Start_24 Int) (StartBool_5 Bool))
  ((Start Int (4 x 5 (- Start_1) (- Start_1 Start_1) (+ Start Start_1) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true (or StartBool_4 StartBool_3) (< Start_2 Start_11) (= Start_18 Start_18) (> Start_12 Start_13)))
   (Start_25 Int (3 0 (+ Start_22 Start_25) (* Start_11 Start_8)))
   (Start_21 Int (4 (- Start_13) (- Start_13 Start_9) (div Start_21 Start_16) (abs Start_25) (ite StartBool_1 Start_11 Start_14)))
   (Start_22 Int (4 1 x 0 (- Start_14) (- Start_19 Start_21) (* Start_10 Start_6) (div Start_15 Start_7) (ite StartBool_5 Start_12 Start_5)))
   (StartBool_6 Bool (true false (not StartBool_6) (or StartBool_5 StartBool_4) (< Start_17 Start) (<= Start_16 Start_7) (>= Start_4 Start_21)))
   (Start_8 Int (3 4 y (- Start_8) (- Start_1 Start_2) (+ Start_4 Start_10) (* Start_5 Start_11) (div Start_6 Start_12) (ite StartBool_1 Start_4 Start_11)))
   (Start_5 Int (3 x 0 y 4 (- Start_1 Start_6) (+ Start_3 Start_7) (ite StartBool_3 Start Start_2)))
   (Start_19 Int (x 1 (div Start_21 Start_5) (mod Start_22 Start_7) (abs Start) (ite StartBool_5 Start_23 Start_11)))
   (Start_12 Int (5 4 (- Start_6) (+ Start_5 Start_12) (* Start_9 Start_11) (div Start_11 Start_3) (mod Start_11 Start_9) (abs Start_3) (ite StartBool_4 Start_3 Start_1)))
   (Start_20 Int (5 1 (- Start_6 Start_6) (+ Start_13 Start_7) (mod Start_20 Start_13) (abs Start_16)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool_2 StartBool_3) (= Start_2 Start_5)))
   (Start_13 Int (3 5 (- Start_8 Start_6) (+ Start Start_11) (ite StartBool_4 Start_11 Start_7)))
   (Start_4 Int (4 (abs Start_3) (ite StartBool_2 Start Start)))
   (Start_3 Int (5 3 x (- Start) (* Start_4 Start) (mod Start_4 Start_2) (abs Start_4) (ite StartBool Start_4 Start)))
   (Start_6 Int (1 (- Start_2) (+ Start_3 Start_8) (div Start_7 Start_3) (mod Start_9 Start_8) (abs Start_7)))
   (Start_9 Int (3 1 x 5 2 (+ Start Start_1) (* Start_6 Start_8) (div Start_10 Start_5) (ite StartBool Start_8 Start_3)))
   (StartBool_4 Bool (false true (not StartBool) (or StartBool_3 StartBool_2) (>= Start Start_13) (> Start_12 Start_8)))
   (Start_15 Int (y (- Start_14) (- Start_4 Start_9) (+ Start_13 Start_9) (abs Start_2) (ite StartBool_2 Start_4 Start_13)))
   (Start_7 Int (2 1 (- Start_6 Start_4) (+ Start_5 Start_6) (mod Start_2 Start) (abs Start_2)))
   (StartBool_3 Bool (false true (or StartBool_4 StartBool_3) (< Start_14 Start_4) (= Start_13 Start_16) (>= Start_14 Start_12)))
   (Start_10 Int (2 4 5 (- Start_3) (- Start_9 Start_6) (+ Start_1 Start_10) (ite StartBool_1 Start_6 Start_8)))
   (Start_16 Int (5 3 (- Start_6 Start_6) (ite StartBool_4 Start_14 Start_4)))
   (Start_1 Int (x 5 2 3 0 y (- Start_2) (+ Start_1 Start) (abs Start_14) (ite StartBool_4 Start Start_17)))
   (StartBool_1 Bool (true (or StartBool StartBool_1) (= Start_6 Start_17)))
   (Start_14 Int (1 (- Start_8) (- Start_9 Start_12) (+ Start_14 Start_7) (div Start_9 Start_1) (abs Start_10)))
   (Start_17 Int (5 (- Start_17) (- Start_6 Start_12) (div Start_9 Start_4) (abs Start)))
   (Start_18 Int (5 1 y (- Start_14) (+ Start_6 Start_19) (mod Start_13 Start_20) (ite StartBool_1 Start_4 Start_5)))
   (Start_11 Int (0 (- Start Start_14) (div Start_1 Start_15) (ite StartBool_2 Start_14 Start_16)))
   (Start_23 Int (3 (- Start_10 Start_16) (+ Start_3 Start_24) (div Start_12 Start_19) (abs Start_19) (ite StartBool Start_5 Start_3)))
   (Start_2 Int (1 0 y (+ Start Start_1) (div Start_3 Start) (ite StartBool Start Start_2)))
   (Start_24 Int (3 (div Start_18 Start_14) (abs Start_14)))
   (StartBool_5 Bool (true false (not StartBool_2) (and StartBool_4 StartBool_6) (<= Start_14 Start_16) (> Start_11 Start_18)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 0 (mod x 2))))

(check-synth)
