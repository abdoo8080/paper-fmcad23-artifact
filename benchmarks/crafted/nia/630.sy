(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_11 Int) (Start_8 Int) (StartBool_5 Bool) (Start_1 Int) (Start_4 Int) (Start_5 Int) (Start_3 Int) (StartBool_1 Bool) (Start_6 Int) (Start_12 Int) (Start_9 Int) (StartBool_2 Bool) (Start_7 Int) (Start_2 Int) (StartBool_3 Bool) (Start_10 Int))
  ((Start Int (0 3 (div Start_1 Start_1)))
   (StartBool Bool (false true (not StartBool_2) (< Start_8 Start_11) (> Start_2 Start_12)))
   (StartBool_4 Bool (true false (and StartBool_1 StartBool_5) (<= Start_9 Start_12) (= Start_6 Start_10) (>= Start_9 Start_6) (> Start_10 Start_4)))
   (Start_11 Int (5 (* Start_11 Start_7) (div Start_3 Start_10) (mod Start_3 Start_7) (abs Start) (ite StartBool_4 Start_11 Start_2)))
   (Start_8 Int (1 (- Start_1) (- Start_6 Start_8) (div Start_7 Start_4) (mod Start_4 Start_1) (abs Start_2) (ite StartBool Start_3 Start_1)))
   (StartBool_5 Bool (true (< Start_10 Start_4) (> Start_12 Start_3)))
   (Start_1 Int (0 (- Start Start_1) (+ Start_1 Start_1) (div Start_1 Start_2) (mod Start_1 Start_3) (ite StartBool Start_2 Start_4)))
   (Start_4 Int (3 (- Start Start_3) (* Start Start_3) (div Start_3 Start_1) (ite StartBool Start_2 Start_1)))
   (Start_5 Int (1 (- Start_4 Start_3) (+ Start Start_4) (* Start_2 Start_5) (mod Start_2 Start_2)))
   (Start_3 Int (2 (- Start_4 Start) (+ Start_5 Start_3) (* Start_2 Start_5) (abs Start) (ite StartBool_1 Start Start_5)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool) (< Start_5 Start_6) (= Start Start_6)))
   (Start_6 Int (2 (- Start_4 Start_2) (* Start_3 Start_4) (div Start_6 Start_4)))
   (Start_12 Int (1 (* Start_8 Start_5)))
   (Start_9 Int (3 2 x 4 5 (+ Start_8 Start_7) (* Start_9 Start_6)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_3 StartBool_2) (= Start_6 Start_3) (> Start_7 Start_6)))
   (Start_7 Int (5 1 (+ Start_4 Start_5) (abs Start_4)))
   (Start_2 Int (x 1 (- Start_8) (- Start_4 Start_9) (div Start Start_1) (mod Start_10 Start_6) (ite StartBool_1 Start_9 Start_9)))
   (StartBool_3 Bool (false (or StartBool_1 StartBool_3) (< Start Start_2) (> Start_2 Start_3)))
   (Start_10 Int (5 4 (- Start_5) (- Start_7 Start_1) (+ Start_5 Start_3) (* Start_3 Start_8) (div Start_10 Start_4) (mod Start_5 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 3 (* 3 y))))

(check-synth)
