(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_2 Bool) (Start_9 Int) (Start_5 Int) (Start_4 Int) (Start_3 Int) (Start_6 Int) (StartBool_1 Bool) (Start_8 Int) (StartBool_3 Bool) (Start_2 Int) (Start_10 Int) (Start_7 Int))
  ((Start Int (4 (+ Start_1 Start) (* Start_1 Start_1) (div Start_1 Start_2) (mod Start_3 Start) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (false true (and StartBool_2 StartBool_3) (or StartBool_2 StartBool) (< Start_5 Start_5) (= Start_6 Start_3) (>= Start_2 Start_1)))
   (Start_1 Int (x (- Start_5) (* Start_1 Start_7) (div Start_7 Start_10) (mod Start_8 Start_10) (abs Start_2)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool StartBool) (< Start_5 Start_1) (= Start_9 Start_5) (>= Start_2 Start_8)))
   (Start_9 Int (x (- Start_8) (- Start_3 Start_8) (* Start_3 Start_7) (div Start_6 Start_4) (mod Start Start_5) (abs Start_9) (ite StartBool_3 Start_6 Start_5)))
   (Start_5 Int (5 1 y 4 (- Start_7) (- Start_5 Start_1) (div Start_1 Start_10) (mod Start Start_5) (abs Start_7) (ite StartBool_1 Start_4 Start_4)))
   (Start_4 Int (1 (- Start_5) (+ Start_5 Start_2) (mod Start_6 Start_4) (abs Start_5)))
   (Start_3 Int (y (+ Start Start) (mod Start_2 Start_1) (abs Start_3)))
   (Start_6 Int (2 (- Start_2 Start_2) (+ Start_5 Start_5) (div Start_4 Start_7) (mod Start_3 Start_6) (ite StartBool_1 Start_5 Start_4)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_1 StartBool_2) (< Start_8 Start_6) (<= Start_6 Start_5) (>= Start_3 Start)))
   (Start_8 Int (3 5 (+ Start_8 Start_4) (* Start_3 Start_2) (mod Start_1 Start_7) (ite StartBool Start_1 Start_5)))
   (StartBool_3 Bool (false (not StartBool) (< Start_10 Start_8) (= Start_2 Start_3)))
   (Start_2 Int (0 (- Start_3) (- Start_1 Start_3) (div Start_3 Start_4) (abs Start_3)))
   (Start_10 Int (5 4 3 (ite StartBool_1 Start_10 Start_3)))
   (Start_7 Int (x 2 0 (- Start_8) (+ Start_3 Start_3) (abs Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (- (mod x 0)) (+ (div 1 0) 4))))

(check-synth)
