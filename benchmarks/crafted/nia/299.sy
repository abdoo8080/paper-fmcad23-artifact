(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (StartBool_12 Bool) (Start_3 Int) (Start_11 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_4 Int) (Start_13 Int) (Start_7 Int) (StartBool_9 Bool) (Start_6 Int) (StartBool_7 Bool) (StartBool_1 Bool) (StartBool_5 Bool) (Start_1 Int) (StartBool_11 Bool) (Start_10 Int) (StartBool_8 Bool) (StartBool_3 Bool) (Start_8 Int) (Start_2 Int) (Start_16 Int) (Start_12 Int) (StartBool_10 Bool) (Start_9 Int) (Start_14 Int) (Start_5 Int) (StartBool_6 Bool) (Start_15 Int))
  ((Start Int (y (- Start_1 Start) (abs Start_1)))
   (StartBool Bool (true (not StartBool) (and StartBool_8 StartBool_5) (or StartBool_8 StartBool_6) (< Start_2 Start_3) (<= Start_1 Start_5) (= Start_7 Start_12)))
   (Start_17 Int (5 2 (- Start_3) (- Start_15 Start_9) (+ Start_17 Start_15) (* Start_12 Start_13) (div Start_17 Start_16) (mod Start_9 Start_7) (abs Start_10) (ite StartBool_3 Start_5 Start_14)))
   (StartBool_12 Bool (false (or StartBool_4 StartBool_10) (<= Start_17 Start_2) (> Start_14 Start_7)))
   (Start_3 Int (3 5 (- Start_2) (- Start_11 Start_9) (* Start_8 Start) (mod Start Start_10)))
   (Start_11 Int (0 (- Start_2) (- Start_5 Start_5) (div Start_3 Start_7) (mod Start_4 Start_4) (abs Start) (ite StartBool_4 Start Start_4)))
   (StartBool_2 Bool (true false (not StartBool_2) (= Start_5 Start_3) (>= Start_6 Start_3)))
   (StartBool_4 Bool (true false (not StartBool_3) (and StartBool_3 StartBool_3) (or StartBool_2 StartBool_6) (< Start_7 Start) (= Start_11 Start_4) (>= Start_5 Start_4) (> Start_2 Start)))
   (Start_4 Int (4 x 0 1 (* Start_8 Start_9) (abs Start_7)))
   (Start_13 Int (4 (+ Start_3 Start) (mod Start_2 Start_1) (ite StartBool_10 Start_1 Start_1)))
   (Start_7 Int (x 4 (- Start_3) (- Start_2 Start_3) (+ Start_2 Start) (div Start_6 Start_8) (mod Start_2 Start_5) (ite StartBool_3 Start_7 Start_3)))
   (StartBool_9 Bool (true (not StartBool_2) (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_2) (<= Start_7 Start_2) (= Start_6 Start_11) (>= Start_13 Start_6) (> Start_5 Start_1)))
   (Start_6 Int (3 x 1 0 (- Start_2 Start_4) (ite StartBool_2 Start_5 Start)))
   (StartBool_7 Bool (true (not StartBool_4) (and StartBool_2 StartBool_6) (or StartBool_2 StartBool_2) (< Start_4 Start) (> Start_1 Start_10)))
   (StartBool_1 Bool (true false (and StartBool StartBool) (<= Start Start_1) (= Start_4 Start_3) (>= Start_5 Start_5) (> Start_4 Start_6)))
   (StartBool_5 Bool (true (not StartBool_4) (or StartBool_4 StartBool_5) (<= Start_9 Start_8) (= Start_8 Start_5) (> Start_10 Start_2)))
   (Start_1 Int (1 5 x 3 0 2 4 (- Start_1) (- Start Start) (+ Start_2 Start_1) (div Start_1 Start_3) (ite StartBool_1 Start_3 Start_2)))
   (StartBool_11 Bool (true false (not StartBool_12) (or StartBool_10 StartBool_3) (< Start Start_4) (<= Start_10 Start_14) (= Start_5 Start_14) (>= Start_14 Start_7)))
   (Start_10 Int (4 y (- Start_3) (- Start_7 Start) (* Start_8 Start_3)))
   (StartBool_8 Bool (false true (not StartBool_9) (or StartBool_2 StartBool_7) (<= Start_1 Start_4) (= Start_12 Start_6)))
   (StartBool_3 Bool (false true (not StartBool_4) (and StartBool_5 StartBool_1) (<= Start_4 Start_5) (= Start_6 Start_4)))
   (Start_8 Int (1 x 2 5 (+ Start_6 Start_4) (div Start_10 Start_8) (ite StartBool_5 Start_11 Start_11)))
   (Start_2 Int (y (div Start_1 Start_6) (abs Start_8) (ite StartBool Start_11 Start_1)))
   (Start_16 Int (1 (* Start_15 Start_4) (div Start_12 Start_2)))
   (Start_12 Int (4 2 1 (- Start_6 Start_7) (* Start Start_6) (mod Start_10 Start_5)))
   (StartBool_10 Bool (false true (and StartBool_11 StartBool_7) (< Start_6 Start_3) (>= Start_13 Start_11)))
   (Start_9 Int (1 (- Start_4) (- Start_3 Start_3) (+ Start_2 Start_11)))
   (Start_14 Int (3 (- Start_7) (- Start_4 Start_10) (* Start_14 Start_12) (div Start_15 Start_16) (ite StartBool_5 Start_12 Start_14)))
   (Start_5 Int (y 0 (- Start) (- Start_3 Start_5) (+ Start_3 Start_4) (* Start_2 Start_7) (div Start_7 Start_7) (abs Start_3)))
   (StartBool_6 Bool (false true (not StartBool_4) (and StartBool_5 StartBool_7) (or StartBool_4 StartBool_7) (< Start_7 Start_11) (> Start_8 Start_3)))
   (Start_15 Int (3 (* Start Start_8) (mod Start_1 Start_13) (abs Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod x y))))

(check-synth)
