(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_4 Int) (StartBool_5 Bool) (StartBool_7 Bool) (Start_10 Int) (StartBool_6 Bool) (StartBool_4 Bool) (Start_9 Int) (Start_11 Int) (Start_6 Int) (Start_14 Int) (Start_1 Int) (StartBool_1 Bool) (Start_2 Int) (Start_16 Int) (Start_3 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_15 Int) (Start_12 Int) (Start_5 Int) (Start_8 Int) (Start_7 Int))
  ((Start Int (5 (abs Start)))
   (StartBool Bool (false true (< Start Start) (>= Start Start_1)))
   (Start_13 Int (1 (- Start_13) (* Start_13 Start_14) (div Start_13 Start_10) (mod Start_12 Start_8) (ite StartBool_2 Start_10 Start_12)))
   (Start_4 Int (x y (- Start_11) (+ Start_12 Start_8) (ite StartBool_3 Start_5 Start_2)))
   (StartBool_5 Bool (true (<= Start_8 Start) (= Start_10 Start) (> Start_3 Start_9)))
   (StartBool_7 Bool (false (= Start_7 Start_11) (>= Start_4 Start_7) (> Start_6 Start_5)))
   (Start_10 Int (y (- Start_11 Start_6) (+ Start_11 Start_11) (* Start_4 Start_5) (mod Start_11 Start_1)))
   (StartBool_6 Bool (false (not StartBool_2) (and StartBool_7 StartBool_5) (or StartBool_6 StartBool_7) (> Start_10 Start_7)))
   (StartBool_4 Bool (true (and StartBool_5 StartBool_6) (< Start Start_9) (= Start_8 Start_9) (>= Start_6 Start_5) (> Start_7 Start_8)))
   (Start_9 Int (5 0 (- Start_5) (- Start_2 Start_4) (+ Start_2 Start_9)))
   (Start_11 Int (x (- Start_7) (mod Start_8 Start_1) (ite StartBool_1 Start_5 Start_9)))
   (Start_6 Int (y (- Start_9) (- Start_5 Start_6) (+ Start_5 Start_8) (div Start_4 Start) (ite StartBool_4 Start_3 Start_8)))
   (Start_14 Int (y (- Start) (- Start_5 Start_10) (* Start_3 Start_12) (div Start_15 Start_5) (mod Start_2 Start_5) (abs Start_3) (ite StartBool_5 Start_5 Start_9)))
   (Start_1 Int (2 0 (- Start_2) (+ Start Start) (* Start Start_2) (mod Start_2 Start_3) (ite StartBool_1 Start_1 Start_3)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (or StartBool_1 StartBool_1) (< Start_3 Start_1) (<= Start_2 Start)))
   (Start_2 Int (2 (- Start_1 Start_1) (* Start Start_1) (div Start Start_4) (mod Start_2 Start_3) (abs Start) (ite StartBool Start_5 Start_3)))
   (Start_16 Int (4 (* Start Start_11) (div Start_5 Start_12)))
   (Start_3 Int (2 5 (- Start) (- Start_3 Start_2) (+ Start_2 Start) (mod Start Start) (abs Start_2)))
   (StartBool_2 Bool (true (and StartBool_1 StartBool_3) (or StartBool_3 StartBool) (< Start_8 Start_7) (<= Start_6 Start_6) (> Start_7 Start_8)))
   (StartBool_3 Bool (false (not StartBool_3) (< Start_6 Start_7) (<= Start_5 Start_1) (= Start_6 Start_8) (>= Start Start_3)))
   (Start_15 Int (4 (mod Start_16 Start_4) (abs Start_3) (ite StartBool_2 Start_14 Start_9)))
   (Start_12 Int (1 5 (- Start_5) (- Start_13 Start_12) (+ Start_5 Start_13) (* Start_2 Start_14) (div Start_8 Start_14)))
   (Start_5 Int (5 x (- Start_6) (- Start_4 Start_7) (div Start_5 Start) (ite StartBool_2 Start_6 Start_8)))
   (Start_8 Int (2 y 4 (- Start_6) (+ Start_5 Start_4) (mod Start_1 Start_3) (abs Start)))
   (Start_7 Int (y (- Start_8 Start) (+ Start_1 Start_4) (* Start_8 Start_9) (mod Start_8 Start_7) (abs Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* x y)))

(check-synth)
