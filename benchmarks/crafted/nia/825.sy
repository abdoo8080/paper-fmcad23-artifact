(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_15 Int) (Start_13 Int) (StartBool_7 Bool) (StartBool_6 Bool) (Start_4 Int) (Start_8 Int) (StartBool_4 Bool) (Start_3 Int) (Start_12 Int) (Start_7 Int) (Start_14 Int) (Start_9 Int) (StartBool_3 Bool) (StartBool_1 Bool) (Start_10 Int) (Start_5 Int) (StartBool_5 Bool) (Start_6 Int) (StartBool_2 Bool) (Start_1 Int) (Start_11 Int))
  ((Start Int (3 5 4 y (- Start_1) (- Start_2 Start_3)))
   (StartBool Bool (true false (and StartBool_7 StartBool_5) (< Start_13 Start_9) (<= Start_8 Start_7) (> Start_3 Start_14)))
   (Start_2 Int (y (- Start_9) (- Start_9 Start_7) (* Start_9 Start_14) (div Start_2 Start_15) (abs Start_7)))
   (Start_15 Int (y (- Start_7 Start_1) (* Start_4 Start) (div Start_10 Start_12)))
   (Start_13 Int (2 (- Start) (ite StartBool_7 Start_10 Start_5)))
   (StartBool_7 Bool (false (or StartBool_6 StartBool_4) (< Start_5 Start_2) (<= Start_12 Start_6) (>= Start Start_4) (> Start_4 Start_9)))
   (StartBool_6 Bool (false (and StartBool_6 StartBool) (or StartBool_7 StartBool) (= Start_9 Start_5) (>= Start_9 Start_2) (> Start_1 Start_10)))
   (Start_4 Int (5 0 (- Start_10) (div Start_11 Start_9) (mod Start_8 Start) (ite StartBool_6 Start_6 Start_2)))
   (Start_8 Int (3 (- Start_5 Start_8) (+ Start_3 Start_1) (div Start_9 Start_3)))
   (StartBool_4 Bool (true false (and StartBool StartBool_2) (< Start_5 Start_3)))
   (Start_3 Int (2 4 (- Start_2) (+ Start Start_4) (* Start_5 Start) (div Start Start) (mod Start_6 Start_2) (abs Start_4)))
   (Start_12 Int (0 (- Start_12 Start_13) (div Start_4 Start_11) (mod Start_14 Start_4)))
   (Start_7 Int (x 2 y (- Start_6 Start) (div Start Start_4)))
   (Start_14 Int (1 0 (+ Start_11 Start_14) (div Start_14 Start_12)))
   (Start_9 Int (x 1 (- Start_8) (- Start_8 Start_2) (* Start_6 Start_8) (div Start_7 Start_10) (abs Start_7)))
   (StartBool_3 Bool (false (not StartBool_2) (and StartBool_4 StartBool_5) (or StartBool_5 StartBool_5) (<= Start Start_4) (>= Start_10 Start_9)))
   (StartBool_1 Bool (true (not StartBool_2) (or StartBool_3 StartBool_4) (< Start_6 Start_2) (<= Start_1 Start_8) (= Start_2 Start_8)))
   (Start_10 Int (y (- Start_10 Start_5) (mod Start_2 Start_7)))
   (Start_5 Int (x (- Start_9 Start_1) (* Start_6 Start_10) (div Start_9 Start_8) (mod Start_5 Start_2)))
   (StartBool_5 Bool (true (and StartBool_5 StartBool_4) (or StartBool StartBool_5) (< Start_1 Start_4) (>= Start_10 Start_3)))
   (Start_6 Int (y (- Start_3 Start_1) (+ Start Start_2) (* Start_5 Start_5) (div Start_6 Start_4) (abs Start_1) (ite StartBool_1 Start_4 Start_7)))
   (StartBool_2 Bool (false true (not StartBool_4) (and StartBool_5 StartBool_3) (>= Start_3 Start_7) (> Start_11 Start_10)))
   (Start_1 Int (y 1 2 (- Start_13) (+ Start_11 Start_12) (* Start Start_6) (abs Start_7)))
   (Start_11 Int (5 y (- Start_8) (- Start_10 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- 1) (- (* 2 y) x))))

(check-synth)
