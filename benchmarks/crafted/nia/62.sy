(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_21 Int) (StartBool_9 Bool) (Start_18 Int) (Start_20 Int) (Start_19 Int) (Start_9 Int) (Start_10 Int) (Start_1 Int) (Start_6 Int) (Start_2 Int) (StartBool_4 Bool) (Start_4 Int) (Start_7 Int) (Start_5 Int) (Start_3 Int) (Start_8 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_11 Int) (Start_13 Int) (StartBool_5 Bool) (Start_14 Int) (StartBool_6 Bool) (Start_12 Int) (StartBool_7 Bool) (StartBool_8 Bool) (Start_15 Int) (Start_22 Int) (Start_16 Int) (StartBool_3 Bool) (StartBool_10 Bool) (StartBool_11 Bool) (Start_17 Int))
  ((Start Int (1 2 (- Start) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (true false (not StartBool_4) (and StartBool_2 StartBool) (< Start_5 Start) (>= Start_1 Start_6) (> Start_11 Start_1)))
   (Start_21 Int (0 (ite StartBool_4 Start_6 Start_22)))
   (StartBool_9 Bool (false true (and StartBool_1 StartBool_6) (< Start_9 Start_16) (<= Start_16 Start_11) (>= Start_21 Start_21)))
   (Start_18 Int (1))
   (Start_20 Int (4 (- Start_17) (- Start_10 Start_6) (* Start_13 Start) (abs Start_17)))
   (Start_19 Int (2 (- Start_18 Start_20) (+ Start Start_7) (div Start_5 Start_13) (mod Start_15 Start_13) (abs Start_18) (ite StartBool_2 Start_17 Start_16)))
   (Start_9 Int (2 0 1 3 4 5 x (- Start_8 Start_10) (* Start_3 Start_2) (abs Start_4)))
   (Start_10 Int (4 2 3 (- Start_5) (+ Start Start) (abs Start_7)))
   (Start_1 Int (2 (- Start_1 Start_7) (+ Start_2 Start_5) (* Start_5 Start_4) (mod Start_5 Start_7) (ite StartBool_1 Start_5 Start_1)))
   (Start_6 Int (0 (- Start_6) (+ Start_6 Start_2) (mod Start_4 Start_3) (abs Start_5)))
   (Start_2 Int (5 (- Start_3) (- Start_4 Start_2) (div Start_5 Start_2) (abs Start_2)))
   (StartBool_4 Bool (false (or StartBool_5 StartBool_7) (< Start_8 Start_10) (>= Start_11 Start)))
   (Start_4 Int (0 3 y 4 (- Start) (- Start_1 Start) (div Start_5 Start_3) (abs Start_4)))
   (Start_7 Int (5 (- Start) (- Start_1 Start_7) (+ Start_1 Start_4) (* Start_8 Start_8) (mod Start_6 Start_3) (ite StartBool_2 Start_8 Start)))
   (Start_5 Int (4 (div Start Start) (abs Start)))
   (Start_3 Int (x 4 (- Start_1 Start_1) (+ Start_3 Start_6) (div Start_1 Start_6) (mod Start Start_4) (ite StartBool_1 Start_3 Start_6)))
   (Start_8 Int (5 (- Start_7) (div Start_4 Start_5) (abs Start_3)))
   (StartBool_2 Bool (false true (or StartBool StartBool_3) (< Start_3 Start_3) (= Start_5 Start_8) (>= Start_7 Start_9) (> Start_10 Start_8)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (< Start Start_4) (= Start_2 Start_5) (>= Start_2 Start_3) (> Start_6 Start_2)))
   (Start_11 Int (5 y (- Start_8) (* Start_4 Start_12) (abs Start) (ite StartBool_5 Start_3 Start)))
   (Start_13 Int (5 (+ Start_1 Start_4) (* Start_13 Start_3) (div Start_13 Start_6) (mod Start_7 Start_1) (abs Start_11) (ite StartBool_6 Start_14 Start_3)))
   (StartBool_5 Bool (false true (= Start_13 Start_3) (> Start_3 Start_4)))
   (Start_14 Int (0 2 1 y (+ Start_2 Start_1) (div Start_13 Start_14) (mod Start_5 Start) (ite StartBool_6 Start_13 Start_9)))
   (StartBool_6 Bool (true false (not StartBool_4) (>= Start_6 Start_5) (> Start_2 Start_9)))
   (Start_12 Int (4 5 (+ Start_7 Start_7) (mod Start_9 Start_13)))
   (StartBool_7 Bool (false (not StartBool_8) (and StartBool StartBool_6) (< Start_5 Start_4) (<= Start_7 Start_8) (> Start_10 Start_5)))
   (StartBool_8 Bool (false true (and StartBool_9 StartBool) (or StartBool_10 StartBool_9) (< Start Start_15) (<= Start_14 Start) (= Start_3 Start_13) (>= Start_2 Start_14)))
   (Start_15 Int (3 y (- Start_14 Start_9) (+ Start_1 Start_11) (* Start_11 Start_3) (mod Start_8 Start_2)))
   (Start_22 Int (1 (* Start_4 Start_9) (mod Start_14 Start_2)))
   (Start_16 Int (4 (- Start_6 Start_5) (+ Start_9 Start) (div Start_7 Start_16) (mod Start Start_15) (abs Start_13)))
   (StartBool_3 Bool (false (<= Start_7 Start) (= Start Start_7) (> Start_4 Start_4)))
   (StartBool_10 Bool (true (not StartBool) (and StartBool_10 StartBool_11) (or StartBool_8 StartBool_9) (< Start_11 Start_4) (<= Start_12 Start_1) (>= Start_16 Start_7) (> Start_1 Start_12)))
   (StartBool_11 Bool (false (not StartBool_7) (and StartBool_2 StartBool_4) (or StartBool_11 StartBool_6) (< Start_7 Start_17) (>= Start_4 Start_16)))
   (Start_17 Int (y (- Start_13) (- Start_11 Start_17) (* Start_18 Start_19) (mod Start_10 Start_4) (abs Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- (mod 2 (- x 1))))))

(check-synth)
