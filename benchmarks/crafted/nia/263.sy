(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_10 Bool) (Start_8 Int) (Start_20 Int) (Start_7 Int) (Start_10 Int) (Start_16 Int) (Start_9 Int) (StartBool_2 Bool) (Start_21 Int) (Start_5 Int) (Start_6 Int) (Start_4 Int) (Start_3 Int) (StartBool_4 Bool) (Start_14 Int) (Start_1 Int) (StartBool_9 Bool) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_6 Bool) (StartBool_3 Bool) (Start_13 Int) (Start_15 Int) (StartBool_5 Bool) (Start_2 Int) (Start_12 Int) (Start_22 Int) (Start_17 Int) (Start_11 Int) (Start_18 Int) (StartBool_1 Bool) (Start_19 Int))
  ((Start Int (0 3 (- Start_1) (- Start_1 Start_2) (abs Start_2) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_10) (and StartBool_10 StartBool_3) (or StartBool_9 StartBool_1) (< Start_10 Start_1) (= Start_10 Start_4) (>= Start_11 Start_19) (> Start_10 Start)))
   (StartBool_10 Bool (false (or StartBool_8 StartBool_7) (< Start_3 Start_3) (<= Start_11 Start_12) (= Start_16 Start_7)))
   (Start_8 Int (3 y x (- Start_1 Start_9) (+ Start_4 Start_6) (* Start_8 Start_2) (mod Start_5 Start_8) (abs Start_4)))
   (Start_20 Int (4 (- Start_2) (- Start_20 Start_2) (+ Start_4 Start_7) (* Start_11 Start_10) (mod Start_6 Start_14) (ite StartBool_9 Start_6 Start_20)))
   (Start_7 Int (x 0 (- Start_2) (+ Start_1 Start_4) (div Start_4 Start_3) (mod Start_5 Start_3) (abs Start_5)))
   (Start_10 Int (0 (- Start_3 Start_3) (* Start_5 Start_10) (abs Start_9)))
   (Start_16 Int (y (- Start_15 Start_15) (+ Start Start_4) (mod Start_7 Start_11) (abs Start_6)))
   (Start_9 Int (4 5 2 (+ Start_2 Start_2) (* Start_6 Start) (div Start_10 Start_3) (abs Start_6) (ite StartBool_5 Start_4 Start_5)))
   (StartBool_2 Bool (false (or StartBool_3 StartBool_4) (>= Start_4 Start_7)))
   (Start_21 Int (3 0 2 (- Start_14 Start_18) (+ Start_2 Start_1) (* Start_17 Start_22) (ite StartBool_1 Start_10 Start_4)))
   (Start_5 Int (y (* Start_4 Start_1) (div Start_5 Start_1) (mod Start_2 Start_4) (ite StartBool_2 Start_6 Start)))
   (Start_6 Int (y (- Start Start) (+ Start_5 Start_3) (div Start_4 Start_5) (ite StartBool_2 Start_5 Start_4)))
   (Start_4 Int (1 4 3 2 (- Start_3) (+ Start Start_2) (* Start Start_1) (mod Start_5 Start_5) (abs Start)))
   (Start_3 Int (4 0 1 2 (div Start_1 Start_3) (ite StartBool_1 Start Start_4)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_1 StartBool_2) (or StartBool_5 StartBool_2) (= Start_7 Start_5) (> Start_7 Start_8)))
   (Start_14 Int (0 4 2 5 y 3 (* Start_8 Start_15) (abs Start_5) (ite StartBool_7 Start_13 Start_9)))
   (Start_1 Int (x 1 2 y 4 5 0 (* Start_13 Start_20) (div Start_4 Start_15)))
   (StartBool_9 Bool (true (not StartBool_2) (and StartBool_7 StartBool_10) (or StartBool_1 StartBool_10) (= Start_21 Start_21) (> Start_16 Start_2)))
   (StartBool_8 Bool (true (> Start_3 Start_8)))
   (StartBool_7 Bool (false (and StartBool_4 StartBool_8) (or StartBool_4 StartBool_4) (<= Start_7 Start_1) (= Start_5 Start) (>= Start_3 Start_7) (> Start_7 Start)))
   (StartBool_6 Bool (true false (= Start_6 Start_6) (>= Start_9 Start_10) (> Start_6 Start_5)))
   (StartBool_3 Bool (true (not StartBool_6) (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_5) (<= Start_1 Start_7) (= Start_10 Start_3) (>= Start_10 Start_2) (> Start_3 Start_9)))
   (Start_13 Int (3 (* Start Start_13) (div Start_13 Start_12) (mod Start_13 Start_9) (abs Start_14) (ite StartBool_7 Start_8 Start_14)))
   (Start_15 Int (5 0 (div Start_4 Start_5) (mod Start_7 Start_10)))
   (StartBool_5 Bool (true false (not StartBool_6) (and StartBool_7 StartBool_8) (< Start_3 Start) (<= Start_4 Start_8)))
   (Start_2 Int (5 (- Start_2) (- Start_8 Start_11) (+ Start_12 Start) (* Start_7 Start_3) (mod Start_8 Start_5) (ite StartBool_5 Start_13 Start_11)))
   (Start_12 Int (5 (- Start_1 Start_11) (+ Start_11 Start_16) (div Start_17 Start) (mod Start_6 Start_11) (ite StartBool_1 Start_6 Start_9)))
   (Start_22 Int (4 2 (- Start_8) (+ Start_20 Start_16) (* Start Start_1) (abs Start_21)))
   (Start_17 Int (y 3 1 (- Start_7) (mod Start_6 Start_3) (ite StartBool_4 Start_5 Start_8)))
   (Start_11 Int (5 (- Start_5 Start_13) (ite StartBool_3 Start_1 Start_18)))
   (Start_18 Int (x (- Start_10) (div Start_16 Start_18) (mod Start_4 Start_19)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool StartBool_1) (or StartBool StartBool) (>= Start_2 Start_1) (> Start_3 Start_2)))
   (Start_19 Int (y (+ Start_2 Start_20)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 5 (* 2 y))))

(check-synth)
