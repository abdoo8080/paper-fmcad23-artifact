(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (Start_7 Int) (Start_8 Int) (Start_14 Int) (Start_9 Int) (StartBool_6 Bool) (StartBool_3 Bool) (Start_3 Int) (Start_10 Int) (Start_12 Int) (StartBool_1 Bool) (Start_6 Int) (StartBool_4 Bool) (Start_5 Int) (Start_11 Int) (Start_4 Int) (StartBool_5 Bool) (Start_13 Int) (StartBool_2 Bool))
  ((Start Int (1 (- Start_1 Start_2) (* Start_3 Start_2) (mod Start_3 Start) (abs Start_4) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (false true (< Start_13 Start_7) (<= Start_2 Start) (= Start_12 Start_4) (>= Start_5 Start_4) (> Start_11 Start_3)))
   (Start_1 Int (0 x 2 y 4 (div Start_11 Start_6)))
   (Start_2 Int (3 4 (- Start_14) (- Start_1 Start_14) (+ Start_13 Start_10) (* Start_10 Start_9) (div Start_11 Start_6) (mod Start_11 Start_3) (ite StartBool_3 Start Start)))
   (Start_7 Int (y (- Start_12) (- Start_12 Start_13) (* Start_7 Start_8)))
   (Start_8 Int (x (- Start_8) (+ Start_2 Start_4) (* Start_8 Start_5) (div Start_3 Start_7) (mod Start_7 Start_3) (ite StartBool_2 Start_6 Start_8)))
   (Start_14 Int (x (+ Start_10 Start_4) (abs Start_13) (ite StartBool_5 Start_6 Start_7)))
   (Start_9 Int (1 2 y 4 (+ Start Start_5) (* Start Start_7) (mod Start_1 Start_2)))
   (StartBool_6 Bool (false (not StartBool_1) (and StartBool_6 StartBool_2) (= Start_12 Start_3) (>= Start_4 Start_4)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool_4) (>= Start_5 Start_13) (> Start_1 Start_2)))
   (Start_3 Int (2 y 1 0 (- Start_4) (* Start_6 Start_7) (div Start_1 Start_2) (mod Start_8 Start_8) (abs Start_9) (ite StartBool_1 Start_1 Start_10)))
   (Start_10 Int (1 (- Start_9 Start_8) (+ Start Start_10) (div Start_5 Start_2) (mod Start_3 Start_2) (ite StartBool_1 Start_10 Start_7)))
   (Start_12 Int (x 2 (- Start_9) (- Start_9 Start_6) (* Start_5 Start_11) (div Start_12 Start_6) (mod Start_6 Start_7) (ite StartBool Start Start_13)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool) (or StartBool_2 StartBool) (< Start_7 Start_11) (<= Start Start_1) (> Start_12 Start_5)))
   (Start_6 Int (0 (- Start_6) (* Start_4 Start_12) (mod Start_3 Start_5) (abs Start_3)))
   (StartBool_4 Bool (false (< Start_9 Start_5) (<= Start_11 Start_5) (= Start_2 Start_9) (>= Start_13 Start_10)))
   (Start_5 Int (4 0 (div Start_4 Start_4) (mod Start Start_2)))
   (Start_11 Int (2 (- Start_2) (+ Start_9 Start_5) (* Start_7 Start_2) (div Start_3 Start_2) (mod Start_8 Start_1) (ite StartBool_5 Start_9 Start_5)))
   (Start_4 Int (3 x (- Start_5) (+ Start_5 Start_2) (div Start_5 Start_5)))
   (StartBool_5 Bool (true (or StartBool_2 StartBool) (<= Start_7 Start_8) (> Start_9 Start_13)))
   (Start_13 Int (3 0 (- Start_2) (- Start_8 Start_12) (+ Start_9 Start_4) (* Start_4 Start_5) (abs Start_5) (ite StartBool_3 Start_13 Start_2)))
   (StartBool_2 Bool (true (not StartBool_6) (and StartBool_4 StartBool_4) (>= Start_13 Start_10) (> Start_3 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod 2 x))))

(check-synth)
