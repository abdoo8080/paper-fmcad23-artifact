(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_3 Int) (Start_13 Int) (Start_1 Int) (Start_15 Int) (Start_8 Int) (Start_5 Int) (StartBool_3 Bool) (Start_11 Int) (Start_2 Int) (Start_6 Int) (StartBool_1 Bool) (Start_7 Int) (StartBool_2 Bool) (Start_9 Int) (Start_4 Int) (Start_10 Int) (Start_12 Int))
  ((Start Int (5 (- Start_1 Start)))
   (StartBool Bool (false (and StartBool_2 StartBool_3) (= Start_13 Start_15) (>= Start_1 Start_4)))
   (Start_14 Int (4 x 1 0 y 5 (+ Start_11 Start_5) (* Start_13 Start_1) (div Start_15 Start_13) (mod Start_11 Start_12) (abs Start_2) (ite StartBool Start_4 Start_14)))
   (Start_3 Int (y 4 1 3 (- Start_2) (- Start_11 Start_9) (mod Start_13 Start_1)))
   (Start_13 Int (y (- Start_11) (- Start_1 Start_5) (+ Start_11 Start_7) (* Start_4 Start) (div Start_1 Start_5) (ite StartBool_1 Start_12 Start_2)))
   (Start_1 Int (3 5 (- Start_1) (- Start Start_2) (+ Start_3 Start_1) (mod Start_1 Start) (abs Start_4)))
   (Start_15 Int (4 3 (- Start_13) (- Start_15 Start_5) (+ Start_14 Start_13) (mod Start_12 Start_8) (ite StartBool Start_4 Start_13)))
   (Start_8 Int (x (- Start_3) (+ Start_2 Start_7) (mod Start_2 Start_2)))
   (Start_5 Int (x (- Start_4) (- Start_1 Start_4) (* Start_2 Start_5) (mod Start_1 Start_6) (abs Start_6) (ite StartBool Start_3 Start_3)))
   (StartBool_3 Bool (false (not StartBool_2) (< Start_3 Start) (<= Start_9 Start_13) (>= Start_7 Start_4)))
   (Start_11 Int (y (- Start_7) (+ Start_7 Start_2) (* Start_7 Start_2) (mod Start_3 Start_2) (ite StartBool_3 Start_12 Start_4)))
   (Start_2 Int (1 5 y 0 3 2 (- Start_14) (* Start_9 Start_4) (mod Start_2 Start_3)))
   (Start_6 Int (y 2 0 3 5 4 (+ Start_1 Start) (ite StartBool_1 Start_6 Start)))
   (StartBool_1 Bool (true (not StartBool_1) (< Start_5 Start_6) (<= Start_6 Start_6) (= Start_7 Start_7) (>= Start_1 Start) (> Start_6 Start_4)))
   (Start_7 Int (1 (- Start_1) (div Start_4 Start) (mod Start_3 Start_6) (abs Start_5) (ite StartBool_2 Start_6 Start_8)))
   (StartBool_2 Bool (false (< Start_9 Start_9) (<= Start_5 Start_1) (= Start_8 Start_4) (> Start_9 Start_1)))
   (Start_9 Int (y (- Start_10) (- Start_10 Start_6) (mod Start_3 Start_1)))
   (Start_4 Int (5 3 (- Start_5) (+ Start_4 Start_1) (mod Start_2 Start_5) (abs Start_5)))
   (Start_10 Int (1 (+ Start_10 Start_2) (* Start Start_11)))
   (Start_12 Int (x (- Start_12) (+ Start_6 Start_7) (* Start Start_2) (div Start_3 Start_10) (abs Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (+ (- 2) (- (mod y 2))))))

(check-synth)
