(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_31 Int) (Start_30 Int) (Start_2 Int) (Start_4 Int) (Start_28 Int) (StartBool_7 Bool) (Start_5 Int) (StartBool_2 Bool) (Start_11 Int) (Start_29 Int) (Start_8 Int) (Start_1 Int) (Start_10 Int) (StartBool_6 Bool) (StartBool_4 Bool) (Start_17 Int) (Start_6 Int) (Start_24 Int) (Start_13 Int) (Start_14 Int) (StartBool_1 Bool) (Start_12 Int) (Start_19 Int) (Start_7 Int) (Start_15 Int) (Start_20 Int) (Start_16 Int) (Start_21 Int) (StartBool_5 Bool) (Start_18 Int) (Start_3 Int) (Start_23 Int) (StartBool_3 Bool) (Start_22 Int) (Start_27 Int) (Start_9 Int) (Start_26 Int) (Start_25 Int))
  ((Start Int (5 (- Start_1) (+ Start_1 Start_2) (* Start_1 Start_2) (mod Start_3 Start) (abs Start_1)))
   (StartBool Bool (true false (not StartBool_3) (and StartBool_5 StartBool_5) (or StartBool_2 StartBool) (< Start_14 Start_4) (>= Start_1 Start_10)))
   (Start_31 Int (4 2 3 1 (- Start_1) (div Start_11 Start_15) (abs Start_24) (ite StartBool_6 Start_18 Start_22)))
   (Start_30 Int (0 (mod Start_16 Start_31)))
   (Start_2 Int (y x (- Start_13) (mod Start_8 Start_29)))
   (Start_4 Int (1 2 (abs Start_7)))
   (Start_28 Int (1 3 (- Start_21 Start_16) (mod Start_16 Start_10) (abs Start_3) (ite StartBool_1 Start_16 Start)))
   (StartBool_7 Bool (false true (and StartBool_7 StartBool_1) (>= Start_11 Start_22) (> Start_6 Start_16)))
   (Start_5 Int (2 3 4 y 5 1 x (- Start_6 Start_16) (+ Start_2 Start_18) (* Start_10 Start_24) (div Start Start_17) (mod Start_28 Start_25) (abs Start_18) (ite StartBool_7 Start_27 Start_23)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool_1) (< Start_14 Start_5) (<= Start_19 Start_6)))
   (Start_11 Int (0 5 (- Start_12 Start_7) (* Start_3 Start_13) (ite StartBool_1 Start_4 Start_5)))
   (Start_29 Int (x (- Start_12) (+ Start_17 Start_9) (mod Start_26 Start_1) (abs Start_15) (ite StartBool Start_21 Start_3)))
   (Start_8 Int (3 (- Start_2 Start_11) (+ Start_10 Start_8) (* Start_11 Start_6) (div Start_10 Start_12) (ite StartBool_1 Start Start_10)))
   (Start_1 Int (5 (- Start_28) (+ Start_11 Start_10) (div Start_23 Start_30) (mod Start_7 Start_1) (abs Start_15) (ite StartBool_6 Start_24 Start_7)))
   (Start_10 Int (1 y 3 4 0 (- Start_7) (- Start Start_4) (+ Start_6 Start_8) (* Start_10 Start_10)))
   (StartBool_6 Bool (false (and StartBool StartBool_5) (= Start_5 Start_16) (>= Start_4 Start_3) (> Start_11 Start_8)))
   (StartBool_4 Bool (false true (not StartBool_1) (or StartBool_3 StartBool_4) (<= Start_10 Start_3) (>= Start_1 Start_1)))
   (Start_17 Int (4 (- Start_23) (+ Start_5 Start_11) (abs Start_11)))
   (Start_6 Int (0 (- Start_7) (- Start_8 Start_9) (+ Start_5 Start_8) (* Start_5 Start_1) (mod Start_9 Start_2) (abs Start_9) (ite StartBool_3 Start_5 Start_1)))
   (Start_24 Int (2 3 (- Start_25) (- Start Start_26) (+ Start_24 Start_27) (abs Start_3)))
   (Start_13 Int (x (div Start_10 Start_1) (abs Start_11) (ite StartBool_2 Start_12 Start_14)))
   (Start_14 Int (3 (- Start_5) (* Start Start_2) (div Start_15 Start_10) (ite StartBool_4 Start_11 Start_7)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool_2 StartBool_1) (>= Start_5 Start_2) (> Start_5 Start_6)))
   (Start_12 Int (0 (* Start_2 Start_10) (mod Start_12 Start) (abs Start_12)))
   (Start_19 Int (1 3 (- Start_2) (* Start_15 Start_6) (div Start_20 Start_1)))
   (Start_7 Int (2 y x 0 5 (- Start_4 Start_6) (+ Start_5 Start_16) (* Start_23 Start_15) (mod Start_3 Start_3) (abs Start_24) (ite StartBool_5 Start_17 Start_1)))
   (Start_15 Int (4 (- Start_10) (- Start_11 Start_2) (* Start_12 Start_12) (abs Start_13) (ite StartBool_5 Start_2 Start_3)))
   (Start_20 Int (4 2 (- Start_9) (- Start_1 Start_20) (+ Start_16 Start_21) (div Start_19 Start_1) (mod Start_12 Start_19) (abs Start_15)))
   (Start_16 Int (4 3 (- Start_17) (- Start_1 Start_11) (+ Start_18 Start_19) (mod Start_17 Start_10) (ite StartBool_3 Start_8 Start_6)))
   (Start_21 Int (0 2 3 (+ Start_11 Start_4)))
   (StartBool_5 Bool (false (not StartBool_6) (<= Start_6 Start_2) (> Start_4 Start_3)))
   (Start_18 Int (0 (- Start_22) (- Start_2 Start) (+ Start_15 Start_23) (abs Start_20)))
   (Start_3 Int (x (- Start_1) (- Start Start_4) (* Start_1 Start) (div Start Start) (mod Start_5 Start_1) (ite StartBool_1 Start_4 Start_3)))
   (Start_23 Int (0 (abs Start_16) (ite StartBool_3 Start_5 Start_7)))
   (StartBool_3 Bool (true (or StartBool StartBool_1) (< Start_8 Start_4) (= Start_3 Start_6)))
   (Start_22 Int (y 3 4 x (abs Start_1)))
   (Start_27 Int (y (div Start_18 Start_5) (abs Start_6)))
   (Start_9 Int (3 x y 0 5 4 (- Start) (mod Start_6 Start_7) (ite StartBool_4 Start_4 Start_4)))
   (Start_26 Int (x 5 0 (- Start_24 Start_20) (* Start_11 Start_20) (div Start_17 Start_15) (abs Start_5)))
   (Start_25 Int (5 (- Start_17) (- Start_24 Start_3) (+ Start_25 Start_9) (* Start_21 Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (abs (div 3 y)) 2)))

(check-synth)
