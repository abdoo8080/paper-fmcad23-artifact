(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_16 Int) (Start_18 Int) (Start_14 Int) (StartBool_5 Bool) (Start_11 Int) (Start_9 Int) (Start_1 Int) (Start_3 Int) (Start_12 Int) (StartBool_1 Bool) (Start_15 Int) (Start_13 Int) (StartBool_4 Bool) (Start_8 Int) (StartBool_3 Bool) (Start_21 Int) (Start_7 Int) (StartBool_6 Bool) (Start_19 Int) (Start_10 Int) (Start_6 Int) (Start_5 Int) (Start_20 Int) (Start_4 Int) (Start_2 Int) (StartBool_2 Bool) (Start_22 Int))
  ((Start Int (1 (- Start Start) (+ Start_1 Start_2) (mod Start Start_3)))
   (StartBool Bool (true (and StartBool_6 StartBool) (<= Start_2 Start_12) (>= Start_6 Start_3)))
   (Start_17 Int (y (+ Start_18 Start_14) (abs Start_6) (ite StartBool_2 Start_13 Start_6)))
   (Start_16 Int (4 (- Start Start_11) (+ Start_8 Start_12) (div Start_11 Start_17) (abs Start_3)))
   (Start_18 Int (y x (+ Start_4 Start_13) (div Start_6 Start_18) (mod Start_11 Start_17) (ite StartBool Start_14 Start_11)))
   (Start_14 Int (3 (- Start_10) (- Start_5 Start_12) (+ Start_9 Start_7) (* Start_12 Start_15) (mod Start_13 Start_2)))
   (StartBool_5 Bool (false (or StartBool_2 StartBool) (< Start_18 Start_9) (= Start_11 Start_16) (> Start_1 Start_18)))
   (Start_11 Int (x 5 3 (- Start_7) (+ Start_4 Start_12) (div Start_11 Start_13) (mod Start_6 Start_1)))
   (Start_9 Int (3 x y (- Start_4 Start_7) (div Start_1 Start_4) (mod Start_4 Start) (abs Start_5) (ite StartBool Start_1 Start_1)))
   (Start_1 Int (0 4 5 (- Start_2) (- Start_21 Start_13) (+ Start_17 Start_16) (* Start Start_22) (mod Start_14 Start_5) (abs Start_8)))
   (Start_3 Int (2 (- Start_3) (- Start_4 Start_4) (* Start Start_5) (div Start_5 Start_6) (mod Start_2 Start_7) (ite StartBool_1 Start_5 Start_6)))
   (Start_12 Int (y (- Start_13) (- Start_10 Start_12) (mod Start_2 Start_4) (abs Start_11) (ite StartBool Start_16 Start_11)))
   (StartBool_1 Bool (false (not StartBool_1) (= Start_2 Start_2) (>= Start_8 Start_3) (> Start_4 Start_1)))
   (Start_15 Int (x 2 (- Start_12) (- Start_15 Start_6) (+ Start Start_3) (div Start_10 Start_14) (mod Start_10 Start_14)))
   (Start_13 Int (y 4 (- Start_4) (* Start Start_8) (div Start_14 Start_10) (ite StartBool_2 Start_13 Start)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_3 StartBool) (<= Start_1 Start_13) (> Start_7 Start_16)))
   (Start_8 Int (5 1 3 4 (- Start_1) (div Start_8 Start) (mod Start_9 Start_3) (abs Start)))
   (StartBool_3 Bool (true false (and StartBool_4 StartBool_2) (or StartBool_5 StartBool_6) (= Start_4 Start_9)))
   (Start_21 Int (0 5 (- Start) (+ Start_18 Start_9) (* Start_20 Start_5) (mod Start_16 Start_6)))
   (Start_7 Int (4 5 1 x y 2 3 (- Start_4) (- Start Start_10) (+ Start_4 Start_1) (* Start_1 Start_2) (abs Start_1) (ite StartBool_2 Start Start_11)))
   (StartBool_6 Bool (true false (and StartBool StartBool_6) (or StartBool_5 StartBool_3) (< Start_17 Start_12) (<= Start_10 Start_19) (> Start_4 Start_2)))
   (Start_19 Int (y x 3 4 5 (+ Start_18 Start_16) (abs Start_2)))
   (Start_10 Int (x 0 (- Start_9) (* Start_15 Start_13) (mod Start_8 Start_13) (abs Start_5)))
   (Start_6 Int (y (- Start_18 Start_19) (+ Start_3 Start_6) (div Start_15 Start_17)))
   (Start_5 Int (4 1 x 3 0 (- Start_8) (- Start_15 Start_11) (+ Start_20 Start_17) (div Start_1 Start_6) (mod Start Start_14) (ite StartBool_4 Start_15 Start_10)))
   (Start_20 Int (y (+ Start_21 Start_11) (* Start_3 Start_3) (ite StartBool_2 Start_17 Start_1)))
   (Start_4 Int (x 1 4 (+ Start Start_20) (div Start_13 Start_11) (mod Start_10 Start_14) (abs Start)))
   (Start_2 Int (x y (* Start_19 Start_22)))
   (StartBool_2 Bool (false (or StartBool_3 StartBool_1) (< Start_7 Start_13) (<= Start_18 Start) (>= Start_14 Start_5)))
   (Start_22 Int (2 (mod Start_14 Start_19) (abs Start_19)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- 3) x)))

(check-synth)
