(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (StartBool_7 Bool) (Start_26 Int) (Start_25 Int) (Start_2 Int) (Start_13 Int) (Start_9 Int) (Start_14 Int) (Start_4 Int) (Start_12 Int) (StartBool_1 Bool) (StartBool_5 Bool) (Start_11 Int) (Start_1 Int) (Start_6 Int) (Start_5 Int) (Start_19 Int) (Start_8 Int) (Start_10 Int) (Start_24 Int) (Start_18 Int) (StartBool_6 Bool) (StartBool_3 Bool) (Start_15 Int) (StartBool_4 Bool) (Start_20 Int) (StartBool_2 Bool) (Start_17 Int) (Start_16 Int) (Start_3 Int) (Start_21 Int) (Start_7 Int) (Start_22 Int) (Start_23 Int))
  ((Start Int (4 (- Start_1 Start_1) (mod Start_1 Start)))
   (StartBool Bool (false true (<= Start_26 Start_10) (>= Start_1 Start_18)))
   (StartBool_8 Bool (true false (not StartBool_2) (and StartBool_4 StartBool_5) (<= Start_2 Start_26)))
   (StartBool_7 Bool (true false (not StartBool_8) (and StartBool_6 StartBool_4) (or StartBool_4 StartBool_8) (< Start_24 Start_3) (<= Start_8 Start_23) (= Start_4 Start_8) (>= Start_10 Start_3)))
   (Start_26 Int (x 4 (- Start_8) (+ Start_11 Start_15) (mod Start_17 Start_1) (abs Start_11) (ite StartBool_7 Start_15 Start_15)))
   (Start_25 Int (4 (- Start_10) (- Start_21 Start_13) (+ Start_2 Start_12) (* Start_3 Start_2) (abs Start_2)))
   (Start_2 Int (5 (- Start_3) (- Start_2 Start_7) (abs Start_7) (ite StartBool_5 Start_5 Start_11)))
   (Start_13 Int (2 (- Start_9) (+ Start_13 Start_16) (* Start_2 Start_2) (div Start_24 Start_25)))
   (Start_9 Int (x y (* Start_5 Start_10)))
   (Start_14 Int (1 y 4 (- Start_7) (- Start_11 Start_3) (+ Start_1 Start_1) (div Start_11 Start_8) (abs Start_15) (ite StartBool Start_3 Start_3)))
   (Start_4 Int (2 3 (- Start_8 Start_9) (div Start_12 Start_7) (mod Start_11 Start_5) (ite StartBool Start_12 Start_12)))
   (Start_12 Int (y 0 3 (- Start_3) (- Start_7 Start_6) (+ Start_8 Start) (* Start_10 Start_8) (mod Start_8 Start_10)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool_2) (or StartBool_3 StartBool)))
   (StartBool_5 Bool (false (<= Start_14 Start_2) (>= Start_6 Start_11)))
   (Start_11 Int (y x 0 3 4 5 (- Start_8 Start_7) (+ Start_11 Start_6) (div Start_1 Start_7) (abs Start_7) (ite StartBool Start_1 Start_8)))
   (Start_1 Int (y (- Start) (+ Start_2 Start_3) (mod Start_2 Start_4) (abs Start_5)))
   (Start_6 Int (y 3 (- Start_6 Start_7) (+ Start_7 Start_10) (* Start_6 Start_7) (mod Start_6 Start_11)))
   (Start_5 Int (4 (- Start Start_6) (* Start_1 Start_7) (div Start_5 Start_7) (mod Start_5 Start_7)))
   (Start_19 Int (1 (- Start) (- Start_11 Start_4) (+ Start_20 Start_10) (mod Start_5 Start_10)))
   (Start_8 Int (0 1 x (- Start_2) (+ Start_1 Start_2) (* Start Start_7) (mod Start_9 Start_7) (abs Start_8) (ite StartBool Start_9 Start_7)))
   (Start_10 Int (4 3 2 (- Start_3 Start_2) (div Start Start) (ite StartBool Start_8 Start_9)))
   (Start_24 Int (0 y (- Start_13) (abs Start_11) (ite StartBool_4 Start_4 Start)))
   (Start_18 Int (0 (* Start_24 Start_20) (div Start_8 Start_20) (mod Start_10 Start_8)))
   (StartBool_6 Bool (true false (and StartBool_2 StartBool_3) (<= Start_24 Start_18) (>= Start_6 Start_9) (> Start_9 Start_17)))
   (StartBool_3 Bool (true false (and StartBool_4 StartBool_5) (< Start_4 Start_11) (>= Start_1 Start_8)))
   (Start_15 Int (4 (- Start_11 Start_7) (mod Start_2 Start_15) (abs Start_7)))
   (StartBool_4 Bool (false (not StartBool_1) (and StartBool_4 StartBool_4) (or StartBool_1 StartBool_1)))
   (Start_20 Int (4 (- Start_10) (+ Start_3 Start_15) (div Start_15 Start_20) (mod Start_21 Start_18) (abs Start_13) (ite StartBool Start_5 Start_14)))
   (StartBool_2 Bool (false (not StartBool_6) (and StartBool_5 StartBool_6) (< Start_6 Start_16) (> Start_17 Start_13)))
   (Start_17 Int (2 x 5 (- Start_7 Start_2) (+ Start_2 Start) (mod Start_5 Start_14)))
   (Start_16 Int (2 (- Start_17) (- Start_4 Start_12) (+ Start Start_8) (* Start_18 Start_19) (mod Start_17 Start_9)))
   (Start_3 Int (1 x (- Start_8) (+ Start_6 Start_13) (div Start_12 Start_9) (ite StartBool_1 Start_1 Start)))
   (Start_21 Int (y 4 (- Start Start_14) (div Start_22 Start) (mod Start_9 Start_3) (ite StartBool_5 Start_17 Start_8)))
   (Start_7 Int (4 y x (+ Start_2 Start_8) (ite StartBool Start_3 Start_3)))
   (Start_22 Int (5 (- Start_9) (- Start_8 Start_20) (+ Start_23 Start_6) (div Start_9 Start_1)))
   (Start_23 Int (0 y (- Start_3) (- Start_10 Start_22) (* Start_16 Start_14) (abs Start_8) (ite StartBool_3 Start_17 Start_14)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (abs (mod 1 x)))))

(check-synth)
