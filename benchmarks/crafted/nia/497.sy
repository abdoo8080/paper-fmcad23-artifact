(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_13 Int) (Start_16 Int) (Start_7 Int) (Start_3 Int) (Start_2 Int) (Start_15 Int) (Start_4 Int) (Start_5 Int) (Start_10 Int) (Start_12 Int) (Start_1 Int) (Start_8 Int) (Start_6 Int) (Start_9 Int) (StartBool_1 Bool) (Start_11 Int))
  ((Start Int (2 4 x (+ Start_1 Start) (* Start_1 Start) (div Start_2 Start) (mod Start_3 Start_1) (abs Start_3)))
   (StartBool Bool (false (not StartBool) (<= Start_4 Start_8)))
   (Start_14 Int (y 0 1 (- Start_8 Start_14) (* Start_7 Start_7) (div Start_15 Start_14) (abs Start_5)))
   (Start_13 Int (y (- Start_1) (+ Start_14 Start_3) (* Start Start_14) (mod Start_6 Start_7)))
   (Start_16 Int (x (- Start_15) (- Start Start_3) (* Start_2 Start_6) (div Start_4 Start_3) (mod Start_5 Start_7)))
   (Start_7 Int (y 3 (- Start_3 Start_5) (+ Start_4 Start_8) (mod Start_1 Start_1) (abs Start) (ite StartBool_1 Start_2 Start_7)))
   (Start_3 Int (3 (- Start_1 Start_1) (* Start Start_1) (div Start_1 Start_3)))
   (Start_2 Int (y x (- Start_3 Start) (* Start_2 Start_4) (mod Start Start) (abs Start_1)))
   (Start_15 Int (x 1 (- Start_1) (+ Start_13 Start_16) (* Start_16 Start_10) (abs Start_4)))
   (Start_4 Int (3 2 (abs Start_4) (ite StartBool Start Start_4)))
   (Start_5 Int (1 x 3 0 (- Start_7) (- Start_6 Start_1) (+ Start_6 Start_9) (div Start_4 Start_7) (mod Start_10 Start_8) (abs Start_8) (ite StartBool Start_6 Start_7)))
   (Start_10 Int (1 2 (- Start_11) (- Start_2 Start_4) (* Start_12 Start_4) (div Start_10 Start_8) (ite StartBool_1 Start_11 Start_8)))
   (Start_12 Int (5 (mod Start_11 Start_6) (ite StartBool Start_10 Start_10)))
   (Start_1 Int (5 x 1 3 2 (- Start_3 Start_1) (* Start_4 Start) (div Start_3 Start_5) (mod Start_1 Start_6) (ite StartBool_1 Start_1 Start_1)))
   (Start_8 Int (4 (- Start_1 Start_5) (abs Start)))
   (Start_6 Int (4 y (- Start_7) (* Start_7 Start_3) (abs Start_1)))
   (Start_9 Int (1 y 5 (- Start_2) (* Start_2 Start_2) (div Start_9 Start_11) (abs Start_9) (ite StartBool Start_11 Start_13)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool StartBool_1) (< Start_6 Start_7) (> Start_1 Start_1)))
   (Start_11 Int (3 (- Start_12) (mod Start_5 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- 5) 0)))

(check-synth)
