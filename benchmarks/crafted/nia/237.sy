(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_5 Int) (Start_16 Int) (Start_15 Int) (Start_1 Int) (Start_14 Int) (Start_6 Int) (Start_13 Int) (StartBool_1 Bool) (Start_3 Int) (Start_10 Int) (Start_7 Int) (Start_4 Int) (Start_11 Int) (Start_12 Int) (Start_17 Int) (StartBool_3 Bool) (Start_9 Int) (StartBool_5 Bool) (StartBool_2 Bool) (StartBool_4 Bool) (Start_8 Int))
  ((Start Int (2 (- Start_1) (- Start Start_2) (+ Start Start_3) (* Start_3 Start) (div Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_1) (< Start_7 Start_17) (<= Start_2 Start_15) (= Start_1 Start_13) (>= Start_11 Start_8) (> Start_16 Start_16)))
   (Start_2 Int (2 (- Start_5) (- Start_11 Start_14) (mod Start Start_11)))
   (Start_5 Int (0 5 (- Start_5 Start_6) (+ Start_13 Start_12) (mod Start_2 Start_4) (abs Start_12)))
   (Start_16 Int (4 5 (- Start_14 Start_4) (abs Start_6)))
   (Start_15 Int (y (- Start_8) (+ Start_7 Start_7) (* Start_16 Start_2) (div Start_9 Start_12)))
   (Start_1 Int (0 (- Start_2) (* Start_14 Start_9) (mod Start_8 Start_12) (abs Start_3)))
   (Start_14 Int (x 1 (- Start_8) (- Start_4 Start_13) (* Start_5 Start_3) (ite StartBool Start_3 Start_15)))
   (Start_6 Int (4 (- Start_7) (- Start_10 Start_9) (+ Start_12 Start_1) (abs Start_12) (ite StartBool Start_14 Start_6)))
   (Start_13 Int (3 (- Start_13 Start_9) (+ Start_11 Start_1) (ite StartBool Start_11 Start_2)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool StartBool_2) (or StartBool StartBool_3) (= Start_4 Start_2) (>= Start_5 Start_9)))
   (Start_3 Int (4 (* Start_4 Start) (div Start_5 Start_3) (mod Start_1 Start) (abs Start_5) (ite StartBool Start_6 Start_7)))
   (Start_10 Int (0 (- Start_8) (- Start_7 Start_3) (* Start_11 Start) (mod Start_3 Start_4) (ite StartBool_1 Start_4 Start_1)))
   (Start_7 Int (0 (- Start_8) (- Start_8 Start_2) (* Start_2 Start_6) (mod Start_9 Start_1) (ite StartBool Start_4 Start_8)))
   (Start_4 Int (1 x (div Start_7 Start_15) (mod Start_5 Start_8)))
   (Start_11 Int (1 3 (- Start_8) (- Start_11 Start_1) (+ Start_1 Start_7) (* Start_2 Start_8) (mod Start_4 Start) (ite StartBool Start_3 Start_10)))
   (Start_12 Int (3 1 0 (+ Start_13 Start_2) (* Start_11 Start_8) (div Start_10 Start_13) (mod Start_12 Start_2)))
   (Start_17 Int (5 1 y x (- Start_14) (div Start_1 Start_5) (mod Start Start_12) (ite StartBool Start_7 Start_4)))
   (StartBool_3 Bool (true false (not StartBool_2) (or StartBool_2 StartBool_4) (< Start Start_4) (= Start_3 Start_8)))
   (Start_9 Int (3 (- Start_1) (ite StartBool_1 Start_7 Start_10)))
   (StartBool_5 Bool (true (not StartBool_5) (and StartBool_3 StartBool_3) (<= Start_6 Start_11) (>= Start_8 Start_5) (> Start_9 Start_4)))
   (StartBool_2 Bool (true (and StartBool_5 StartBool_2) (or StartBool_4 StartBool_5) (< Start_9 Start_1) (<= Start_7 Start_9) (>= Start_10 Start_1) (> Start_1 Start_11)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool) (or StartBool_1 StartBool_1) (< Start_9 Start_8) (= Start_4 Start_2)))
   (Start_8 Int (5 4 1 (- Start_6 Start_7) (* Start_11 Start_4) (div Start_2 Start_12) (mod Start_12 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 3 x)))

(check-synth)
