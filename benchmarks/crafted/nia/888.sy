(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_4 Int) (Start_1 Int) (Start_3 Int) (Start_2 Int))
  ((Start Int (5 1 3 (- Start_1 Start_1) (+ Start_2 Start_1)))
   (StartBool Bool (true))
   (Start_4 Int (0 (- Start_3 Start_2) (+ Start_4 Start_3) (mod Start_4 Start_3)))
   (Start_1 Int (2 (- Start_2) (+ Start_3 Start_2) (* Start_3 Start_3) (div Start_2 Start_4) (abs Start_3)))
   (Start_3 Int (5 (- Start_2) (- Start_1 Start_3) (* Start_1 Start) (abs Start_3)))
   (Start_2 Int (x y (- Start_1) (+ Start_1 Start_1) (div Start_1 Start_3) (mod Start Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (abs (abs (abs (mod 5 y)))))))

(check-synth)
