(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (StartBool_1 Bool) (Start_2 Int) (Start_1 Int) (Start_12 Int) (Start_3 Int) (Start_5 Int) (Start_6 Int) (Start_10 Int) (Start_7 Int) (Start_9 Int) (Start_4 Int) (StartBool_2 Bool) (Start_8 Int) (StartBool_3 Bool) (StartBool_4 Bool))
  ((Start Int (3 (- Start) (- Start Start_1) (+ Start Start) (* Start Start_1) (abs Start_1)))
   (StartBool Bool (false true (not StartBool_4) (< Start_5 Start_8) (>= Start_1 Start_3) (> Start_6 Start_1)))
   (Start_11 Int (x 1 (- Start_7) (- Start_3 Start_5) (div Start_3 Start_5)))
   (StartBool_1 Bool (true false (not StartBool_1) (or StartBool_4 StartBool) (>= Start Start_3) (> Start_8 Start_11)))
   (Start_2 Int (4 2 3 1 5 y 0 x (- Start Start_4) (+ Start_9 Start) (div Start_9 Start_12) (ite StartBool_2 Start_6 Start_2)))
   (Start_1 Int (0 3 2 (- Start) (+ Start_1 Start_1) (div Start Start_2) (ite StartBool_1 Start_3 Start_1)))
   (Start_12 Int (5 0 2 (- Start_12 Start_9) (+ Start_9 Start_8) (mod Start Start_12)))
   (Start_3 Int (x 0 1 4 (- Start_3) (+ Start Start_2) (div Start Start_3) (mod Start_2 Start_4) (ite StartBool_2 Start_5 Start_3)))
   (Start_5 Int (x 3 (+ Start Start_6) (* Start_4 Start_1) (div Start_4 Start_6) (abs Start_6) (ite StartBool Start_4 Start_1)))
   (Start_6 Int (4 5 3 1 0 x (- Start_4) (+ Start_6 Start_7) (mod Start_4 Start_6) (abs Start_3)))
   (Start_10 Int (5 (- Start_2) (- Start_6 Start_8) (div Start_7 Start) (mod Start_1 Start_7)))
   (Start_7 Int (0 (- Start_4 Start_3) (+ Start_5 Start_4)))
   (Start_9 Int (2 5 1 (- Start_5) (div Start_9 Start_8) (abs Start_1) (ite StartBool_1 Start_6 Start_3)))
   (Start_4 Int (5 x (- Start_1 Start_5) (* Start_3 Start_2) (mod Start_9 Start_4) (abs Start_6)))
   (StartBool_2 Bool (false true (and StartBool StartBool_3) (or StartBool_3 StartBool_3) (<= Start_8 Start) (= Start_8 Start_7) (>= Start_6 Start_1) (> Start Start_6)))
   (Start_8 Int (5 (- Start_2) (- Start_6 Start_3) (ite StartBool Start_6 Start_8)))
   (StartBool_3 Bool (true (and StartBool_1 StartBool_4) (< Start_3 Start_9) (<= Start_2 Start_7) (= Start_5 Start_7) (> Start_10 Start_7)))
   (StartBool_4 Bool (false (and StartBool_4 StartBool_2) (< Start_2 Start_1) (<= Start_8 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* x 4)))

(check-synth)
