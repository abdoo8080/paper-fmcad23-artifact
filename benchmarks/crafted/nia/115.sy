(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_14 Int) (Start_13 Int) (Start_12 Int) (StartBool_5 Bool) (Start_9 Int) (Start_5 Int) (StartBool_3 Bool) (Start_6 Int) (StartBool_2 Bool) (Start_2 Int) (Start_11 Int) (Start_4 Int) (Start_3 Int) (StartBool_4 Bool) (StartBool_1 Bool) (Start_16 Int) (Start_7 Int) (Start_1 Int) (Start_10 Int) (Start_8 Int))
  ((Start Int (3 (* Start Start) (mod Start Start) (abs Start) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (false true (not StartBool_3) (and StartBool_2 StartBool_4) (< Start_5 Start_1) (<= Start Start) (= Start_2 Start_3) (>= Start_6 Start_8) (> Start_2 Start_5)))
   (Start_15 Int (5 (- Start_16) (div Start_9 Start_9) (mod Start_7 Start_11) (abs Start_13)))
   (Start_14 Int (3 0 x (- Start_2) (- Start_4 Start_5) (+ Start_15 Start_15) (* Start_4 Start_3) (abs Start_15)))
   (Start_13 Int (3 0 (- Start_10 Start_9) (div Start_7 Start_11) (mod Start_7 Start_3) (abs Start_14)))
   (Start_12 Int (5 4 (* Start_10 Start_11) (div Start_2 Start_13) (abs Start_4)))
   (StartBool_5 Bool (true (not StartBool_4) (< Start_3 Start_12) (= Start_3 Start_7)))
   (Start_9 Int (1 4 (- Start_5 Start_3) (div Start Start_8) (ite StartBool_2 Start Start_7)))
   (Start_5 Int (y 2 (- Start_1) (+ Start Start_3) (div Start_1 Start_2) (mod Start Start_3) (abs Start_2) (ite StartBool_2 Start_5 Start_4)))
   (StartBool_3 Bool (false (and StartBool_3 StartBool_1) (< Start_11 Start_10) (= Start_10 Start_1) (>= Start_4 Start_7)))
   (Start_6 Int (5 4 (- Start_4) (- Start_4 Start_4) (* Start_3 Start_2) (div Start_4 Start_6) (ite StartBool Start_1 Start_2)))
   (StartBool_2 Bool (false (< Start_6 Start_6) (= Start_1 Start_3)))
   (Start_2 Int (1 (- Start_6) (* Start_4 Start_1) (ite StartBool_1 Start_6 Start_2)))
   (Start_11 Int (5 4 1 (- Start_9) (* Start_10 Start_9) (div Start_3 Start_6) (mod Start_9 Start_11) (ite StartBool_5 Start_11 Start_9)))
   (Start_4 Int (5 2 4 (- Start_7) (* Start Start_7)))
   (Start_3 Int (0 y (- Start_5) (+ Start Start_2) (div Start_3 Start_5) (abs Start_4) (ite StartBool_1 Start_1 Start_7)))
   (StartBool_4 Bool (false (not StartBool_4) (and StartBool_3 StartBool_2) (<= Start_5 Start_3) (= Start_10 Start_2)))
   (StartBool_1 Bool (true false (= Start Start) (>= Start_7 Start_4) (> Start_3 Start_4)))
   (Start_16 Int (3 (+ Start Start_9) (ite StartBool_5 Start_15 Start_11)))
   (Start_7 Int (y 5 (abs Start_6)))
   (Start_1 Int (2 (- Start_2) (+ Start_3 Start_2) (* Start_1 Start) (mod Start_4 Start_5) (abs Start_3) (ite StartBool Start_4 Start_2)))
   (Start_10 Int (5 4 (- Start_7 Start_4) (+ Start_5 Start_7) (div Start_6 Start_9) (mod Start_3 Start_3) (abs Start)))
   (Start_8 Int (1 (+ Start_3 Start_5) (div Start_6 Start_1) (mod Start_4 Start_8) (abs Start_9) (ite StartBool_4 Start_10 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 3 (div 3 x))))

(check-synth)
