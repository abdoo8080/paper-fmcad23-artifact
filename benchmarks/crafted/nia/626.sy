(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (StartBool_1 Bool) (Start_3 Int) (Start_2 Int) (Start_1 Int) (Start_6 Int) (StartBool_2 Bool) (Start_9 Int) (Start_4 Int) (Start_5 Int) (Start_8 Int) (Start_7 Int) (Start_11 Int) (Start_10 Int))
  ((Start Int (2 (* Start Start) (mod Start Start) (ite StartBool Start Start)))
   (StartBool Bool (false true (and StartBool StartBool) (or StartBool StartBool_1) (< Start_1 Start)))
   (Start_12 Int (4 (- Start_11) (- Start_8 Start) (+ Start_10 Start_8) (div Start_6 Start_6) (mod Start_11 Start) (abs Start_8) (ite StartBool_2 Start_8 Start_4)))
   (StartBool_1 Bool (true false (or StartBool_2 StartBool_2) (< Start_5 Start_12) (<= Start_2 Start) (>= Start_3 Start_6)))
   (Start_3 Int (2 (- Start_5 Start_2) (+ Start_9 Start_6) (abs Start_3)))
   (Start_2 Int (y 2 (- Start_3 Start_2) (+ Start Start_1) (div Start_1 Start_4) (ite StartBool Start_1 Start_3)))
   (Start_1 Int (y (- Start_2) (div Start Start)))
   (Start_6 Int (x 4 (+ Start_5 Start) (div Start_4 Start_2) (mod Start Start_1)))
   (StartBool_2 Bool (true (not StartBool) (and StartBool_2 StartBool_2) (<= Start Start_9) (= Start_1 Start_5)))
   (Start_9 Int (2 1 5 (- Start_6) (+ Start_9 Start_3) (* Start_1 Start_8) (mod Start_1 Start_6)))
   (Start_4 Int (0 (- Start_4) (- Start_2 Start_1) (+ Start_5 Start_1) (mod Start_2 Start_5) (abs Start_6) (ite StartBool_1 Start_2 Start_2)))
   (Start_5 Int (0 1 (- Start_6 Start_7) (+ Start_7 Start_5) (* Start_6 Start_3) (div Start_4 Start_8) (abs Start) (ite StartBool_1 Start_4 Start_9)))
   (Start_8 Int (4 (- Start_6 Start_6) (* Start_6 Start_8)))
   (Start_7 Int (5 (- Start_1) (+ Start_10 Start_6) (div Start_8 Start_11) (ite StartBool_2 Start_8 Start_11)))
   (Start_11 Int (5 (- Start) (- Start_6 Start_10) (+ Start_4 Start_2) (div Start_2 Start_6)))
   (Start_10 Int (4 (- Start_6 Start_1) (div Start_9 Start) (ite StartBool Start_1 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod 0 y))))

(check-synth)
