(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_19 Int) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_6 Bool) (Start_17 Int) (Start_15 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_14 Int) (Start_4 Int) (StartBool_2 Bool) (Start_2 Int) (Start_5 Int) (Start_9 Int) (Start_3 Int) (Start_18 Int) (Start_13 Int) (Start_10 Int) (Start_8 Int) (Start_6 Int) (StartBool_3 Bool) (Start_11 Int) (Start_12 Int) (Start_16 Int) (Start_7 Int) (StartBool_5 Bool))
  ((Start Int (4 1 (- Start Start) (abs Start_1) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (false true (not StartBool_3) (or StartBool_6 StartBool) (< Start_14 Start_7) (= Start_2 Start_1) (>= Start_18 Start_5) (> Start_5 Start_7)))
   (Start_1 Int (2 (- Start_3) (- Start_12 Start_7) (* Start_18 Start_14) (abs Start_9)))
   (Start_19 Int (3 (div Start_13 Start_11) (abs Start_9) (ite StartBool_4 Start_13 Start_19)))
   (StartBool_8 Bool (false (< Start_9 Start_6) (<= Start_18 Start_17) (= Start_5 Start_8) (> Start_19 Start_4)))
   (StartBool_7 Bool (false true (not StartBool_1) (and StartBool_6 StartBool_4) (or StartBool_8 StartBool_8) (< Start_17 Start_8) (<= Start_8 Start_11) (= Start_13 Start_6) (>= Start_10 Start_1) (> Start_17 Start_18)))
   (StartBool_6 Bool (false (or StartBool_1 StartBool) (< Start_2 Start_7) (= Start_16 Start_18) (>= Start_13 Start_12)))
   (Start_17 Int (5 (- Start_8 Start_12) (+ Start_1 Start_3) (div Start_15 Start_16) (mod Start_7 Start_4)))
   (Start_15 Int (3 (- Start_12) (+ Start_16 Start_17) (div Start_3 Start_14) (abs Start_15)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool_6) (< Start_1 Start_12) (= Start_2 Start_15)))
   (StartBool_4 Bool (false (< Start_10 Start_2) (>= Start_10 Start_12) (> Start_1 Start_4)))
   (Start_14 Int (5 y 2 (- Start_4) (+ Start_9 Start_10) (* Start_14 Start_10) (div Start_7 Start_8) (mod Start_3 Start_11) (abs Start_9) (ite StartBool_1 Start_12 Start_3)))
   (Start_4 Int (3 x y (- Start_5 Start_4)))
   (StartBool_2 Bool (false true (and StartBool_3 StartBool_3) (or StartBool StartBool_2) (< Start_4 Start) (<= Start_8 Start_8) (>= Start_4 Start_4)))
   (Start_2 Int (0 4 (* Start_3 Start_4) (abs Start_5)))
   (Start_5 Int (y (- Start_5) (- Start_5 Start) (* Start_2 Start_1) (div Start_5 Start_2)))
   (Start_9 Int (2 (- Start_1) (* Start_4 Start_12) (mod Start_3 Start_11) (abs Start_11)))
   (Start_3 Int (y 3 (- Start_4 Start) (* Start_3 Start_6) (div Start_7 Start) (mod Start_7 Start_1) (ite StartBool_2 Start_3 Start_3)))
   (Start_18 Int (4 (abs Start_5) (ite StartBool_7 Start_9 Start_16)))
   (Start_13 Int (1 4 (- Start_9) (- Start_4 Start_3) (+ Start_2 Start_8) (mod Start_10 Start_11) (ite StartBool_4 Start_14 Start_2)))
   (Start_10 Int (4 y 1 (div Start Start_10) (ite StartBool_1 Start_2 Start_11)))
   (Start_8 Int (0 (+ Start_3 Start_8) (* Start Start_4) (div Start_1 Start_1) (mod Start_2 Start_5) (abs Start_3)))
   (Start_6 Int (x 1 (+ Start_9 Start_4) (abs Start_1)))
   (StartBool_3 Bool (true (not StartBool) (or StartBool_4 StartBool_3) (<= Start_3 Start_1) (= Start_9 Start) (>= Start_10 Start_5) (> Start_10 Start_9)))
   (Start_11 Int (0 (- Start_11 Start_9) (* Start_3 Start_11) (div Start_5 Start_9) (ite StartBool_4 Start_10 Start_8)))
   (Start_12 Int (0 (- Start_1 Start_4) (+ Start_12 Start_5) (* Start_13 Start_8) (abs Start_7) (ite StartBool_5 Start_10 Start_4)))
   (Start_16 Int (2 (- Start_17 Start_1) (+ Start_15 Start_4) (* Start_5 Start_16) (abs Start_17)))
   (Start_7 Int (4 y x (- Start_11) (* Start_6 Start_1) (div Start_2 Start_14) (mod Start_10 Start)))
   (StartBool_5 Bool (true false (not StartBool_2) (and StartBool_3 StartBool_5) (or StartBool_3 StartBool_4) (<= Start_9 Start_2) (= Start_4 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 5 (* 2 y))))

(check-synth)
