(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_8 Int) (Start_3 Int) (Start_2 Int) (StartBool_2 Bool) (Start_5 Int) (StartBool_3 Bool) (StartBool_1 Bool) (Start_6 Int) (Start_4 Int) (Start_1 Int) (Start_7 Int) (StartBool_4 Bool) (StartBool_5 Bool))
  ((Start Int (x (+ Start_1 Start_1) (div Start Start_2) (mod Start Start_3)))
   (StartBool Bool (true (not StartBool_4) (and StartBool_4 StartBool_3) (or StartBool_3 StartBool_3) (< Start_4 Start_6) (<= Start Start_7) (>= Start_3 Start_8) (> Start_8 Start_2)))
   (Start_8 Int (0 y 3 (- Start_4) (* Start_8 Start_8) (div Start Start_8) (abs Start_7)))
   (Start_3 Int (4 2 (- Start_3) (- Start Start_1) (* Start_3 Start_2) (abs Start_3)))
   (Start_2 Int (4 0 3 2 y (- Start_4 Start_1) (* Start_3 Start) (mod Start_1 Start_3) (abs Start_3) (ite StartBool_1 Start_5 Start_1)))
   (StartBool_2 Bool (false true (not StartBool_1) (<= Start Start) (>= Start_6 Start_6)))
   (Start_5 Int (1 (- Start_2) (- Start_1 Start_4) (abs Start_4)))
   (StartBool_3 Bool (true false (not StartBool) (and StartBool_1 StartBool_1) (or StartBool_1 StartBool_4) (<= Start_2 Start_1) (= Start_4 Start_4) (>= Start_5 Start_7)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool) (< Start_1 Start_1) (>= Start_2 Start_1) (> Start_3 Start_6)))
   (Start_6 Int (4 (+ Start_2 Start_2) (* Start_1 Start_2) (div Start_1 Start_1) (abs Start_4)))
   (Start_4 Int (0 (mod Start_1 Start_2) (abs Start)))
   (Start_1 Int (x (- Start_7) (- Start_7 Start_1) (+ Start_1 Start_3) (* Start_6 Start_2) (div Start_4 Start_4) (abs Start_7) (ite StartBool_2 Start_4 Start_7)))
   (Start_7 Int (3 0 (- Start_3 Start) (* Start_8 Start_7) (mod Start_5 Start_8) (ite StartBool_3 Start_1 Start_1)))
   (StartBool_4 Bool (false (not StartBool) (or StartBool_4 StartBool_5) (< Start_7 Start_7) (= Start_4 Start_6) (> Start_5 Start_6)))
   (StartBool_5 Bool (true (and StartBool_5 StartBool_2) (or StartBool_2 StartBool_3) (< Start_4 Start_8) (>= Start_1 Start_7) (> Start_8 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- x 4) x)))

(check-synth)
