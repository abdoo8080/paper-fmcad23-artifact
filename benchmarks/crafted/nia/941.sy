(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_1 Int) (Start_10 Int) (StartBool_2 Bool) (Start_9 Int) (Start_3 Int) (StartBool_1 Bool) (Start_4 Int) (Start_6 Int) (StartBool_3 Bool) (Start_7 Int) (Start_8 Int) (StartBool_4 Bool) (Start_5 Int) (Start_2 Int))
  ((Start Int (4 (- Start_1) (+ Start_1 Start_1) (mod Start_2 Start_3) (abs Start_3)))
   (StartBool Bool (false (not StartBool_4) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_2) (< Start_1 Start_1) (= Start_10 Start_11)))
   (Start_11 Int (4 (- Start_3) (+ Start_1 Start_9) (* Start_5 Start) (mod Start_1 Start_5)))
   (Start_1 Int (4 2 (- Start_3) (- Start_2 Start_9) (+ Start_10 Start) (div Start Start_2) (abs Start_4) (ite StartBool_4 Start_8 Start_9)))
   (Start_10 Int (0 (- Start_1) (- Start_5 Start_8) (* Start_2 Start_3) (div Start_2 Start_8) (ite StartBool_3 Start Start)))
   (StartBool_2 Bool (true (or StartBool_3 StartBool_1) (<= Start_4 Start_4) (= Start_6 Start_6) (>= Start Start_5) (> Start_3 Start_3)))
   (Start_9 Int (3 5 (- Start_8) (+ Start_6 Start_1) (* Start_2 Start_9) (mod Start_2 Start_9) (ite StartBool_2 Start_9 Start_1)))
   (Start_3 Int (4 (* Start_2 Start_1) (ite StartBool_1 Start_2 Start_1)))
   (StartBool_1 Bool (true false (not StartBool_1) (< Start_3 Start_3) (<= Start_1 Start_4) (>= Start_3 Start_1) (> Start_1 Start_4)))
   (Start_4 Int (1 (- Start) (- Start_3 Start_5) (+ Start_4 Start_4) (div Start_2 Start_3)))
   (Start_6 Int (x (- Start) (+ Start Start_5) (* Start_6 Start_4) (abs Start)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_4 StartBool_1) (< Start Start_5) (<= Start Start_7) (>= Start_2 Start_8)))
   (Start_7 Int (0 3 (- Start_5 Start_3) (+ Start_1 Start_3) (abs Start_9) (ite StartBool_3 Start_4 Start_5)))
   (Start_8 Int (0 x 3 (- Start_6) (- Start_1 Start_8) (div Start_1 Start_2) (mod Start Start_3)))
   (StartBool_4 Bool (false true (not StartBool_4) (and StartBool_1 StartBool_4) (or StartBool_4 StartBool_1) (>= Start_7 Start_1)))
   (Start_5 Int (5 (- Start Start_4) (+ Start_3 Start_2) (ite StartBool_2 Start_1 Start_4)))
   (Start_2 Int (4 2 (- Start_5) (- Start_4 Start_1) (div Start_8 Start_1) (mod Start Start_10) (ite StartBool_1 Start_5 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (abs (abs (- x))))))

(check-synth)
