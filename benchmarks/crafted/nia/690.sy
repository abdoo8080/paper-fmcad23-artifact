(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_25 Int) (Start_29 Int) (Start_28 Int) (Start_27 Int) (Start_26 Int) (Start_24 Int) (Start_8 Int) (Start_4 Int) (Start_6 Int) (Start_10 Int) (Start_13 Int) (Start_5 Int) (Start_9 Int) (Start_21 Int) (Start_17 Int) (Start_3 Int) (StartBool_1 Bool) (Start_15 Int) (Start_2 Int) (Start_19 Int) (Start_12 Int) (StartBool_4 Bool) (Start_7 Int) (Start_14 Int) (Start_11 Int) (Start_16 Int) (StartBool_2 Bool) (StartBool_3 Bool) (StartBool_5 Bool) (Start_1 Int) (Start_22 Int) (Start_18 Int) (Start_23 Int))
  ((Start Int (4 0 2 x (* Start_1 Start) (mod Start_2 Start_2)))
   (StartBool Bool (true false (not StartBool_1) (and StartBool_1 StartBool) (or StartBool StartBool_1) (>= Start Start_2)))
   (Start_20 Int (4 (- Start_26 Start_29) (+ Start Start) (div Start_8 Start_15)))
   (Start_25 Int (0 (- Start_20) (+ Start_7 Start_17) (div Start_11 Start_28) (mod Start_6 Start_29) (abs Start_15) (ite StartBool Start_25 Start_11)))
   (Start_29 Int (5 0 x (- Start_24) (- Start_27 Start_27) (+ Start_20 Start_1) (mod Start_8 Start_10) (ite StartBool Start_3 Start_15)))
   (Start_28 Int (3 (+ Start_26 Start_27) (* Start_1 Start_8) (abs Start_12)))
   (Start_27 Int (x (- Start) (- Start_19 Start_11) (+ Start_28 Start_13) (div Start_1 Start_3) (mod Start_14 Start_23) (ite StartBool_4 Start_14 Start_5)))
   (Start_26 Int (5 x 1 0 2 (+ Start_6 Start_14) (* Start_27 Start_14)))
   (Start_24 Int (y 2 (- Start_25) (ite StartBool_5 Start_13 Start_26)))
   (Start_8 Int (x (- Start_11) (div Start_7 Start_12) (mod Start_13 Start_3)))
   (Start_4 Int (x 5 3 0 1 (- Start_14 Start_3) (+ Start_4 Start_7) (* Start Start_16) (abs Start_8) (ite StartBool Start_7 Start_7)))
   (Start_6 Int (x (* Start_2 Start_5) (abs Start_8) (ite StartBool_1 Start_9 Start)))
   (Start_10 Int (4 y (- Start_5) (- Start_6 Start_8) (+ Start_9 Start) (mod Start_5 Start_7)))
   (Start_13 Int (4 3 y 0 2 1 5 (- Start_5 Start_9) (+ Start_7 Start_12) (* Start_3 Start_12) (mod Start_3 Start_1) (abs Start_4) (ite StartBool Start_5 Start_4)))
   (Start_5 Int (1 5 (* Start Start_6) (div Start_3 Start_7) (mod Start_6 Start_4) (abs Start_1) (ite StartBool Start_6 Start)))
   (Start_9 Int (4 (* Start_5 Start_1) (div Start_1 Start_10) (mod Start_5 Start_5) (ite StartBool_2 Start_7 Start_8)))
   (Start_21 Int (4 3 (- Start_15 Start_5) (* Start_12 Start_8) (div Start_22 Start_1) (ite StartBool_5 Start_8 Start_11)))
   (Start_17 Int (1 (- Start) (- Start_10 Start_3) (* Start_18 Start_2) (div Start_13 Start_8) (mod Start_19 Start_8) (ite StartBool Start_12 Start_11)))
   (Start_3 Int (4 (- Start) (- Start_1 Start) (* Start_4 Start) (div Start_5 Start_3) (mod Start_3 Start) (abs Start)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_2 StartBool_1) (< Start Start_3) (<= Start_2 Start_2) (>= Start_2 Start_3)))
   (Start_15 Int (2 (- Start_14) (- Start_1 Start_4) (* Start_8 Start_15) (ite StartBool_2 Start_9 Start_13)))
   (Start_2 Int (0 3 (- Start_1) (+ Start_2 Start_1) (mod Start Start_1) (abs Start_1)))
   (Start_19 Int (1 (- Start_13) (* Start_16 Start_1) (abs Start_7)))
   (Start_12 Int (0 y 5 4 3 x 2 (* Start_10 Start_14) (mod Start_8 Start_14) (abs Start_11) (ite StartBool_1 Start_2 Start_10)))
   (StartBool_4 Bool (false (and StartBool_4 StartBool_3) (or StartBool_2 StartBool_2) (= Start_2 Start_17)))
   (Start_7 Int (4 (- Start_3) (- Start_3 Start_4) (+ Start_3 Start_7) (* Start_7 Start_4) (mod Start_7 Start_6) (abs Start_3)))
   (Start_14 Int (2 (- Start_6) (* Start_4 Start_15) (mod Start_11 Start_4) (abs Start_11)))
   (Start_11 Int (2 3 (- Start_13) (- Start_13 Start_14) (mod Start Start_3) (ite StartBool_1 Start_12 Start_7)))
   (Start_16 Int (5 x (abs Start_9) (ite StartBool_1 Start_3 Start_4)))
   (StartBool_2 Bool (true (not StartBool_1) (or StartBool_3 StartBool) (< Start_8 Start_7) (>= Start_15 Start_7)))
   (StartBool_3 Bool (true (or StartBool_4 StartBool_1) (< Start_4 Start_16) (<= Start_13 Start_4) (= Start_8 Start_6) (>= Start_8 Start_9)))
   (StartBool_5 Bool (true (not StartBool_1) (<= Start_22 Start_10) (= Start_13 Start_11) (>= Start_1 Start_4)))
   (Start_1 Int (5 3 2 (- Start_1) (+ Start_2 Start)))
   (Start_22 Int (1 4 (+ Start_12 Start_19) (* Start Start_23) (div Start_13 Start_2) (mod Start_6 Start_6) (ite StartBool Start_9 Start)))
   (Start_18 Int (4 (- Start_13) (- Start_13 Start_12) (+ Start_20 Start_8) (* Start_21 Start_7)))
   (Start_23 Int (x (- Start_3) (+ Start_3 Start_1) (* Start_24 Start_8) (mod Start_15 Start_3) (abs Start_17) (ite StartBool_2 Start_2 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (abs y) 5)))

(check-synth)
