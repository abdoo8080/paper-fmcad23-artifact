(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_16 Int) (Start_2 Int) (StartBool_2 Bool) (Start_10 Int) (Start_5 Int) (StartBool_4 Bool) (StartBool_1 Bool) (Start_13 Int) (Start_19 Int) (StartBool_5 Bool) (StartBool_3 Bool) (StartBool_6 Bool) (Start_4 Int) (Start_8 Int) (Start_3 Int) (Start_11 Int) (Start_17 Int) (Start_9 Int) (StartBool_7 Bool) (Start_14 Int) (Start_15 Int) (StartBool_9 Bool) (Start_12 Int) (Start_18 Int) (Start_7 Int) (StartBool_10 Bool) (StartBool_8 Bool) (Start_20 Int) (Start_6 Int))
  ((Start Int (5 3 0 (- Start_1 Start) (+ Start_2 Start_2) (div Start Start_1) (mod Start Start_2) (ite StartBool_1 Start_1 Start_3)))
   (StartBool Bool (false (not StartBool_4) (and StartBool_1 StartBool_4) (or StartBool_9 StartBool_2) (<= Start_1 Start_2) (= Start_20 Start_6) (>= Start_6 Start_18) (> Start_2 Start_8)))
   (Start_1 Int (4 (+ Start_17 Start_13) (div Start_7 Start_7) (mod Start_6 Start_10) (ite StartBool Start_14 Start_15)))
   (Start_16 Int (5 (- Start_14) (* Start_10 Start_4) (div Start_4 Start_11) (mod Start_4 Start_12)))
   (Start_2 Int (4 x y (- Start_6) (div Start_5 Start_2) (abs Start_5) (ite StartBool_4 Start_7 Start_1)))
   (StartBool_2 Bool (true false (not StartBool_3) (and StartBool_1 StartBool_3) (<= Start_1 Start_4) (>= Start Start_4) (> Start_4 Start_2)))
   (Start_10 Int (4 (- Start_11) (div Start_11 Start_2) (ite StartBool_4 Start_2 Start)))
   (Start_5 Int (x (mod Start_1 Start_1)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_6) (= Start_8 Start_2) (> Start_3 Start_4)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_2) (< Start_3 Start_1) (<= Start_3 Start_1)))
   (Start_13 Int (1 (* Start_9 Start_1) (div Start_14 Start_6) (mod Start_13 Start_2) (abs Start_4)))
   (Start_19 Int (5 4 (- Start_15) (- Start_19 Start_17) (+ Start_13 Start_18) (div Start_18 Start_14) (mod Start_11 Start_11)))
   (StartBool_5 Bool (true (not StartBool_7) (<= Start_12 Start_4) (= Start_8 Start_10) (>= Start Start_9)))
   (StartBool_3 Bool (false (< Start_4 Start_3) (>= Start_2 Start_5)))
   (StartBool_6 Bool (true (or StartBool_5 StartBool_2) (<= Start Start_6) (= Start_9 Start_7) (> Start_10 Start_7)))
   (Start_4 Int (0 5 (- Start_2 Start_4) (* Start_4 Start) (abs Start_1)))
   (Start_8 Int (3 2 y 0 4 (mod Start_8 Start_3) (abs Start_4) (ite StartBool Start_8 Start_2)))
   (Start_3 Int (2 5 y (- Start_3 Start_3) (mod Start_4 Start_3)))
   (Start_11 Int (x 0 1 (- Start_5) (div Start_11 Start_7) (abs Start) (ite StartBool Start_6 Start_6)))
   (Start_17 Int (4 y (- Start_14) (abs Start_7)))
   (Start_9 Int (5 0 (- Start_10 Start_4) (+ Start_8 Start_1) (* Start_8 Start) (div Start_6 Start) (abs Start_12) (ite StartBool_1 Start_2 Start_10)))
   (StartBool_7 Bool (false (not StartBool_1) (and StartBool_4 StartBool_8) (< Start_3 Start_13)))
   (Start_14 Int (1 5 3 (- Start_15) (- Start_3 Start_11) (* Start_16 Start_6)))
   (Start_15 Int (1 2 3 4 (- Start_16) (* Start_13 Start_16) (div Start_3 Start_10) (abs Start) (ite StartBool_9 Start_9 Start_11)))
   (StartBool_9 Bool (true (<= Start_8 Start_12) (>= Start_17 Start_8) (> Start_12 Start_18)))
   (Start_12 Int (x (- Start_10 Start_12) (mod Start_1 Start_10) (abs Start_4) (ite StartBool_6 Start_5 Start_3)))
   (Start_18 Int (2 (* Start_8 Start_18) (mod Start_5 Start_5) (ite StartBool_10 Start_1 Start_12)))
   (Start_7 Int (x 3 (+ Start_7 Start_5) (* Start_8 Start_1) (abs Start_2) (ite StartBool_3 Start_1 Start_8)))
   (StartBool_10 Bool (false true (not StartBool_6) (and StartBool_10 StartBool_1) (or StartBool_9 StartBool_2) (= Start_2 Start_7) (> Start_9 Start_15)))
   (StartBool_8 Bool (true false (not StartBool_6) (or StartBool_9 StartBool) (>= Start_19 Start_6)))
   (Start_20 Int (0 (- Start_13) (- Start_14 Start_15) (div Start_12 Start_2) (ite StartBool_5 Start_17 Start)))
   (Start_6 Int (1 3 (- Start_3) (+ Start_15 Start) (div Start_13 Start_2) (mod Start_17 Start_7) (ite StartBool_3 Start_6 Start_16)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 5 (mod y 0))))

(check-synth)
