(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (StartBool_4 Bool) (Start_12 Int) (Start_10 Int) (Start_17 Int) (StartBool_9 Bool) (StartBool_6 Bool) (Start_3 Int) (StartBool_1 Bool) (Start_13 Int) (Start_1 Int) (StartBool_2 Bool) (StartBool_5 Bool) (Start_11 Int) (StartBool_3 Bool) (Start_8 Int) (Start_6 Int) (Start_16 Int) (Start_4 Int) (Start_7 Int) (Start_2 Int) (Start_18 Int) (Start_5 Int) (StartBool_8 Bool) (Start_9 Int) (StartBool_7 Bool) (Start_15 Int) (StartBool_10 Bool))
  ((Start Int (x 1 (- Start_1) (- Start_1 Start_2) (+ Start Start_2) (div Start Start_2) (mod Start_1 Start_3) (abs Start)))
   (StartBool Bool (false (not StartBool_4) (and StartBool_5 StartBool_7) (or StartBool_4 StartBool_4) (<= Start Start_3) (>= Start_14 Start_15) (> Start_1 Start_5)))
   (Start_14 Int (0 (- Start_13) (- Start_15 Start_3) (mod Start_10 Start) (abs Start_11) (ite StartBool Start_16 Start_5)))
   (StartBool_4 Bool (false (and StartBool_5 StartBool_1) (< Start_9 Start_13) (>= Start_9 Start_13) (> Start_12 Start_14)))
   (Start_12 Int (2 (- Start_12) (- Start_2 Start) (+ Start_10 Start) (* Start_2 Start_3) (div Start_7 Start_6) (mod Start_7 Start_7) (ite StartBool_4 Start_11 Start_10)))
   (Start_10 Int (1 y (- Start_6) (- Start_6 Start_1) (mod Start_8 Start_7) (abs Start_6) (ite StartBool_2 Start_9 Start_2)))
   (Start_17 Int (4 (mod Start_16 Start_6) (ite StartBool_5 Start_10 Start_15)))
   (StartBool_9 Bool (true false (<= Start_10 Start_17) (= Start_3 Start_14)))
   (StartBool_6 Bool (true false (not StartBool_1) (< Start_2 Start_10) (> Start_8 Start)))
   (Start_3 Int (1 y (- Start_1) (* Start_4 Start) (div Start Start_5) (abs Start_3)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool StartBool) (or StartBool_2 StartBool_2) (< Start_1 Start_1) (<= Start_7 Start_8) (> Start_3 Start_2)))
   (Start_13 Int (0 2 1 y (- Start_17 Start_2)))
   (Start_1 Int (1 y (- Start_14 Start_8) (+ Start Start) (mod Start_18 Start_17) (abs Start_3)))
   (StartBool_2 Bool (true false (and StartBool_3 StartBool) (<= Start_11 Start_4) (= Start_3 Start_12) (>= Start_2 Start_6)))
   (StartBool_5 Bool (false (and StartBool_1 StartBool) (or StartBool StartBool_6) (< Start_17 Start_1) (= Start Start_11) (>= Start_5 Start_16) (> Start_2 Start_10)))
   (Start_11 Int (y (abs Start_2)))
   (StartBool_3 Bool (true (not StartBool_2) (and StartBool_1 StartBool_4) (< Start_8 Start) (<= Start_10 Start_6) (>= Start_10 Start) (> Start_7 Start_9)))
   (Start_8 Int (1 (- Start_9 Start) (div Start_7 Start_1) (mod Start_3 Start_1) (abs Start_10)))
   (Start_6 Int (x (- Start_6) (+ Start_16 Start_8) (* Start_17 Start_16) (abs Start_12) (ite StartBool_2 Start_4 Start_15)))
   (Start_16 Int (0 (- Start_4) (- Start_8 Start_5) (+ Start_5 Start_10) (* Start_16 Start_1) (div Start_6 Start_12) (mod Start_13 Start_13)))
   (Start_4 Int (5 4 (- Start_14 Start_15) (div Start_6 Start_1) (abs Start_4)))
   (Start_7 Int (y 5 (+ Start_2 Start_3) (mod Start_2 Start_6) (abs Start_5) (ite StartBool_1 Start_3 Start_1)))
   (Start_2 Int (x 5 (- Start_2 Start_18) (+ Start_18 Start_3) (ite StartBool_3 Start_10 Start_6)))
   (Start_18 Int (y (- Start_8) (ite StartBool_1 Start_17 Start_10)))
   (Start_5 Int (x (* Start_1 Start) (div Start_2 Start_6) (mod Start_7 Start_6)))
   (StartBool_8 Bool (true (not StartBool) (and StartBool_5 StartBool_9) (or StartBool_10 StartBool_7) (<= Start_8 Start_9)))
   (Start_9 Int (0 (- Start) (+ Start_10 Start_5) (div Start_6 Start_4) (mod Start_3 Start_7) (abs Start_10) (ite StartBool Start_2 Start_8)))
   (StartBool_7 Bool (false true (or StartBool_2 StartBool_8) (<= Start_6 Start_10) (= Start_1 Start_9) (> Start_2 Start_10)))
   (Start_15 Int (3 0 (- Start_10) (+ Start_12 Start_9) (div Start_2 Start_4) (ite StartBool_5 Start_8 Start_12)))
   (StartBool_10 Bool (true (not StartBool_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (abs (+ 2 x)) 5)))

(check-synth)
