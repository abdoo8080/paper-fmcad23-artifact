(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (Start_13 Int) (Start_12 Int) (Start_25 Int) (StartBool_4 Bool) (Start_14 Int) (Start_9 Int) (Start_3 Int) (Start_22 Int) (Start_7 Int) (Start_8 Int) (Start_1 Int) (StartBool_3 Bool) (Start_11 Int) (Start_24 Int) (Start_5 Int) (Start_6 Int) (Start_4 Int) (StartBool_1 Bool) (Start_18 Int) (StartBool_5 Bool) (StartBool_6 Bool) (Start_16 Int) (Start_10 Int) (Start_17 Int) (Start_19 Int) (Start_2 Int) (Start_20 Int) (Start_21 Int) (Start_15 Int) (StartBool_2 Bool) (Start_23 Int))
  ((Start Int (x (- Start) (- Start Start) (div Start_1 Start_2) (abs Start) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (false (or StartBool_2 StartBool_7) (<= Start_12 Start_15)))
   (StartBool_7 Bool (false (not StartBool_3) (<= Start_18 Start_13) (>= Start_24 Start_3)))
   (Start_13 Int (5 4 (abs Start_10)))
   (Start_12 Int (2 x (- Start_6) (- Start_13 Start_5) (div Start_12 Start_2) (mod Start_12 Start_4) (abs Start_8) (ite StartBool_1 Start Start_8)))
   (Start_25 Int (5 (- Start_18) (* Start_8 Start_1) (mod Start_8 Start_24)))
   (StartBool_4 Bool (false (and StartBool_1 StartBool_1) (= Start_12 Start_1)))
   (Start_14 Int (x 0 1 3 4 (- Start_4) (+ Start_2 Start_5) (* Start_14 Start_9) (div Start_3 Start_8) (mod Start_7 Start_3) (abs Start_9)))
   (Start_9 Int (x y 1 3 (+ Start_10 Start_2) (div Start_9 Start_10) (mod Start_11 Start_5) (abs Start_11) (ite StartBool_4 Start_10 Start_6)))
   (Start_3 Int (5 (- Start_8) (- Start_2 Start) (* Start_5 Start_2) (div Start_3 Start_1) (ite StartBool_3 Start_4 Start_7)))
   (Start_22 Int (0 (- Start_21 Start_9) (mod Start_19 Start_20) (ite StartBool_5 Start_22 Start_13)))
   (Start_7 Int (3 (- Start_4 Start_7) (mod Start_7 Start_1)))
   (Start_8 Int (4 (- Start_5) (- Start_2 Start_1) (+ Start Start_9) (div Start_9 Start_7) (mod Start Start)))
   (Start_1 Int (1 (* Start_20 Start_19) (div Start_18 Start_1) (ite StartBool_6 Start_3 Start_16)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool_2) (or StartBool_2 StartBool_2)))
   (Start_11 Int (x 0 5 y (- Start_14 Start_13) (+ Start_7 Start_12) (* Start_15 Start_13) (div Start_6 Start) (ite StartBool_1 Start_13 Start_12)))
   (Start_24 Int (3 (+ Start_3 Start_10) (div Start_17 Start_9) (mod Start_24 Start_2) (abs Start_25) (ite StartBool_6 Start_16 Start_5)))
   (Start_5 Int (2 (- Start) (* Start_7 Start) (div Start Start_1) (mod Start_3 Start) (ite StartBool Start_1 Start_3)))
   (Start_6 Int (3 (+ Start_1 Start_5) (* Start_3 Start_4) (ite StartBool_2 Start_5 Start_4)))
   (Start_4 Int (2 (- Start_5) (- Start_3 Start_5) (+ Start_5 Start_3) (* Start_5 Start_3) (div Start_4 Start_1) (abs Start_2) (ite StartBool_2 Start_6 Start_1)))
   (StartBool_1 Bool (false true (not StartBool_1) (or StartBool_2 StartBool_2) (< Start_3 Start_3) (<= Start Start) (>= Start_4 Start)))
   (Start_18 Int (5 x (- Start_15) (mod Start_3 Start_1) (abs Start_20)))
   (StartBool_5 Bool (true (or StartBool_4 StartBool_4) (< Start_12 Start_11) (>= Start_5 Start_6) (> Start Start_4)))
   (StartBool_6 Bool (true false (and StartBool_5 StartBool_5) (< Start_15 Start_22) (<= Start_8 Start_8) (= Start_15 Start_17) (> Start_18 Start_17)))
   (Start_16 Int (x (- Start Start_1) (+ Start_7 Start_6) (mod Start_3 Start_4) (abs Start_14) (ite StartBool_2 Start_13 Start_1)))
   (Start_10 Int (2 0 (- Start_7) (mod Start_5 Start_17)))
   (Start_17 Int (5 4 (- Start_3) (- Start_16 Start_16) (+ Start_9 Start_7) (* Start_18 Start_19) (div Start_17 Start_8) (mod Start_7 Start_2) (abs Start_5) (ite StartBool_2 Start_5 Start_16)))
   (Start_19 Int (0 (+ Start_9 Start_17) (* Start_14 Start_9) (abs Start_5) (ite StartBool_5 Start_14 Start_15)))
   (Start_2 Int (5 1 (- Start_23 Start_9) (+ Start_22 Start_21) (* Start_10 Start_5) (mod Start_18 Start_21) (ite StartBool_3 Start_2 Start_8)))
   (Start_20 Int (4 5 3 (- Start_7 Start_20) (+ Start_21 Start_10) (div Start_5 Start_19) (abs Start_10)))
   (Start_21 Int (5 y 4 (* Start_11 Start_9) (div Start_2 Start_18) (mod Start_14 Start_13) (abs Start_6)))
   (Start_15 Int (5 3 0 1 (- Start_16 Start_9) (* Start_13 Start_12) (div Start_16 Start_4) (abs Start_12)))
   (StartBool_2 Bool (false true (not StartBool_6) (< Start_18 Start_6) (= Start_12 Start_9) (> Start_1 Start_10)))
   (Start_23 Int (1 y (- Start_18 Start_10) (* Start_16 Start_19) (div Start_2 Start_18) (mod Start_6 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- (div x (- 1 x)) 1) x)))

(check-synth)
