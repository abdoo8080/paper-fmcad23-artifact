(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_3 Bool) (Start_8 Int) (Start_9 Int) (StartBool_2 Bool) (Start_3 Int) (Start_4 Int) (Start_1 Int) (StartBool_4 Bool) (Start_5 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_7 Int) (StartBool_7 Bool) (Start_6 Int) (StartBool_8 Bool) (StartBool_5 Bool))
  ((Start Int (1 (- Start_1 Start) (* Start Start_2) (div Start_2 Start) (mod Start_1 Start) (ite StartBool_1 Start_1 Start_2)))
   (StartBool Bool (true false (not StartBool_4) (and StartBool_7 StartBool_8) (< Start_2 Start_7) (<= Start Start_3) (= Start Start) (> Start_8 Start_9)))
   (Start_2 Int (y (+ Start_2 Start_6) (* Start_6 Start_8) (div Start_6 Start_8) (ite StartBool_2 Start_3 Start_1)))
   (StartBool_3 Bool (false true (not StartBool_8) (or StartBool_7 StartBool_6) (< Start_2 Start_7) (> Start_3 Start_6)))
   (Start_8 Int (4 (div Start_2 Start_3) (abs Start_2) (ite StartBool_4 Start_8 Start)))
   (Start_9 Int (1 3 2 y 4 0 (+ Start_9 Start_8) (div Start Start_6) (abs Start) (ite StartBool_5 Start_7 Start)))
   (StartBool_2 Bool (false (not StartBool_3) (or StartBool_2 StartBool_4) (< Start_2 Start_1) (= Start Start_1)))
   (Start_3 Int (4 y (* Start_2 Start_1) (div Start_3 Start_3) (mod Start Start_1) (ite StartBool_2 Start_2 Start_4)))
   (Start_4 Int (5 1 x 2 (- Start_2) (- Start_4 Start_4) (+ Start_4 Start_3) (* Start_3 Start_2) (abs Start_1)))
   (Start_1 Int (3 4 5 0 2 (- Start_7 Start_3) (+ Start_1 Start_6) (mod Start_6 Start_6) (abs Start_3)))
   (StartBool_4 Bool (true false (not StartBool_3) (and StartBool_2 StartBool_5) (or StartBool_3 StartBool_6) (<= Start_2 Start_3) (>= Start_1 Start_2) (> Start_5 Start_1)))
   (Start_5 Int (0 (* Start Start_2) (abs Start_4)))
   (StartBool_1 Bool (true false (not StartBool_1) (or StartBool_1 StartBool_1) (<= Start_2 Start) (>= Start Start_3)))
   (StartBool_6 Bool (false (not StartBool_2) (or StartBool StartBool_4) (< Start_5 Start_3) (= Start_6 Start_1) (>= Start_7 Start_6) (> Start_4 Start)))
   (Start_7 Int (5 (- Start Start_1) (* Start_6 Start_5) (mod Start_3 Start_2) (abs Start_4)))
   (StartBool_7 Bool (true (and StartBool_1 StartBool_8) (< Start_7 Start_7) (= Start Start)))
   (Start_6 Int (4 (- Start_4) (* Start_1 Start_5) (abs Start_6)))
   (StartBool_8 Bool (false (not StartBool_2) (and StartBool StartBool_5) (< Start_4 Start_8) (>= Start_8 Start_4) (> Start_5 Start)))
   (StartBool_5 Bool (true (and StartBool_3 StartBool) (or StartBool_7 StartBool_6) (= Start_1 Start_7) (>= Start_6 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 3 (div x x))))

(check-synth)
