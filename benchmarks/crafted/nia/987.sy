(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (StartBool_3 Bool) (Start_14 Int) (StartBool_2 Bool) (Start_13 Int) (Start_7 Int) (Start_6 Int) (Start_3 Int) (Start_5 Int) (Start_2 Int) (Start_4 Int) (Start_12 Int) (StartBool_1 Bool) (Start_8 Int) (Start_9 Int) (Start_10 Int) (Start_11 Int) (Start_1 Int))
  ((Start Int (1 (- Start_1 Start_1) (div Start_1 Start_2) (mod Start Start_2) (abs Start_3) (ite StartBool Start Start_2)))
   (StartBool Bool (true (not StartBool_3) (< Start_4 Start_13) (<= Start_3 Start_2) (>= Start_7 Start_11) (> Start_5 Start_14)))
   (StartBool_4 Bool (false true (not StartBool_2) (and StartBool_3 StartBool_3) (or StartBool_2 StartBool_4) (<= Start_4 Start_5)))
   (StartBool_3 Bool (true false (not StartBool_2) (and StartBool StartBool_3) (or StartBool_2 StartBool_4) (>= Start_14 Start_11)))
   (Start_14 Int (0 (- Start_2) (- Start_12 Start) (mod Start_6 Start_13) (abs Start_12) (ite StartBool_1 Start_8 Start_11)))
   (StartBool_2 Bool (false (<= Start_3 Start_7) (> Start Start_4)))
   (Start_13 Int (x (- Start_6) (- Start_12 Start_13) (+ Start_5 Start_12) (abs Start_9) (ite StartBool_1 Start_8 Start_7)))
   (Start_7 Int (2 1 3 5 (- Start_1) (+ Start_5 Start) (* Start_1 Start_4) (div Start_10 Start_7) (abs Start_5)))
   (Start_6 Int (1 (- Start_6) (mod Start_3 Start_4) (abs Start_6)))
   (Start_3 Int (y 3 (- Start_4 Start_1) (+ Start_4 Start) (* Start_2 Start_5) (div Start_6 Start_6) (abs Start_5)))
   (Start_5 Int (4 (- Start_6) (- Start_5 Start_6) (div Start_2 Start_6) (mod Start_6 Start_5) (abs Start_6)))
   (Start_2 Int (5 1 4 y (+ Start_5 Start) (div Start_9 Start_7) (mod Start_12 Start_4) (abs Start_6)))
   (Start_4 Int (4 (- Start) (- Start_1 Start_7) (* Start_4 Start_6) (div Start_3 Start_6) (ite StartBool Start_8 Start_5)))
   (Start_12 Int (y (- Start_5) (- Start_8 Start_8) (+ Start_1 Start_7) (div Start_4 Start_4) (ite StartBool Start_3 Start_12)))
   (StartBool_1 Bool (false true (and StartBool StartBool_2) (or StartBool StartBool_2) (< Start Start_7) (= Start_7 Start_6) (>= Start_1 Start_3) (> Start_3 Start_6)))
   (Start_8 Int (3 5 1 (- Start_2 Start_3) (+ Start_1 Start_1) (div Start_3 Start_9) (mod Start Start_6) (abs Start_2)))
   (Start_9 Int (4 3 5 y (div Start_3 Start_5) (mod Start_8 Start_8) (abs Start_2)))
   (Start_10 Int (1 (- Start_11 Start_2) (* Start_10 Start_6) (abs Start_7) (ite StartBool Start_2 Start_2)))
   (Start_11 Int (4 2 5 (- Start_11 Start_2) (+ Start_1 Start_1) (div Start_1 Start_10) (mod Start_5 Start_3) (abs Start_3)))
   (Start_1 Int (2 (- Start_8) (- Start_3 Start_13) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (div 1 0) 4)))

(check-synth)
