(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_19 Int) (StartBool_4 Bool) (Start_1 Int) (Start_15 Int) (Start_2 Int) (Start_16 Int) (Start_7 Int) (Start_9 Int) (StartBool_1 Bool) (Start_10 Int) (StartBool_3 Bool) (Start_4 Int) (Start_12 Int) (Start_5 Int) (Start_6 Int) (Start_17 Int) (StartBool_2 Bool) (Start_3 Int) (Start_8 Int) (Start_18 Int) (Start_11 Int) (Start_13 Int) (Start_14 Int))
  ((Start Int (1 5 (- Start_1) (- Start Start_2) (+ Start_3 Start_2) (div Start_1 Start_1) (abs Start_2) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (false (or StartBool_4 StartBool_2) (= Start_11 Start_7) (>= Start_16 Start_10)))
   (Start_19 Int (5 (- Start_7) (+ Start_17 Start_9) (* Start_4 Start_9) (ite StartBool Start_4 Start_1)))
   (StartBool_4 Bool (true (<= Start_18 Start_8) (= Start_10 Start_9) (> Start_16 Start_9)))
   (Start_1 Int (0 4 (- Start_11) (* Start_7 Start) (div Start_8 Start_15) (mod Start_14 Start_8) (abs Start_19)))
   (Start_15 Int (3 1 (- Start_8 Start_16) (* Start Start_12) (mod Start_11 Start_17)))
   (Start_2 Int (0 (- Start_9) (ite StartBool_4 Start Start)))
   (Start_16 Int (4 (- Start_12) (+ Start_5 Start_12) (* Start_9 Start_3) (abs Start_12) (ite StartBool_1 Start_9 Start)))
   (Start_7 Int (5 4 (- Start_8) (- Start_9 Start_14) (div Start_10 Start_7) (abs Start_9) (ite StartBool_2 Start_14 Start_9)))
   (Start_9 Int (0 (* Start_5 Start_10) (div Start_7 Start_7) (mod Start_11 Start) (abs Start_8)))
   (StartBool_1 Bool (false true (or StartBool_1 StartBool_1) (<= Start_3 Start_12) (= Start_3 Start_8) (> Start_8 Start_9)))
   (Start_10 Int (y 0 3 (- Start_8) (+ Start_9 Start_6) (* Start_5 Start_7) (ite StartBool Start_1 Start_4)))
   (StartBool_3 Bool (true (>= Start_9 Start_18) (> Start_17 Start_6)))
   (Start_4 Int (3 0 (- Start_3) (+ Start_3 Start_5) (* Start_4 Start_5) (mod Start_4 Start_1)))
   (Start_12 Int (2 0 (- Start_4) (- Start Start_9) (+ Start_10 Start_5) (* Start_5 Start_9) (div Start_8 Start_10) (abs Start_2) (ite StartBool Start_10 Start_13)))
   (Start_5 Int (4 (- Start_5) (- Start_6 Start) (+ Start_5 Start_6) (ite StartBool Start_2 Start_6)))
   (Start_6 Int (2 (- Start_7 Start_3) (* Start_1 Start_5) (div Start_5 Start_8)))
   (Start_17 Int (1 x (+ Start_5 Start_3) (* Start_12 Start_13) (mod Start_6 Start_6) (abs Start_7)))
   (StartBool_2 Bool (true (or StartBool_3 StartBool_3) (< Start_9 Start_15) (<= Start_8 Start_16) (= Start_10 Start_14) (>= Start Start_1) (> Start_14 Start_8)))
   (Start_3 Int (2 (+ Start_3 Start_3) (div Start_3 Start_2) (mod Start_4 Start_1) (abs Start_1) (ite StartBool Start_4 Start_1)))
   (Start_8 Int (1 (- Start_1 Start_3) (+ Start_9 Start_10)))
   (Start_18 Int (0 (- Start_4) (- Start_2 Start_3) (abs Start_15)))
   (Start_11 Int (2 (- Start_12 Start_6) (+ Start_10 Start_12) (div Start_1 Start_6) (mod Start_5 Start) (abs Start_4) (ite StartBool Start_2 Start_4)))
   (Start_13 Int (3 4 0 1 2 (- Start_10 Start_9) (mod Start_10 Start_14) (abs Start_7) (ite StartBool Start_4 Start_4)))
   (Start_14 Int (x (- Start_3 Start_5) (div Start_11 Start_3) (ite StartBool_1 Start_2 Start_14)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (div x x) (+ x 1))))

(check-synth)
