(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (StartBool_3 Bool) (StartBool_4 Bool) (Start_16 Int) (Start_13 Int) (Start_12 Int) (Start_15 Int) (Start_17 Int) (Start_3 Int) (Start_8 Int) (Start_10 Int) (Start_4 Int) (Start_19 Int) (Start_2 Int) (Start_1 Int) (Start_5 Int) (Start_6 Int) (Start_18 Int) (Start_7 Int) (StartBool_5 Bool) (Start_14 Int) (Start_9 Int) (StartBool_1 Bool) (Start_11 Int) (StartBool_2 Bool))
  ((Start Int (3 4 2 x (- Start_1) (- Start Start) (mod Start Start) (abs Start_2) (ite StartBool Start_1 Start_3)))
   (StartBool Bool (false true (and StartBool_2 StartBool) (< Start_20 Start) (> Start_13 Start_13)))
   (Start_20 Int (2 (- Start_14) (- Start_1 Start_8)))
   (StartBool_3 Bool (false true (and StartBool_4 StartBool) (< Start_14 Start_18) (<= Start_12 Start_12)))
   (StartBool_4 Bool (false true (not StartBool_3) (or StartBool_3 StartBool_5) (<= Start_6 Start_12) (= Start Start_2)))
   (Start_16 Int (2 4 0 (- Start_9) (- Start_8 Start_4) (+ Start_8 Start) (* Start_17 Start_8) (abs Start_15) (ite StartBool_2 Start_18 Start_8)))
   (Start_13 Int (5 (- Start_13) (- Start_4 Start_2) (div Start_3 Start_9) (mod Start_14 Start_13) (ite StartBool_4 Start_15 Start_16)))
   (Start_12 Int (4 (- Start_12) (- Start_6 Start_12) (+ Start_11 Start_7) (* Start_13 Start_8) (mod Start Start_2) (abs Start_13)))
   (Start_15 Int (1 x (- Start_13) (- Start_9 Start_12) (+ Start_8 Start_2) (* Start_5 Start_15) (div Start_8 Start_7) (abs Start_14)))
   (Start_17 Int (3 (- Start_17) (- Start_16 Start_3) (* Start_7 Start_12)))
   (Start_3 Int (4 5 0 y (* Start_1 Start_3) (div Start_1 Start_2) (abs Start_4) (ite StartBool Start_2 Start_4)))
   (Start_8 Int (2 (- Start_8 Start_9) (abs Start)))
   (Start_10 Int (2 (- Start_1) (+ Start_2 Start_7) (div Start_1 Start_7) (abs Start_5)))
   (Start_4 Int (3 2 (- Start_4) (+ Start_5 Start_3) (div Start_2 Start_3)))
   (Start_19 Int (x (- Start_7) (- Start_8 Start_17) (* Start_16 Start_8) (div Start_18 Start_18) (mod Start_5 Start_2) (abs Start_7)))
   (Start_2 Int (3 (- Start_10) (+ Start_2 Start_7) (div Start_10 Start) (ite StartBool_1 Start_9 Start_1)))
   (Start_1 Int (0 (+ Start_17 Start_19) (* Start_13 Start_12) (mod Start_19 Start_13) (abs Start_18)))
   (Start_5 Int (0 1 (- Start_3 Start_3) (* Start_6 Start_5) (div Start_5 Start_4) (mod Start_1 Start_4) (abs Start_5)))
   (Start_6 Int (4 (- Start_6) (- Start_5 Start_2) (+ Start_1 Start_1) (mod Start_3 Start_4) (ite StartBool Start_5 Start_7)))
   (Start_18 Int (2 (+ Start_10 Start_10) (div Start_13 Start_3) (mod Start_18 Start_14) (abs Start_3)))
   (Start_7 Int (3 (- Start_8) (- Start_7 Start_3) (+ Start_6 Start_1) (* Start_4 Start_1) (abs Start_6) (ite StartBool Start_2 Start_2)))
   (StartBool_5 Bool (true false (or StartBool_3 StartBool_5) (< Start_19 Start_4) (>= Start_5 Start) (> Start_13 Start_9)))
   (Start_14 Int (3 2 (+ Start_9 Start_4) (mod Start_2 Start_7) (abs Start_15) (ite StartBool Start_12 Start_9)))
   (Start_9 Int (5 (- Start_9 Start_2) (* Start_7 Start_10) (abs Start_9) (ite StartBool Start_10 Start_9)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool StartBool_1) (< Start_8 Start_5) (= Start Start_11) (>= Start_6 Start_11) (> Start_1 Start_2)))
   (Start_11 Int (0 (+ Start_6 Start_1) (div Start_3 Start_2) (mod Start_2 Start_10) (abs Start_8)))
   (StartBool_2 Bool (false (not StartBool_2) (and StartBool_3 StartBool_4) (<= Start_8 Start_5) (= Start_7 Start_7) (>= Start_12 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- (+ (* (+ 1 5) (+ 4 x)) 2)) 2)))

(check-synth)
