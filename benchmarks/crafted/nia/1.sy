(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (StartBool_2 Bool) (StartBool_1 Bool) (StartBool_5 Bool) (Start_10 Int) (Start_2 Int) (Start_13 Int) (Start_1 Int) (Start_4 Int) (Start_8 Int) (Start_3 Int) (Start_6 Int) (Start_11 Int) (Start_7 Int) (StartBool_3 Bool) (Start_5 Int) (Start_9 Int) (StartBool_4 Bool))
  ((Start Int (4 (- Start) (* Start Start) (div Start Start)))
   (StartBool Bool (false (not StartBool_1) (and StartBool_2 StartBool_1) (= Start_1 Start) (> Start Start)))
   (Start_12 Int (y (- Start_10) (- Start_4 Start_6) (div Start_12 Start_3) (abs Start_4) (ite StartBool_2 Start_9 Start_8)))
   (StartBool_2 Bool (false true (= Start_12 Start_13) (> Start_2 Start_1)))
   (StartBool_1 Bool (true false (= Start_2 Start_10) (>= Start_12 Start_10) (> Start_10 Start_11)))
   (StartBool_5 Bool (false (not StartBool_3) (or StartBool_4 StartBool_2) (= Start_2 Start_5) (>= Start_7 Start_7) (> Start_5 Start_10)))
   (Start_10 Int (1 (- Start Start_7) (+ Start_2 Start_8) (* Start_3 Start_2) (ite StartBool_5 Start_11 Start_5)))
   (Start_2 Int (5 0 2 4 (* Start_3 Start_4) (div Start_2 Start_1) (abs Start_4)))
   (Start_13 Int (1 2 4 (- Start_10) (- Start_7 Start_1) (* Start_5 Start_7) (mod Start_12 Start) (abs Start_5)))
   (Start_1 Int (1 (- Start_1 Start) (+ Start_1 Start) (mod Start_1 Start_2) (ite StartBool_1 Start_2 Start_1)))
   (Start_4 Int (x (* Start_2 Start_2) (div Start_4 Start_2)))
   (Start_8 Int (x (+ Start_4 Start_2) (* Start_8 Start) (div Start_2 Start_3) (mod Start_3 Start_9) (abs Start_9)))
   (Start_3 Int (2 (- Start_5) (- Start_3 Start_4) (+ Start_2 Start_5) (* Start Start_5) (abs Start_1) (ite StartBool_3 Start Start_5)))
   (Start_6 Int (x 0 (div Start_7 Start_4) (mod Start_6 Start_6) (ite StartBool_2 Start_4 Start_6)))
   (Start_11 Int (2 (- Start) (mod Start_1 Start_3) (abs Start_4)))
   (Start_7 Int (4 1 (+ Start_5 Start_6) (abs Start_7) (ite StartBool_1 Start_2 Start_5)))
   (StartBool_3 Bool (true (and StartBool StartBool_1) (or StartBool_1 StartBool_1) (<= Start Start) (>= Start_6 Start_5) (> Start_3 Start_2)))
   (Start_5 Int (5 1 (- Start_4) (- Start_5 Start_7) (+ Start_7 Start) (ite StartBool_4 Start_6 Start)))
   (Start_9 Int (y (- Start_8) (- Start_5 Start) (+ Start_1 Start_1) (* Start_7 Start_9) (div Start_7 Start_10)))
   (StartBool_4 Bool (true (and StartBool StartBool_3) (or StartBool StartBool_2) (<= Start_6 Start) (= Start_7 Start_3) (>= Start_1 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs x)))

(check-synth)
