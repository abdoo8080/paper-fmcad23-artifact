(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_19 Int) (Start_16 Int) (Start_17 Int) (Start_15 Int) (Start_14 Int) (Start_1 Int) (StartBool_4 Bool) (StartBool_1 Bool) (StartBool_6 Bool) (Start_4 Int) (Start_3 Int) (StartBool_2 Bool) (Start_7 Int) (Start_18 Int) (Start_2 Int) (Start_10 Int) (Start_6 Int) (Start_8 Int) (Start_9 Int) (StartBool_5 Bool) (StartBool_3 Bool) (Start_11 Int) (Start_12 Int) (Start_5 Int) (Start_13 Int))
  ((Start Int (3 (- Start) (+ Start Start) (abs Start_1) (ite StartBool_1 Start_2 Start_3)))
   (StartBool Bool (false (or StartBool StartBool_5) (= Start_7 Start_2) (> Start_2 Start_8)))
   (Start_19 Int (2 0 (+ Start_18 Start_8) (* Start_17 Start_7) (mod Start_14 Start_9)))
   (Start_16 Int (1 0 4 (- Start_3) (- Start_6 Start_1) (mod Start_15 Start_6)))
   (Start_17 Int (5 1 (- Start_8 Start_8) (div Start_4 Start_6) (abs Start_6) (ite StartBool_4 Start_18 Start_18)))
   (Start_15 Int (0 2 (- Start_16) (- Start Start_17) (+ Start_1 Start_16) (* Start_2 Start_8) (mod Start_16 Start_12) (abs Start_5) (ite StartBool_2 Start_12 Start_17)))
   (Start_14 Int (4 (+ Start_15 Start_11) (ite StartBool_1 Start_10 Start_5)))
   (Start_1 Int (3 (* Start_3 Start_14) (div Start_11 Start_6) (ite StartBool_2 Start_3 Start_12)))
   (StartBool_4 Bool (true false (<= Start_16 Start_7) (> Start_1 Start_7)))
   (StartBool_1 Bool (true false (< Start_10 Start_8) (<= Start_11 Start_13) (= Start_4 Start) (>= Start_3 Start_6)))
   (StartBool_6 Bool (true false (< Start_18 Start_2) (= Start_16 Start_1) (> Start_6 Start_6)))
   (Start_4 Int (2 (- Start_8 Start_9) (div Start_6 Start) (abs Start_10) (ite StartBool Start_9 Start_6)))
   (Start_3 Int (2 1 5 y 3 (- Start_2 Start_3) (+ Start Start_4) (* Start_4 Start_4) (div Start_4 Start_2) (mod Start_1 Start) (ite StartBool_2 Start_1 Start_4)))
   (StartBool_2 Bool (false (<= Start_3 Start_1) (= Start_1 Start_2) (>= Start_3 Start_5) (> Start_6 Start_7)))
   (Start_7 Int (x y 3 2 4 (- Start_4) (ite StartBool_1 Start_5 Start_4)))
   (Start_18 Int (0 y 1 3 (- Start_13) (+ Start_14 Start_10) (abs Start_9) (ite StartBool Start_2 Start_16)))
   (Start_2 Int (0 (- Start_10) (+ Start_3 Start_9) (* Start_4 Start_10) (abs Start_3)))
   (Start_10 Int (2 5 (- Start_8) (+ Start_5 Start_10) (* Start_10 Start) (div Start_11 Start_2) (mod Start_4 Start_11) (abs Start_4)))
   (Start_6 Int (3 (- Start_2) (- Start_3 Start) (* Start_2 Start_1) (div Start_8 Start_1) (mod Start_6 Start_5)))
   (Start_8 Int (x (- Start_3) (- Start_5 Start_4) (+ Start_4 Start_4) (div Start_6 Start) (mod Start_4 Start_9)))
   (Start_9 Int (4 (- Start_2) (- Start Start_6) (+ Start_9 Start_6) (* Start_9 Start_8) (div Start_6 Start_1) (mod Start_2 Start_7) (abs Start_10)))
   (StartBool_5 Bool (true (or StartBool_6 StartBool_4) (<= Start_1 Start_15) (>= Start_19 Start_10)))
   (StartBool_3 Bool (true (not StartBool) (or StartBool_2 StartBool_1) (< Start_2 Start) (<= Start_9 Start_9) (>= Start_6 Start)))
   (Start_11 Int (2 4 (div Start Start_8) (mod Start_1 Start_1) (abs Start_12) (ite StartBool_3 Start_12 Start_2)))
   (Start_12 Int (y (- Start_8 Start_4) (+ Start_7 Start_6) (abs Start) (ite StartBool_1 Start_11 Start_3)))
   (Start_5 Int (x 3 (- Start_9) (- Start_8 Start_3) (+ Start_13 Start_13) (* Start_13 Start_8) (div Start_5 Start_12) (mod Start_2 Start) (ite StartBool Start_13 Start_1)))
   (Start_13 Int (0 2 y (- Start_4) (- Start_3 Start) (+ Start_5 Start_11) (* Start_3 Start_3) (div Start_9 Start_10) (mod Start_6 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div x 3)))

(check-synth)
