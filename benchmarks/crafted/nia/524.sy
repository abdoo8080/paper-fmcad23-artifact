(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_1 Int) (Start_3 Int) (Start_13 Int) (StartBool_1 Bool) (Start_11 Int) (Start_5 Int) (StartBool_2 Bool) (Start_2 Int) (Start_7 Int) (Start_8 Int) (Start_4 Int) (Start_10 Int) (Start_9 Int) (Start_6 Int) (Start_12 Int))
  ((Start Int (y (mod Start Start_1) (abs Start_2) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true false (<= Start_3 Start_7) (>= Start_13 Start_6)))
   (Start_14 Int (1 0 x 5 (* Start_9 Start_6) (mod Start_6 Start_9) (ite StartBool_1 Start_8 Start_7)))
   (Start_1 Int (5 1 (- Start) (- Start_12 Start_11) (+ Start_10 Start_14) (mod Start_3 Start_1)))
   (Start_3 Int (2 (div Start_10 Start_13) (mod Start_6 Start_11) (abs Start_2)))
   (Start_13 Int (4 y 2 0 (- Start_12) (+ Start_8 Start) (div Start Start_13) (mod Start_8 Start_9) (abs Start_7)))
   (StartBool_1 Bool (false true (not StartBool_1) (= Start_1 Start) (> Start_1 Start_1)))
   (Start_11 Int (y 3 4 (abs Start_2) (ite StartBool_2 Start_1 Start_1)))
   (Start_5 Int (2 y x (+ Start_4 Start_6) (div Start_2 Start_7) (mod Start_3 Start_1)))
   (StartBool_2 Bool (true (and StartBool StartBool) (or StartBool_2 StartBool)))
   (Start_2 Int (2 (- Start_1) (- Start_3 Start_4) (+ Start_1 Start_3) (* Start Start_2) (ite StartBool Start_1 Start)))
   (Start_7 Int (y (- Start_2 Start_8) (* Start_9 Start_8) (mod Start_7 Start_9) (ite StartBool Start Start_10)))
   (Start_8 Int (4 1 x (* Start_10 Start_9) (div Start_2 Start_8) (abs Start_9)))
   (Start_4 Int (0 (- Start_3 Start_5) (+ Start_5 Start_5) (abs Start_5)))
   (Start_10 Int (4 0 3 (- Start_9 Start_11) (* Start_6 Start_5) (ite StartBool Start_1 Start_9)))
   (Start_9 Int (4 (+ Start Start_1) (abs Start_2) (ite StartBool_1 Start_12 Start_1)))
   (Start_6 Int (y (ite StartBool_1 Start_13 Start_3)))
   (Start_12 Int (5 x 1 2 4 0 (- Start_9) (- Start_7 Start_7) (div Start_3 Start_11) (mod Start_8 Start_9) (abs Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (+ 4 x) (* 3 5))))

(check-synth)
