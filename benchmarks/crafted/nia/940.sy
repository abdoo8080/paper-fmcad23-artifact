(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_4 Bool) (Start_16 Int) (Start_14 Int) (StartBool_5 Bool) (Start_13 Int) (Start_8 Int) (StartBool_1 Bool) (Start_17 Int) (Start_11 Int) (Start_4 Int) (Start_12 Int) (Start_10 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_6 Int) (Start_1 Int) (Start_5 Int) (Start_15 Int) (Start_7 Int) (Start_3 Int) (Start_9 Int))
  ((Start Int (1 (mod Start Start_1)))
   (StartBool Bool (false (not StartBool_5) (>= Start_11 Start_14)))
   (Start_2 Int (5 (- Start_11) (- Start_8 Start_12) (mod Start_8 Start_8) (ite StartBool_2 Start_12 Start_15)))
   (StartBool_4 Bool (true false (not StartBool_1) (or StartBool_3 StartBool_1) (< Start_3 Start_5) (<= Start_3 Start_3) (>= Start_11 Start_6)))
   (Start_16 Int (y 3 5 2 (+ Start_7 Start_17) (* Start_2 Start_6) (ite StartBool_1 Start_4 Start_14)))
   (Start_14 Int (0 (+ Start_3 Start_8) (* Start_13 Start_2)))
   (StartBool_5 Bool (false (not StartBool_5) (or StartBool_5 StartBool_5) (< Start_10 Start_10) (<= Start_6 Start_13) (= Start_8 Start_5) (> Start_8 Start_16)))
   (Start_13 Int (3 (- Start_14) (+ Start_4 Start_12) (abs Start_11) (ite StartBool_1 Start_4 Start_10)))
   (Start_8 Int (x (+ Start_5 Start_1) (* Start_7 Start_5) (ite StartBool_1 Start_7 Start_6)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool StartBool_1) (<= Start_8 Start_2) (= Start_7 Start_6) (>= Start_3 Start) (> Start_3 Start)))
   (Start_17 Int (2 (+ Start_13 Start_15) (div Start_6 Start_11) (mod Start_5 Start_7) (ite StartBool_3 Start_9 Start)))
   (Start_11 Int (y (- Start_3 Start_9) (div Start_2 Start) (mod Start_8 Start_1) (abs Start_4)))
   (Start_4 Int (5 (- Start) (- Start_5 Start_1) (+ Start_2 Start) (* Start_6 Start_5)))
   (Start_12 Int (4 0 (- Start_10 Start_11) (+ Start_8 Start_10) (* Start_6 Start_4) (mod Start_12 Start_4) (ite StartBool_3 Start_6 Start_12)))
   (Start_10 Int (5 x (- Start_8 Start_5) (+ Start_1 Start_3) (div Start_11 Start_1) (mod Start_7 Start_7)))
   (StartBool_3 Bool (true (or StartBool_2 StartBool_4) (< Start_1 Start_13) (= Start_4 Start_11)))
   (StartBool_2 Bool (true false (not StartBool_3) (and StartBool StartBool_1) (>= Start_1 Start_12)))
   (Start_6 Int (4 (+ Start_3 Start_1) (* Start_3 Start_2) (div Start_1 Start) (mod Start_2 Start_6) (ite StartBool Start_3 Start_7)))
   (Start_1 Int (y 5 (div Start_2 Start_2) (abs Start_3) (ite StartBool Start_4 Start)))
   (Start_5 Int (1 x 0 5 (- Start_7 Start) (+ Start_5 Start_1) (div Start_2 Start_8) (abs Start_4) (ite StartBool Start_8 Start_1)))
   (Start_15 Int (3 5 (- Start_2) (+ Start_11 Start_15) (abs Start_3) (ite StartBool_3 Start_2 Start_13)))
   (Start_7 Int (y (- Start_1) (- Start_8 Start_5) (+ Start_5 Start_4) (abs Start_4) (ite StartBool Start_7 Start)))
   (Start_3 Int (5 (- Start_7) (- Start_3 Start_2) (+ Start_2 Start_2) (mod Start_1 Start) (ite StartBool_2 Start_9 Start_4)))
   (Start_9 Int (0 3 y (- Start_7) (- Start_2 Start_10) (+ Start_11 Start_9) (* Start_7 Start_1) (div Start_7 Start_10) (mod Start_6 Start_1) (abs Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div y (- (div (div 4 x) (* y y))))))

(check-synth)
