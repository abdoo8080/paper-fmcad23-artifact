(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_13 Int) (Start_10 Int) (Start_9 Int) (Start_4 Int) (Start_5 Int) (Start_3 Int) (Start_11 Int) (Start_2 Int) (Start_6 Int) (Start_8 Int) (StartBool_1 Bool) (Start_7 Int) (Start_1 Int) (StartBool_2 Bool) (Start_12 Int))
  ((Start Int (y 4 2 (div Start_1 Start_2) (abs Start_3) (ite StartBool Start_3 Start_4)))
   (StartBool Bool (false (< Start_6 Start_5) (= Start_5 Start_14) (>= Start_5 Start_7) (> Start Start_8)))
   (Start_14 Int (5 (+ Start_5 Start_13) (div Start_10 Start) (mod Start_1 Start_7)))
   (Start_13 Int (3 (- Start_8 Start_6) (div Start_12 Start_2) (mod Start_1 Start_9) (abs Start_5) (ite StartBool_2 Start_11 Start)))
   (Start_10 Int (0 3 y (- Start_1) (* Start_4 Start_7) (div Start_10 Start_6) (mod Start_9 Start_8) (abs Start_13) (ite StartBool_2 Start_6 Start_10)))
   (Start_9 Int (x 4 (- Start_9) (- Start_4 Start_2) (mod Start_2 Start_8) (ite StartBool_2 Start_2 Start)))
   (Start_4 Int (y (+ Start_4 Start) (ite StartBool Start_1 Start_5)))
   (Start_5 Int (4 (* Start_2 Start_2) (div Start_2 Start_2) (mod Start_4 Start_5) (ite StartBool Start_4 Start_4)))
   (Start_3 Int (y 0 (- Start_5 Start_2) (div Start_6 Start) (abs Start_6) (ite StartBool Start_6 Start)))
   (Start_11 Int (2 3 0 (- Start_6) (+ Start_6 Start) (div Start_4 Start_9) (mod Start Start_12)))
   (Start_2 Int (y (- Start_1 Start_5) (div Start_6 Start_2)))
   (Start_6 Int (0 1 (- Start_4) (- Start_2 Start_4) (+ Start_6 Start_3) (* Start_3 Start_6) (div Start_1 Start_1)))
   (Start_8 Int (4 1 y (- Start_9 Start_5) (* Start_4 Start_2) (div Start_4 Start_1) (abs Start)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool_1 StartBool_1) (< Start_4 Start) (>= Start_1 Start_4)))
   (Start_7 Int (0 1 x (- Start_10 Start_3) (* Start_3 Start_11) (div Start_7 Start_12) (mod Start_3 Start_7) (ite StartBool_1 Start_1 Start_8)))
   (Start_1 Int (1 (- Start_4 Start_7) (+ Start_2 Start_7) (* Start_7 Start) (div Start_2 Start_4) (ite StartBool_1 Start_8 Start_6)))
   (StartBool_2 Bool (false true (<= Start_2 Start_3) (= Start_3 Start_9) (>= Start_4 Start_5) (> Start_4 Start_9)))
   (Start_12 Int (3 (- Start_12 Start_1) (+ Start_6 Start_1) (* Start_2 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 5 (- (abs x)))))

(check-synth)
