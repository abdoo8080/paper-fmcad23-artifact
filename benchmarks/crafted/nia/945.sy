(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_17 Int) (Start_14 Int) (Start_4 Int) (Start_11 Int) (Start_2 Int) (Start_3 Int) (StartBool_3 Bool) (Start_16 Int) (Start_6 Int) (Start_8 Int) (Start_7 Int) (Start_19 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_10 Int) (Start_12 Int) (Start_9 Int) (Start_18 Int) (Start_15 Int) (Start_5 Int) (Start_13 Int))
  ((Start Int (2 (- Start_1) (- Start Start) (* Start_2 Start_2) (mod Start_3 Start_1)))
   (StartBool Bool (true false (and StartBool_3 StartBool_2) (< Start_10 Start_11) (<= Start_9 Start_11) (= Start_9 Start_14) (>= Start_18 Start_2) (> Start_13 Start_6)))
   (Start_1 Int (2 1 (- Start_13) (div Start_5 Start_12) (mod Start_15 Start_2) (abs Start_13) (ite StartBool_3 Start_3 Start_10)))
   (Start_17 Int (x 3 y 5 (- Start_14 Start_5) (+ Start_10 Start_15) (div Start_14 Start_1) (mod Start Start_12)))
   (Start_14 Int (2 1 3 x (- Start_8) (+ Start_11 Start_1) (* Start_13 Start_15) (mod Start_1 Start_16) (abs Start_14)))
   (Start_4 Int (x (- Start_8 Start_10) (+ Start_14 Start_10) (* Start_3 Start_14) (abs Start_5)))
   (Start_11 Int (x (- Start Start_5) (* Start_8 Start_9) (abs Start_9)))
   (Start_2 Int (2 (- Start) (+ Start_4 Start_5) (div Start_1 Start_6)))
   (Start_3 Int (4 (- Start_1) (abs Start_2)))
   (StartBool_3 Bool (false (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_3) (< Start_5 Start_14) (<= Start_8 Start_14) (= Start_7 Start_11) (>= Start_10 Start_10)))
   (Start_16 Int (0 x 5 2 (- Start_13 Start_9) (+ Start Start_10) (div Start_7 Start_13) (ite StartBool_3 Start_3 Start_3)))
   (Start_6 Int (x (- Start_1) (- Start Start_6) (+ Start_5 Start) (* Start Start_6) (div Start_6 Start) (abs Start_7)))
   (Start_8 Int (x (- Start_5) (div Start_3 Start_9) (abs Start_9) (ite StartBool_1 Start_7 Start_8)))
   (Start_7 Int (0 (- Start_3) (+ Start_8 Start_4) (* Start_5 Start) (div Start_1 Start_6) (mod Start_6 Start_4) (abs Start_4) (ite StartBool Start_3 Start_5)))
   (Start_19 Int (y (- Start_10) (+ Start_15 Start_18) (div Start_13 Start_4) (abs Start_2)))
   (StartBool_2 Bool (true false (< Start_6 Start_4) (>= Start_3 Start_1)))
   (StartBool_1 Bool (false true (not StartBool_2) (<= Start_7 Start) (= Start_7 Start_6) (>= Start_6 Start_7) (> Start_8 Start_8)))
   (Start_10 Int (4 3 x (- Start_3 Start_7) (* Start_2 Start_8) (abs Start_4)))
   (Start_12 Int (0 (+ Start_11 Start_10) (mod Start_13 Start_3)))
   (Start_9 Int (4 x 5 (- Start_6) (+ Start_1 Start_7) (* Start_8 Start_10) (abs Start_4) (ite StartBool Start_9 Start)))
   (Start_18 Int (3 (- Start_16) (* Start_19 Start_16) (div Start_16 Start_15) (abs Start_11) (ite StartBool_1 Start_9 Start_11)))
   (Start_15 Int (1 y 3 (* Start_5 Start_17) (abs Start_11) (ite StartBool_1 Start_1 Start_3)))
   (Start_5 Int (4 (- Start_1 Start_6) (+ Start_11 Start_12) (* Start Start_6) (div Start_10 Start_12) (mod Start_10 Start_2) (abs Start_7)))
   (Start_13 Int (0 2 x (div Start_8 Start_13) (mod Start_3 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (abs y) 4)))

(check-synth)
