(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (Start_8 Int) (Start_4 Int) (StartBool_1 Bool) (Start_10 Int) (Start_3 Int) (Start_9 Int) (Start_7 Int) (Start_6 Int) (Start_5 Int) (StartBool_3 Bool) (Start_11 Int) (Start_12 Int) (StartBool_2 Bool))
  ((Start Int (x (- Start_1) (+ Start_1 Start_1) (* Start_2 Start_1) (div Start Start_1) (mod Start Start_3) (ite StartBool Start_4 Start_4)))
   (StartBool Bool (false true (not StartBool) (<= Start_7 Start) (> Start_11 Start_9)))
   (Start_1 Int (2 (- Start_9 Start_6) (+ Start_3 Start_7) (mod Start_4 Start_9) (abs Start_9) (ite StartBool_1 Start_12 Start_11)))
   (Start_2 Int (5 (- Start) (- Start_5 Start_12) (+ Start_1 Start_9) (div Start_3 Start_9) (mod Start_1 Start_4)))
   (Start_8 Int (2 x (- Start_9 Start_7) (+ Start_7 Start_7) (* Start_10 Start_1) (div Start_11 Start_5) (mod Start_11 Start_7) (abs Start_2) (ite StartBool_3 Start_11 Start_4)))
   (Start_4 Int (1 5 (- Start_5) (- Start Start_5) (div Start_3 Start_6) (abs Start_3) (ite StartBool_1 Start_1 Start_5)))
   (StartBool_1 Bool (false true (and StartBool_2 StartBool_1) (< Start_7 Start_4) (= Start_5 Start_5) (>= Start_5 Start_1) (> Start_3 Start_6)))
   (Start_10 Int (5 y 0 (- Start_2) (- Start_2 Start_6) (* Start_4 Start_2) (abs Start_12) (ite StartBool_2 Start_12 Start_4)))
   (Start_3 Int (3 (- Start_7 Start_3) (+ Start_11 Start) (div Start_5 Start_11) (mod Start_9 Start_1)))
   (Start_9 Int (y 1 3 x (- Start_8) (div Start_6 Start_6) (mod Start_5 Start) (ite StartBool_2 Start Start_7)))
   (Start_7 Int (5 (- Start_8) (* Start_2 Start_7) (abs Start_1) (ite StartBool_3 Start_3 Start_5)))
   (Start_6 Int (0 (+ Start_6 Start_12) (* Start_4 Start_4)))
   (Start_5 Int (1 y 0 (+ Start_3 Start_2) (div Start_9 Start_11)))
   (StartBool_3 Bool (true (not StartBool_2) (<= Start_8 Start_7) (> Start Start_1)))
   (Start_11 Int (5 3 0 2 y (- Start_8) (div Start_6 Start_10)))
   (Start_12 Int (2 (- Start_3 Start) (+ Start Start_5) (div Start Start_12)))
   (StartBool_2 Bool (false (not StartBool_3) (<= Start_10 Start_6) (>= Start_4 Start_8) (> Start_7 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (abs (- y 2)) 3)))

(check-synth)
