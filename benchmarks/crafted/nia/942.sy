(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (StartBool_7 Bool) (Start_13 Int) (Start_22 Int) (StartBool_3 Bool) (Start_21 Int) (Start_14 Int) (Start_16 Int) (StartBool_5 Bool) (Start_8 Int) (Start_6 Int) (StartBool_4 Bool) (Start_10 Int) (Start_2 Int) (Start_7 Int) (Start_11 Int) (StartBool_6 Bool) (Start_3 Int) (Start_5 Int) (Start_15 Int) (Start_12 Int) (Start_9 Int) (Start_4 Int) (Start_18 Int) (Start_20 Int) (Start_17 Int) (Start_19 Int) (Start_1 Int) (StartBool_2 Bool) (StartBool_8 Bool))
  ((Start Int (0 3 y (* Start Start)))
   (StartBool Bool (false true (not StartBool) (and StartBool StartBool_1) (or StartBool_2 StartBool) (< Start Start_1) (>= Start Start_1) (> Start_2 Start)))
   (StartBool_1 Bool (true (and StartBool StartBool_6) (< Start_19 Start_11) (<= Start_13 Start_22) (= Start_22 Start_5) (>= Start_20 Start_20) (> Start_16 Start_16)))
   (StartBool_7 Bool (false true (and StartBool_8 StartBool_8) (< Start_2 Start_2) (= Start_22 Start_14) (>= Start_6 Start_20) (> Start_12 Start_13)))
   (Start_13 Int (4 (- Start_13 Start_11)))
   (Start_22 Int (2 3 4 (- Start_2) (* Start_15 Start_5) (ite StartBool_3 Start_6 Start_10)))
   (StartBool_3 Bool (true (and StartBool_6 StartBool_5) (< Start_16 Start_15) (<= Start_15 Start_11)))
   (Start_21 Int (2 (- Start_20) (mod Start_10 Start_5) (ite StartBool_8 Start_10 Start_21)))
   (Start_14 Int (0 5 4 (- Start_1) (* Start_12 Start_2) (div Start_10 Start_8) (abs Start_12) (ite StartBool_6 Start Start_7)))
   (Start_16 Int (2 5 3 (- Start_12 Start_3) (* Start_12 Start_12) (div Start_8 Start_4) (mod Start_4 Start_2) (abs Start_3) (ite StartBool Start_11 Start_15)))
   (StartBool_5 Bool (true (not StartBool_2) (and StartBool_1 StartBool_1) (or StartBool StartBool_3) (< Start_5 Start_14) (<= Start_8 Start_12) (>= Start_5 Start_2) (> Start_13 Start_11)))
   (Start_8 Int (1 (- Start_8) (- Start_7 Start_2) (* Start_3 Start_9) (div Start Start_6) (mod Start_5 Start_8) (abs Start_1) (ite StartBool_5 Start_4 Start_10)))
   (Start_6 Int (1 (* Start_3 Start_1) (ite StartBool_3 Start_6 Start_2)))
   (StartBool_4 Bool (true (and StartBool_3 StartBool_3) (< Start_3 Start_5) (= Start_5 Start) (> Start_3 Start_6)))
   (Start_10 Int (5 (- Start_1) (- Start_10 Start_6) (mod Start_6 Start_11) (abs Start_1)))
   (Start_2 Int (1 (+ Start Start_2) (* Start_3 Start) (abs Start_4) (ite StartBool_3 Start_5 Start_6)))
   (Start_7 Int (y 1 5 2 4 (- Start_5 Start_6) (* Start_1 Start_4) (div Start_2 Start_8) (mod Start Start) (ite StartBool_4 Start_5 Start_5)))
   (Start_11 Int (3 (- Start_5) (- Start_11 Start_1) (+ Start_3 Start_12) (mod Start_10 Start) (ite StartBool_5 Start_6 Start_5)))
   (StartBool_6 Bool (true (and StartBool_3 StartBool) (< Start_5 Start_13) (<= Start_15 Start_12) (> Start_16 Start_6)))
   (Start_3 Int (1 5 x (- Start_8) (+ Start_5 Start_12) (abs Start_13) (ite StartBool_2 Start_12 Start_19)))
   (Start_5 Int (x (- Start_5) (+ Start_2 Start_4) (* Start_2 Start) (div Start_7 Start_5) (abs Start)))
   (Start_15 Int (2 3 y 1 (- Start_10) (mod Start_15 Start_5)))
   (Start_12 Int (x 2 5 (* Start_12 Start_6) (div Start_13 Start_6) (abs Start)))
   (Start_9 Int (x 3 1 (- Start_3) (+ Start_8 Start_8) (abs Start_16)))
   (Start_4 Int (y 0 (- Start_4 Start_9) (* Start_17 Start_5) (div Start_5 Start_17) (mod Start_18 Start_6) (abs Start_9) (ite StartBool Start_11 Start_7)))
   (Start_18 Int (x (- Start_7) (+ Start_9 Start_12) (div Start Start_7) (abs Start_5) (ite StartBool Start_16 Start_15)))
   (Start_20 Int (2 x 5 y 0 1 (- Start_1 Start_1) (+ Start_20 Start_21) (* Start_2 Start_10)))
   (Start_17 Int (y 1 (- Start_18 Start_18) (* Start_11 Start_3) (div Start_14 Start) (mod Start_14 Start) (ite StartBool_2 Start_7 Start_15)))
   (Start_19 Int (4 (- Start_19) (+ Start_18 Start_8) (* Start_18 Start_8)))
   (Start_1 Int (0 1 (- Start_3) (- Start_17 Start_19) (+ Start_4 Start_4) (div Start_4 Start_12) (abs Start_5)))
   (StartBool_2 Bool (false true (and StartBool_2 StartBool_7) (< Start_7 Start_20) (<= Start_12 Start) (>= Start Start) (> Start_12 Start_7)))
   (StartBool_8 Bool (false (not StartBool_2) (or StartBool_3 StartBool_1) (< Start_13 Start_18) (<= Start_11 Start_21) (>= Start_6 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- 4) x)))

(check-synth)
