(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_3 Int) (Start_10 Int) (Start_7 Int) (Start_6 Int) (Start_8 Int) (Start_11 Int) (StartBool_1 Bool) (Start_9 Int) (Start_5 Int) (Start_4 Int) (StartBool_2 Bool) (Start_2 Int) (StartBool_3 Bool))
  ((Start Int (0 (- Start) (+ Start Start) (abs Start) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false true (not StartBool_1) (and StartBool_2 StartBool) (or StartBool_1 StartBool_3) (< Start_2 Start_2) (= Start Start) (>= Start_8 Start_9) (> Start_11 Start_11)))
   (Start_1 Int (y (- Start_1) (+ Start_2 Start_1) (* Start Start) (div Start Start_3)))
   (Start_3 Int (4 3 x 0 5 2 (- Start_3) (- Start Start_2) (* Start Start) (div Start_1 Start_3) (mod Start_2 Start_2) (abs Start_1) (ite StartBool_1 Start_1 Start_1)))
   (Start_10 Int (1 (- Start_3 Start_6) (+ Start_8 Start_4) (mod Start Start)))
   (Start_7 Int (4 (- Start_5 Start_2) (+ Start_3 Start_6) (mod Start_6 Start_5) (abs Start_4) (ite StartBool Start_2 Start_5)))
   (Start_6 Int (3 2 1 x 4 0 y (- Start_3) (- Start_8 Start_5) (* Start_5 Start_5) (div Start_8 Start_5) (mod Start_6 Start_4) (abs Start_7)))
   (Start_8 Int (x (- Start_8) (- Start_8 Start) (* Start_2 Start) (abs Start_7)))
   (Start_11 Int (5 (- Start) (+ Start_5 Start_1) (div Start Start_4)))
   (StartBool_1 Bool (false (or StartBool_1 StartBool) (< Start_3 Start_6) (<= Start_8 Start_5)))
   (Start_9 Int (y 4 3 0 2 1 (- Start_7) (- Start_10 Start_8) (+ Start_3 Start_6) (mod Start_3 Start_7) (ite StartBool_1 Start_9 Start_3)))
   (Start_5 Int (0 y 1 (- Start) (- Start_2 Start_4) (+ Start_9 Start_9) (div Start_10 Start_3) (mod Start_2 Start_9) (abs Start)))
   (Start_4 Int (2 4 (- Start_2) (- Start_9 Start_4) (div Start_1 Start) (mod Start_3 Start_7) (ite StartBool_2 Start_10 Start_9)))
   (StartBool_2 Bool (false true (and StartBool_2 StartBool_3) (or StartBool StartBool_1) (>= Start Start_10) (> Start_2 Start_9)))
   (Start_2 Int (2 (- Start_4) (* Start_5 Start_6) (mod Start_1 Start_1) (abs Start_7)))
   (StartBool_3 Bool (false (and StartBool StartBool_3) (< Start_6 Start_3) (<= Start_8 Start_2) (= Start_1 Start_9) (>= Start_7 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* 5 (div y (mod (+ 2 x) (- y 3)))))))

(check-synth)
