(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (StartBool_6 Bool) (Start_14 Int) (Start_15 Int) (StartBool_3 Bool) (Start_1 Int) (Start_13 Int) (Start_3 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_6 Int) (Start_5 Int) (Start_2 Int) (Start_8 Int) (Start_11 Int) (Start_10 Int) (Start_4 Int) (StartBool_2 Bool) (Start_7 Int) (Start_12 Int))
  ((Start Int (x 4 (- Start_1) (- Start_1 Start_1) (* Start_2 Start) (mod Start Start_3)))
   (StartBool Bool (true false (or StartBool_5 StartBool_2) (<= Start_9 Start_10) (= Start_5 Start_14) (>= Start_12 Start)))
   (StartBool_5 Bool (false (and StartBool_3 StartBool_6) (or StartBool_2 StartBool_3) (< Start_5 Start_5) (<= Start_6 Start) (>= Start_3 Start_6) (> Start_2 Start_15)))
   (StartBool_6 Bool (true (or StartBool_6 StartBool_6) (< Start_15 Start_8) (<= Start_3 Start_15) (> Start_8 Start_1)))
   (Start_14 Int (4 x 1 5 3 2 (div Start_5 Start_11) (abs Start_2)))
   (Start_15 Int (y 2 x 5 (+ Start_3 Start_3) (* Start_9 Start_13) (div Start_5 Start_12) (mod Start_14 Start_11) (abs Start_8)))
   (StartBool_3 Bool (false (not StartBool_4) (and StartBool_2 StartBool_4) (< Start_11 Start_11) (= Start_3 Start_9)))
   (Start_1 Int (4 2 (- Start_5 Start_9) (+ Start_10 Start_14) (mod Start_13 Start_13) (abs Start_13) (ite StartBool_2 Start_11 Start_15)))
   (Start_13 Int (0 3 (div Start_6 Start_6) (abs Start_10) (ite StartBool_3 Start_3 Start_4)))
   (Start_3 Int (y (- Start_4 Start_4) (+ Start_4 Start_2) (* Start_4 Start_1)))
   (Start_9 Int (3 (+ Start_2 Start_4) (ite StartBool_1 Start_10 Start_5)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_2) (<= Start_6 Start_4) (= Start_4 Start_1) (>= Start_7 Start_5) (> Start_7 Start_7)))
   (StartBool_4 Bool (false (not StartBool) (or StartBool StartBool_1) (< Start_13 Start_9) (> Start_6 Start_3)))
   (Start_6 Int (x 5 (- Start_10) (- Start_6 Start_10) (+ Start_9 Start_7) (div Start_11 Start_8) (ite StartBool Start_8 Start_13)))
   (Start_5 Int (1 5 (- Start_1 Start_2) (+ Start_6 Start_7) (* Start_4 Start_1) (abs Start_6) (ite StartBool Start_8 Start_8)))
   (Start_2 Int (2 (- Start_5) (- Start Start_4) (+ Start Start) (* Start_1 Start_3)))
   (Start_8 Int (x (- Start_2) (- Start_6 Start_9) (* Start_1 Start_10) (div Start_4 Start_6) (abs Start)))
   (Start_11 Int (y 3 (- Start_5) (- Start Start_1) (div Start_1 Start_6) (mod Start_6 Start_3)))
   (Start_10 Int (0 2 y 5 (- Start_3) (+ Start_10 Start_1) (div Start_9 Start_8) (mod Start_4 Start_4) (abs Start_3)))
   (Start_4 Int (3 (div Start_1 Start_2) (abs Start_3)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool) (>= Start_3 Start_1)))
   (Start_7 Int (4 y 0 3 (- Start_9) (- Start_11 Start_11) (+ Start_1 Start_5) (* Start_2 Start_8) (div Start_10 Start_12)))
   (Start_12 Int (0 5 (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (* x 2) y)))

(check-synth)
