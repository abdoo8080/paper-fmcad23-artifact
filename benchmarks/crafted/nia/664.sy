(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_3 Int) (Start_10 Int) (StartBool_7 Bool) (Start_4 Int) (StartBool_4 Bool) (Start_6 Int) (Start_2 Int) (Start_5 Int) (StartBool_2 Bool) (Start_8 Int) (StartBool_6 Bool) (StartBool_3 Bool) (Start_11 Int) (Start_7 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_5 Bool))
  ((Start Int (3 y (abs Start)))
   (StartBool Bool (true (<= Start_1 Start_1) (= Start_1 Start) (>= Start Start_2)))
   (Start_1 Int (x (- Start_6) (+ Start_3 Start_2) (* Start_9 Start_10) (mod Start_6 Start_7) (abs Start_10)))
   (Start_3 Int (5 1 2 (* Start_3 Start_7) (div Start_9 Start_7) (mod Start_11 Start_1)))
   (Start_10 Int (2 (- Start_8) (* Start_7 Start_1) (abs Start_9) (ite StartBool_2 Start_8 Start_8)))
   (StartBool_7 Bool (true (not StartBool_6) (and StartBool_7 StartBool_2) (or StartBool_6 StartBool_3) (<= Start_2 Start) (= Start_9 Start_9)))
   (Start_4 Int (x y 0 2 5 (- Start_3) (- Start_3 Start_2) (+ Start_4 Start_2) (* Start_4 Start_1) (div Start_10 Start_5) (abs Start_7) (ite StartBool_2 Start_8 Start_8)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_7 StartBool_7) (or StartBool_3 StartBool_6) (< Start_5 Start_2) (>= Start_5 Start_4) (> Start_5 Start_7)))
   (Start_6 Int (2 (+ Start_2 Start_4) (abs Start_6) (ite StartBool_1 Start_6 Start_1)))
   (Start_2 Int (4 (- Start_1) (* Start_3 Start_4) (div Start_1 Start_4) (ite StartBool Start_1 Start_5)))
   (Start_5 Int (0 3 (+ Start_6 Start_3) (* Start_3 Start) (div Start_4 Start) (abs Start_5) (ite StartBool Start_1 Start_1)))
   (StartBool_2 Bool (false true (and StartBool StartBool) (or StartBool_3 StartBool_1) (<= Start_4 Start_7) (>= Start_2 Start_7)))
   (Start_8 Int (y 0 3 2 5 x 4 (- Start_6 Start_5) (+ Start_7 Start_2) (ite StartBool_2 Start_6 Start_1)))
   (StartBool_6 Bool (true false (not StartBool_5) (and StartBool_2 StartBool_2) (or StartBool_2 StartBool_3) (> Start_3 Start_9)))
   (StartBool_3 Bool (true (not StartBool_4) (or StartBool_5 StartBool_2) (<= Start_4 Start_6) (>= Start Start_2) (> Start_5 Start_9)))
   (Start_11 Int (5 (- Start_11) (- Start_11 Start_9) (* Start_6 Start_8) (div Start Start) (abs Start_4) (ite StartBool_4 Start_6 Start_2)))
   (Start_7 Int (2 (- Start_8 Start_2) (+ Start_5 Start_4) (* Start_5 Start_2) (div Start_7 Start) (mod Start Start_1)))
   (Start_9 Int (4 0 (div Start Start_7) (mod Start_7 Start_3) (abs Start_6)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool StartBool_1) (< Start Start) (<= Start_3 Start_1) (> Start Start_1)))
   (StartBool_5 Bool (false (or StartBool_1 StartBool_6) (< Start Start_5) (<= Start Start) (= Start_2 Start_5) (> Start_1 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- 5 (mod 1 x)))))

(check-synth)
