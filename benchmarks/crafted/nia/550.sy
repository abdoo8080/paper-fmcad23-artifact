(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_11 Int) (Start_12 Int) (Start_5 Int) (Start_8 Int) (Start_2 Int) (Start_1 Int) (StartBool_2 Bool) (Start_3 Int) (StartBool_5 Bool) (StartBool_1 Bool) (Start_6 Int) (StartBool_4 Bool) (StartBool_3 Bool) (Start_4 Int) (Start_7 Int) (Start_9 Int))
  ((Start Int (2 (- Start_1) (- Start_1 Start) (+ Start_1 Start) (mod Start_1 Start_1) (abs Start) (ite StartBool Start_2 Start)))
   (StartBool Bool (true (not StartBool_1) (or StartBool_3 StartBool_5) (<= Start_12 Start_1) (>= Start_3 Start_12) (> Start Start_10)))
   (Start_10 Int (y 2 (- Start_9) (- Start_12 Start_8) (* Start_8 Start_11) (mod Start_9 Start_10) (abs Start_2) (ite StartBool_2 Start_3 Start_7)))
   (Start_11 Int (x (- Start_12 Start_3) (+ Start_6 Start_12) (* Start_12 Start_12) (div Start_11 Start_3) (mod Start_5 Start_12)))
   (Start_12 Int (5 y 1 2 (- Start_1) (+ Start_3 Start_3) (* Start_2 Start) (mod Start_6 Start_6)))
   (Start_5 Int (5 y (- Start_4) (- Start_2 Start_2) (+ Start_1 Start_2) (div Start_1 Start_6)))
   (Start_8 Int (0 (+ Start_7 Start_8) (div Start_3 Start_4)))
   (Start_2 Int (1))
   (Start_1 Int (x 2 (div Start_2 Start_1) (mod Start_2 Start_3) (abs Start_2)))
   (StartBool_2 Bool (true (not StartBool_1) (and StartBool_1 StartBool_1) (or StartBool_4 StartBool_4) (< Start_8 Start_3) (> Start_12 Start_8)))
   (Start_3 Int (y (- Start_3) (- Start_2 Start_3) (mod Start_4 Start_5) (abs Start_3)))
   (StartBool_5 Bool (false true (not StartBool_4) (or StartBool_4 StartBool) (< Start_12 Start_7) (>= Start_12 Start)))
   (StartBool_1 Bool (true (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_1) (< Start_6 Start_6) (= Start_5 Start_4) (>= Start_3 Start_6) (> Start_1 Start_2)))
   (Start_6 Int (5 (- Start_3) (* Start Start_7) (div Start_5 Start_3) (mod Start_5 Start_6) (ite StartBool Start_7 Start_6)))
   (StartBool_4 Bool (false (not StartBool_2) (or StartBool_5 StartBool_3) (<= Start_3 Start_2) (= Start_1 Start_8)))
   (StartBool_3 Bool (true (and StartBool StartBool_1) (<= Start_8 Start_8) (= Start_7 Start_1)))
   (Start_4 Int (5 4 1 (- Start_7) (div Start_9 Start_6) (abs Start_8)))
   (Start_7 Int (x (- Start_5) (- Start_6 Start_4) (div Start_8 Start_1)))
   (Start_9 Int (1 (- Start_3) (+ Start_6 Start_8) (* Start_10 Start_9) (abs Start_11) (ite StartBool_1 Start_7 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 0 (div 5 x))))

(check-synth)
