(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_16 Int) (Start_15 Int) (StartBool_7 Bool) (Start_2 Int) (Start_13 Int) (Start_11 Int) (Start_14 Int) (StartBool_5 Bool) (StartBool_2 Bool) (Start_1 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_4 Int) (Start_6 Int) (Start_10 Int) (Start_9 Int) (Start_8 Int) (Start_5 Int) (StartBool_4 Bool) (Start_12 Int) (Start_7 Int) (Start_3 Int) (StartBool_6 Bool))
  ((Start Int (y x 1 (- Start_1 Start) (+ Start_1 Start) (* Start_2 Start_2) (mod Start_2 Start_3) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (false true (not StartBool_7) (< Start_14 Start_15) (> Start_3 Start_16)))
   (Start_16 Int (4 0 (- Start_8) (+ Start_11 Start_5) (div Start_6 Start_6) (ite StartBool_6 Start_16 Start_13)))
   (Start_15 Int (4 0 (+ Start_14 Start_7) (* Start_6 Start_8) (div Start_8 Start_1) (abs Start_15)))
   (StartBool_7 Bool (true (<= Start_4 Start_14) (> Start_15 Start_8)))
   (Start_2 Int (x y 1 (- Start_14 Start_5) (+ Start_5 Start_1)))
   (Start_13 Int (4 (+ Start_9 Start_3)))
   (Start_11 Int (0 (+ Start_5 Start_1) (ite StartBool_6 Start_4 Start_7)))
   (Start_14 Int (0 2 4 (+ Start_1 Start_14) (* Start_3 Start_11) (div Start_12 Start_9) (mod Start_2 Start_8) (ite StartBool_6 Start Start_3)))
   (StartBool_5 Bool (true (not StartBool_1) (or StartBool_6 StartBool_3) (< Start_2 Start) (= Start_9 Start_10) (>= Start Start_8) (> Start_1 Start_5)))
   (StartBool_2 Bool (true (not StartBool_2) (< Start_2 Start) (= Start_4 Start) (>= Start Start) (> Start_1 Start_2)))
   (Start_1 Int (y (- Start_5) (- Start_5 Start_5) (+ Start_13 Start_1) (* Start_14 Start_5) (div Start_3 Start_8) (ite StartBool_7 Start Start_4)))
   (StartBool_1 Bool (true false (not StartBool_2) (and StartBool_3 StartBool_3) (or StartBool_3 StartBool) (<= Start Start_3) (= Start_2 Start) (>= Start_3 Start_2) (> Start_1 Start)))
   (StartBool_3 Bool (true (or StartBool StartBool_3) (= Start_1 Start_1) (>= Start_2 Start_2) (> Start_3 Start_3)))
   (Start_4 Int (4 (- Start_2 Start_4) (+ Start Start_5) (div Start_3 Start) (mod Start_6 Start_3)))
   (Start_6 Int (2 (+ Start_3 Start_5) (abs Start_6) (ite StartBool_1 Start_7 Start)))
   (Start_10 Int (4 (- Start_6) (- Start_11 Start_12) (div Start Start_4) (mod Start_11 Start_7) (abs Start_8)))
   (Start_9 Int (0 (- Start_9) (- Start_7 Start_5) (+ Start Start) (* Start_4 Start) (div Start_3 Start_9) (ite StartBool_6 Start_9 Start_7)))
   (Start_8 Int (1 2 (- Start_7) (ite StartBool_2 Start_4 Start_3)))
   (Start_5 Int (2 5 (- Start_8) (- Start_8 Start) (+ Start_3 Start_6) (* Start_1 Start_1) (abs Start_2)))
   (StartBool_4 Bool (false true (and StartBool_4 StartBool_2) (or StartBool_3 StartBool_5) (< Start_4 Start_4) (<= Start_9 Start_6) (= Start Start_6)))
   (Start_12 Int (5 (* Start_13 Start_1) (mod Start_9 Start)))
   (Start_7 Int (y x 5 3 (div Start_3 Start_6) (mod Start_2 Start_5) (ite StartBool_1 Start_4 Start)))
   (Start_3 Int (5 0 1 (* Start_1 Start_4) (div Start_4 Start_8) (mod Start Start) (abs Start_2) (ite StartBool_4 Start_5 Start_6)))
   (StartBool_6 Bool (false true (not StartBool_5) (or StartBool StartBool) (= Start_2 Start_10) (>= Start_11 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 5 (mod y 5))))

(check-synth)
