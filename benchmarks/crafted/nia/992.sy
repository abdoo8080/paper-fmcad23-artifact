(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_6 Int) (Start_17 Int) (Start_16 Int) (Start_5 Int) (Start_14 Int) (StartBool_6 Bool) (StartBool_5 Bool) (StartBool_1 Bool) (Start_3 Int) (Start_12 Int) (Start_10 Int) (Start_4 Int) (Start_9 Int) (Start_8 Int) (StartBool_4 Bool) (StartBool_3 Bool) (Start_2 Int) (Start_13 Int) (Start_1 Int) (StartBool_2 Bool) (Start_11 Int) (Start_7 Int) (Start_15 Int))
  ((Start Int (y x 2 (+ Start Start_1) (ite StartBool Start_2 Start_2)))
   (StartBool Bool (true false (not StartBool_2) (and StartBool_5 StartBool_6) (or StartBool_3 StartBool_1) (< Start_2 Start_17) (= Start_6 Start_15) (>= Start_4 Start)))
   (Start_6 Int (4 (- Start_11 Start_6) (+ Start_7 Start_6) (div Start_14 Start_11)))
   (Start_17 Int (1 (- Start_10) (* Start_6 Start_10) (div Start Start_11)))
   (Start_16 Int (x (- Start_15) (- Start_1 Start_5) (div Start_16 Start_10) (mod Start_6 Start_6) (abs Start_7) (ite StartBool Start_14 Start_11)))
   (Start_5 Int (x 5 y 1 0 4 3 (+ Start_17 Start_1) (* Start_5 Start_3) (div Start_6 Start_5) (ite StartBool_1 Start_17 Start_6)))
   (Start_14 Int (3 (- Start_6 Start_13) (+ Start_4 Start_9) (* Start_6 Start_14) (abs Start_16) (ite StartBool_4 Start_3 Start)))
   (StartBool_6 Bool (false true (not StartBool_4) (< Start_2 Start_10) (<= Start_10 Start_6) (= Start_14 Start_11) (> Start_12 Start_6)))
   (StartBool_5 Bool (true false (and StartBool StartBool_5) (or StartBool StartBool_6) (<= Start_2 Start_15) (= Start_13 Start_15) (> Start_12 Start_3)))
   (StartBool_1 Bool (false true (not StartBool_1) (and StartBool_1 StartBool) (or StartBool_2 StartBool)))
   (Start_3 Int (0 2 4 (abs Start_3)))
   (Start_12 Int (x (- Start_1) (div Start_16 Start_10) (ite StartBool Start_11 Start_15)))
   (Start_10 Int (3 (- Start_3) (- Start_11 Start_9) (+ Start_6 Start_8) (div Start_11 Start_7) (mod Start_11 Start_1) (ite StartBool Start_4 Start_5)))
   (Start_4 Int (1 (- Start_5) (- Start_6 Start_7) (+ Start_7 Start_3) (div Start_3 Start_7) (abs Start_4) (ite StartBool Start_2 Start_8)))
   (Start_9 Int (y 5 3 1 (* Start_10 Start_6) (mod Start_4 Start_9) (ite StartBool_4 Start_5 Start_5)))
   (Start_8 Int (2 y 3 4 (+ Start_3 Start_9) (* Start_7 Start_8) (abs Start_7) (ite StartBool_1 Start_6 Start_4)))
   (StartBool_4 Bool (false (or StartBool_4 StartBool_3) (= Start_9 Start_7) (>= Start_2 Start_10) (> Start_6 Start_10)))
   (StartBool_3 Bool (false true (not StartBool_1) (< Start_3 Start_4) (<= Start_8 Start_9) (= Start_4 Start_4) (> Start Start_2)))
   (Start_2 Int (y (- Start_2) (- Start_3 Start_2) (* Start_3 Start) (abs Start_4) (ite StartBool Start Start_3)))
   (Start_13 Int (0 (- Start_8) (- Start_12 Start_1) (+ Start_14 Start_4) (* Start_4 Start_15) (div Start_3 Start_5) (mod Start_3 Start_7)))
   (Start_1 Int (5 (* Start_16 Start_7) (div Start_5 Start_4) (mod Start_13 Start_15) (abs Start_5)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_3 StartBool_3) (> Start_6 Start_4)))
   (Start_11 Int (3 (- Start_9) (- Start_12 Start_7) (+ Start_8 Start_3) (* Start_9 Start_11) (div Start_13 Start_10) (mod Start_2 Start_3) (abs Start_1) (ite StartBool_3 Start_12 Start_8)))
   (Start_7 Int (4 (- Start_9) (- Start_12 Start_7) (+ Start_16 Start_7) (div Start_6 Start_3) (mod Start_7 Start_1) (ite StartBool_6 Start_11 Start_10)))
   (Start_15 Int (1 (+ Start_10 Start_14) (div Start_11 Start_1) (abs Start_14) (ite StartBool_5 Start_4 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (mod 5 x) 4)))

(check-synth)
