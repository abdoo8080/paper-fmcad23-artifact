(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_3 Int) (Start_16 Int) (Start_1 Int) (Start_15 Int) (StartBool_1 Bool) (Start_17 Int) (Start_14 Int) (Start_5 Int) (Start_4 Int) (Start_10 Int) (Start_2 Int) (StartBool_2 Bool) (Start_9 Int) (Start_12 Int) (Start_13 Int) (Start_11 Int) (StartBool_4 Bool) (Start_8 Int) (StartBool_3 Bool) (Start_7 Int) (Start_6 Int))
  ((Start Int (1 y (+ Start_1 Start) (* Start_1 Start_1) (mod Start Start)))
   (StartBool Bool (false true (= Start_3 Start_8) (> Start_8 Start_1)))
   (Start_3 Int (2 0 (- Start_16 Start_15) (+ Start_2 Start_10) (div Start_15 Start_11) (abs Start_5) (ite StartBool_1 Start_17 Start_15)))
   (Start_16 Int (0 (- Start_5 Start_3) (+ Start_9 Start_10) (div Start_17 Start_9) (mod Start_7 Start_14) (abs Start_9)))
   (Start_1 Int (3 4 (- Start Start) (+ Start Start_2) (div Start_1 Start_3) (mod Start_4 Start_3) (abs Start_3) (ite StartBool_1 Start Start_4)))
   (Start_15 Int (3 x (- Start_15 Start_2) (+ Start_16 Start) (div Start_7 Start_17) (ite StartBool_4 Start_3 Start_11)))
   (StartBool_1 Bool (true false (or StartBool StartBool) (<= Start_4 Start) (= Start Start_4) (>= Start_2 Start_5) (> Start_4 Start_2)))
   (Start_17 Int (3 y x 0 (- Start_1) (- Start_13 Start_1) (div Start Start_2) (ite StartBool_4 Start_10 Start_2)))
   (Start_14 Int (1 (- Start_2) (* Start_2 Start_7) (div Start_14 Start_4) (mod Start_10 Start_6) (abs Start_9) (ite StartBool_4 Start_2 Start_3)))
   (Start_5 Int (1 x (- Start Start_3) (+ Start_1 Start_2) (div Start_6 Start_1) (abs Start_6) (ite StartBool_2 Start_6 Start)))
   (Start_4 Int (5 1 x (ite StartBool_4 Start_12 Start_5)))
   (Start_10 Int (5 (- Start_5) (- Start_8 Start) (+ Start_9 Start_10) (* Start_8 Start_11) (div Start_3 Start_10) (mod Start_7 Start_12) (ite StartBool_1 Start_9 Start_9)))
   (Start_2 Int (5 (+ Start_14 Start_2) (ite StartBool_4 Start_12 Start_8)))
   (StartBool_2 Bool (true false (not StartBool_1) (<= Start_5 Start_1) (= Start_3 Start_7) (> Start_8 Start_9)))
   (Start_9 Int (2 (- Start_2) (* Start_8 Start_3) (div Start_2 Start_10) (ite StartBool_2 Start_2 Start_10)))
   (Start_12 Int (3 (* Start_8 Start_2) (div Start_5 Start_8) (abs Start_1)))
   (Start_13 Int (y (- Start_14 Start_2) (* Start_10 Start_15) (mod Start_9 Start_16) (ite StartBool_3 Start_10 Start_1)))
   (Start_11 Int (4 3 5 (- Start_4) (mod Start Start_6) (abs Start)))
   (StartBool_4 Bool (true (not StartBool_2) (< Start_11 Start_9) (<= Start_6 Start_13) (= Start_3 Start_10) (>= Start_13 Start_15) (> Start_5 Start_13)))
   (Start_8 Int (x y 0 5 4 3 1 (div Start_6 Start) (mod Start_4 Start_10) (abs Start_12) (ite StartBool_1 Start_7 Start_5)))
   (StartBool_3 Bool (true (< Start_1 Start_13) (<= Start_8 Start_14)))
   (Start_7 Int (2 y x (* Start_9 Start_5) (div Start_9 Start_2) (mod Start_9 Start_1)))
   (Start_6 Int (2 1 5 (- Start_9) (+ Start_8 Start_9) (ite StartBool_3 Start_1 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div y y))))

(check-synth)
