(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (StartBool_1 Bool) (Start_13 Int) (Start_12 Int) (Start_3 Int) (Start_5 Int) (Start_2 Int) (Start_8 Int) (Start_7 Int) (Start_4 Int) (Start_1 Int) (Start_6 Int) (Start_9 Int) (Start_11 Int) (StartBool_2 Bool) (Start_10 Int))
  ((Start Int (3 (+ Start_1 Start_2) (div Start_2 Start_3) (abs Start_1) (ite StartBool Start_1 Start)))
   (StartBool Bool (false true (or StartBool_1 StartBool_1) (<= Start Start_8) (= Start_2 Start_2) (>= Start_3 Start_6) (> Start Start_9)))
   (Start_14 Int (x (- Start_8) (+ Start_10 Start_5) (div Start_5 Start)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool_2 StartBool_1) (= Start_13 Start_6) (>= Start_12 Start_13)))
   (Start_13 Int (3 5 x 4 1 2 y 0 (- Start_11 Start_3) (div Start_14 Start_3) (abs Start_1)))
   (Start_12 Int (2 (- Start_1) (* Start_2 Start_4) (mod Start_13 Start_4) (abs Start_14) (ite StartBool_2 Start_9 Start_2)))
   (Start_3 Int (0 (- Start) (div Start_4 Start)))
   (Start_5 Int (3 (- Start_3) (* Start_1 Start_3) (div Start_1 Start_5) (ite StartBool Start_1 Start_3)))
   (Start_2 Int (1 3 0 2 4 (- Start_6) (+ Start_4 Start_4) (* Start_4 Start) (div Start Start_6) (mod Start Start_1) (ite StartBool Start Start_7)))
   (Start_8 Int (1 (+ Start_8 Start_4) (div Start_1 Start_11) (abs Start_2)))
   (Start_7 Int (3 (- Start_3 Start_7) (+ Start_7 Start_4) (mod Start_7 Start_3) (abs Start_2)))
   (Start_4 Int (4 (- Start_4 Start_1) (mod Start_5 Start) (abs Start_4)))
   (Start_1 Int (y (* Start_5 Start_6) (abs Start_1)))
   (Start_6 Int (1 (- Start_3 Start) (+ Start_6 Start_3) (* Start_3 Start_7) (abs Start_2)))
   (Start_9 Int (0 (- Start_4) (div Start_4 Start_3) (mod Start_2 Start_9) (abs Start) (ite StartBool_2 Start_1 Start_7)))
   (Start_11 Int (x (- Start_12) (- Start_1 Start_2) (mod Start_7 Start) (abs Start_2)))
   (StartBool_2 Bool (false (not StartBool_1) (or StartBool StartBool_1) (<= Start_7 Start_10) (= Start_6 Start_5) (>= Start_10 Start_4)))
   (Start_10 Int (5 y 0 (- Start_4 Start_3) (ite StartBool Start_8 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- y) (mod y 2))))

(check-synth)
