(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (StartBool_2 Bool) (Start_16 Int) (Start_9 Int) (StartBool_1 Bool) (Start_14 Int) (StartBool_3 Bool) (Start_7 Int) (Start_2 Int) (Start_3 Int) (Start_8 Int) (Start_5 Int) (Start_12 Int) (Start_15 Int) (Start_1 Int) (Start_13 Int) (Start_11 Int) (Start_4 Int) (Start_6 Int) (Start_10 Int))
  ((Start Int (3 (- Start_1) (- Start_1 Start) (+ Start_2 Start_2) (mod Start_1 Start_2) (ite StartBool Start_2 Start)))
   (StartBool Bool (true false (not StartBool_1) (and StartBool StartBool_2) (or StartBool_2 StartBool_1) (< Start_3 Start_6) (<= Start_3 Start_7) (= Start_7 Start_5) (> Start_6 Start_8)))
   (StartBool_4 Bool (true false (not StartBool_4) (and StartBool_4 StartBool_4) (<= Start_14 Start_8) (= Start_6 Start_3) (>= Start_12 Start_7)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_4 StartBool_3) (or StartBool_2 StartBool_4) (= Start_16 Start_14) (>= Start_16 Start_15) (> Start_7 Start_4)))
   (Start_16 Int (1 (div Start_2 Start)))
   (Start_9 Int (0 3 (+ Start_10 Start_4) (* Start_1 Start_8) (mod Start_11 Start_15) (abs Start_3)))
   (StartBool_1 Bool (true false (or StartBool_2 StartBool_2) (<= Start_7 Start_13) (>= Start_15 Start_12)))
   (Start_14 Int (0 x (- Start_2) (* Start_7 Start_8) (ite StartBool Start_7 Start_6)))
   (StartBool_3 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_3) (<= Start Start_6) (= Start_8 Start_14) (>= Start_8 Start_6) (> Start_14 Start_8)))
   (Start_7 Int (3 1 (- Start_7) (- Start_5 Start_5) (* Start_4 Start_1) (mod Start_5 Start_6) (abs Start_4)))
   (Start_2 Int (3 2 0 y (- Start) (- Start_3 Start_2) (+ Start_1 Start) (mod Start_3 Start_2)))
   (Start_3 Int (3 (- Start) (+ Start Start_1) (* Start_1 Start) (ite StartBool Start Start)))
   (Start_8 Int (4 (- Start_3) (+ Start_9 Start_8) (* Start_7 Start) (mod Start_3 Start_10)))
   (Start_5 Int (4 1 (- Start_3) (- Start_3 Start_3) (* Start_3 Start_1) (ite StartBool Start Start_6)))
   (Start_12 Int (x (- Start_12 Start_5) (+ Start_7 Start_13) (div Start_10 Start_10)))
   (Start_15 Int (1 (+ Start_6 Start_15) (* Start_11 Start_3) (div Start_10 Start_16) (mod Start_14 Start_1)))
   (Start_1 Int (1 y x 3 (mod Start Start_4) (abs Start_5)))
   (Start_13 Int (3 2 (- Start_11) (- Start_7 Start_11) (div Start_6 Start_5) (mod Start_11 Start_10) (abs Start_2)))
   (Start_11 Int (1 (div Start_10 Start_5) (ite StartBool_3 Start_11 Start_3)))
   (Start_4 Int (1 (* Start_6 Start_5) (div Start_5 Start_5) (mod Start_5 Start_7)))
   (Start_6 Int (0 2 y (- Start_3) (- Start_2 Start_5) (+ Start_5 Start_4) (* Start_3 Start_7) (mod Start Start_6) (abs Start_7)))
   (Start_10 Int (4 (- Start_7) (+ Start_7 Start_11) (div Start_8 Start) (mod Start_12 Start_5) (abs Start_10) (ite StartBool Start_8 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (+ y 3) 5)))

(check-synth)
