(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_22 Int) (StartBool_4 Bool) (Start_20 Int) (Start_3 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_21 Int) (Start_16 Int) (Start_17 Int) (Start_14 Int) (Start_2 Int) (Start_8 Int) (Start_7 Int) (Start_23 Int) (Start_4 Int) (Start_6 Int) (StartBool_1 Bool) (Start_1 Int) (Start_9 Int) (Start_15 Int) (Start_19 Int) (Start_10 Int) (Start_11 Int) (Start_18 Int) (Start_12 Int) (Start_5 Int) (Start_13 Int))
  ((Start Int (5 (div Start Start) (mod Start_1 Start_1) (abs Start_2)))
   (StartBool Bool (true (or StartBool_4 StartBool_1) (< Start_10 Start_14) (<= Start_19 Start_20) (= Start_7 Start_3) (>= Start_23 Start_20)))
   (Start_22 Int (0 (- Start_1) (- Start_4 Start_20) (div Start_8 Start_11) (abs Start_22) (ite StartBool_3 Start_18 Start_13)))
   (StartBool_4 Bool (false (not StartBool_2) (and StartBool_4 StartBool_3) (< Start_9 Start_13) (<= Start_2 Start_19)))
   (Start_20 Int (1 y 4 5 x 0 (- Start_10 Start_1) (+ Start_18 Start_5) (mod Start_8 Start) (ite StartBool_4 Start_6 Start_18)))
   (Start_3 Int (4 (- Start_15 Start_3) (+ Start_13 Start_19) (div Start_2 Start_22) (mod Start_16 Start_16) (abs Start_2) (ite StartBool_2 Start_18 Start_19)))
   (StartBool_3 Bool (true false (and StartBool_4 StartBool_2) (< Start_3 Start_19) (>= Start_1 Start_16)))
   (StartBool_2 Bool (false true (not StartBool_3) (< Start_1 Start_11) (<= Start_1 Start_10) (= Start_16 Start_14) (>= Start_1 Start_9)))
   (Start_21 Int (2 5 (- Start_14 Start_21) (mod Start_12 Start_22) (abs Start_6)))
   (Start_16 Int (y (- Start_9 Start_9) (* Start_5 Start_9) (div Start_17 Start_3)))
   (Start_17 Int (5 (- Start_3) (+ Start_18 Start_7) (* Start_18 Start_10) (mod Start_11 Start_15) (ite StartBool_2 Start Start_1)))
   (Start_14 Int (5 (- Start_1) (- Start_9 Start_6) (* Start_1 Start_8) (div Start Start) (mod Start_10 Start_4) (ite StartBool Start_7 Start)))
   (Start_2 Int (2 (- Start_2 Start) (+ Start_2 Start) (ite StartBool Start_1 Start_1)))
   (Start_8 Int (y 3 5 2 4 (- Start_11) (- Start_13 Start) (+ Start Start_14) (* Start_7 Start_11)))
   (Start_7 Int (0 2 x 3 y (- Start_2) (- Start_4 Start_2) (div Start_8 Start_1) (mod Start_9 Start_5)))
   (Start_23 Int (1 3 0 (- Start_4 Start_3) (+ Start_23 Start_1) (* Start_5 Start_21) (div Start_3 Start_18) (mod Start_7 Start_22)))
   (Start_4 Int (2 y (+ Start_15 Start_16) (div Start_9 Start_9) (abs Start_4) (ite StartBool_1 Start_10 Start_1)))
   (Start_6 Int (1 y 2 4 (- Start_2 Start_1) (* Start_6 Start_6) (mod Start_2 Start_7) (abs Start_3)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool_1 StartBool) (< Start_4 Start_12) (<= Start_4 Start_10) (= Start_1 Start) (> Start_9 Start_1)))
   (Start_1 Int (4 x 5 (- Start_3) (* Start_1 Start_2) (div Start_4 Start_5) (mod Start_5 Start_1)))
   (Start_9 Int (3 x 0 (- Start_8) (* Start_10 Start_3) (div Start_10 Start_2) (abs Start_7)))
   (Start_15 Int (y 4 x 5 3 2 (- Start_22) (- Start_5 Start_20) (div Start_3 Start_6)))
   (Start_19 Int (1 (- Start_5) (- Start_17 Start_15) (+ Start_20 Start_8) (ite StartBool_4 Start_17 Start_13)))
   (Start_10 Int (0 (- Start_9) (+ Start_9 Start_8) (* Start_11 Start_2) (div Start_7 Start_6) (mod Start_9 Start_6) (ite StartBool Start_7 Start_6)))
   (Start_11 Int (y 2 (- Start_12) (- Start_7 Start_2) (+ Start_13 Start_1) (* Start Start_9) (mod Start_3 Start_3) (abs Start_1)))
   (Start_18 Int (x 1 3 (- Start_6) (- Start_18 Start_21) (div Start_15 Start_4) (mod Start_13 Start_18) (abs Start_5) (ite StartBool Start_22 Start_18)))
   (Start_12 Int (y (- Start_10) (+ Start_12 Start_6) (abs Start_8)))
   (Start_5 Int (0 y (- Start_3 Start_4) (mod Start_2 Start_3) (ite StartBool Start_6 Start_5)))
   (Start_13 Int (y (* Start_2 Start_14) (div Start_10 Start_9) (mod Start_4 Start_3) (abs Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (= y 0) 3 0)))

(check-synth)
