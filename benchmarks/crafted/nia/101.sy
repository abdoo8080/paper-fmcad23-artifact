(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_1 Int) (Start_3 Int) (Start_12 Int) (Start_2 Int) (Start_9 Int) (Start_5 Int) (Start_4 Int) (StartBool_1 Bool) (Start_7 Int) (Start_10 Int) (StartBool_2 Bool) (Start_11 Int) (Start_8 Int) (Start_6 Int) (StartBool_3 Bool))
  ((Start Int (0 (- Start) (+ Start Start_1) (* Start_2 Start)))
   (StartBool Bool (true false (not StartBool_4) (< Start_7 Start_6) (<= Start_4 Start_12) (>= Start_10 Start_12)))
   (StartBool_4 Bool (true false (< Start_3 Start_7) (= Start_5 Start_6) (>= Start_7 Start_2) (> Start_10 Start_2)))
   (Start_1 Int (2 (- Start_1 Start_5) (mod Start_10 Start_8)))
   (Start_3 Int (1 (div Start_1 Start_7) (abs Start_10)))
   (Start_12 Int (3 0 y (- Start_5 Start_11) (abs Start_9) (ite StartBool_4 Start_7 Start_9)))
   (Start_2 Int (4 y (- Start) (- Start_3 Start_4) (* Start_2 Start_2) (div Start_1 Start_1) (ite StartBool Start_2 Start_1)))
   (Start_9 Int (5 2 4 y (- Start_8) (* Start_7 Start_4)))
   (Start_5 Int (3 (- Start_7) (- Start_6 Start_11)))
   (Start_4 Int (4 0 (- Start_4 Start_5) (div Start_4 Start_6) (mod Start_4 Start_7) (abs Start_4)))
   (StartBool_1 Bool (false true (or StartBool StartBool_2) (< Start_6 Start_5)))
   (Start_7 Int (0 (- Start_1) (- Start_4 Start_4) (* Start_4 Start_8) (mod Start_4 Start_1) (abs Start_2) (ite StartBool_1 Start_9 Start_5)))
   (Start_10 Int (3 (- Start) (div Start_3 Start_4) (mod Start_7 Start_8) (ite StartBool_2 Start_9 Start_6)))
   (StartBool_2 Bool (false (or StartBool StartBool_1) (< Start Start_5) (<= Start_9 Start_7) (= Start_9 Start_2) (>= Start_9 Start_6) (> Start_2 Start_8)))
   (Start_11 Int (x 5 3 (- Start_7 Start_3) (div Start Start_6) (mod Start_11 Start_6) (abs Start_11)))
   (Start_8 Int (y (mod Start_4 Start_10) (ite StartBool_3 Start Start_4)))
   (Start_6 Int (2 0 (- Start Start_1) (+ Start_9 Start_3) (* Start_4 Start_8) (div Start_11 Start_1) (mod Start_11 Start_10) (ite StartBool Start_4 Start_11)))
   (StartBool_3 Bool (false true (and StartBool StartBool_3) (> Start_3 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div x 5)))

(check-synth)
