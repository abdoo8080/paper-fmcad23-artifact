(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_16 Int) (StartBool_2 Bool) (Start_15 Int) (Start_14 Int) (StartBool_4 Bool) (Start_10 Int) (Start_1 Int) (Start_4 Int) (Start_3 Int) (Start_6 Int) (Start_13 Int) (Start_2 Int) (Start_8 Int) (Start_5 Int) (StartBool_3 Bool) (Start_7 Int) (Start_9 Int) (Start_11 Int) (StartBool_1 Bool) (Start_12 Int))
  ((Start Int (4 5 3 2 1 (- Start Start) (* Start Start_1) (div Start_2 Start) (abs Start) (ite StartBool Start Start_1)))
   (StartBool Bool (false (and StartBool StartBool_2) (< Start_3 Start_4) (= Start_1 Start_2) (> Start Start)))
   (Start_16 Int (4 3 (div Start_14 Start_15) (mod Start_1 Start_1) (abs Start_2)))
   (StartBool_2 Bool (true false (< Start_9 Start_16) (<= Start Start_2) (= Start_10 Start_7) (>= Start_16 Start_8) (> Start_13 Start)))
   (Start_15 Int (x 1 3 (- Start_14) (+ Start_15 Start_10) (* Start_9 Start_1) (abs Start_14) (ite StartBool Start_6 Start_2)))
   (Start_14 Int (3 (- Start_5) (* Start_12 Start_15) (ite StartBool_4 Start_3 Start_4)))
   (StartBool_4 Bool (true (not StartBool_1) (and StartBool_2 StartBool_1) (= Start_2 Start_2) (>= Start_1 Start_10)))
   (Start_10 Int (2 (- Start_4) (- Start_13 Start_13) (* Start_11 Start_2) (div Start_1 Start_12) (abs Start_7) (ite StartBool Start_3 Start_7)))
   (Start_1 Int (y (div Start_1 Start_1) (mod Start_2 Start_1) (abs Start_1) (ite StartBool_1 Start_2 Start_1)))
   (Start_4 Int (x 3 (- Start_1 Start_3) (* Start Start) (div Start_4 Start_3)))
   (Start_3 Int (y (- Start_5) (+ Start_3 Start_4) (div Start_6 Start) (mod Start_1 Start_4) (abs Start) (ite StartBool_3 Start Start)))
   (Start_6 Int (y (- Start_8) (+ Start_13 Start_2) (* Start_5 Start) (div Start_4 Start_2) (mod Start_5 Start_6)))
   (Start_13 Int (2 4 (- Start_2) (* Start_11 Start_1) (div Start_7 Start_12) (abs Start_1) (ite StartBool_4 Start_12 Start_2)))
   (Start_2 Int (4 x (- Start_1) (abs Start_1)))
   (Start_8 Int (4 3 0 (* Start_8 Start_5) (abs Start_9)))
   (Start_5 Int (0 (- Start_10 Start_9) (+ Start Start) (* Start_8 Start_1) (ite StartBool_2 Start_2 Start_14)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_4) (<= Start_2 Start_4) (= Start_6 Start_6) (>= Start_2 Start_7) (> Start_4 Start)))
   (Start_7 Int (y (- Start_6 Start_8) (mod Start_4 Start)))
   (Start_9 Int (1 0 5 4 x 3 y 2 (- Start_7) (+ Start_10 Start_11) (* Start_10 Start_11) (div Start_10 Start_1) (mod Start_7 Start) (abs Start_5) (ite StartBool Start_4 Start_3)))
   (Start_11 Int (5 (+ Start_1 Start_2) (* Start_12 Start_10) (abs Start_3)))
   (StartBool_1 Bool (false true (not StartBool_1) (< Start_2 Start) (>= Start_2 Start_1)))
   (Start_12 Int (y 2 (- Start_4) (abs Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (mod (div 4 x) y) 2)))

(check-synth)
