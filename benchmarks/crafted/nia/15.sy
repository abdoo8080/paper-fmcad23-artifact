(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_3 Bool) (StartBool_10 Bool) (Start_5 Int) (StartBool_11 Bool) (Start_4 Int) (StartBool_9 Bool) (Start_14 Int) (Start_13 Int) (StartBool_8 Bool) (Start_10 Int) (Start_11 Int) (Start_15 Int) (Start_2 Int) (StartBool_6 Bool) (Start_9 Int) (Start_3 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_8 Int) (StartBool_5 Bool) (StartBool_7 Bool) (Start_7 Int) (StartBool_4 Bool) (Start_6 Int) (Start_12 Int))
  ((Start Int (3 (- Start_1) (mod Start Start_2)))
   (StartBool Bool (true false (or StartBool_9 StartBool_4) (= Start_2 Start_2) (>= Start_3 Start_13)))
   (Start_1 Int (5 (* Start_7 Start_14) (div Start Start_5) (mod Start_12 Start_5) (abs Start_7)))
   (StartBool_3 Bool (true false (not StartBool_9) (or StartBool_8 StartBool_1) (< Start Start_9)))
   (StartBool_10 Bool (true false (= Start_1 Start_5)))
   (Start_5 Int (3 (- Start_6) (- Start_2 Start_14) (+ Start_9 Start_7) (* Start_3 Start_13) (mod Start_1 Start_4) (abs Start_11)))
   (StartBool_11 Bool (true false (not StartBool_4) (and StartBool_8 StartBool_6) (or StartBool_2 StartBool_6) (= Start Start_9) (>= Start_6 Start_5)))
   (Start_4 Int (2 x 0 4 1 (+ Start_6 Start) (div Start_2 Start_8) (mod Start_15 Start_15)))
   (StartBool_9 Bool (false true (not StartBool_3) (and StartBool_2 StartBool_3) (<= Start_10 Start_4) (= Start_12 Start_10) (> Start_8 Start_10)))
   (Start_14 Int (y 5 4 (+ Start_14 Start_3) (* Start Start_8) (div Start_2 Start_2) (abs Start) (ite StartBool_9 Start_11 Start_5)))
   (Start_13 Int (0 3 2 (- Start_4) (abs Start) (ite StartBool_7 Start_4 Start_8)))
   (StartBool_8 Bool (false (and StartBool_7 StartBool_1) (or StartBool_8 StartBool_5) (<= Start_13 Start_5) (= Start_6 Start_6)))
   (Start_10 Int (1 (- Start_3) (* Start_3 Start_9) (div Start_11 Start_3) (abs Start) (ite StartBool_6 Start_2 Start_3)))
   (Start_11 Int (4 3 (* Start_12 Start_5) (mod Start_7 Start_10) (abs Start_9)))
   (Start_15 Int (1 (- Start_13 Start_3) (ite StartBool_10 Start_13 Start_10)))
   (Start_2 Int (5 0 2 (- Start_1) (+ Start_2 Start_3) (* Start_1 Start_1) (div Start_2 Start) (mod Start Start_3) (abs Start_3) (ite StartBool_1 Start_1 Start_2)))
   (StartBool_6 Bool (false (not StartBool_1) (and StartBool_6 StartBool_2) (or StartBool StartBool_4) (< Start_2 Start_3) (= Start_4 Start_3) (> Start_5 Start_6)))
   (Start_9 Int (3 2 4 5 (- Start_4) (- Start_9 Start_6) (div Start_2 Start_8) (mod Start_8 Start_10) (abs Start_9) (ite StartBool_1 Start_3 Start_10)))
   (Start_3 Int (2 (- Start_2) (* Start_1 Start) (div Start_10 Start_1) (mod Start_6 Start_13) (ite StartBool_11 Start_1 Start_11)))
   (StartBool_1 Bool (true (and StartBool StartBool_2) (<= Start Start) (>= Start_2 Start_3) (> Start_1 Start_1)))
   (StartBool_2 Bool (false (not StartBool_3) (and StartBool StartBool_2) (or StartBool_4 StartBool_5) (< Start Start_1) (<= Start_2 Start_2) (= Start_1 Start_1) (>= Start_1 Start_2) (> Start Start_1)))
   (Start_8 Int (3 1 (* Start_4 Start_5) (div Start_1 Start_14) (abs Start_3)))
   (StartBool_5 Bool (true false (or StartBool_6 StartBool_5) (>= Start Start_3) (> Start_1 Start)))
   (StartBool_7 Bool (true false (not StartBool_3) (or StartBool_8 StartBool) (<= Start_9 Start_1) (> Start_2 Start_13)))
   (Start_7 Int (2 (- Start_4) (* Start_8 Start_5) (mod Start_3 Start_8) (abs Start_9) (ite StartBool_3 Start_1 Start_2)))
   (StartBool_4 Bool (false (not StartBool_7)))
   (Start_6 Int (2 0 1 3 (+ Start_5 Start_6) (* Start_7 Start_6) (div Start_1 Start_6) (abs Start_1)))
   (Start_12 Int (0 y 5 (+ Start_13 Start_1) (mod Start_7 Start_12) (abs Start_2) (ite StartBool_7 Start_13 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod x (div y x))))

(check-synth)
