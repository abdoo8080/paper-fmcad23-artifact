(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (Start_13 Int) (Start_10 Int) (Start_2 Int) (Start_6 Int) (Start_1 Int) (StartBool_6 Bool) (Start_7 Int) (StartBool_1 Bool) (Start_11 Int) (Start_5 Int) (StartBool_7 Bool) (Start_3 Int) (Start_8 Int) (StartBool_2 Bool) (Start_4 Int) (StartBool_4 Bool) (Start_9 Int) (StartBool_5 Bool) (Start_12 Int))
  ((Start Int (1 3 (- Start) (+ Start Start_1) (* Start_1 Start_2) (abs Start_2) (ite StartBool Start_3 Start)))
   (StartBool Bool (true (not StartBool_1) (and StartBool_5 StartBool_7) (or StartBool_3 StartBool_1) (< Start_12 Start_13) (<= Start_11 Start_3) (> Start_1 Start_8)))
   (StartBool_3 Bool (true (not StartBool_3) (and StartBool StartBool_6) (< Start_8 Start_12) (<= Start_1 Start_1) (= Start_1 Start_11)))
   (Start_13 Int (3 (- Start_2) (- Start_10 Start_4) (* Start_4 Start_1) (mod Start_11 Start_8)))
   (Start_10 Int (3 (* Start_5 Start_4) (div Start_11 Start_5) (abs Start_3) (ite StartBool_4 Start_13 Start_11)))
   (Start_2 Int (0 (* Start_3 Start) (div Start_1 Start_2) (abs Start_2)))
   (Start_6 Int (0 1 2 4 3 y 5 (+ Start_7 Start_7) (div Start_2 Start_8) (mod Start_7 Start_7) (abs Start_4)))
   (Start_1 Int (0 5 3 (- Start_3) (- Start_2 Start_3) (* Start_1 Start_3) (div Start_2 Start_4) (mod Start_4 Start) (ite StartBool_1 Start_3 Start)))
   (StartBool_6 Bool (true false (and StartBool StartBool_1) (or StartBool_1 StartBool) (< Start_7 Start_13) (>= Start_12 Start_1)))
   (Start_7 Int (2 1 (- Start_1) (+ Start_8 Start_4) (* Start_8 Start_9) (mod Start_2 Start_10) (abs Start_9) (ite StartBool_4 Start_4 Start_1)))
   (StartBool_1 Bool (false (not StartBool_2) (or StartBool_2 StartBool) (< Start Start_4) (<= Start_3 Start_1) (>= Start_4 Start) (> Start_5 Start_2)))
   (Start_11 Int (3 (- Start_9) (- Start_5 Start_12) (+ Start_6 Start_9) (mod Start_5 Start_4)))
   (Start_5 Int (y 3 (* Start_3 Start_5) (div Start_3 Start_4) (mod Start_2 Start_3) (abs Start_4)))
   (StartBool_7 Bool (true (and StartBool_2 StartBool_6) (= Start_2 Start_8) (> Start_2 Start_12)))
   (Start_3 Int (1 x (+ Start_2 Start_1)))
   (Start_8 Int (y 1 (+ Start_6 Start_5) (* Start_8 Start_8) (mod Start_8 Start) (abs Start_6) (ite StartBool_2 Start_7 Start_7)))
   (StartBool_2 Bool (false true (not StartBool) (or StartBool_1 StartBool_3) (>= Start Start_6)))
   (Start_4 Int (4 (- Start_1) (- Start_1 Start_10) (div Start_7 Start_2)))
   (StartBool_4 Bool (true false (and StartBool StartBool_4) (or StartBool StartBool_2) (< Start_3 Start_11) (<= Start_7 Start_7) (= Start_6 Start_6) (>= Start_7 Start_12)))
   (Start_9 Int (1 x (- Start_9) (* Start_5 Start) (div Start_12 Start_9) (mod Start_3 Start_7) (ite StartBool_3 Start_7 Start_1)))
   (StartBool_5 Bool (false (not StartBool_5) (or StartBool_4 StartBool) (< Start_8 Start_1) (= Start_11 Start_9) (>= Start_3 Start_7) (> Start_2 Start_4)))
   (Start_12 Int (5 (- Start_8) (* Start_4 Start) (div Start Start_12) (mod Start Start_6) (ite StartBool_5 Start_1 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* 5 (abs (mod (abs (+ (mod (- 5) y) 4)) x))))))

(check-synth)
