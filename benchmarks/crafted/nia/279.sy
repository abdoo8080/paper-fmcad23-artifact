(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_23 Int) (Start_22 Int) (StartBool_3 Bool) (Start_11 Int) (Start_2 Int) (Start_18 Int) (Start_9 Int) (Start_10 Int) (StartBool_4 Bool) (Start_7 Int) (Start_6 Int) (Start_13 Int) (Start_1 Int) (Start_12 Int) (StartBool_5 Bool) (Start_14 Int) (Start_3 Int) (StartBool_2 Bool) (Start_16 Int) (Start_5 Int) (Start_8 Int) (StartBool_6 Bool) (Start_17 Int) (Start_19 Int) (Start_15 Int) (Start_4 Int) (Start_20 Int) (Start_21 Int) (StartBool_1 Bool) (StartBool_7 Bool))
  ((Start Int (0 3 (- Start Start) (+ Start_1 Start) (abs Start_2) (ite StartBool Start_3 Start_2)))
   (StartBool Bool (false true (not StartBool) (and StartBool_4 StartBool_1) (or StartBool_5 StartBool_5) (< Start_10 Start_5) (<= Start_14 Start_5) (> Start Start_8)))
   (Start_23 Int (0 (- Start_9) (- Start_5 Start_18) (+ Start_3 Start_17) (* Start_19 Start_3) (ite StartBool_5 Start_15 Start_13)))
   (Start_22 Int (2 (+ Start_23 Start_14) (* Start_15 Start_18) (mod Start_12 Start_1) (abs Start_15) (ite StartBool_7 Start_17 Start_5)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_4 StartBool_5) (< Start_4 Start_3) (<= Start_5 Start_10) (> Start_4 Start_6)))
   (Start_11 Int (2 (- Start_8 Start_6) (+ Start_11 Start_3) (* Start_12 Start) (mod Start_1 Start_9) (abs Start_4) (ite StartBool_2 Start_11 Start_3)))
   (Start_2 Int (0 (- Start_12) (div Start_10 Start_3) (mod Start_19 Start_7) (abs Start_19) (ite StartBool_2 Start_13 Start_6)))
   (Start_18 Int (3 (- Start_10) (- Start_16 Start_6) (* Start_9 Start_4) (mod Start_6 Start_1) (ite StartBool_1 Start_14 Start_3)))
   (Start_9 Int (y 5 2 1 3 4 0 (- Start_2 Start_6) (* Start_2 Start_6) (mod Start_1 Start_1) (ite StartBool Start_1 Start_8)))
   (Start_10 Int (5 2 1 (+ Start_8 Start_2) (* Start_7 Start_9) (mod Start_4 Start_7) (abs Start_11)))
   (StartBool_4 Bool (false (or StartBool_1 StartBool_4) (< Start_3 Start_10) (= Start_5 Start)))
   (Start_7 Int (1 5 0 (- Start_5) (- Start_7 Start_8) (+ Start_6 Start_2) (* Start_7 Start_1)))
   (Start_6 Int (4 (- Start_2 Start_5) (+ Start_2 Start_6) (* Start_5 Start_7) (mod Start_1 Start_5)))
   (Start_13 Int (y x 0 (- Start_5) (* Start_19 Start_12) (mod Start_19 Start_18)))
   (Start_1 Int (5 (- Start_20) (- Start Start_3) (mod Start_9 Start) (ite StartBool_7 Start Start_1)))
   (Start_12 Int (1 0 4 (+ Start Start) (mod Start_6 Start_10)))
   (StartBool_5 Bool (false (not StartBool_4) (and StartBool_2 StartBool) (< Start_7 Start_1)))
   (Start_14 Int (y 0 (- Start_15 Start_13) (div Start_13 Start_1) (mod Start_12 Start) (abs Start_13) (ite StartBool_5 Start_4 Start_11)))
   (Start_3 Int (3 4 5 (- Start_1) (- Start Start_1) (+ Start Start_4) (* Start Start_1) (div Start_2 Start_5) (abs Start_1) (ite StartBool_1 Start_3 Start_6)))
   (StartBool_2 Bool (true (not StartBool_5) (<= Start_6 Start_12) (>= Start_10 Start_9) (> Start_8 Start_12)))
   (Start_16 Int (4 (mod Start_17 Start_2) (ite StartBool_6 Start_8 Start_11)))
   (Start_5 Int (3 5 2 (- Start_11) (+ Start_10 Start) (* Start_11 Start_13) (div Start_8 Start_9) (mod Start_8 Start_8) (abs Start_14) (ite StartBool_1 Start_12 Start)))
   (Start_8 Int (5 (- Start_8) (* Start_2 Start_2) (ite StartBool_1 Start_8 Start_7)))
   (StartBool_6 Bool (true false (or StartBool_3 StartBool_1) (< Start_18 Start_4) (>= Start_16 Start_8)))
   (Start_17 Int (3 (- Start_4) (div Start_12 Start_17) (abs Start_18)))
   (Start_19 Int (2 5 (- Start_19 Start_15) (+ Start_17 Start_7) (* Start_14 Start_2) (mod Start_1 Start_2)))
   (Start_15 Int (4 (- Start_14 Start_16) (div Start_15 Start_8) (ite StartBool_4 Start_7 Start_5)))
   (Start_4 Int (3 (+ Start_20 Start_10) (div Start_11 Start_19) (mod Start_11 Start_18)))
   (Start_20 Int (0 5 2 (- Start_18) (+ Start_17 Start_1) (* Start_20 Start_17) (abs Start_5) (ite StartBool Start_9 Start_17)))
   (Start_21 Int (1 (- Start_13 Start_18) (+ Start_22 Start_11) (ite StartBool Start_1 Start_13)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_2 StartBool) (or StartBool_3 StartBool_2) (= Start_2 Start_7) (>= Start_7 Start) (> Start_9 Start_2)))
   (StartBool_7 Bool (false (or StartBool_4 StartBool_1) (<= Start_17 Start_14) (>= Start_6 Start) (> Start_21 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (- y) 3)))

(check-synth)
