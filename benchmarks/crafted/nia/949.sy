(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_11 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_12 Int) (Start_5 Int) (StartBool_5 Bool) (Start_2 Int) (Start_1 Int) (Start_6 Int) (Start_4 Int) (Start_8 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_13 Int) (Start_9 Int) (Start_3 Int) (Start_7 Int) (Start_10 Int))
  ((Start Int (2 5 (- Start_1) (+ Start_2 Start) (abs Start_2)))
   (StartBool Bool (true (not StartBool_1) (< Start_5 Start_3) (<= Start_1 Start_7) (>= Start_8 Start_5)))
   (Start_14 Int (x 3 5 y (+ Start_12 Start_12) (* Start Start_14)))
   (Start_11 Int (0 y 1 x (* Start_2 Start_5) (mod Start_11 Start_3) (ite StartBool_2 Start_1 Start_14)))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool_1) (< Start_11 Start_4) (= Start_7 Start_8) (> Start_12 Start_12)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_3 StartBool_4) (or StartBool_2 StartBool_2) (= Start_12 Start_11) (>= Start_1 Start)))
   (Start_12 Int (2 4 (- Start_3) (div Start_13 Start_7) (mod Start_8 Start_14) (abs Start_10) (ite StartBool Start_9 Start_10)))
   (Start_5 Int (x 0 3 (- Start_7 Start_4) (div Start_6 Start_3) (mod Start Start_4) (abs Start_6)))
   (StartBool_5 Bool (true false (not StartBool_3) (= Start_2 Start_1) (>= Start_14 Start_6)))
   (Start_2 Int (5 3 2 (- Start_1 Start_1) (mod Start_2 Start_1)))
   (Start_1 Int (0 (- Start) (- Start_2 Start_2) (* Start_3 Start_4) (div Start_2 Start_1)))
   (Start_6 Int (1 (- Start_2 Start_4) (div Start_4 Start_3) (abs Start_4)))
   (Start_4 Int (2 (* Start_5 Start_6) (abs Start_1) (ite StartBool Start_4 Start_2)))
   (Start_8 Int (2 (- Start_6 Start_3) (div Start_8 Start_7) (mod Start_8 Start_7) (abs Start_9) (ite StartBool Start_6 Start)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_1 StartBool_2) (or StartBool_2 StartBool_2) (< Start_9 Start_10) (<= Start_4 Start_9)))
   (StartBool_4 Bool (true (not StartBool_3) (or StartBool_2 StartBool_5) (<= Start_12 Start_5)))
   (Start_13 Int (5 3 1 (+ Start_11 Start_2) (div Start_5 Start_9) (mod Start_10 Start_3) (abs Start_8) (ite StartBool Start_2 Start_3)))
   (Start_9 Int (0 4 5 (- Start_9) (+ Start_8 Start_4) (abs Start_1)))
   (Start_3 Int (3 (+ Start Start_3) (div Start_9 Start_4) (mod Start_8 Start_2)))
   (Start_7 Int (2 (- Start_4) (- Start_6 Start_8) (* Start_7 Start_1) (mod Start Start_8) (abs Start_1)))
   (Start_10 Int (x (- Start_6 Start_7) (* Start_6 Start_4) (mod Start_5 Start_2) (abs Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (+ (mod y (abs (- x))) 1) (- (div 5 0)))))

(check-synth)
