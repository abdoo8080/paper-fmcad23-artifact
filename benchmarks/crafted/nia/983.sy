(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (StartBool_2 Bool) (Start_9 Int) (Start_12 Int) (Start_10 Int) (StartBool_3 Bool) (StartBool_7 Bool) (StartBool_8 Bool) (StartBool_4 Bool) (Start_3 Int) (Start_1 Int) (Start_4 Int) (Start_5 Int) (Start_8 Int) (Start_6 Int) (Start_2 Int) (StartBool_6 Bool) (Start_7 Int) (StartBool_1 Bool) (StartBool_5 Bool))
  ((Start Int (2 1 (- Start_1 Start) (mod Start_1 Start_2) (ite StartBool Start_2 Start_2)))
   (StartBool Bool (true false (and StartBool_7 StartBool_3) (= Start_12 Start_11) (>= Start_7 Start_3)))
   (Start_11 Int (3 4 5 (- Start_9 Start_6) (+ Start_8 Start_8) (* Start Start_4) (mod Start Start) (abs Start_10)))
   (StartBool_2 Bool (true false (and StartBool_5 StartBool_5) (<= Start_1 Start_9) (= Start_11 Start)))
   (Start_9 Int (2 5 y 1 (- Start_9 Start_10) (+ Start_1 Start_1) (* Start_10 Start) (abs Start_3) (ite StartBool_8 Start Start_1)))
   (Start_12 Int (5 (- Start_1 Start_7)))
   (Start_10 Int (y (- Start_4) (+ Start_1 Start_4) (abs Start_3)))
   (StartBool_3 Bool (false true (not StartBool_7) (< Start_2 Start_3) (<= Start_9 Start_10) (= Start_8 Start_6) (>= Start_5 Start_5) (> Start_4 Start_10)))
   (StartBool_7 Bool (true (not StartBool_8) (or StartBool_6 StartBool_3) (< Start_7 Start_4) (= Start_2 Start_2) (> Start_5 Start)))
   (StartBool_8 Bool (false true (and StartBool_6 StartBool_2) (or StartBool_3 StartBool)))
   (StartBool_4 Bool (true (not StartBool_5) (and StartBool_6 StartBool_6) (or StartBool_4 StartBool_4) (<= Start_5 Start_4) (= Start_4 Start_7) (> Start_8 Start_4)))
   (Start_3 Int (5 x 4 (* Start Start) (div Start_3 Start_2) (ite StartBool Start_2 Start)))
   (Start_1 Int (x 2 3 (- Start_1) (div Start Start_2) (mod Start_4 Start_3)))
   (Start_4 Int (2 y (abs Start_2) (ite StartBool_1 Start_5 Start_3)))
   (Start_5 Int (y))
   (Start_8 Int (y (* Start_3 Start_6) (abs Start_7) (ite StartBool_5 Start_3 Start_4)))
   (Start_6 Int (y (- Start_3 Start_5) (+ Start_3 Start_3) (* Start_5 Start_4) (mod Start Start_1) (abs Start_6) (ite StartBool_4 Start_7 Start_7)))
   (Start_2 Int (5 (- Start Start_2) (* Start_3 Start_2) (div Start_1 Start_2) (mod Start_1 Start_3)))
   (StartBool_6 Bool (false true (not StartBool_2) (and StartBool StartBool) (= Start_4 Start_2) (> Start_6 Start_3)))
   (Start_7 Int (0 (- Start_7) (- Start_5 Start_1) (* Start_5 Start_1) (abs Start_1)))
   (StartBool_1 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_3) (= Start_4 Start) (> Start_6 Start_3)))
   (StartBool_5 Bool (false (not StartBool_7) (or StartBool StartBool_8) (< Start_2 Start_6) (<= Start_1 Start_3) (= Start_6 Start_4) (>= Start_4 Start_4) (> Start_4 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* x x))))

(check-synth)
