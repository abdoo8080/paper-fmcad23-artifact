(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_11 Int) (Start_14 Int) (Start_15 Int) (StartBool_5 Bool) (Start_13 Int) (Start_3 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_4 Int) (Start_16 Int) (Start_12 Int) (Start_5 Int) (Start_6 Int) (Start_7 Int) (Start_1 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_8 Int) (Start_10 Int))
  ((Start Int (3 4 x 5 0 2 (- Start) (- Start Start_1) (+ Start_1 Start_1) (div Start_2 Start_3) (mod Start_3 Start_1) (abs Start_2)))
   (StartBool Bool (true (>= Start_11 Start_12) (> Start_9 Start_16)))
   (Start_2 Int (5 (+ Start_14 Start) (div Start_15 Start_8)))
   (Start_11 Int (3 y 1 4 (* Start_9 Start_4) (div Start_13 Start_7) (mod Start_11 Start_3)))
   (Start_14 Int (x (- Start_11 Start_8) (+ Start Start_13) (div Start_1 Start_13)))
   (Start_15 Int (y (- Start_10 Start_12) (* Start_15 Start) (div Start_6 Start_2) (ite StartBool_5 Start Start_10)))
   (StartBool_5 Bool (false (not StartBool_2) (<= Start_10 Start_12) (>= Start_4 Start_5)))
   (Start_13 Int (3 (- Start_10 Start_14) (+ Start_4 Start_4) (* Start_13 Start_7) (div Start_15 Start_6) (mod Start Start_9) (abs Start_8) (ite StartBool_5 Start_8 Start_12)))
   (Start_3 Int (x (- Start_2) (- Start_2 Start_3) (* Start_3 Start_1) (abs Start_4)))
   (Start_9 Int (3 (+ Start_3 Start_2) (mod Start_8 Start_1) (ite StartBool_1 Start_6 Start_6)))
   (StartBool_1 Bool (false (not StartBool_3) (or StartBool_3 StartBool_4) (< Start_7 Start_9)))
   (StartBool_4 Bool (true false (not StartBool_3) (or StartBool_1 StartBool) (<= Start_9 Start_8) (= Start_7 Start) (>= Start_7 Start_10) (> Start_1 Start_9)))
   (Start_4 Int (4 (+ Start Start) (div Start_2 Start_3) (mod Start_2 Start_4) (ite StartBool_1 Start_1 Start_5)))
   (Start_16 Int (0 2 (- Start_16) (* Start_12 Start_13) (mod Start_16 Start_2)))
   (Start_12 Int (2 (- Start_13) (- Start_2 Start_6) (+ Start_1 Start_3) (* Start_10 Start) (ite StartBool Start_11 Start_6)))
   (Start_5 Int (3 (- Start_2) (- Start_4 Start_5) (+ Start_2 Start_3) (* Start_6 Start_1) (abs Start_3)))
   (Start_6 Int (1 (+ Start_3 Start) (mod Start Start_7) (abs Start_4) (ite StartBool Start_5 Start_4)))
   (Start_7 Int (5 3 0 (- Start_8 Start_1) (* Start_6 Start_9) (mod Start Start_5) (ite StartBool_2 Start_8 Start_5)))
   (Start_1 Int (3 1 (- Start_5 Start_15) (+ Start_3 Start_2) (div Start_6 Start_9) (mod Start_7 Start_14)))
   (StartBool_2 Bool (true false (not StartBool_3) (< Start_3 Start) (= Start_7 Start_3) (> Start_4 Start_3)))
   (StartBool_3 Bool (true (or StartBool StartBool_3) (< Start_2 Start_9) (<= Start_5 Start) (>= Start_9 Start_5) (> Start_1 Start_9)))
   (Start_8 Int (4 3 2 (+ Start_4 Start_7)))
   (Start_10 Int (5 (- Start_1) (- Start_1 Start_11) (+ Start_2 Start_2) (div Start_1 Start_3) (mod Start_12 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 4 (div 3 0)) 4)))

(check-synth)
