(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_9 Bool) (Start_16 Int) (StartBool_8 Bool) (Start_1 Int) (StartBool_7 Bool) (Start_15 Int) (StartBool_6 Bool) (Start_14 Int) (Start_11 Int) (Start_6 Int) (Start_3 Int) (StartBool_5 Bool) (Start_7 Int) (Start_4 Int) (StartBool_3 Bool) (Start_12 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_9 Int) (StartBool_2 Bool) (Start_5 Int) (Start_13 Int) (Start_2 Int) (Start_8 Int) (Start_10 Int))
  ((Start Int (5 (- Start) (- Start Start_1) (* Start_2 Start_3) (div Start_3 Start) (abs Start_2)))
   (StartBool Bool (true false (and StartBool_8 StartBool) (<= Start_4 Start_3)))
   (StartBool_9 Bool (true false (or StartBool_2 StartBool_5) (< Start_3 Start_1) (> Start Start_16)))
   (Start_16 Int (x (- Start_13) (+ Start_7 Start_12) (* Start_10 Start_12)))
   (StartBool_8 Bool (false true (and StartBool StartBool_9) (< Start_8 Start_8) (= Start_6 Start_16) (>= Start_12 Start_9)))
   (Start_1 Int (2 (+ Start_12 Start_7) (* Start_4 Start_1) (div Start_5 Start_1) (mod Start_7 Start_15) (abs Start_1) (ite StartBool_6 Start_8 Start_9)))
   (StartBool_7 Bool (false (not StartBool_7) (or StartBool_5 StartBool_3) (= Start_6 Start_8) (> Start_10 Start_12)))
   (Start_15 Int (1 (- Start_9) (- Start_9 Start_6) (+ Start_12 Start_5) (* Start_1 Start_2) (mod Start_6 Start_9) (ite StartBool_8 Start_11 Start_1)))
   (StartBool_6 Bool (true (not StartBool_1) (= Start_5 Start_10) (> Start_7 Start_12)))
   (Start_14 Int (2 5 (* Start_5 Start_2) (div Start_10 Start_9) (ite StartBool_4 Start_5 Start_8)))
   (Start_11 Int (4 (- Start_11 Start_12) (+ Start_10 Start_14)))
   (Start_6 Int (0 1 (- Start_6 Start_1) (div Start Start_5) (abs Start_4) (ite StartBool_1 Start_5 Start_7)))
   (Start_3 Int (y 0 (- Start) (- Start_4 Start_1) (div Start_3 Start_4) (abs Start_2)))
   (StartBool_5 Bool (false true (and StartBool_6 StartBool_5) (or StartBool_3 StartBool_7) (< Start_2 Start) (<= Start_10 Start_5) (> Start_13 Start_7)))
   (Start_7 Int (y 0 2 4 x 1 (- Start_4) (- Start_3 Start_3) (+ Start_1 Start_3) (* Start_4 Start_2) (div Start_4 Start_2)))
   (Start_4 Int (y 0 (- Start_1) (* Start_5 Start_6) (div Start_6 Start) (ite StartBool_1 Start_5 Start_5)))
   (StartBool_3 Bool (false (<= Start_4 Start_5) (= Start_3 Start_8) (>= Start_9 Start) (> Start_7 Start)))
   (Start_12 Int (3 (- Start_5) (+ Start_4 Start_2) (* Start_9 Start_11) (mod Start_2 Start_9) (abs Start_13)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool StartBool_2) (or StartBool StartBool_2) (= Start_4 Start_6) (>= Start Start_5) (> Start Start_2)))
   (StartBool_4 Bool (true (and StartBool StartBool) (or StartBool_5 StartBool_5) (< Start_12 Start_7) (= Start_4 Start_5) (> Start_8 Start_3)))
   (Start_9 Int (3 (- Start_7 Start) (abs Start_7) (ite StartBool_2 Start_6 Start_1)))
   (StartBool_2 Bool (true false (= Start_2 Start_2) (>= Start_4 Start_3) (> Start_7 Start_1)))
   (Start_5 Int (4 y 1 (- Start_2) (- Start_1 Start_3) (div Start_3 Start) (mod Start_5 Start_7) (abs Start_2) (ite StartBool_3 Start_6 Start_4)))
   (Start_13 Int (1 5 (- Start_5) (+ Start_12 Start_4) (* Start_4 Start_6) (div Start Start_5) (abs Start_3) (ite StartBool_3 Start_7 Start_6)))
   (Start_2 Int (1 x (- Start_10) (- Start_8 Start_11) (+ Start_12 Start_1) (div Start_5 Start_10) (abs Start_6)))
   (Start_8 Int (2 5 3 y 0 x (- Start_3) (- Start_6 Start_10) (+ Start_8 Start_9) (* Start_7 Start_8) (div Start_8 Start_3) (mod Start_1 Start_1) (ite StartBool Start_6 Start_7)))
   (Start_10 Int (4 y 1 x (- Start_6 Start) (+ Start_5 Start_4) (* Start_10 Start_3) (abs Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 1 (abs x))))

(check-synth)
