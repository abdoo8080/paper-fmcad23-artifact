(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_1 Int) (StartBool_3 Bool) (Start_13 Int) (Start_2 Int) (Start_6 Int) (StartBool_2 Bool) (Start_4 Int) (StartBool_8 Bool) (Start_7 Int) (Start_10 Int) (Start_5 Int) (Start_9 Int) (StartBool_7 Bool) (Start_12 Int) (StartBool_1 Bool) (Start_11 Int) (Start_3 Int) (Start_8 Int) (StartBool_4 Bool) (StartBool_6 Bool) (StartBool_5 Bool))
  ((Start Int (4 (* Start_1 Start) (div Start_2 Start_2)))
   (StartBool Bool (true (or StartBool_6 StartBool_1) (<= Start_11 Start_3) (= Start_6 Start_2) (>= Start_8 Start_14) (> Start_13 Start)))
   (Start_14 Int (x (+ Start_12 Start_8) (* Start Start_13) (ite StartBool_8 Start_8 Start)))
   (Start_1 Int (y (- Start_2) (- Start_13 Start_4) (ite StartBool_7 Start_8 Start_5)))
   (StartBool_3 Bool (true false (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_4) (< Start_1 Start_8) (<= Start_7 Start_7) (>= Start_9 Start_11)))
   (Start_13 Int (5 (- Start_7 Start_6) (mod Start_7 Start_7)))
   (Start_2 Int (x 5 (- Start_2) (mod Start_3 Start_1) (ite StartBool Start Start)))
   (Start_6 Int (1 (mod Start_9 Start_3) (abs Start_5) (ite StartBool_4 Start_5 Start)))
   (StartBool_2 Bool (true false (not StartBool_4) (and StartBool_5 StartBool_7) (or StartBool_8 StartBool_5) (< Start_4 Start_12) (= Start_11 Start_2) (>= Start_3 Start_4) (> Start Start_13)))
   (Start_4 Int (x 0 1 (- Start_4) (abs Start_5)))
   (StartBool_8 Bool (true false (not StartBool_6) (and StartBool StartBool_8) (or StartBool_4 StartBool_6) (>= Start_8 Start_6) (> Start_5 Start_4)))
   (Start_7 Int (2 3 (+ Start_8 Start_3) (div Start_3 Start_2) (mod Start_3 Start_7) (abs Start_6)))
   (Start_10 Int (0 3 (- Start_5) (- Start_1 Start_6) (+ Start_9 Start_2) (ite StartBool_5 Start Start_7)))
   (Start_5 Int (3 5 4 0 x (- Start_1) (- Start_1 Start_5) (+ Start_5 Start_2) (div Start_1 Start) (abs Start) (ite StartBool_1 Start Start_4)))
   (Start_9 Int (x (- Start_5) (ite StartBool Start_6 Start_6)))
   (StartBool_7 Bool (true false (and StartBool_8 StartBool_8) (or StartBool StartBool_8) (< Start Start_10) (<= Start_4 Start_11) (> Start_7 Start_2)))
   (Start_12 Int (y (- Start_7 Start_8) (+ Start_8 Start_4)))
   (StartBool_1 Bool (false true (or StartBool_2 StartBool_3) (<= Start Start_6) (= Start_1 Start) (>= Start Start_1) (> Start_7 Start_2)))
   (Start_11 Int (y (+ Start_1 Start_8) (* Start_3 Start_6) (mod Start_7 Start_2) (abs Start_5) (ite StartBool_6 Start_5 Start_4)))
   (Start_3 Int (1 (- Start) (+ Start_3 Start_3) (div Start Start_4) (abs Start_1) (ite StartBool Start Start_4)))
   (Start_8 Int (x 4 (- Start_3) (mod Start_5 Start_7)))
   (StartBool_4 Bool (false true (< Start Start_10) (= Start_1 Start_1) (>= Start_5 Start_9)))
   (StartBool_6 Bool (true (not StartBool_5) (or StartBool_2 StartBool) (<= Start_12 Start_9) (= Start_2 Start_4)))
   (StartBool_5 Bool (true false (not StartBool_2) (<= Start_3 Start_7) (= Start_8 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 2 x)))

(check-synth)
