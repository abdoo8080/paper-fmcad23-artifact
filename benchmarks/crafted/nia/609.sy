(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_6 Bool) (Start_27 Int) (StartBool_5 Bool) (Start_24 Int) (Start_2 Int) (Start_14 Int) (StartBool_3 Bool) (Start_25 Int) (StartBool_1 Bool) (Start_20 Int) (Start_13 Int) (Start_3 Int) (Start_12 Int) (Start_21 Int) (Start_16 Int) (Start_11 Int) (StartBool_2 Bool) (Start_6 Int) (Start_4 Int) (Start_5 Int) (Start_8 Int) (Start_15 Int) (Start_19 Int) (Start_26 Int) (Start_7 Int) (Start_1 Int) (Start_18 Int) (Start_22 Int) (Start_17 Int) (Start_10 Int) (StartBool_4 Bool) (Start_9 Int) (Start_23 Int))
  ((Start Int (5 (- Start_1) (- Start_1 Start_1) (+ Start_2 Start_2) (div Start_3 Start_3) (abs Start_4)))
   (StartBool Bool (true false (and StartBool_3 StartBool_1) (or StartBool_4 StartBool_1) (< Start_3 Start_17) (<= Start_2 Start) (>= Start_18 Start_2)))
   (StartBool_6 Bool (false true))
   (Start_27 Int (5 (- Start_8) (* Start_11 Start_9)))
   (StartBool_5 Bool (false (and StartBool_4 StartBool_3) (>= Start_26 Start_9)))
   (Start_24 Int (5 3 (- Start_14 Start_14) (* Start_1 Start_8) (div Start_11 Start_9) (mod Start_26 Start_11)))
   (Start_2 Int (y (- Start_5 Start_10) (* Start_14 Start_12) (div Start_5 Start_9)))
   (Start_14 Int (2 3 (+ Start_13 Start_14) (abs Start_6) (ite StartBool_1 Start_8 Start_7)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_4 StartBool) (or StartBool_6 StartBool_3) (< Start_24 Start_22) (>= Start_9 Start_25) (> Start_27 Start_15)))
   (Start_25 Int (0 4 5 (- Start_22) (+ Start_17 Start_1) (* Start_25 Start_18) (div Start_23 Start_4) (mod Start_5 Start_19) (abs Start_7)))
   (StartBool_1 Bool (true false (or StartBool StartBool) (<= Start Start_2) (>= Start Start_4) (> Start_4 Start_9)))
   (Start_20 Int (0 (+ Start_13 Start_20) (div Start_16 Start_18) (mod Start_18 Start_3) (ite StartBool_4 Start_18 Start_10)))
   (Start_13 Int (0 (- Start_4) (* Start_13 Start_7)))
   (Start_3 Int (5 (- Start_3) (* Start_7 Start_8) (mod Start_8 Start) (abs Start_5) (ite StartBool_1 Start_2 Start_7)))
   (Start_12 Int (5 (- Start_13 Start_1) (* Start_11 Start_8) (div Start_2 Start_8) (abs Start_5) (ite StartBool_2 Start_14 Start_6)))
   (Start_21 Int (1 (- Start_8 Start_9) (+ Start_21 Start_11) (* Start_22 Start_23) (div Start_4 Start_20) (ite StartBool_4 Start_15 Start_23)))
   (Start_16 Int (x (+ Start_3 Start_12) (* Start Start_11)))
   (Start_11 Int (1 (- Start_7 Start_10) (div Start_6 Start_7) (abs Start_3) (ite StartBool_2 Start_1 Start)))
   (StartBool_2 Bool (false true (<= Start_7 Start_11) (> Start_12 Start_1)))
   (Start_6 Int (1 5 y (- Start_3) (- Start_2 Start_3) (* Start_4 Start_3) (div Start_1 Start)))
   (Start_4 Int (5 y 3 2 x (- Start_4 Start_5) (+ Start_3 Start_6) (* Start_5 Start_5) (div Start_2 Start_4) (mod Start_3 Start_1) (abs Start_3)))
   (Start_5 Int (y (+ Start_3 Start_4) (div Start_4 Start) (abs Start_5)))
   (Start_8 Int (2 (- Start_13) (- Start_11 Start_11) (+ Start_6 Start_9) (div Start_5 Start) (mod Start_2 Start_11) (abs Start_10)))
   (Start_15 Int (0 (- Start_12) (- Start_7 Start_2) (* Start_7 Start_4) (div Start_16 Start_2) (mod Start_9 Start_1) (abs Start_2)))
   (Start_19 Int (4 3 2 (+ Start_2 Start_13) (abs Start_4) (ite StartBool_3 Start_10 Start_9)))
   (Start_26 Int (5 x (- Start_26 Start_23) (+ Start_25 Start_4) (ite StartBool_2 Start_23 Start_23)))
   (Start_7 Int (1 3 (- Start_9) (div Start_7 Start_12) (mod Start_5 Start_2)))
   (Start_1 Int (4 x (- Start_4 Start_5) (+ Start_7 Start_7) (div Start_10 Start_9) (mod Start_2 Start_11) (abs Start_9) (ite StartBool_2 Start_15 Start_7)))
   (Start_18 Int (5 (- Start_16) (- Start_19 Start_16) (+ Start_2 Start_11) (* Start_2 Start_4)))
   (Start_22 Int (0 (- Start_24 Start_22) (+ Start_17 Start_13) (* Start_19 Start_22) (mod Start_9 Start_13) (abs Start_10) (ite StartBool_1 Start Start_25)))
   (Start_17 Int (y (- Start_15) (- Start_2 Start_9) (* Start_20 Start_3) (mod Start_10 Start_12) (ite StartBool_3 Start_4 Start_20)))
   (Start_10 Int (1 (- Start_2) (div Start_5 Start_7) (abs Start)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool_5 StartBool_4) (or StartBool StartBool_3) (>= Start_12 Start_3) (> Start_19 Start_21)))
   (Start_9 Int (5 (- Start_9) (- Start_5 Start_10) (+ Start_5 Start_7) (* Start_9 Start_9) (div Start_9 Start_10) (mod Start_11 Start_2) (abs Start_12) (ite StartBool_2 Start_1 Start_10)))
   (Start_23 Int (x 0 3 (+ Start_16 Start_6) (* Start_9 Start_3) (div Start_3 Start_2) (mod Start_10 Start_19) (abs Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- 1) 0)))

(check-synth)
