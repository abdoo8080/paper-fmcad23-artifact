(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_1 Int) (Start_13 Int) (Start_14 Int) (StartBool_1 Bool) (Start_2 Int) (Start_9 Int) (Start_4 Int) (StartBool_2 Bool) (Start_5 Int) (Start_11 Int) (Start_3 Int) (Start_6 Int) (Start_7 Int) (Start_10 Int) (StartBool_3 Bool) (Start_12 Int) (StartBool_4 Bool) (Start_8 Int))
  ((Start Int (5 4 0 (- Start) (- Start_1 Start) (+ Start_2 Start_1) (mod Start Start_1) (ite StartBool_1 Start_1 Start)))
   (StartBool Bool (false (and StartBool_2 StartBool_4) (or StartBool_3 StartBool) (<= Start_11 Start_3) (>= Start_14 Start_4) (> Start_15 Start_2)))
   (Start_15 Int (4 (+ Start Start_6) (div Start_4 Start_1) (mod Start_13 Start_1) (abs Start_2)))
   (Start_1 Int (2 1 (- Start_1) (div Start_11 Start_5) (mod Start_6 Start_14) (abs Start_7)))
   (Start_13 Int (0 y (- Start_3) (div Start_13 Start_3) (mod Start_8 Start_4) (ite StartBool_4 Start_3 Start_5)))
   (Start_14 Int (y 1 (- Start_1) (div Start_12 Start_3) (mod Start_9 Start_5) (abs Start_6) (ite StartBool_1 Start_13 Start_5)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool StartBool_1) (< Start_3 Start) (<= Start_4 Start_3) (>= Start_3 Start_3)))
   (Start_2 Int (5 3 y x 1 2 0 4 (- Start_13) (- Start_11 Start_1) (+ Start_6 Start_11) (div Start_9 Start) (abs Start_3)))
   (Start_9 Int (0 (* Start_1 Start_9) (div Start_6 Start_6) (ite StartBool_3 Start Start_8)))
   (Start_4 Int (y (- Start_1 Start_1) (* Start_3 Start_3) (div Start_2 Start_5) (mod Start_5 Start_5) (abs Start_3) (ite StartBool_2 Start_4 Start_1)))
   (StartBool_2 Bool (false (< Start_6 Start) (= Start_1 Start_6) (>= Start Start_4) (> Start_3 Start)))
   (Start_5 Int (2 y (- Start_5) (- Start_13 Start_7) (div Start_12 Start_7) (abs Start_13)))
   (Start_11 Int (0 3 (+ Start_2 Start_8) (div Start_6 Start_4) (mod Start_6 Start_1) (abs Start_2)))
   (Start_3 Int (4 1 (+ Start_9 Start_12) (* Start Start_2) (mod Start_14 Start_11) (abs Start_4)))
   (Start_6 Int (5 1 (- Start_4) (+ Start_1 Start_7)))
   (Start_7 Int (1 (- Start_4) (- Start Start_8) (+ Start_7 Start_5) (* Start_6 Start_3) (div Start_9 Start_1) (mod Start_9 Start_5) (ite StartBool_2 Start_5 Start_10)))
   (Start_10 Int (1 (- Start_4 Start) (+ Start_5 Start_1) (* Start_11 Start_7) (mod Start_3 Start_10) (ite StartBool_1 Start_5 Start_1)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool StartBool_3) (or StartBool_1 StartBool_1) (= Start_10 Start_1) (>= Start Start_1)))
   (Start_12 Int (y 1 (- Start_9) (* Start_5 Start) (div Start_5 Start_11)))
   (StartBool_4 Bool (false (or StartBool_2 StartBool) (= Start_8 Start_6) (>= Start_11 Start_10) (> Start_1 Start_7)))
   (Start_8 Int (1 5 (- Start_12) (- Start_12 Start_11) (mod Start_1 Start_11) (ite StartBool_1 Start_6 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- y) y)))

(check-synth)
