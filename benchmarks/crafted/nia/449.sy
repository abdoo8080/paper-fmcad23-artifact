(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_6 Int) (Start_5 Int) (Start_10 Int) (StartBool_2 Bool) (Start_11 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_3 Int) (Start_7 Int) (Start_8 Int) (Start_2 Int) (Start_9 Int) (Start_17 Int) (Start_13 Int) (StartBool_6 Bool) (StartBool_8 Bool) (Start_14 Int) (Start_12 Int) (Start_4 Int) (Start_15 Int) (Start_16 Int) (StartBool_5 Bool) (Start_18 Int) (Start_19 Int) (StartBool_7 Bool) (StartBool_4 Bool) (StartBool_9 Bool) (Start_1 Int))
  ((Start Int (3 2 5 (- Start_1) (* Start_2 Start_2) (abs Start) (ite StartBool Start_2 Start)))
   (StartBool Bool (true (< Start_3 Start_3) (= Start_5 Start_16) (>= Start_6 Start_4) (> Start_20 Start_6)))
   (Start_20 Int (5 (- Start_16 Start_20) (div Start_6 Start_17) (mod Start_11 Start_7) (ite StartBool Start_6 Start_17)))
   (Start_6 Int (2 5 (- Start_4 Start_3) (* Start_4 Start_9) (abs Start_3) (ite StartBool_2 Start_8 Start_9)))
   (Start_5 Int (y 4 x (- Start_10) (* Start_2 Start_8) (div Start Start_2) (mod Start_7 Start) (ite StartBool_3 Start_4 Start_5)))
   (Start_10 Int (5 0 (- Start_10) (+ Start_9 Start_4)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool StartBool) (<= Start_4 Start) (= Start_6 Start_4) (>= Start_1 Start_9)))
   (Start_11 Int (1 x 2 (- Start_3) (- Start_7 Start_10) (+ Start_12 Start_3) (div Start_11 Start_5) (mod Start_6 Start_13)))
   (StartBool_1 Bool (false true (and StartBool StartBool_2) (< Start_6 Start_8) (<= Start_3 Start_8) (>= Start_4 Start_1)))
   (StartBool_3 Bool (true (and StartBool_1 StartBool_1) (or StartBool StartBool_4) (< Start_5 Start_10) (<= Start_11 Start_7) (>= Start_11 Start_3) (> Start_11 Start_4)))
   (Start_3 Int (0 y (- Start_4) (- Start_5 Start) (div Start_2 Start_6) (mod Start_6 Start_6) (abs Start_7) (ite StartBool Start_3 Start_7)))
   (Start_7 Int (1 (- Start_1) (+ Start_1 Start_7) (div Start_1 Start_1) (mod Start Start_3) (ite StartBool_1 Start_5 Start_5)))
   (Start_8 Int (1 (* Start_4 Start) (abs Start_1) (ite StartBool_2 Start_3 Start_8)))
   (Start_2 Int (y (* Start_2 Start_1) (mod Start_2 Start_2) (abs Start_3) (ite StartBool Start Start_1)))
   (Start_9 Int (y x (- Start_7 Start_2) (div Start_5 Start_2) (mod Start_5 Start_6) (abs Start)))
   (Start_17 Int (0 (+ Start_10 Start_9)))
   (Start_13 Int (y 1 (- Start_2) (- Start_3 Start_7) (+ Start_14 Start_14) (* Start Start_5) (mod Start_6 Start_2) (abs Start_1) (ite StartBool_3 Start Start_5)))
   (StartBool_6 Bool (true false (and StartBool StartBool_7) (< Start_10 Start_15) (<= Start_15 Start_16) (= Start_11 Start_8) (> Start_18 Start_9)))
   (StartBool_8 Bool (false true (and StartBool_9 StartBool_4) (<= Start_19 Start_11) (= Start_2 Start_2) (>= Start_14 Start_7) (> Start Start_11)))
   (Start_14 Int (3 (- Start_14) (+ Start_7 Start_6) (div Start_3 Start_8) (ite StartBool_4 Start_3 Start_11)))
   (Start_12 Int (5 y 1 (- Start_6) (* Start_15 Start_9) (mod Start_5 Start_9) (abs Start_14)))
   (Start_4 Int (5 y 0 (- Start_4) (- Start Start_13) (mod Start_2 Start_18) (abs Start_12) (ite StartBool_7 Start_5 Start_18)))
   (Start_15 Int (4 1 x (- Start_12 Start_5) (+ Start_1 Start_7) (div Start_4 Start_9) (ite StartBool_5 Start_16 Start_7)))
   (Start_16 Int (5 0 (- Start_5) (- Start_5 Start) (+ Start_13 Start) (div Start_4 Start_2) (mod Start_8 Start_12) (abs Start_6) (ite StartBool_1 Start_17 Start_14)))
   (StartBool_5 Bool (true false (not StartBool_3) (= Start_5 Start_9) (> Start_7 Start_11)))
   (Start_18 Int (y 5 (- Start_13) (+ Start_18 Start_16) (* Start_14 Start_19) (ite StartBool_3 Start_5 Start_2)))
   (Start_19 Int (x 2 (- Start_10) (+ Start_10 Start_13) (abs Start_11)))
   (StartBool_7 Bool (true false (or StartBool_6 StartBool) (= Start_1 Start_19)))
   (StartBool_4 Bool (true (and StartBool StartBool_6) (or StartBool_2 StartBool_5) (<= Start_7 Start_8) (= Start_3 Start_7) (>= Start_17 Start_12) (> Start Start_3)))
   (StartBool_9 Bool (true (not StartBool_7) (and StartBool_2 StartBool_5) (< Start_2 Start_19)))
   (Start_1 Int (y (- Start_6) (* Start_12 Start_15) (div Start_11 Start_4) (mod Start_9 Start_14) (abs Start_3) (ite StartBool_8 Start_14 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (abs (- (* 5 (mod y 2)))) (mod y x))))

(check-synth)
