(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_8 Int) (Start_13 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_11 Int) (Start_2 Int) (Start_7 Int) (Start_4 Int) (StartBool_5 Bool) (Start_5 Int) (Start_1 Int) (Start_6 Int) (Start_3 Int) (StartBool_2 Bool) (Start_12 Int) (StartBool_1 Bool) (Start_9 Int) (Start_10 Int) (StartBool_3 Bool))
  ((Start Int (3 (- Start) (- Start_1 Start_2) (* Start Start) (div Start_2 Start_2) (ite StartBool Start_2 Start)))
   (StartBool Bool (true false (not StartBool) (or StartBool_1 StartBool) (< Start_1 Start_2) (<= Start_4 Start_4) (= Start_4 Start_7) (> Start_3 Start)))
   (Start_8 Int (3 y (+ Start_4 Start_11) (div Start_6 Start_13) (mod Start_12 Start_11) (ite StartBool_2 Start_7 Start_8)))
   (Start_13 Int (4 y (- Start_2 Start_10) (* Start_1 Start_9) (div Start_13 Start_10) (mod Start Start_2)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_4) (< Start_5 Start_9) (<= Start_12 Start_13) (= Start_7 Start_5) (>= Start_10 Start_3) (> Start_11 Start_4)))
   (StartBool_6 Bool (false true (not StartBool_6) (or StartBool StartBool_1) (< Start_5 Start_9) (= Start_9 Start_4)))
   (Start_11 Int (4 5 (- Start_10 Start_5) (div Start_3 Start_11) (ite StartBool_6 Start_1 Start_2)))
   (Start_2 Int (0 y (- Start Start) (* Start_3 Start) (div Start_3 Start)))
   (Start_7 Int (4 5 (- Start_8 Start) (+ Start_6 Start_8) (div Start_2 Start) (abs Start_6) (ite StartBool_2 Start_9 Start_6)))
   (Start_4 Int (3 (- Start_5 Start_3) (div Start_2 Start_5) (mod Start_2 Start)))
   (StartBool_5 Bool (false true (and StartBool_6 StartBool_1) (or StartBool_6 StartBool_1) (<= Start_6 Start_6) (> Start_5 Start_5)))
   (Start_5 Int (4 (- Start_3) (* Start_5 Start_5) (ite StartBool Start_1 Start)))
   (Start_1 Int (5 1 (- Start_1) (+ Start Start) (* Start_4 Start_5) (abs Start_5) (ite StartBool Start_5 Start_6)))
   (Start_6 Int (2 (+ Start_3 Start) (* Start Start_2) (div Start_2 Start_3) (mod Start_3 Start_3) (abs Start_4)))
   (Start_3 Int (0 (- Start) (- Start Start_4) (abs Start_3)))
   (StartBool_2 Bool (false true (not StartBool_4) (and StartBool_5 StartBool_1) (or StartBool_5 StartBool_3) (< Start_4 Start_11) (<= Start_1 Start_10) (= Start_5 Start_12)))
   (Start_12 Int (1 5 0))
   (StartBool_1 Bool (true false (and StartBool_6 StartBool_4)))
   (Start_9 Int (x (* Start_7 Start_3) (div Start_1 Start_7) (abs Start_1) (ite StartBool_1 Start_5 Start_10)))
   (Start_10 Int (3 (div Start Start_5) (abs Start_5) (ite StartBool_3 Start_10 Start_10)))
   (StartBool_3 Bool (true false (not StartBool_2) (and StartBool_2 StartBool) (= Start_6 Start_5) (>= Start_8 Start_9) (> Start_10 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (mod 5 y) 5)))

(check-synth)
