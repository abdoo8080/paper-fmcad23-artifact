(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_1 Int) (Start_5 Int) (StartBool_6 Bool) (Start_12 Int) (Start_13 Int) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_3 Bool) (Start_10 Int) (Start_11 Int) (Start_6 Int) (StartBool_5 Bool) (Start_2 Int) (StartBool_9 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_3 Int) (Start_7 Int) (Start_9 Int) (Start_4 Int) (Start_8 Int) (StartBool_4 Bool))
  ((Start Int (0 (- Start_1) (* Start_1 Start_2) (div Start_1 Start) (mod Start_3 Start_3)))
   (StartBool Bool (false (not StartBool_5) (or StartBool_1 StartBool_4)))
   (Start_14 Int (y 1 x (- Start_11 Start_7)))
   (Start_1 Int (y 5 4 2 0 (div Start_12 Start_10) (mod Start Start_12) (abs Start_14)))
   (Start_5 Int (4 (- Start_7 Start_10) (div Start_2 Start_13)))
   (StartBool_6 Bool (true (and StartBool_1 StartBool_5) (>= Start_6 Start_2)))
   (Start_12 Int (2 (- Start_11) (- Start_9 Start) (+ Start_12 Start_4) (div Start_12 Start_11) (mod Start_10 Start_2) (abs Start_10) (ite StartBool_4 Start_3 Start_6)))
   (Start_13 Int (2 (- Start_3 Start_6) (* Start_12 Start_11)))
   (StartBool_8 Bool (false (and StartBool_1 StartBool_6) (or StartBool_8 StartBool_9) (< Start_12 Start_9) (<= Start_5 Start_1)))
   (StartBool_7 Bool (true false (and StartBool_1 StartBool_1) (or StartBool_8 StartBool_8) (> Start_7 Start)))
   (StartBool_3 Bool (true (not StartBool_3) (or StartBool_6 StartBool_7) (< Start Start_6) (<= Start_2 Start_3) (= Start_8 Start_3)))
   (Start_10 Int (x (- Start_6) (div Start_3 Start_1)))
   (Start_11 Int (5 (- Start_4 Start_8) (* Start Start_8) (div Start_11 Start) (abs Start_10) (ite StartBool Start_7 Start_10)))
   (Start_6 Int (x (- Start) (- Start_1 Start_7) (mod Start_6 Start_2) (abs Start_2) (ite StartBool_2 Start_6 Start_6)))
   (StartBool_5 Bool (false true (or StartBool StartBool) (< Start_1 Start_3) (= Start_6 Start_2) (> Start_1 Start_8)))
   (Start_2 Int (x 1 y (- Start_11) (* Start_12 Start)))
   (StartBool_9 Bool (false true (not StartBool_9) (and StartBool_7 StartBool_5) (<= Start_7 Start_7) (> Start_12 Start_11)))
   (StartBool_2 Bool (false (not StartBool_1) (or StartBool_1 StartBool) (= Start_2 Start_1)))
   (StartBool_1 Bool (false true (and StartBool_3 StartBool_3) (< Start_1 Start_8) (= Start_1 Start_5) (>= Start_4 Start_9) (> Start_9 Start_7)))
   (Start_3 Int (1 y (- Start) (* Start_1 Start_3) (div Start_2 Start_4)))
   (Start_7 Int (x (- Start) (+ Start_1 Start_3) (mod Start_4 Start_6) (abs Start_5) (ite StartBool_1 Start_1 Start)))
   (Start_9 Int (2 0 x 1 5 4 y 3 (+ Start_9 Start_4) (* Start_6 Start_8) (div Start_6 Start_3) (abs Start_7) (ite StartBool_1 Start_5 Start_10)))
   (Start_4 Int (x (- Start_1 Start_1) (* Start Start_1) (mod Start_4 Start_5) (abs Start_3) (ite StartBool_1 Start_3 Start_6)))
   (Start_8 Int (5 0 x 3 y 4 (- Start_11) (- Start_6 Start_6) (+ Start_9 Start_5) (div Start_5 Start_8) (mod Start_10 Start_6) (abs Start_9) (ite StartBool_4 Start_2 Start_2)))
   (StartBool_4 Bool (false true (and StartBool StartBool_1) (or StartBool_5 StartBool_3) (< Start_8 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (< x 5) (- 3) (- (- x) x))))

(check-synth)
