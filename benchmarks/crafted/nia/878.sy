(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (StartBool_3 Bool) (Start_2 Int) (Start_6 Int) (Start_1 Int) (StartBool_4 Bool) (Start_3 Int) (Start_4 Int) (Start_5 Int) (StartBool_1 Bool) (Start_8 Int) (Start_7 Int) (StartBool_2 Bool) (Start_9 Int) (Start_10 Int))
  ((Start Int (3 x 2 (- Start Start_1) (* Start Start_1) (div Start_1 Start) (mod Start_1 Start_1) (ite StartBool Start Start_2)))
   (StartBool Bool (true false (not StartBool_2) (and StartBool_3 StartBool_4) (= Start_2 Start_11) (> Start_10 Start_9)))
   (Start_11 Int (y 5 x 2 3 (- Start_11) (+ Start_5 Start_11) (mod Start Start_2) (abs Start_5) (ite StartBool Start_8 Start_6)))
   (StartBool_3 Bool (false (not StartBool_3) (or StartBool_3 StartBool_2) (< Start_7 Start_9) (> Start_10 Start_3)))
   (Start_2 Int (4 5 3 x 1 y (* Start Start_2) (div Start Start_1) (mod Start_2 Start_2) (abs Start)))
   (Start_6 Int (1 4 (div Start_4 Start_1) (mod Start_1 Start_3) (ite StartBool_1 Start Start_4)))
   (Start_1 Int (3 y 4 2 0 x 1 5 (- Start) (div Start_3 Start)))
   (StartBool_4 Bool (false (not StartBool_3) (and StartBool_3 StartBool_2) (< Start_4 Start_7) (= Start Start_7) (>= Start_6 Start_7)))
   (Start_3 Int (4 (- Start_1 Start_3) (+ Start_3 Start_1) (* Start Start) (mod Start_2 Start_1) (ite StartBool_1 Start_4 Start_1)))
   (Start_4 Int (1 y 4 2 x 3 (- Start_2) (- Start_3 Start_1) (+ Start_3 Start_1) (* Start_3 Start_1) (abs Start_1) (ite StartBool Start Start_5)))
   (Start_5 Int (y 2 0 3 (- Start Start) (mod Start_4 Start_5) (ite StartBool Start_3 Start_6)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool_1 StartBool_1) (>= Start_7 Start_7) (> Start_1 Start_7)))
   (Start_8 Int (4 (- Start_9) (+ Start_5 Start_2) (mod Start_9 Start_4) (abs Start_5) (ite StartBool_4 Start_2 Start_4)))
   (Start_7 Int (0 (- Start_5) (- Start_5 Start) (div Start_3 Start_3) (abs Start_7) (ite StartBool_2 Start_5 Start_7)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool_3 StartBool_2) (or StartBool_4 StartBool_2) (= Start_1 Start) (> Start_4 Start_8)))
   (Start_9 Int (x 4 0 (- Start_10) (+ Start_9 Start_1) (abs Start_4)))
   (Start_10 Int (5 (- Start_9) (- Start Start_10) (+ Start_1 Start_3) (* Start_5 Start_6) (div Start_6 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div (div 5 0) (* 5 5)) (div 0 (mod x 2)))))

(check-synth)
