(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_12 Int) (Start_17 Int) (Start_16 Int) (Start_14 Int) (StartBool_3 Bool) (Start_13 Int) (StartBool_5 Bool) (Start_2 Int) (Start_4 Int) (Start_15 Int) (Start_1 Int) (StartBool_1 Bool) (Start_11 Int) (StartBool_2 Bool) (Start_7 Int) (Start_6 Int) (Start_8 Int) (Start_5 Int) (Start_10 Int) (Start_9 Int) (Start_3 Int))
  ((Start Int (1 (div Start Start) (mod Start Start_1) (abs Start)))
   (StartBool Bool (true false (not StartBool_3) (and StartBool_2 StartBool_4) (< Start_12 Start_10)))
   (StartBool_4 Bool (false (not StartBool_3) (and StartBool StartBool) (or StartBool_5 StartBool_4)))
   (Start_12 Int (4 (- Start_17) (mod Start_11 Start_8) (abs Start_13) (ite StartBool_1 Start_2 Start_3)))
   (Start_17 Int (x 0 (- Start Start_10) (+ Start_3 Start_8)))
   (Start_16 Int (x 1 y 0 (- Start_16) (* Start_14 Start_17)))
   (Start_14 Int (x 1 4 3 (- Start_15 Start_13) (* Start_15 Start_15) (div Start_7 Start_13) (mod Start_9 Start_15)))
   (StartBool_3 Bool (true (and StartBool StartBool_3) (or StartBool_1 StartBool) (< Start_11 Start_14) (<= Start_5 Start_5)))
   (Start_13 Int (5 (- Start) (- Start_5 Start_13) (* Start_5 Start_10) (div Start_7 Start_10) (ite StartBool_3 Start_9 Start_11)))
   (StartBool_5 Bool (false true (and StartBool_3 StartBool) (or StartBool_1 StartBool_4) (< Start_14 Start_5) (= Start_14 Start_14)))
   (Start_2 Int (0 (- Start_4) (+ Start_12 Start_9) (* Start_10 Start_9) (div Start_7 Start_1) (mod Start_13 Start_7)))
   (Start_4 Int (2 4 5 0 y 1 (- Start_4 Start_4) (* Start_3 Start_5)))
   (Start_15 Int (4 (div Start_10 Start_16)))
   (Start_1 Int (4 (- Start_1) (- Start_2 Start) (+ Start_3 Start_4) (* Start_2 Start_1)))
   (StartBool_1 Bool (false true (or StartBool_2 StartBool) (< Start Start_4)))
   (Start_11 Int (2 (- Start_4) (- Start_2 Start) (* Start_7 Start_10) (mod Start_1 Start_7)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_1 StartBool_1) (< Start_5 Start_5) (<= Start_4 Start) (= Start_6 Start_7)))
   (Start_7 Int (0 (- Start Start_5) (div Start_5 Start_7) (ite StartBool_1 Start_2 Start_1)))
   (Start_6 Int (4 (- Start_5 Start_3) (+ Start_4 Start_3) (div Start_1 Start_7) (mod Start_4 Start_8) (abs Start_1)))
   (Start_8 Int (5 2 (- Start_8) (+ Start_3 Start_6) (abs Start_9) (ite StartBool_2 Start_6 Start_9)))
   (Start_5 Int (5 (- Start_1) (mod Start_4 Start_2) (abs Start_3) (ite StartBool_1 Start_5 Start_3)))
   (Start_10 Int (0 (* Start_4 Start_11) (div Start_7 Start_8) (mod Start_2 Start) (abs Start_9)))
   (Start_9 Int (2 (+ Start_6 Start_2) (* Start_10 Start_2) (div Start_10 Start_3) (abs Start_10)))
   (Start_3 Int (4 (- Start_2 Start_2) (+ Start_9 Start) (* Start_10 Start_4) (div Start_9 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 4 (mod x x))))

(check-synth)
