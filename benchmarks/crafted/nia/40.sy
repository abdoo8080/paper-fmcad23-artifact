(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_7 Int) (Start_10 Int) (Start_15 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_3 Int) (Start_12 Int) (Start_2 Int) (Start_11 Int) (Start_5 Int) (Start_9 Int) (Start_6 Int) (Start_8 Int) (Start_14 Int) (Start_4 Int) (StartBool_1 Bool) (Start_13 Int))
  ((Start Int (4 y (- Start) (- Start Start) (+ Start Start_1) (mod Start_2 Start) (ite StartBool Start Start_3)))
   (StartBool Bool (true (not StartBool_1) (<= Start_2 Start_11) (>= Start_1 Start_5)))
   (Start_1 Int (0 5 4 (+ Start_5 Start_9) (* Start Start) (ite StartBool_2 Start_15 Start_13)))
   (Start_7 Int (1 (div Start_15 Start_1) (abs Start_2)))
   (Start_10 Int (y (- Start_6) (* Start_14 Start_5) (abs Start_8) (ite StartBool_2 Start_6 Start_1)))
   (Start_15 Int (0 4 2 (- Start_10 Start_11) (div Start_11 Start_15) (mod Start_7 Start_3)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool_3 StartBool_2) (= Start_2 Start_12) (>= Start_8 Start_15)))
   (StartBool_3 Bool (false true (or StartBool_1 StartBool) (< Start_13 Start_11) (<= Start Start_1) (= Start_5 Start_14) (>= Start_3 Start_10)))
   (Start_3 Int (0 y (- Start Start_1) (+ Start_2 Start_2) (mod Start Start_1) (abs Start_3) (ite StartBool Start_3 Start_3)))
   (Start_12 Int (4 (* Start_13 Start_14) (mod Start_1 Start_11) (abs Start_13) (ite StartBool_3 Start_1 Start_8)))
   (Start_2 Int (2 x 5 3 4 (- Start) (- Start_4 Start_5) (div Start_4 Start_4) (mod Start_3 Start_3) (abs Start_1) (ite StartBool Start_5 Start_3)))
   (Start_11 Int (2 x (- Start_11) (* Start_6 Start_3) (div Start_6 Start_4)))
   (Start_5 Int (x 5 3 2 1 (mod Start_1 Start_5) (abs Start_6)))
   (Start_9 Int (5 2 (+ Start_2 Start_10) (div Start_9 Start_8) (ite StartBool_1 Start_11 Start_6)))
   (Start_6 Int (0 y (- Start) (+ Start Start_1) (* Start_6 Start_4) (abs Start_1)))
   (Start_8 Int (1 x 4 0 5 (- Start_9) (+ Start_4 Start_5) (ite StartBool Start_4 Start_4)))
   (Start_14 Int (3 (- Start_12) (- Start_12 Start_13) (+ Start_8 Start_12) (* Start_14 Start_5) (div Start_11 Start_9) (mod Start_12 Start_8)))
   (Start_4 Int (4 (+ Start_7 Start_8) (* Start_4 Start_1) (abs Start_3) (ite StartBool Start Start_4)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_3) (= Start_1 Start_2) (>= Start_12 Start_1)))
   (Start_13 Int (1 4 3 5 (* Start_3 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 1 0)))

(check-synth)
