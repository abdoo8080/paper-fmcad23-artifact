(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_14 Int) (StartBool_5 Bool) (Start_15 Int) (Start_13 Int) (StartBool_7 Bool) (StartBool_6 Bool) (Start_16 Int) (StartBool_8 Bool) (StartBool_1 Bool) (Start_12 Int) (Start_4 Int) (Start_11 Int) (Start_6 Int) (Start_7 Int) (Start_2 Int) (Start_10 Int) (Start_8 Int) (Start_3 Int) (StartBool_10 Bool) (Start_5 Int) (StartBool_4 Bool) (StartBool_9 Bool) (StartBool_2 Bool) (Start_9 Int) (StartBool_3 Bool))
  ((Start Int (1 x (- Start_1) (div Start_2 Start_2) (mod Start_2 Start_2) (abs Start_2) (ite StartBool_1 Start_1 Start_2)))
   (StartBool Bool (false true (not StartBool) (and StartBool_6 StartBool_3) (or StartBool_4 StartBool_1)))
   (Start_1 Int (y (- Start_10 Start_2) (+ Start_9 Start_5) (div Start_11 Start_12) (abs Start_3)))
   (Start_14 Int (y x (- Start_2) (- Start_10 Start_9) (+ Start_15 Start_15) (div Start_9 Start) (abs Start_15) (ite StartBool_10 Start_5 Start_15)))
   (StartBool_5 Bool (true (not StartBool_1) (and StartBool_5 StartBool_8) (or StartBool StartBool_6) (= Start_10 Start_10) (>= Start_7 Start_5) (> Start_2 Start_4)))
   (Start_15 Int (4 x (- Start Start_14) (ite StartBool_1 Start_8 Start_10)))
   (Start_13 Int (4 (- Start) (- Start_9 Start_9) (* Start_3 Start_3) (div Start_14 Start_13) (abs Start_4) (ite StartBool_9 Start Start)))
   (StartBool_7 Bool (true (not StartBool_4) (or StartBool_6 StartBool_5) (>= Start_11 Start_6)))
   (StartBool_6 Bool (false true (not StartBool_7) (<= Start_1 Start_8) (= Start_1 Start_7) (>= Start_8 Start_1)))
   (Start_16 Int (y (- Start_10 Start_4) (* Start_13 Start_15)))
   (StartBool_8 Bool (true false (and StartBool StartBool_2) (or StartBool_4 StartBool_9) (< Start_3 Start_13) (<= Start_13 Start_11) (> Start_10 Start_6)))
   (StartBool_1 Bool (true false (or StartBool_2 StartBool_1) (= Start Start_1) (>= Start Start_3) (> Start_4 Start_2)))
   (Start_12 Int (4 x 5 3 0 1 y (abs Start_10) (ite StartBool_2 Start_10 Start_10)))
   (Start_4 Int (y (- Start_5) (ite StartBool Start_1 Start_4)))
   (Start_11 Int (0 (+ Start_2 Start_6) (div Start_10 Start_12) (ite StartBool_3 Start_2 Start_10)))
   (Start_6 Int (4 (- Start_5 Start_1) (+ Start_7 Start_1) (div Start Start) (mod Start_4 Start_1) (abs Start_4) (ite StartBool Start_2 Start)))
   (Start_7 Int (5 (- Start_4) (- Start_5 Start_1) (+ Start_1 Start_5) (div Start_7 Start_8) (mod Start_8 Start_7) (abs Start_8)))
   (Start_2 Int (2 4 (- Start_1) (* Start_16 Start_2) (div Start_15 Start)))
   (Start_10 Int (0 (- Start_2) (- Start_4 Start_12) (+ Start_9 Start_4) (* Start_2 Start_12) (mod Start_6 Start_6) (abs Start_7) (ite StartBool_6 Start_11 Start_10)))
   (Start_8 Int (1 0 (- Start_5 Start_7) (+ Start_5 Start) (mod Start_8 Start_7) (ite StartBool_2 Start_6 Start)))
   (Start_3 Int (4 x (- Start_6 Start_7)))
   (StartBool_10 Bool (true false (not StartBool_3) (< Start_4 Start_9)))
   (Start_5 Int (5 2 3 1 (- Start_6) (- Start_6 Start_6) (+ Start_2 Start_3) (div Start_5 Start_1) (mod Start_1 Start_2)))
   (StartBool_4 Bool (true false (= Start_2 Start_5) (>= Start_9 Start_1) (> Start_8 Start_4)))
   (StartBool_9 Bool (true (not StartBool_10) (and StartBool_2 StartBool_7) (= Start_4 Start_5) (> Start_3 Start_9)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool_4 StartBool_1) (< Start_4 Start_3) (>= Start_8 Start_6) (> Start_4 Start_3)))
   (Start_9 Int (1 (+ Start_2 Start_9) (* Start_6 Start_1) (mod Start_4 Start_1) (abs Start_1) (ite StartBool_3 Start_8 Start_3)))
   (StartBool_3 Bool (true false (not StartBool_3) (or StartBool_5 StartBool) (< Start_6 Start_6) (<= Start Start) (= Start_9 Start_10) (>= Start_11 Start_3) (> Start_9 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 5 (abs y))))

(check-synth)
