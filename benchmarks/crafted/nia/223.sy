(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_13 Int) (Start_3 Int) (Start_2 Int) (Start_1 Int) (Start_10 Int) (Start_15 Int) (StartBool_1 Bool) (Start_5 Int) (Start_7 Int) (Start_4 Int) (Start_6 Int) (Start_8 Int) (Start_12 Int) (Start_9 Int) (Start_11 Int))
  ((Start Int (0 5 (div Start_1 Start_2) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true (not StartBool) (and StartBool_1 StartBool_1) (< Start_2 Start_2) (<= Start_7 Start_9) (= Start_4 Start) (>= Start_12 Start_1) (> Start_15 Start_10)))
   (Start_14 Int (5 (- Start_4) (- Start_4 Start_5) (* Start Start_13) (div Start_1 Start_11) (abs Start_13)))
   (Start_13 Int (3 (div Start_13 Start_9) (abs Start_4) (ite StartBool_1 Start_14 Start_1)))
   (Start_3 Int (0 4 1 (- Start) (div Start_1 Start)))
   (Start_2 Int (3 0 (- Start_2 Start_2) (* Start_1 Start_2) (mod Start Start) (abs Start_1)))
   (Start_1 Int (3 (- Start_1 Start_2) (+ Start_1 Start) (* Start Start_1) (abs Start) (ite StartBool_1 Start_3 Start_3)))
   (Start_10 Int (3 (- Start_9) (abs Start_9) (ite StartBool Start_2 Start_5)))
   (Start_15 Int (5 (- Start_15) (+ Start_6 Start_9) (* Start_4 Start_7) (div Start_4 Start_1) (abs Start_1) (ite StartBool_1 Start_1 Start_13)))
   (StartBool_1 Bool (true false (not StartBool) (< Start_1 Start_4) (<= Start_4 Start_1) (= Start_4 Start) (>= Start_5 Start_1) (> Start_5 Start_4)))
   (Start_5 Int (4 (- Start_2) (- Start_5 Start_5) (+ Start_1 Start_5) (div Start_2 Start_2) (abs Start)))
   (Start_7 Int (x y (+ Start_7 Start_4) (div Start_2 Start_10) (mod Start_12 Start_1) (abs Start_5)))
   (Start_4 Int (5 y (- Start_6) (+ Start_1 Start_5) (ite StartBool_1 Start Start_4)))
   (Start_6 Int (2 3 (- Start_7) (- Start_5 Start_3) (+ Start_4 Start_2) (mod Start_8 Start_7)))
   (Start_8 Int (3 4 x 1 5 (- Start_8 Start_8) (+ Start_9 Start_10) (div Start_6 Start_8)))
   (Start_12 Int (1 (- Start_5 Start_9) (+ Start_5 Start_4) (div Start_12 Start_3) (mod Start_6 Start) (abs Start_13)))
   (Start_9 Int (y (- Start_1 Start_9) (div Start_9 Start_9) (mod Start_6 Start_3) (ite StartBool_1 Start_3 Start_11)))
   (Start_11 Int (x 4 (- Start_3) (mod Start_5 Start_7) (ite StartBool Start_6 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* x y))))

(check-synth)
