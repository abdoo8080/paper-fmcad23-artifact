(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_11 Int) (Start_10 Int) (Start_8 Int) (StartBool_6 Bool) (Start_6 Int) (StartBool_4 Bool) (Start_7 Int) (Start_2 Int) (Start_9 Int) (Start_5 Int) (Start_3 Int) (StartBool_2 Bool) (Start_4 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_1 Int))
  ((Start Int (3 (- Start) (- Start Start_1) (+ Start Start_1) (mod Start_2 Start_1)))
   (StartBool Bool (false true (not StartBool_5) (or StartBool_4 StartBool_6) (< Start_4 Start_5) (<= Start_7 Start_5) (>= Start_3 Start_5) (> Start_1 Start_5)))
   (StartBool_5 Bool (false (not StartBool_3) (and StartBool_1 StartBool_1) (<= Start Start_9) (= Start_11 Start_3) (>= Start_6 Start_4) (> Start_1 Start)))
   (Start_11 Int (y 3 x 4 (- Start_11) (div Start_5 Start_11)))
   (Start_10 Int (5 (+ Start_4 Start_1) (div Start_5 Start_10) (mod Start_1 Start_7) (abs Start_5) (ite StartBool_1 Start_10 Start)))
   (Start_8 Int (3 (- Start Start_4) (+ Start_9 Start_4) (* Start_3 Start_9) (mod Start_5 Start_8)))
   (StartBool_6 Bool (true (and StartBool_3 StartBool_6) (< Start_1 Start_1) (<= Start_6 Start_8) (= Start_1 Start_7) (> Start_1 Start_8)))
   (Start_6 Int (1 y 2 0 x (- Start_6) (ite StartBool_1 Start_5 Start_3)))
   (StartBool_4 Bool (false (not StartBool) (<= Start_1 Start_4) (= Start_4 Start_5) (> Start_3 Start_4)))
   (Start_7 Int (2 (- Start_6) (+ Start_7 Start_6) (* Start_7 Start_1) (div Start_7 Start_1)))
   (Start_2 Int (x (- Start_2) (+ Start Start_3) (* Start_3 Start) (abs Start_1) (ite StartBool Start_2 Start)))
   (Start_9 Int (4 5 x 3 0 (* Start_9 Start_9) (div Start_10 Start) (mod Start_4 Start_2) (abs Start_1)))
   (Start_5 Int (5 y (- Start) (+ Start_1 Start) (mod Start_6 Start_4) (ite StartBool_2 Start_4 Start_4)))
   (Start_3 Int (2 y 3 (- Start_1) (+ Start_4 Start_1) (* Start Start_2) (mod Start Start_4) (abs Start)))
   (StartBool_2 Bool (false true (not StartBool_4) (or StartBool_4 StartBool_1) (< Start_5 Start_3) (>= Start_3 Start_1)))
   (Start_4 Int (x (- Start Start_2) (+ Start_5 Start_5) (* Start_2 Start_2) (div Start_1 Start_2) (mod Start_5 Start_6)))
   (StartBool_1 Bool (false true (not StartBool_2) (or StartBool_3 StartBool_3) (< Start_4 Start_1) (= Start_4 Start_6) (>= Start_4 Start_6)))
   (StartBool_3 Bool (true (not StartBool_3) (or StartBool StartBool) (< Start_6 Start_5) (<= Start_5 Start_3) (>= Start Start_2) (> Start_5 Start_6)))
   (Start_1 Int (5 3 (abs Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod (abs (div 3 y)) (- 5)))))

(check-synth)
