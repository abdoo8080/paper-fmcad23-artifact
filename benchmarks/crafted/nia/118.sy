(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_7 Int) (StartBool_2 Bool) (Start_9 Int) (StartBool_6 Bool) (StartBool_4 Bool) (Start_11 Int) (Start_5 Int) (Start_17 Int) (Start_6 Int) (StartBool_5 Bool) (Start_3 Int) (StartBool_3 Bool) (Start_1 Int) (Start_10 Int) (Start_19 Int) (Start_2 Int) (Start_15 Int) (Start_13 Int) (Start_14 Int) (Start_12 Int) (Start_8 Int) (StartBool_7 Bool) (Start_18 Int) (StartBool_1 Bool) (Start_4 Int) (StartBool_8 Bool) (Start_16 Int) (StartBool_9 Bool))
  ((Start Int (3 y (- Start Start) (+ Start_1 Start_1) (div Start Start_1) (abs Start_1)))
   (StartBool Bool (true (not StartBool_1) (< Start_1 Start) (= Start_1 Start_2) (>= Start_1 Start_1) (> Start_1 Start)))
   (Start_7 Int (2 y (div Start_3 Start_5) (mod Start_4 Start_3)))
   (StartBool_2 Bool (true false (not StartBool) (or StartBool_3 StartBool_4) (= Start_1 Start_1) (> Start_5 Start)))
   (Start_9 Int (5 2 4 y (- Start_6) (- Start_11 Start_6) (+ Start_8 Start_4) (* Start_6 Start)))
   (StartBool_6 Bool (false (< Start_4 Start_13) (<= Start Start_11) (= Start_4 Start_3) (>= Start_13 Start_12) (> Start_7 Start_8)))
   (StartBool_4 Bool (true false (< Start_6 Start_6) (<= Start_5 Start_1) (= Start_5 Start_2)))
   (Start_11 Int (y (- Start_4 Start_6) (+ Start_12 Start_11) (* Start_12 Start_1) (div Start_8 Start_1) (ite StartBool_6 Start_5 Start_8)))
   (Start_5 Int (y (- Start_3) (div Start_2 Start_2) (ite StartBool_2 Start_3 Start_4)))
   (Start_17 Int (x 5 (- Start_17) (+ Start_3 Start_17) (* Start_17 Start_15) (abs Start_16) (ite StartBool_3 Start_14 Start_18)))
   (Start_6 Int (2 4 (- Start_4) (+ Start_5 Start_7) (* Start_7 Start_5) (div Start_6 Start_5) (mod Start_2 Start_2) (ite StartBool_2 Start_7 Start_4)))
   (StartBool_5 Bool (true false (< Start_3 Start_5) (= Start_8 Start_9) (>= Start_7 Start_3) (> Start_7 Start_10)))
   (Start_3 Int (x 1 5 3 (- Start) (- Start_3 Start) (+ Start_2 Start_3) (* Start_3 Start_3) (mod Start Start_4) (ite StartBool Start_1 Start)))
   (StartBool_3 Bool (true (not StartBool) (and StartBool_1 StartBool_5) (or StartBool_4 StartBool_2) (< Start Start_2) (<= Start_6 Start_1) (= Start_1 Start) (> Start Start_7)))
   (Start_1 Int (x (- Start_1 Start_1) (* Start_1 Start_1) (div Start_1 Start_1) (ite StartBool Start Start_1)))
   (Start_10 Int (2 4 y (- Start_3 Start_8) (div Start_6 Start_5) (mod Start_10 Start_3) (abs Start)))
   (Start_19 Int (5 (+ Start_19 Start_5) (* Start_17 Start_1) (div Start_1 Start_14) (abs Start_15)))
   (Start_2 Int (y 4 x 5 (- Start_1) (- Start_1 Start) (div Start Start) (abs Start_1) (ite StartBool Start_3 Start_3)))
   (Start_15 Int (y (- Start_1) (+ Start_15 Start_14) (* Start_16 Start_9) (mod Start_10 Start_13) (ite StartBool_7 Start_3 Start_14)))
   (Start_13 Int (2 0 (- Start_1) (- Start_10 Start_12) (+ Start_3 Start_11) (div Start_4 Start_14) (mod Start_12 Start_6)))
   (Start_14 Int (x 5 0 (+ Start_10 Start_12) (* Start Start_9) (mod Start_14 Start_14) (abs Start_14) (ite StartBool_2 Start_6 Start)))
   (Start_12 Int (x (div Start_6 Start_7) (mod Start_4 Start_11) (abs Start_12) (ite StartBool_2 Start_10 Start_2)))
   (Start_8 Int (1 5 (+ Start_12 Start_10) (mod Start_7 Start_15) (ite StartBool Start_12 Start_7)))
   (StartBool_7 Bool (true (not StartBool_1) (< Start_14 Start_17) (<= Start_5 Start_6) (= Start_14 Start_1) (>= Start Start_2)))
   (Start_18 Int (1 (div Start_6 Start_11)))
   (StartBool_1 Bool (true false (and StartBool_8 StartBool_6) (< Start_5 Start_18) (<= Start_10 Start_17) (= Start_4 Start_5)))
   (Start_4 Int (x (+ Start_4 Start) (* Start_5 Start_5) (div Start_5 Start) (abs Start_5)))
   (StartBool_8 Bool (true false (and StartBool_9 StartBool_9) (or StartBool_8 StartBool_3) (= Start_12 Start_9)))
   (Start_16 Int (2 5 (- Start_7) (* Start_12 Start_17) (div Start_3 Start_17) (abs Start_16)))
   (StartBool_9 Bool (true (not StartBool_1) (= Start_17 Start_9) (>= Start_18 Start_19) (> Start_18 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 3 0)))

(check-synth)
