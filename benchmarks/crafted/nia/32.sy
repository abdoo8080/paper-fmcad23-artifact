(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_10 Bool) (Start_13 Int) (StartBool_3 Bool) (Start_4 Int) (Start_6 Int) (Start_11 Int) (Start_8 Int) (Start_9 Int) (StartBool_2 Bool) (Start_14 Int) (StartBool_9 Bool) (Start_10 Int) (StartBool_8 Bool) (Start_7 Int) (StartBool_6 Bool) (Start_3 Int) (Start_5 Int) (Start_1 Int) (Start_12 Int) (StartBool_4 Bool) (Start_18 Int) (Start_16 Int) (Start_21 Int) (StartBool_5 Bool) (Start_15 Int) (StartBool_1 Bool) (Start_17 Int) (Start_19 Int) (Start_20 Int) (StartBool_7 Bool))
  ((Start Int (1 (- Start_1)))
   (StartBool Bool (false true (not StartBool_7) (and StartBool_3 StartBool_6) (<= Start_20 Start_20) (= Start_4 Start_20) (> Start_5 Start_8)))
   (Start_2 Int (y x (- Start_19) (* Start_2 Start_5) (div Start_6 Start_15) (mod Start_4 Start)))
   (StartBool_10 Bool (false (not StartBool) (and StartBool_9 StartBool_4) (<= Start_2 Start_8) (= Start_4 Start_9) (>= Start_5 Start_2)))
   (Start_13 Int (2 (- Start_9) (- Start_3 Start) (+ Start_4 Start_8) (* Start_10 Start_3) (div Start_1 Start_2) (mod Start_13 Start_12)))
   (StartBool_3 Bool (false true (or StartBool_1 StartBool_3) (< Start_3 Start_7) (<= Start_9 Start_1) (= Start_10 Start_9) (> Start_12 Start_13)))
   (Start_4 Int (5 y 2 x 3 (- Start_10 Start_1) (div Start_3 Start_2) (abs Start_11) (ite StartBool_3 Start_10 Start_1)))
   (Start_6 Int (x (- Start_2 Start_5) (+ Start_7 Start_6) (div Start_5 Start_1) (abs Start_7) (ite StartBool_1 Start_3 Start_8)))
   (Start_11 Int (0 (- Start_10 Start_11) (* Start_14 Start) (div Start_4 Start_4) (mod Start_5 Start_15) (ite StartBool_4 Start_14 Start_7)))
   (Start_8 Int (1 (- Start_10) (- Start_6 Start_4) (+ Start_3 Start_1) (div Start Start_8) (mod Start Start_9) (abs Start_5) (ite StartBool Start_8 Start_9)))
   (Start_9 Int (x (- Start_6) (- Start_2 Start_5) (+ Start Start_7) (abs Start_10)))
   (StartBool_2 Bool (true false (or StartBool_2 StartBool_2) (< Start_5 Start_10) (> Start_4 Start_5)))
   (Start_14 Int (0 1 4 5 y 3 (+ Start_19 Start_8) (mod Start_2 Start_4) (abs Start_16)))
   (StartBool_9 Bool (false (and StartBool_5 StartBool_4) (or StartBool_4 StartBool_5) (< Start_18 Start_10) (<= Start_4 Start_21) (>= Start_17 Start_17)))
   (Start_10 Int (0 (- Start_8) (* Start_1 Start_3) (ite StartBool_2 Start_4 Start)))
   (StartBool_8 Bool (false (not StartBool_7) (and StartBool_2 StartBool_4) (or StartBool_9 StartBool_7) (< Start_7 Start_16) (<= Start_17 Start_13) (= Start_19 Start_15) (> Start_4 Start_15)))
   (Start_7 Int (1 4 (- Start_4) (* Start_8 Start) (div Start_9 Start_4) (abs Start_10) (ite StartBool Start_1 Start)))
   (StartBool_6 Bool (false (<= Start_1 Start_16) (= Start_10 Start_13) (>= Start_5 Start_14) (> Start_11 Start_17)))
   (Start_3 Int (x (- Start Start_3) (+ Start_1 Start_2) (* Start_3 Start_3) (div Start_4 Start_1) (mod Start_5 Start) (abs Start_4)))
   (Start_5 Int (0 (- Start_4) (- Start_3 Start_6) (* Start_7 Start_5)))
   (Start_1 Int (4 0 3 (- Start) (- Start_1 Start_2) (+ Start_2 Start) (abs Start) (ite StartBool_1 Start_3 Start_2)))
   (Start_12 Int (3 y 4 (- Start_1 Start_13) (* Start_9 Start_11) (abs Start_13) (ite StartBool_2 Start_8 Start_10)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_4 StartBool_3) (or StartBool_6 StartBool_5) (= Start_7 Start_8) (> Start_9 Start_12)))
   (Start_18 Int (4 2 y (- Start_9) (mod Start_9 Start_4) (abs Start_12) (ite StartBool_4 Start_14 Start_2)))
   (Start_16 Int (1 x (div Start_14 Start_12) (mod Start_8 Start_5) (ite StartBool_6 Start_1 Start_10)))
   (Start_21 Int (x 1 (- Start_15 Start_9) (* Start_8 Start_5) (div Start Start) (mod Start_12 Start_17) (ite StartBool_10 Start_2 Start_10)))
   (StartBool_5 Bool (true false (< Start_16 Start_4) (<= Start_1 Start) (= Start_16 Start_18) (> Start_6 Start_4)))
   (Start_15 Int (3 (- Start_4) (- Start_6 Start_5) (div Start_14 Start_13) (mod Start_6 Start_13) (ite StartBool Start_7 Start_18)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_3 StartBool_7) (< Start_10 Start_19) (<= Start_14 Start_6) (>= Start_20 Start_15) (> Start Start)))
   (Start_17 Int (5 x (- Start Start) (+ Start_9 Start_12) (div Start_17 Start_18)))
   (Start_19 Int (y 2 3 (+ Start_15 Start_18) (div Start_14 Start_15) (ite StartBool_2 Start_4 Start_7)))
   (Start_20 Int (2 (- Start_3) (- Start_18 Start_19) (div Start_17 Start_1) (abs Start_20) (ite StartBool Start_1 Start_20)))
   (StartBool_7 Bool (false true (not StartBool_8) (or StartBool_7 StartBool_4) (< Start Start_17) (>= Start_4 Start_19) (> Start_6 Start_20)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 3 (abs y))))

(check-synth)
