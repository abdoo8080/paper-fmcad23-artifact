(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_6 Int) (Start_18 Int) (Start_17 Int) (Start_13 Int) (Start_3 Int) (StartBool_3 Bool) (Start_7 Int) (Start_2 Int) (Start_4 Int) (Start_19 Int) (StartBool_2 Bool) (Start_5 Int) (Start_8 Int) (StartBool_1 Bool) (Start_9 Int) (Start_10 Int) (Start_14 Int) (Start_11 Int) (Start_12 Int) (Start_15 Int) (Start_16 Int))
  ((Start Int (3 (+ Start_1 Start_1) (* Start_2 Start_3)))
   (StartBool Bool (false true (not StartBool_1) (or StartBool_3 StartBool_2) (< Start_8 Start_1) (<= Start_19 Start_2) (= Start_15 Start_11) (>= Start_12 Start_16)))
   (Start_1 Int (4 (- Start_2) (+ Start_16 Start_15) (* Start_12 Start_6) (div Start_3 Start) (abs Start_9) (ite StartBool_3 Start_8 Start_2)))
   (Start_6 Int (1 x 3 5 (* Start_17 Start_10) (div Start_19 Start_4)))
   (Start_18 Int (4 0 (- Start_13) (- Start_9 Start_6) (+ Start_17 Start_8) (mod Start_9 Start_3) (abs Start_15)))
   (Start_17 Int (y 3 x 4 (- Start_16) (- Start_6 Start_15) (+ Start_11 Start_5) (* Start_17 Start_6) (abs Start_1) (ite StartBool_1 Start_11 Start_10)))
   (Start_13 Int (4 1 2 (- Start_6 Start_9) (+ Start_9 Start_2) (* Start_11 Start_9) (abs Start_7)))
   (Start_3 Int (1 2 x 4 5 (- Start_2) (- Start_2 Start_2) (+ Start_3 Start_2) (div Start_3 Start_3)))
   (StartBool_3 Bool (false true (< Start_16 Start) (= Start_4 Start_9) (> Start_11 Start_18)))
   (Start_7 Int (y (+ Start_9 Start_15) (div Start_17 Start_1) (mod Start_4 Start_18) (abs Start_15)))
   (Start_2 Int (3 y (- Start_4) (- Start_4 Start_5) (+ Start_1 Start_4) (* Start Start_1) (div Start_3 Start_3)))
   (Start_4 Int (y 3 5 (- Start_4) (- Start_4 Start_6) (* Start_4 Start_4) (mod Start_7 Start_4) (abs Start_8)))
   (Start_19 Int (x 4 (+ Start_10 Start) (* Start_2 Start_16) (div Start_19 Start_5) (abs Start_18)))
   (StartBool_2 Bool (true (not StartBool_2)))
   (Start_5 Int (0 5 4 (+ Start Start_4) (* Start_2 Start_2) (abs Start_3)))
   (Start_8 Int (5 y 3 (- Start_9) (+ Start_7 Start_6) (* Start_1 Start_9) (abs Start_4)))
   (StartBool_1 Bool (true false (not StartBool_2) (or StartBool_1 StartBool_2) (< Start_8 Start_10) (= Start_11 Start_1) (>= Start_4 Start_1) (> Start_1 Start_7)))
   (Start_9 Int (x (- Start_6) (- Start_4 Start) (* Start_10 Start_6) (mod Start_5 Start_3) (abs Start_10) (ite StartBool_1 Start_9 Start_10)))
   (Start_10 Int (1 y 3 4 (- Start_11 Start_11) (* Start_6 Start_4) (mod Start_17 Start_9) (abs Start_2) (ite StartBool_2 Start_7 Start_8)))
   (Start_14 Int (1 3 (- Start_1) (+ Start_15 Start_5) (mod Start_5 Start_8) (abs Start_16)))
   (Start_11 Int (1 4 5 (div Start_2 Start_12) (abs Start_2)))
   (Start_12 Int (1 3 (- Start_5) (+ Start_13 Start) (* Start_4 Start_13) (div Start_14 Start_6) (mod Start_9 Start_9) (abs Start) (ite StartBool_2 Start_4 Start_14)))
   (Start_15 Int (3 (- Start_16) (* Start_15 Start_10) (div Start_4 Start_12) (ite StartBool_1 Start_15 Start_13)))
   (Start_16 Int (4 (- Start_8) (+ Start_5 Start_1) (* Start_16 Start_12) (mod Start_10 Start_7) (abs Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (mod (abs y) 2) 0)))

(check-synth)
