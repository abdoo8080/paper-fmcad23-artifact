(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_9 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_7 Int) (Start_2 Int) (Start_23 Int) (Start_12 Int) (Start_16 Int) (Start_20 Int) (Start_5 Int) (Start_4 Int) (Start_18 Int) (Start_6 Int) (Start_3 Int) (StartBool_1 Bool) (Start_14 Int) (Start_8 Int) (Start_13 Int) (Start_11 Int) (StartBool_2 Bool) (Start_15 Int) (Start_17 Int) (StartBool_3 Bool) (Start_19 Int) (StartBool_7 Bool) (Start_21 Int) (Start_1 Int) (Start_22 Int) (StartBool_6 Bool))
  ((Start Int (5 (abs Start) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (false (and StartBool_4 StartBool_6) (or StartBool_2 StartBool_4) (= Start Start_18)))
   (Start_10 Int (y 0 (- Start_5 Start_9) (* Start_9 Start_11) (mod Start_12 Start_12) (ite StartBool_4 Start Start_7)))
   (Start_9 Int (3 0 (- Start_1) (- Start_5 Start_10) (div Start_10 Start_5) (ite StartBool_4 Start_7 Start_9)))
   (StartBool_4 Bool (false (>= Start_7 Start_6)))
   (StartBool_5 Bool (true false (not StartBool) (and StartBool_4 StartBool_3) (or StartBool StartBool_2)))
   (Start_7 Int (0 (- Start_3 Start_4) (+ Start_1 Start_3) (div Start_8 Start_5) (ite StartBool_1 Start_9 Start_5)))
   (Start_2 Int (0 (mod Start_17 Start_13) (ite StartBool_6 Start_6 Start_23)))
   (Start_23 Int (5 (mod Start_23 Start_22) (abs Start_4) (ite StartBool_4 Start_3 Start_1)))
   (Start_12 Int (2 (- Start_6 Start_5) (+ Start_10 Start_5) (* Start_7 Start_3) (div Start Start_6) (mod Start Start_9) (abs Start_11) (ite StartBool_1 Start_2 Start_13)))
   (Start_16 Int (0 (- Start_4) (- Start_8 Start_9) (+ Start_16 Start_1) (* Start_13 Start_4) (div Start_11 Start_17)))
   (Start_20 Int (y 4 2 0 1 5 (- Start_19 Start_10)))
   (Start_5 Int (x 1 (- Start_4) (+ Start_1 Start_5) (abs Start_2) (ite StartBool_3 Start Start_6)))
   (Start_4 Int (0 (- Start_15) (* Start_12 Start_18) (div Start_1 Start_17) (abs Start_13) (ite StartBool_5 Start_1 Start_18)))
   (Start_18 Int (5 (- Start_19) (- Start_17 Start_20) (* Start_20 Start_9) (mod Start_3 Start_16) (abs Start_13)))
   (Start_6 Int (4 (- Start_5) (+ Start_3 Start_2) (* Start Start_7)))
   (Start_3 Int (2 (- Start_1) (- Start_3 Start) (+ Start_2 Start_4) (* Start_1 Start_5) (div Start_4 Start_1) (mod Start_4 Start_3)))
   (StartBool_1 Bool (true (and StartBool_1 StartBool) (or StartBool_1 StartBool_2) (< Start_1 Start_2) (= Start_1 Start_1) (>= Start_3 Start_1)))
   (Start_14 Int (5 4 1 x 2 y (- Start_14) (- Start_7 Start_2) (+ Start_15 Start) (div Start_3 Start_12) (mod Start_1 Start_5) (abs Start_13)))
   (Start_8 Int (2 1 (- Start) (- Start_2 Start_17) (div Start_16 Start) (abs Start_14) (ite StartBool_3 Start_14 Start_15)))
   (Start_13 Int (5 3 0 (- Start_5 Start_5) (* Start_13 Start_3) (mod Start_5 Start_6) (ite StartBool_2 Start_7 Start_12)))
   (Start_11 Int (y (- Start_14) (+ Start_6 Start_1) (* Start_14 Start) (div Start_7 Start_6) (mod Start_3 Start_9)))
   (StartBool_2 Bool (false (not StartBool_7) (and StartBool_2 StartBool_1) (<= Start_11 Start_5) (= Start_14 Start_9) (> Start_18 Start_2)))
   (Start_15 Int (0 (- Start_1 Start_16) (+ Start_7 Start_11) (* Start Start_11) (div Start_15 Start_1) (abs Start_10)))
   (Start_17 Int (x 3 (- Start_2 Start_17) (+ Start_16 Start_9) (mod Start_2 Start_13) (abs Start_5) (ite StartBool_2 Start_9 Start_4)))
   (StartBool_3 Bool (true (or StartBool_3 StartBool) (< Start_5 Start_4) (> Start_2 Start_15)))
   (Start_19 Int (1 3 (- Start_14) (+ Start_17 Start_7) (* Start_1 Start_19) (div Start_10 Start_21) (ite StartBool_5 Start_14 Start_8)))
   (StartBool_7 Bool (false (not StartBool) (and StartBool_2 StartBool_5) (< Start_13 Start_18) (<= Start_15 Start_23) (= Start_3 Start) (>= Start_23 Start_6)))
   (Start_21 Int (4 1 0 (+ Start_15 Start_7) (* Start_20 Start_16) (div Start_22 Start_6) (mod Start_2 Start_15) (abs Start_23)))
   (Start_1 Int (y 2 (- Start Start_1) (* Start_1 Start) (mod Start Start)))
   (Start_22 Int (2 1 3 (* Start_7 Start_17) (div Start_5 Start_18) (mod Start_11 Start_7)))
   (StartBool_6 Bool (false (and StartBool_4 StartBool_5) (or StartBool_6 StartBool_1) (< Start_7 Start_2) (<= Start_5 Start_23)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 3 (- (div 2 0)))))

(check-synth)
