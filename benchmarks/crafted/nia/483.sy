(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_4 Int) (StartBool_3 Bool) (Start_7 Int) (Start_6 Int) (Start_2 Int) (Start_11 Int) (Start_10 Int) (Start_3 Int) (Start_5 Int) (Start_1 Int) (Start_8 Int) (Start_16 Int) (Start_12 Int) (Start_14 Int) (StartBool_1 Bool) (Start_15 Int) (Start_13 Int) (Start_9 Int) (StartBool_2 Bool))
  ((Start Int (3 x 0 5 1 (* Start Start_1) (mod Start Start_2)))
   (StartBool Bool (true false))
   (Start_4 Int (1 y (- Start_1 Start_16) (+ Start_5 Start_11) (* Start_2 Start_15) (mod Start_6 Start_6) (abs Start_9)))
   (StartBool_3 Bool (false true (and StartBool_2 StartBool_1) (= Start_6 Start_2) (>= Start_10 Start_1) (> Start_5 Start_8)))
   (Start_7 Int (0 1 x 3 (- Start_3 Start_10) (+ Start_4 Start_12) (mod Start_8 Start_9) (ite StartBool_2 Start_11 Start_6)))
   (Start_6 Int (x 3 y 2 (- Start) (+ Start_4 Start_6) (* Start_3 Start_7) (mod Start_2 Start_8)))
   (Start_2 Int (2 (- Start_1) (+ Start_3 Start_2) (mod Start_1 Start_1) (abs Start_3)))
   (Start_11 Int (y 3 5 (- Start_10 Start_8) (+ Start Start_6) (* Start_10 Start_2) (mod Start_12 Start_2)))
   (Start_10 Int (3 5 (ite StartBool_1 Start_10 Start_10)))
   (Start_3 Int (5 y 0 (- Start_4) (ite StartBool_1 Start_5 Start_3)))
   (Start_5 Int (y x 3 0 5 (- Start_6 Start) (+ Start_2 Start_4) (div Start Start) (mod Start Start_5)))
   (Start_1 Int (y 3 (- Start_15) (+ Start_14 Start_13) (* Start_10 Start_5) (mod Start_7 Start_1) (abs Start_16)))
   (Start_8 Int (y 3 4 (- Start_9) (- Start_4 Start_5) (* Start_10 Start_2) (mod Start_7 Start_11) (abs Start_11)))
   (Start_16 Int (5 (- Start_7) (* Start_16 Start_6) (mod Start_6 Start_6)))
   (Start_12 Int (2 0 (- Start_8) (- Start_2 Start_8) (+ Start_2 Start_13) (div Start_5 Start_13) (mod Start_14 Start_1)))
   (Start_14 Int (0 (- Start) (+ Start_2 Start_4)))
   (StartBool_1 Bool (false true (and StartBool_3 StartBool_2) (or StartBool_3 StartBool_1) (< Start_16 Start_12)))
   (Start_15 Int (3 (- Start_10 Start_2) (+ Start_5 Start) (* Start_6 Start_13) (mod Start_12 Start_6) (ite StartBool_2 Start_4 Start_6)))
   (Start_13 Int (0 5 (- Start_2) (- Start_15 Start_7) (* Start_7 Start_3) (div Start_14 Start_8) (abs Start_5) (ite StartBool_2 Start_7 Start_10)))
   (Start_9 Int (3 1 0 (- Start_8) (* Start_4 Start_15) (ite StartBool_2 Start_2 Start_11)))
   (StartBool_2 Bool (true false (not StartBool_2) (< Start_1 Start_6) (<= Start_2 Start_14) (= Start_16 Start_3) (>= Start Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* (+ y x) y))))

(check-synth)
