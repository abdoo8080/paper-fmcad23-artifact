(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_11 Int) (Start_1 Int) (StartBool_6 Bool) (Start_2 Int) (Start_4 Int) (StartBool_3 Bool) (Start_5 Int) (Start_6 Int) (Start_3 Int) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (Start_9 Int) (Start_12 Int) (Start_10 Int) (Start_7 Int) (Start_8 Int))
  ((Start Int (0 (- Start) (+ Start Start) (* Start Start_1) (div Start Start_1) (mod Start_2 Start_3) (abs Start_4)))
   (StartBool Bool (true (<= Start_5 Start_11) (= Start Start_2) (>= Start_8 Start_8) (> Start_9 Start_7)))
   (Start_13 Int (y (- Start_2) (+ Start_9 Start_10) (div Start_4 Start_3) (abs Start_12) (ite StartBool_4 Start_4 Start_3)))
   (Start_11 Int (5 (- Start_5 Start_6) (+ Start_13 Start_4) (div Start_2 Start_8) (ite StartBool_6 Start_7 Start_4)))
   (Start_1 Int (5 (- Start_11) (- Start_10 Start_10) (div Start_11 Start_3) (mod Start_4 Start_12) (abs Start) (ite StartBool_5 Start_3 Start_8)))
   (StartBool_6 Bool (true false (and StartBool_3 StartBool_6) (or StartBool_2 StartBool) (<= Start_3 Start_7) (> Start_10 Start_3)))
   (Start_2 Int (3 4 x 5 y 2 (div Start_9 Start_6) (mod Start_10 Start_2) (ite StartBool_6 Start_9 Start_5)))
   (Start_4 Int (x (- Start Start_5) (+ Start_1 Start_3) (* Start_1 Start_1) (mod Start_4 Start)))
   (StartBool_3 Bool (true false (not StartBool) (or StartBool_2 StartBool_5) (= Start_4 Start_1) (>= Start_6 Start_2) (> Start_6 Start_1)))
   (Start_5 Int (x (- Start) (* Start_6 Start_3) (div Start Start_7) (mod Start Start) (ite StartBool_1 Start_4 Start_3)))
   (Start_6 Int (x 3 (- Start_4) (- Start_1 Start_5) (mod Start_6 Start_8) (abs Start) (ite StartBool_2 Start_5 Start)))
   (Start_3 Int (1 y 0 4 (- Start_4) (+ Start_1 Start_3) (div Start_4 Start_2) (abs Start_7) (ite StartBool Start_7 Start_8)))
   (StartBool_1 Bool (true (not StartBool_1) (= Start_7 Start_3) (>= Start_3 Start_2)))
   (StartBool_4 Bool (true (not StartBool) (and StartBool_4 StartBool_2) (< Start_1 Start) (<= Start Start_2) (= Start_2 Start_8) (>= Start_2 Start_8)))
   (StartBool_2 Bool (false (and StartBool_3 StartBool_4) (<= Start_7 Start)))
   (StartBool_5 Bool (true false (or StartBool StartBool_5) (<= Start_1 Start_7) (>= Start_5 Start_8) (> Start_5 Start_6)))
   (Start_9 Int (y (- Start_10) (+ Start_10 Start_3) (* Start_1 Start_6) (ite StartBool_4 Start_4 Start_3)))
   (Start_12 Int (5 x 2 (- Start_4 Start_8) (+ Start_12 Start_7) (div Start_8 Start_1) (abs Start_11)))
   (Start_10 Int (4 1 (- Start_7) (- Start_1 Start_10) (* Start_10 Start_8) (mod Start_1 Start_10) (ite StartBool_1 Start_4 Start_2)))
   (Start_7 Int (1 5 (- Start_2) (* Start_3 Start_7) (abs Start_6)))
   (Start_8 Int (5 4 x (- Start_6 Start_5) (abs Start_9) (ite StartBool Start_1 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 0 x) y)))

(check-synth)
