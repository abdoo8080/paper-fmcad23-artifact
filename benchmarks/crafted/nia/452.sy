(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_21 Int) (StartBool_7 Bool) (Start_20 Int) (StartBool_5 Bool) (Start_11 Int) (Start_10 Int) (Start_7 Int) (Start_9 Int) (Start_19 Int) (StartBool_8 Bool) (Start_8 Int) (Start_5 Int) (StartBool_1 Bool) (Start_17 Int) (Start_3 Int) (StartBool_2 Bool) (Start_22 Int) (Start_13 Int) (Start_16 Int) (Start_14 Int) (Start_6 Int) (Start_4 Int) (Start_15 Int) (StartBool_10 Bool) (Start_12 Int) (StartBool_9 Bool) (StartBool_6 Bool) (Start_18 Int) (StartBool_3 Bool) (StartBool_4 Bool) (Start_2 Int))
  ((Start Int (x 1 3 2 5 y 4 (- Start) (- Start_1 Start) (div Start_2 Start_3) (mod Start_4 Start_1) (abs Start)))
   (StartBool Bool (false (= Start Start_22) (>= Start_11 Start_7) (> Start_2 Start_22)))
   (Start_1 Int (3 0 5 (- Start_7) (- Start_1 Start_17) (+ Start_6 Start_9) (* Start_8 Start_7)))
   (Start_21 Int (x (- Start_1) (- Start_12 Start_6) (+ Start_8 Start_20) (* Start_10 Start_21) (div Start_19 Start_12) (mod Start_8 Start_4)))
   (StartBool_7 Bool (true false (or StartBool_9 StartBool_10) (< Start_12 Start) (>= Start_13 Start_9) (> Start_4 Start_6)))
   (Start_20 Int (y (- Start_20) (+ Start_21 Start_11) (* Start_11 Start_22) (div Start_1 Start_16) (mod Start_22 Start_5) (abs Start_3)))
   (StartBool_5 Bool (true (not StartBool_6) (and StartBool_2 StartBool_7) (or StartBool_4 StartBool_8) (< Start_9 Start_12) (<= Start_12 Start_11) (> Start Start_11)))
   (Start_11 Int (1 5 (- Start_10) (div Start_9 Start_10) (mod Start_9 Start)))
   (Start_10 Int (5 4 (- Start_6) (* Start_8 Start_6) (mod Start_1 Start_3) (abs Start_4) (ite StartBool_5 Start_9 Start_9)))
   (Start_7 Int (x (+ Start_6 Start_4) (* Start Start_1) (div Start_6 Start_4) (abs Start_9) (ite StartBool_4 Start_10 Start_11)))
   (Start_9 Int (0 (- Start_3) (- Start_4 Start_5) (+ Start_5 Start_8) (div Start_6 Start_7) (mod Start_7 Start_2)))
   (Start_19 Int (x 0 1 3 y 4 (- Start_8) (- Start_13 Start_3) (+ Start_16 Start_11) (* Start_3 Start_11) (mod Start_2 Start_16) (ite StartBool_10 Start_10 Start_19)))
   (StartBool_8 Bool (true false (not StartBool_6) (or StartBool_6 StartBool_4) (< Start_2 Start_3) (= Start_11 Start_4) (>= Start_10 Start_12)))
   (Start_8 Int (1 (- Start_6) (+ Start_9 Start_9) (mod Start_5 Start_4)))
   (Start_5 Int (3 1 (- Start_1) (+ Start Start_5) (* Start_1 Start_6) (div Start_2 Start_6) (abs Start_5) (ite StartBool_1 Start_1 Start_5)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool StartBool_3) (or StartBool_3 StartBool_2) (< Start Start_7) (= Start_8 Start_5) (>= Start_3 Start_1)))
   (Start_17 Int (0 4 (- Start_16) (- Start_11 Start_13) (+ Start_14 Start) (* Start_4 Start_1) (mod Start_8 Start_18) (abs Start_11)))
   (Start_3 Int (2 (- Start_19) (- Start Start_16) (+ Start_9 Start_14) (abs Start_19)))
   (StartBool_2 Bool (true (not StartBool_2) (and StartBool_7 StartBool_1) (or StartBool_5 StartBool_2) (= Start Start_1)))
   (Start_22 Int (0 (- Start_19) (- Start_5 Start_18) (* Start_6 Start_4) (abs Start_3) (ite StartBool_4 Start_11 Start_4)))
   (Start_13 Int (4 (- Start_8 Start_4) (+ Start_2 Start) (* Start_4 Start_14) (mod Start_13 Start_14) (abs Start_12)))
   (Start_16 Int (1 0 3 5 x 4 (+ Start_9 Start_1) (* Start_7 Start_2) (div Start_3 Start_16) (abs Start_2)))
   (Start_14 Int (2 x (* Start_12 Start_8) (mod Start_15 Start) (abs Start_16) (ite StartBool_1 Start_2 Start_4)))
   (Start_6 Int (5 (- Start_2) (- Start_4 Start_16) (div Start_4 Start_15) (abs Start_5)))
   (Start_4 Int (0 (* Start_2 Start_4) (mod Start_5 Start) (abs Start_3)))
   (Start_15 Int (x (* Start Start_4) (div Start_5 Start_1) (mod Start_4 Start_11)))
   (StartBool_10 Bool (true false (not StartBool_2) (and StartBool_6 StartBool_1) (or StartBool_1 StartBool_8) (<= Start_7 Start_2)))
   (Start_12 Int (5 1 x (- Start_7) (- Start_2 Start_11) (* Start_7 Start_9)))
   (StartBool_9 Bool (true false (and StartBool_1 StartBool_10) (or StartBool_7 StartBool_10) (= Start_6 Start_11)))
   (StartBool_6 Bool (false true (not StartBool) (or StartBool_9 StartBool_6) (<= Start_3 Start_3) (= Start_8 Start_17) (> Start Start_3)))
   (Start_18 Int (x 5 1 4 0 (- Start_1 Start_17) (+ Start_17 Start_4) (* Start_3 Start_15) (mod Start_12 Start_9) (abs Start_14) (ite StartBool_1 Start_2 Start_7)))
   (StartBool_3 Bool (true false (not StartBool_3) (< Start_14 Start_17) (<= Start_16 Start_18) (= Start_9 Start_16) (> Start_9 Start_5)))
   (StartBool_4 Bool (true false (not StartBool_9) (and StartBool_2 StartBool_4) (= Start_5 Start_9)))
   (Start_2 Int (x (+ Start_20 Start_13) (* Start_16 Start_14) (div Start_8 Start_14) (abs Start_4) (ite StartBool_2 Start_9 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod 2 y))))

(check-synth)
