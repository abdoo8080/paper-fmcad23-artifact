(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (StartBool_8 Bool) (StartBool_7 Bool) (Start_16 Int) (Start_3 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_12 Int) (StartBool_1 Bool) (Start_10 Int) (Start_13 Int) (Start_2 Int) (Start_11 Int) (Start_17 Int) (Start_1 Int) (StartBool_6 Bool) (Start_4 Int) (StartBool_3 Bool) (Start_5 Int) (Start_7 Int) (Start_9 Int) (StartBool_2 Bool) (Start_15 Int) (Start_6 Int) (Start_8 Int))
  ((Start Int (1 2 4 (+ Start_1 Start) (mod Start_2 Start_2) (abs Start_2)))
   (StartBool Bool (false (>= Start_1 Start_17)))
   (Start_14 Int (0 5 1 (* Start_4 Start_2) (mod Start_5 Start_7) (abs Start_11) (ite StartBool_8 Start_13 Start)))
   (StartBool_8 Bool (false (and StartBool_8 StartBool) (<= Start_1 Start_12) (>= Start_4 Start_12) (> Start_9 Start_2)))
   (StartBool_7 Bool (true false (not StartBool_1) (and StartBool_7 StartBool_3) (or StartBool_1 StartBool_6) (<= Start_9 Start_8) (>= Start_4 Start_11) (> Start_8 Start_10)))
   (Start_16 Int (x 0 (+ Start_9 Start_6) (* Start_12 Start_9) (div Start_6 Start_13) (abs Start_8) (ite StartBool_3 Start_5 Start)))
   (Start_3 Int (4 (- Start_2 Start_12) (div Start_5 Start_13) (mod Start_10 Start_14) (ite StartBool_7 Start_7 Start_8)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_6 StartBool) (or StartBool_2 StartBool_2) (< Start_10 Start_9) (<= Start_3 Start_6) (> Start_1 Start_5)))
   (StartBool_5 Bool (true (or StartBool_6 StartBool_5) (< Start_9 Start_10) (= Start Start_8) (>= Start_1 Start_8) (> Start_2 Start_7)))
   (Start_12 Int (5 (- Start_4 Start_12) (+ Start_12 Start_6) (abs Start_5)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool_2 StartBool_3) (or StartBool StartBool_2) (<= Start_4 Start_2) (= Start_1 Start_1) (> Start_4 Start_4)))
   (Start_10 Int (2 (* Start_1 Start_9)))
   (Start_13 Int (2 (- Start_4 Start_4) (* Start_2 Start_7) (ite StartBool_7 Start_11 Start_15)))
   (Start_2 Int (0 2 (+ Start Start_3) (* Start_1 Start) (abs Start) (ite StartBool_1 Start_1 Start_2)))
   (Start_11 Int (0 (+ Start_7 Start_9) (div Start_12 Start_10) (mod Start_7 Start_7) (abs Start_7)))
   (Start_17 Int (4 x 0 y (* Start_15 Start_4) (div Start_15 Start_17) (mod Start_12 Start_5) (ite StartBool_4 Start_13 Start_11)))
   (Start_1 Int (y (- Start_1) (+ Start_3 Start_15)))
   (StartBool_6 Bool (true false (not StartBool_2) (or StartBool_5 StartBool_3) (< Start_12 Start_10) (= Start Start_2) (>= Start_3 Start_4)))
   (Start_4 Int (x (- Start_5) (- Start_4 Start_3) (+ Start_4 Start_4) (div Start_2 Start) (mod Start_1 Start) (ite StartBool Start Start_2)))
   (StartBool_3 Bool (false true (<= Start_2 Start)))
   (Start_5 Int (y (- Start_5) (+ Start_5 Start_1) (div Start_3 Start)))
   (Start_7 Int (5 y (+ Start_9 Start_10) (* Start_5 Start_3) (mod Start_11 Start_4) (abs Start_8)))
   (Start_9 Int (x 1 (+ Start_3 Start_6) (* Start_5 Start_5) (div Start_5 Start_5) (ite StartBool_1 Start_1 Start_5)))
   (StartBool_2 Bool (false true (not StartBool_2) (and StartBool StartBool_1) (or StartBool_4 StartBool_3) (= Start_1 Start) (> Start_2 Start_6)))
   (Start_15 Int (2 (- Start_16 Start_6) (+ Start_15 Start_13) (mod Start_1 Start_2) (abs Start_8) (ite StartBool_8 Start_13 Start_14)))
   (Start_6 Int (x 1 2 4 (- Start_2 Start_4) (+ Start_3 Start_2) (div Start_6 Start_7) (mod Start_8 Start_6)))
   (Start_8 Int (2 4 5 y (- Start_4) (+ Start_6 Start) (div Start_1 Start) (mod Start Start_9) (abs Start) (ite StartBool_4 Start_10 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 4 (- x (abs y)))))

(check-synth)
