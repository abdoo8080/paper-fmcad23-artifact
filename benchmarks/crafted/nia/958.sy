(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_11 Int) (StartBool_2 Bool) (Start_5 Int) (Start_3 Int) (Start_4 Int) (Start_10 Int) (StartBool_1 Bool) (Start_7 Int) (Start_6 Int) (Start_2 Int) (Start_9 Int) (Start_8 Int) (StartBool_4 Bool) (StartBool_3 Bool))
  ((Start Int (3 (- Start Start) (+ Start_1 Start) (mod Start_2 Start) (ite StartBool_1 Start_1 Start)))
   (StartBool Bool (true false (not StartBool) (and StartBool_4 StartBool_1) (<= Start_10 Start_5) (>= Start_4 Start_2)))
   (Start_1 Int (4 0 x 2 (- Start) (- Start_6 Start_1) (+ Start_2 Start_11) (div Start_11 Start_8) (mod Start_1 Start) (abs Start) (ite StartBool_3 Start_8 Start_6)))
   (Start_11 Int (4 (- Start_2) (mod Start_1 Start_11) (abs Start) (ite StartBool Start_5 Start_5)))
   (StartBool_2 Bool (true (and StartBool StartBool_3) (or StartBool_3 StartBool) (<= Start_1 Start) (= Start_1 Start) (> Start_3 Start)))
   (Start_5 Int (5 3 (+ Start_6 Start) (mod Start_3 Start_3) (ite StartBool_2 Start_3 Start_4)))
   (Start_3 Int (0 4 1 x y 2 3 (- Start_1 Start_2) (+ Start_4 Start) (div Start_1 Start_5) (abs Start_2) (ite StartBool Start_6 Start_5)))
   (Start_4 Int (2 (- Start_1) (- Start_2 Start_4) (+ Start_2 Start_6) (* Start_5 Start_3) (mod Start_7 Start)))
   (Start_10 Int (3 5 (- Start_11) (+ Start_5 Start_10) (abs Start_11) (ite StartBool Start_9 Start_11)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool_2 StartBool) (<= Start_2 Start_1) (>= Start Start_2)))
   (Start_7 Int (y 1 4 (- Start_6) (- Start_1 Start_5) (div Start_7 Start) (abs Start_8) (ite StartBool_1 Start_2 Start_3)))
   (Start_6 Int (3 (div Start_1 Start_4) (abs Start_3)))
   (Start_2 Int (4 3 (- Start_9 Start_2) (div Start Start_7) (abs Start_11)))
   (Start_9 Int (1 (- Start_1) (+ Start Start_5) (* Start_4 Start_4) (div Start_3 Start_4) (mod Start_8 Start_8) (ite StartBool_1 Start_1 Start)))
   (Start_8 Int (1 (- Start_6 Start_2) (+ Start_6 Start_2) (* Start_7 Start_7) (div Start Start_3) (abs Start_5) (ite StartBool_1 Start_7 Start_3)))
   (StartBool_4 Bool (false true (or StartBool_4 StartBool) (< Start_8 Start) (<= Start_2 Start_8) (= Start_6 Start_4) (> Start_7 Start_10)))
   (StartBool_3 Bool (true false (and StartBool StartBool_4) (< Start_9 Start_6) (<= Start_7 Start_7) (>= Start_3 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (- (* y y)) (div x 2))))

(check-synth)
