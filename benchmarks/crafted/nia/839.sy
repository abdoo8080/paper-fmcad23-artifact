(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_1 Int) (Start_2 Int) (Start_4 Int) (Start_3 Int) (StartBool_1 Bool) (Start_13 Int) (StartBool_3 Bool) (StartBool_5 Bool) (Start_9 Int) (StartBool_4 Bool) (Start_11 Int) (Start_6 Int) (Start_10 Int) (Start_7 Int) (StartBool_6 Bool) (StartBool_2 Bool) (Start_8 Int) (Start_5 Int))
  ((Start Int (1 (- Start_1) (- Start Start_2) (div Start Start_3)))
   (StartBool Bool (false true (not StartBool_4)))
   (Start_12 Int (1 (* Start_10 Start_10) (div Start_3 Start_13) (mod Start_4 Start_8) (abs Start_6)))
   (Start_1 Int (4 0 (- Start_10) (- Start_1 Start_5) (+ Start_11 Start_4) (* Start_8 Start_8) (div Start_3 Start_2) (abs Start_11) (ite StartBool_2 Start_6 Start_1)))
   (Start_2 Int (y (- Start_7) (+ Start_8 Start_3) (* Start_4 Start_9) (div Start_1 Start_9) (abs Start_10) (ite StartBool_4 Start_5 Start_7)))
   (Start_4 Int (0 5 (- Start_2) (- Start_7 Start_7) (* Start_6 Start) (mod Start_6 Start_7)))
   (Start_3 Int (y 5 1 0 2 4 3 x (- Start_4) (- Start_2 Start_1) (* Start_5 Start_2) (abs Start_5) (ite StartBool_1 Start_1 Start_5)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool StartBool_3) (or StartBool_3 StartBool_4) (< Start_5 Start_5) (>= Start_2 Start_2)))
   (Start_13 Int (3 (+ Start_8 Start_8) (* Start_1 Start) (div Start_8 Start_7) (abs Start_6) (ite StartBool_1 Start_1 Start_1)))
   (StartBool_3 Bool (false true (not StartBool_1) (or StartBool_5 StartBool_2) (< Start_6 Start_1) (>= Start_1 Start)))
   (StartBool_5 Bool (false (not StartBool_3) (and StartBool_5 StartBool_6) (< Start_2 Start_8) (= Start_4 Start) (> Start Start_1)))
   (Start_9 Int (2 (- Start_6) (- Start_7 Start_2) (+ Start_9 Start_2) (* Start_2 Start_9) (div Start_4 Start_7) (mod Start_1 Start_4) (ite StartBool_6 Start_7 Start_3)))
   (StartBool_4 Bool (true (or StartBool_2 StartBool_3) (< Start_4 Start_3) (<= Start_4 Start_5) (= Start_2 Start_4)))
   (Start_11 Int (5 (- Start_5) (- Start_12 Start_3) (div Start_11 Start_2) (abs Start_1)))
   (Start_6 Int (4 5 y (- Start_7) (- Start_5 Start) (+ Start_4 Start_3) (div Start_5 Start) (ite StartBool_3 Start_5 Start_4)))
   (Start_10 Int (4 x (- Start_7) (+ Start_1 Start) (div Start_5 Start_8) (ite StartBool_2 Start_8 Start_6)))
   (Start_7 Int (x (+ Start_4 Start_2)))
   (StartBool_6 Bool (true (not StartBool_1) (or StartBool_4 StartBool_4) (< Start_5 Start_5) (= Start_7 Start_7)))
   (StartBool_2 Bool (true (or StartBool_4 StartBool_5) (< Start_7 Start_5) (<= Start_6 Start_4) (>= Start_8 Start_3) (> Start_7 Start_1)))
   (Start_8 Int (y (- Start_2) (- Start_7 Start) (+ Start_2 Start_1) (div Start_6 Start_3) (mod Start_1 Start_8) (ite StartBool_1 Start_7 Start_9)))
   (Start_5 Int (4 1 (- Start_5 Start_3) (+ Start_8 Start_9) (div Start_2 Start_1) (ite StartBool_2 Start_8 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (<= 4 y) (* x 2) 5)))

(check-synth)
