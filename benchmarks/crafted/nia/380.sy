(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_13 Int) (Start_11 Int) (Start_10 Int) (Start_8 Int) (Start_14 Int) (StartBool_1 Bool) (StartBool_7 Bool) (Start_9 Int) (Start_3 Int) (Start_7 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_5 Int) (StartBool_6 Bool) (Start_1 Int) (Start_2 Int) (StartBool_4 Bool) (Start_6 Int) (StartBool_5 Bool) (Start_4 Int))
  ((Start Int (y 5 2 x (mod Start Start_1) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (false true (and StartBool_1 StartBool_2) (> Start_2 Start_2)))
   (Start_12 Int (3 (- Start_10) (- Start_11 Start_13) (abs Start_4) (ite StartBool_5 Start_13 Start_7)))
   (Start_13 Int (4 (- Start_14 Start) (+ Start_13 Start_2) (div Start_6 Start_3)))
   (Start_11 Int (1 (- Start_4) (+ Start_8 Start_12) (* Start_13 Start_5) (mod Start_7 Start_6)))
   (Start_10 Int (2 (- Start) (- Start_8 Start_1) (+ Start Start_8) (* Start_5 Start_8) (abs Start_3)))
   (Start_8 Int (2 3 x (- Start_5) (mod Start_1 Start_3)))
   (Start_14 Int (1 (- Start_9) (+ Start_2 Start_8) (* Start_2 Start_1) (div Start_7 Start_3) (mod Start_12 Start_10) (ite StartBool Start_1 Start_1)))
   (StartBool_1 Bool (true (not StartBool_1) (or StartBool_6 StartBool_5) (< Start_6 Start_6) (<= Start_3 Start_8)))
   (StartBool_7 Bool (true false (not StartBool_2) (or StartBool_5 StartBool) (<= Start_1 Start_1) (= Start_6 Start)))
   (Start_9 Int (2 (+ Start_11 Start_10) (div Start_10 Start_3) (ite StartBool_7 Start_5 Start_3)))
   (Start_3 Int (0 (- Start_1 Start_1) (+ Start_1 Start_3) (div Start_2 Start_3) (mod Start_3 Start_2) (abs Start_2)))
   (Start_7 Int (x (+ Start_4 Start_4) (* Start_3 Start_6) (div Start_6 Start_4) (abs Start_3) (ite StartBool_2 Start_2 Start_6)))
   (StartBool_3 Bool (true (not StartBool_4) (<= Start_2 Start_4)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool StartBool_1) (< Start_2 Start_4) (= Start_3 Start_2) (>= Start_4 Start) (> Start_2 Start_5)))
   (Start_5 Int (5 3 (- Start_5) (+ Start_4 Start_2) (mod Start Start) (abs Start) (ite StartBool_3 Start_4 Start_5)))
   (StartBool_6 Bool (true (< Start_3 Start) (<= Start_9 Start_2) (= Start_10 Start_1)))
   (Start_1 Int (0 (div Start Start_1)))
   (Start_2 Int (2 (- Start_3) (+ Start_1 Start) (div Start_3 Start_2) (mod Start Start_2) (abs Start_2)))
   (StartBool_4 Bool (true (and StartBool_3 StartBool_5) (or StartBool_4 StartBool_4) (< Start_5 Start_6) (= Start_7 Start_6)))
   (Start_6 Int (5 (- Start_1) (- Start_6 Start_3) (* Start_1 Start) (div Start_2 Start_6)))
   (StartBool_5 Bool (true false (not StartBool_5) (= Start_7 Start_3)))
   (Start_4 Int (4 (- Start_3) (div Start_7 Start_7) (mod Start_5 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div (- y 3) (- 1 x)) 5)))

(check-synth)
