(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_3 Bool) (Start_15 Int) (Start_16 Int) (Start_12 Int) (Start_17 Int) (Start_11 Int) (Start_18 Int) (Start_13 Int) (Start_8 Int) (StartBool_1 Bool) (Start_1 Int) (Start_7 Int) (Start_2 Int) (Start_4 Int) (Start_5 Int) (Start_9 Int) (Start_19 Int) (Start_3 Int) (Start_6 Int) (Start_14 Int) (Start_10 Int))
  ((Start Int (y (- Start) (+ Start Start) (* Start Start_1) (div Start_1 Start_1) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (false true (< Start_5 Start_5) (= Start_3 Start_1) (>= Start_2 Start_5)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_1) (= Start_18 Start_7) (>= Start_5 Start_17) (> Start_18 Start_5)))
   (StartBool_4 Bool (true (and StartBool_1 StartBool_5) (or StartBool_2 StartBool_2) (<= Start_7 Start_18) (= Start_8 Start_2)))
   (StartBool_2 Bool (false (or StartBool_4 StartBool_3) (< Start_4 Start_18) (<= Start_6 Start_12) (>= Start_9 Start_5) (> Start_16 Start_15)))
   (StartBool_3 Bool (true (not StartBool_2) (or StartBool_1 StartBool_2) (>= Start_6 Start_8)))
   (Start_15 Int (4 2 (- Start Start_17) (+ Start_10 Start_6) (* Start_16 Start_11) (mod Start_11 Start_13)))
   (Start_16 Int (5 4 (+ Start_2 Start_12) (ite StartBool_1 Start_1 Start_1)))
   (Start_12 Int (2 (- Start_3 Start_5) (+ Start_9 Start_2) (* Start_10 Start_5) (div Start_11 Start_13) (abs Start_13) (ite StartBool_1 Start_7 Start_14)))
   (Start_17 Int (y 1 (- Start_5) (- Start_13 Start_1) (+ Start_5 Start_6) (mod Start_6 Start_1) (abs Start_6) (ite StartBool_1 Start Start_5)))
   (Start_11 Int (2 1 (- Start) (- Start_12 Start_11) (* Start_6 Start_9) (mod Start_12 Start_12) (ite StartBool Start_2 Start_9)))
   (Start_18 Int (x y (- Start_2) (- Start_3 Start_3) (+ Start_3 Start_19) (div Start_17 Start_5) (abs Start_6)))
   (Start_13 Int (y 2 3 (- Start) (- Start_17 Start_4) (div Start_6 Start_16) (abs Start_13)))
   (Start_8 Int (0 1 (+ Start_8 Start_9) (div Start_8 Start_2) (mod Start_1 Start_7) (abs Start) (ite StartBool_1 Start_8 Start_5)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (or StartBool StartBool) (<= Start_3 Start_4) (>= Start_2 Start_4) (> Start_2 Start_1)))
   (Start_1 Int (y (+ Start Start_3) (div Start_3 Start_4) (mod Start Start_2) (abs Start_2)))
   (Start_7 Int (2 (- Start_1 Start_3) (ite StartBool Start_1 Start_8)))
   (Start_2 Int (x 1 (+ Start_2 Start_2) (mod Start_4 Start_3) (abs Start_2)))
   (Start_4 Int (5 x 4 (- Start_2 Start) (ite StartBool_1 Start_4 Start)))
   (Start_5 Int (y 5 (* Start_5 Start_5) (div Start_6 Start_5) (mod Start_7 Start_7)))
   (Start_9 Int (x 3 4 2 (- Start_9) (div Start Start_9)))
   (Start_19 Int (2 3 4 (* Start_13 Start_4) (div Start_1 Start_18) (mod Start_4 Start_19) (abs Start_9) (ite StartBool_3 Start_10 Start_12)))
   (Start_3 Int (0 (- Start_4) (* Start Start_3) (div Start_4 Start_1) (mod Start Start_4) (abs Start_1) (ite StartBool Start_2 Start_2)))
   (Start_6 Int (y (+ Start_6 Start_6) (div Start_7 Start_5) (mod Start_6 Start_7) (abs Start_5) (ite StartBool_2 Start_7 Start_10)))
   (Start_14 Int (4 (abs Start_1) (ite StartBool_3 Start_15 Start_16)))
   (Start_10 Int (x 5 (* Start_8 Start_11) (abs Start_11) (ite StartBool Start_4 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 5 x)))

(check-synth)
