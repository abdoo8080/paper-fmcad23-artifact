(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_21 Int) (Start_18 Int) (Start_19 Int) (StartBool_6 Bool) (Start_17 Int) (StartBool_5 Bool) (Start_16 Int) (Start_15 Int) (Start_14 Int) (Start_1 Int) (Start_7 Int) (Start_3 Int) (Start_12 Int) (Start_4 Int) (Start_2 Int) (Start_8 Int) (Start_20 Int) (StartBool_4 Bool) (Start_6 Int) (Start_13 Int) (Start_11 Int) (Start_9 Int) (StartBool_3 Bool) (Start_5 Int) (Start_10 Int) (StartBool_2 Bool) (StartBool_1 Bool))
  ((Start Int (2 4 (* Start Start) (mod Start_1 Start_1) (abs Start_1) (ite StartBool_1 Start_2 Start_3)))
   (StartBool Bool (true (or StartBool_3 StartBool_5) (< Start_12 Start_3) (<= Start_1 Start_3) (> Start_20 Start_1)))
   (Start_21 Int (3 (* Start_18 Start_5) (mod Start_12 Start_4)))
   (Start_18 Int (5 4 2 x (- Start_2) (- Start_21 Start_9) (* Start_15 Start_5) (mod Start_6 Start_20)))
   (Start_19 Int (2 0 (* Start_10 Start_3) (mod Start_3 Start_20) (abs Start_16)))
   (StartBool_6 Bool (true (or StartBool_1 StartBool) (< Start_12 Start_12) (<= Start_5 Start_13) (= Start_8 Start_3) (>= Start_1 Start_6) (> Start_19 Start_10)))
   (Start_17 Int (3 2 (- Start_12) (- Start_9 Start_18) (+ Start_17 Start_18) (ite StartBool_6 Start_6 Start_16)))
   (StartBool_5 Bool (false (not StartBool_1) (or StartBool_1 StartBool) (< Start_6 Start_5) (= Start_2 Start_13) (> Start_11 Start_13)))
   (Start_16 Int (4 (- Start_12) (- Start_6 Start) (+ Start_15 Start_7) (div Start_14 Start) (abs Start_2)))
   (Start_15 Int (5 x (- Start_12) (abs Start_11) (ite StartBool_1 Start_16 Start_3)))
   (Start_14 Int (5 (- Start_6) (- Start_13 Start_12) (+ Start_12 Start_4) (* Start_15 Start_1) (div Start_7 Start_5) (ite StartBool_2 Start_4 Start_6)))
   (Start_1 Int (5 4 (- Start_7 Start_12) (+ Start_3 Start_9) (mod Start_8 Start) (ite StartBool_2 Start_11 Start_11)))
   (Start_7 Int (0 (- Start_8 Start_5) (mod Start_5 Start) (abs Start_7)))
   (Start_3 Int (4 (- Start_3) (- Start_2 Start_1) (+ Start_4 Start) (* Start_1 Start) (abs Start_1)))
   (Start_12 Int (y (+ Start_1 Start_11) (* Start_11 Start_8) (mod Start_7 Start_9) (abs Start_3) (ite StartBool_3 Start_8 Start_13)))
   (Start_4 Int (x (- Start_3) (* Start Start)))
   (Start_2 Int (5 1 (- Start_5) (- Start_3 Start_3) (+ Start_5 Start_4) (* Start_4 Start_3) (div Start Start_3) (mod Start_1 Start_2) (abs Start_6) (ite StartBool Start_4 Start_7)))
   (Start_8 Int (x (* Start_7 Start_1)))
   (Start_20 Int (5 x 3 y 1 4 0 (- Start_4 Start_6) (+ Start_15 Start_17) (* Start_14 Start_2) (mod Start_1 Start_13) (abs Start_15) (ite StartBool_1 Start_20 Start_19)))
   (StartBool_4 Bool (true (or StartBool_4 StartBool_1) (>= Start_10 Start_17) (> Start_13 Start_7)))
   (Start_6 Int (x (- Start_4) (+ Start_3 Start_5) (* Start_8 Start_2) (div Start_1 Start_9)))
   (Start_13 Int (x 3 (- Start_14) (* Start Start_6)))
   (Start_11 Int (4 0 (- Start_9 Start_10) (+ Start_4 Start_11) (ite StartBool_2 Start_11 Start_11)))
   (Start_9 Int (y x 5 2 (- Start) (- Start_4 Start_6) (div Start_3 Start_7) (abs Start_10)))
   (StartBool_3 Bool (false (not StartBool_4) (and StartBool_3 StartBool_4) (or StartBool_5 StartBool) (>= Start_1 Start_15) (> Start_8 Start_15)))
   (Start_5 Int (y 4 (- Start_2) (* Start_6 Start) (div Start_10 Start_6) (abs Start_10)))
   (Start_10 Int (5 2 (- Start_6) (- Start_10 Start) (mod Start_3 Start_8) (abs Start_4) (ite StartBool_1 Start_8 Start_5)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_2) (or StartBool StartBool) (>= Start Start_4) (> Start_7 Start_4)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_1 StartBool_1) (or StartBool_2 StartBool_1) (< Start_8 Start_7) (<= Start_11 Start) (= Start Start_9) (> Start_7 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div (abs x) 0))))

(check-synth)
