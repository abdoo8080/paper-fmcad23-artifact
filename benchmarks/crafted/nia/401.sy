(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_4 Int) (Start_5 Int) (Start_8 Int) (Start_12 Int) (StartBool_3 Bool) (Start_6 Int) (Start_2 Int) (Start_3 Int) (Start_7 Int) (Start_9 Int) (StartBool_1 Bool) (Start_16 Int) (Start_10 Int) (Start_14 Int) (StartBool_4 Bool) (Start_15 Int) (Start_11 Int) (Start_13 Int) (StartBool_2 Bool) (Start_17 Int))
  ((Start Int (0 (- Start) (- Start_1 Start) (+ Start Start_1) (mod Start Start_2)))
   (StartBool Bool (false true (not StartBool_3) (or StartBool StartBool_3) (< Start_4 Start) (= Start_5 Start_6) (>= Start_12 Start_4) (> Start Start_8)))
   (Start_1 Int (0 4 (- Start_7) (- Start_6 Start_12) (div Start_6 Start_15) (abs Start_3)))
   (Start_4 Int (3 2 5 (- Start_2) (- Start_3 Start_16) (* Start_6 Start_1)))
   (Start_5 Int (2 3 (* Start_1 Start_17) (mod Start_8 Start_11) (ite StartBool Start_14 Start_16)))
   (Start_8 Int (4 2 0 3 x y (- Start_16 Start_8) (mod Start_15 Start_10)))
   (Start_12 Int (x 3 4 (div Start_15 Start_9) (mod Start_10 Start_11) (abs Start_10)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_3 StartBool_1) (< Start_16 Start) (= Start_1 Start_12) (>= Start_16 Start_17) (> Start_8 Start_7)))
   (Start_6 Int (4 (- Start_8 Start_2) (* Start_16 Start_7) (div Start Start_7) (mod Start_16 Start_12) (abs Start_14) (ite StartBool_1 Start_8 Start_14)))
   (Start_2 Int (0 (- Start_1) (- Start_1 Start_3) (* Start_2 Start) (abs Start_3)))
   (Start_3 Int (y 0 (- Start) (+ Start_4 Start_1) (div Start_1 Start_5) (mod Start_6 Start_6) (abs Start_7)))
   (Start_7 Int (5 (- Start_2) (- Start_4 Start) (* Start_4 Start_5) (div Start_8 Start_9) (abs Start) (ite StartBool Start_8 Start_4)))
   (Start_9 Int (0 x y 3 (* Start Start_3) (mod Start_10 Start_11) (abs Start) (ite StartBool Start_7 Start_6)))
   (StartBool_1 Bool (true (and StartBool_3 StartBool_3) (< Start_13 Start_10)))
   (Start_16 Int (4 (+ Start_17 Start_10) (div Start_8 Start_16) (mod Start_12 Start_3) (ite StartBool_3 Start_2 Start)))
   (Start_10 Int (5 (- Start_11 Start_6) (+ Start_11 Start_7) (div Start_11 Start_4) (mod Start_6 Start_12) (ite StartBool_1 Start_13 Start_3)))
   (Start_14 Int (x (- Start_4 Start_9) (div Start_7 Start_14) (mod Start_6 Start_15) (ite StartBool Start_6 Start_13)))
   (StartBool_4 Bool (false (and StartBool StartBool_1) (< Start_5 Start_17) (>= Start_4 Start) (> Start Start_16)))
   (Start_15 Int (y (- Start_16 Start_17) (div Start_5 Start_17) (abs Start_9) (ite StartBool Start_13 Start_9)))
   (Start_11 Int (5 3 (- Start_6 Start_3) (+ Start_11 Start_3)))
   (Start_13 Int (4 (+ Start_6 Start_11) (div Start Start_3) (mod Start Start) (abs Start_13) (ite StartBool_2 Start_6 Start_13)))
   (StartBool_2 Bool (true (or StartBool_1 StartBool_3) (< Start_14 Start_13) (>= Start_9 Start_12)))
   (Start_17 Int (3 (+ Start_13 Start_8) (* Start_11 Start_16) (div Start_13 Start_17) (abs Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 0 (- (* 3 4) (* 3 x)))))

(check-synth)
