(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_6 Bool) (Start_10 Int) (Start_12 Int) (Start_1 Int) (StartBool_5 Bool) (Start_11 Int) (StartBool_3 Bool) (StartBool_4 Bool) (Start_13 Int) (StartBool_1 Bool) (Start_14 Int) (Start_4 Int) (Start_5 Int) (Start_9 Int) (Start_6 Int) (Start_2 Int) (Start_7 Int) (StartBool_2 Bool) (Start_3 Int) (Start_8 Int))
  ((Start Int (x 5 4 (- Start_1 Start_1) (div Start_2 Start_1) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (false (not StartBool_3) (and StartBool_3 StartBool_3) (or StartBool_5 StartBool_6) (>= Start_6 Start)))
   (StartBool_6 Bool (false true (not StartBool_2) (and StartBool_5 StartBool_5) (or StartBool_5 StartBool_2) (< Start_8 Start_4) (= Start_4 Start_13) (>= Start_11 Start_2)))
   (Start_10 Int (y 3 (* Start_6 Start_1) (div Start_10 Start_12)))
   (Start_12 Int (5 1 (- Start_6 Start_12) (* Start_6 Start_9) (div Start_9 Start_2) (abs Start_5) (ite StartBool_4 Start_5 Start_12)))
   (Start_1 Int (4 (- Start Start_1) (* Start_9 Start_7) (div Start_8 Start_7) (ite StartBool_1 Start_2 Start_1)))
   (StartBool_5 Bool (false (and StartBool StartBool_5) (= Start_2 Start_3) (> Start_4 Start_5)))
   (Start_11 Int (3 (- Start_13) (- Start_7 Start_5) (mod Start_8 Start_5) (abs Start_3) (ite StartBool_3 Start_3 Start_14)))
   (StartBool_3 Bool (true (not StartBool_3) (and StartBool StartBool) (< Start_3 Start_3) (>= Start_2 Start_1)))
   (StartBool_4 Bool (true (and StartBool_4 StartBool_1) (or StartBool_3 StartBool_5) (<= Start_5 Start_5) (>= Start_5 Start_6) (> Start_3 Start_2)))
   (Start_13 Int (4 (- Start_14 Start_1) (+ Start Start_11) (* Start_10 Start_9) (abs Start_10)))
   (StartBool_1 Bool (true false (not StartBool_2) (and StartBool_3 StartBool_1) (or StartBool StartBool_1) (= Start_1 Start_1)))
   (Start_14 Int (4 3 (- Start) (+ Start_4 Start_2) (* Start_11 Start_14) (ite StartBool_3 Start_4 Start_9)))
   (Start_4 Int (4 (- Start Start_2) (* Start Start) (abs Start_3) (ite StartBool_2 Start_4 Start_5)))
   (Start_5 Int (2 0 x (- Start_6 Start_3) (div Start_4 Start) (mod Start_2 Start) (ite StartBool_4 Start_1 Start_3)))
   (Start_9 Int (4 1 x y 3 (+ Start_10 Start_10) (div Start Start_11) (abs Start) (ite StartBool_4 Start_6 Start_12)))
   (Start_6 Int (2 (- Start_7 Start_5) (+ Start_7 Start) (* Start_5 Start_4) (ite StartBool_1 Start_1 Start_1)))
   (Start_2 Int (x y 4 (- Start_1) (+ Start_2 Start_1) (ite StartBool_1 Start_2 Start_2)))
   (Start_7 Int (5 1 (+ Start_5 Start_1) (* Start_1 Start_7) (ite StartBool_2 Start_1 Start_1)))
   (StartBool_2 Bool (false (and StartBool_2 StartBool_3) (< Start Start_7) (<= Start_4 Start_5) (= Start_1 Start) (>= Start_8 Start_8) (> Start_7 Start_7)))
   (Start_3 Int (2 1 (+ Start_4 Start_5) (div Start_1 Start_4) (abs Start_3)))
   (Start_8 Int (0 4 (- Start) (ite StartBool_1 Start_7 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div x 0)))

(check-synth)
