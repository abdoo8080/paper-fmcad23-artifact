(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_10 Int) (Start_9 Int) (Start_2 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_1 Int) (Start_5 Int) (Start_6 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_8 Int) (Start_4 Int) (Start_7 Int) (Start_3 Int))
  ((Start Int (y (+ Start Start) (* Start_1 Start) (mod Start_1 Start_2)))
   (StartBool Bool (true (not StartBool_3) (< Start_7 Start_9) (= Start_2 Start_3) (> Start_6 Start_9)))
   (Start_11 Int (0 2 (* Start_6 Start_2) (div Start_11 Start_4) (mod Start_8 Start_6) (abs Start) (ite StartBool_3 Start_11 Start_11)))
   (Start_10 Int (y (- Start_11) (mod Start_5 Start_3) (abs Start)))
   (Start_9 Int (3 2 x (- Start_1) (* Start_6 Start_10) (div Start_5 Start_6) (mod Start_2 Start_7)))
   (Start_2 Int (2 1 (- Start Start_2) (+ Start Start_1) (mod Start Start_3) (abs Start_4) (ite StartBool_1 Start Start_3)))
   (StartBool_1 Bool (false (not StartBool_2) (< Start_1 Start) (<= Start_4 Start) (= Start_5 Start_3) (>= Start_3 Start_4)))
   (StartBool_3 Bool (true false (not StartBool) (or StartBool_1 StartBool_4) (<= Start_1 Start) (= Start_1 Start_8) (>= Start_6 Start_7)))
   (Start_1 Int (5 (- Start_6 Start) (abs Start_2)))
   (Start_5 Int (1 (+ Start_6 Start) (div Start_1 Start_3) (mod Start_5 Start_1) (ite StartBool_1 Start Start_1)))
   (Start_6 Int (1 3 (- Start_4) (+ Start_1 Start_3) (* Start_3 Start_7)))
   (StartBool_2 Bool (true (not StartBool_3) (or StartBool_4 StartBool_3) (= Start_6 Start_6) (>= Start_3 Start_2) (> Start_5 Start_3)))
   (StartBool_4 Bool (false true (not StartBool_3) (or StartBool_2 StartBool_4) (< Start_3 Start_3) (<= Start_7 Start_6) (>= Start_4 Start_5)))
   (Start_8 Int (5 (- Start_3 Start_4) (div Start_3 Start_1) (ite StartBool_3 Start_6 Start)))
   (Start_4 Int (5 0 (+ Start_1 Start_6) (div Start_6 Start_1) (abs Start_2) (ite StartBool_4 Start_4 Start)))
   (Start_7 Int (y 1 (- Start_5) (ite StartBool_2 Start_2 Start_4)))
   (Start_3 Int (3 0 2 (- Start_5) (+ Start_2 Start_2) (ite StartBool Start_8 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod y 0))))

(check-synth)
