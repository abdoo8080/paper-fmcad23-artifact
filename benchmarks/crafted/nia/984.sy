(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_2 Bool) (StartBool_8 Bool) (Start_3 Int) (StartBool_5 Bool) (StartBool_6 Bool) (StartBool_7 Bool) (StartBool_4 Bool) (Start_1 Int) (Start_6 Int) (Start_4 Int) (Start_5 Int) (Start_8 Int) (StartBool_3 Bool) (Start_9 Int) (Start_7 Int) (Start_10 Int) (Start_11 Int) (StartBool_1 Bool) (Start_14 Int) (Start_13 Int) (Start_12 Int))
  ((Start Int (y (- Start_1 Start_2) (+ Start Start_3) (div Start_1 Start_1) (mod Start_2 Start_3) (ite StartBool Start_4 Start_4)))
   (StartBool Bool (false (or StartBool_7 StartBool_2) (< Start_6 Start_6) (= Start_14 Start_2) (>= Start_7 Start_13) (> Start_12 Start_3)))
   (Start_2 Int (x 5 (- Start_1) (+ Start_6 Start_4) (div Start_9 Start_10) (mod Start_3 Start_11) (abs Start_3)))
   (StartBool_2 Bool (false true (not StartBool_1) (< Start_6 Start_1) (>= Start_7 Start_1)))
   (StartBool_8 Bool (true (<= Start_4 Start_5) (= Start_7 Start_5) (>= Start_5 Start)))
   (Start_3 Int (3 (- Start_1 Start_5)))
   (StartBool_5 Bool (false true (not StartBool_2) (and StartBool_8 StartBool_6) (or StartBool StartBool_1) (< Start_11 Start_2) (<= Start_9 Start_4) (>= Start_12 Start_2) (> Start_2 Start_3)))
   (StartBool_6 Bool (true false (not StartBool_6) (< Start_8 Start_6) (= Start_13 Start_2) (> Start_5 Start_1)))
   (StartBool_7 Bool (true false (<= Start_3 Start_3) (>= Start_13 Start_11) (> Start_9 Start_11)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_6 StartBool_4) (or StartBool_7 StartBool_5)))
   (Start_1 Int (4 (- Start_1) (+ Start_4 Start) (* Start_11 Start_2) (abs Start_2)))
   (Start_6 Int (0 (- Start_4) (+ Start_4 Start_5) (* Start_7 Start_1) (div Start_1 Start_7) (mod Start_8 Start_5)))
   (Start_4 Int (4 (- Start_4) (+ Start_4 Start) (* Start_1 Start_2) (div Start_5 Start)))
   (Start_5 Int (x 3 5 (- Start) (- Start_4 Start_3) (div Start Start_5) (mod Start Start_5) (abs Start_5) (ite StartBool_1 Start_5 Start_6)))
   (Start_8 Int (3 (- Start) (- Start_6 Start_1) (div Start_4 Start_9) (mod Start_1 Start_6) (abs Start_3)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_4) (< Start_3 Start_6) (> Start_3 Start_9)))
   (Start_9 Int (2 (+ Start_4 Start_4) (mod Start_10 Start_5)))
   (Start_7 Int (5 3 (- Start_2 Start_2) (* Start_5 Start_4) (mod Start_3 Start_4) (abs Start_2) (ite StartBool Start_5 Start_9)))
   (Start_10 Int (y 3 2 (- Start_1) (- Start Start_3) (+ Start_7 Start_2) (mod Start_1 Start_9)))
   (Start_11 Int (x 1 4 0 (* Start_12 Start_6) (abs Start_13)))
   (StartBool_1 Bool (true (and StartBool StartBool_2) (or StartBool_2 StartBool_3) (<= Start_7 Start_8) (= Start_4 Start_3) (>= Start Start_1) (> Start_9 Start_11)))
   (Start_14 Int (x 1 3 5 2 4 (+ Start_4 Start_3)))
   (Start_13 Int (2 0 (- Start_9) (- Start_4 Start_3) (* Start_12 Start_13) (abs Start_8)))
   (Start_12 Int (2 (mod Start_11 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 2 (mod y x))))

(check-synth)
