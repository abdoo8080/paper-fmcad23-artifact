(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (StartBool_5 Bool) (Start_16 Int) (Start_15 Int) (Start_12 Int) (Start_3 Int) (Start_5 Int) (Start_4 Int) (Start_2 Int) (Start_6 Int) (Start_1 Int) (Start_7 Int) (Start_8 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_14 Int) (Start_10 Int) (Start_13 Int) (Start_9 Int) (StartBool_1 Bool) (Start_11 Int))
  ((Start Int (3 (- Start Start_1) (+ Start_2 Start_3) (* Start_3 Start_2) (ite StartBool Start Start_2)))
   (StartBool Bool (false (< Start_15 Start_9) (= Start_15 Start_2) (>= Start_11 Start_7) (> Start_11 Start_12)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_3) (< Start_6 Start_9) (<= Start Start_4) (> Start_5 Start_3)))
   (StartBool_5 Bool (false true (not StartBool_4) (or StartBool_2 StartBool_4) (< Start_11 Start_3) (<= Start_2 Start_8) (>= Start_8 Start_13) (> Start_12 Start_3)))
   (Start_16 Int (x 4 5 y (- Start_5) (- Start_9 Start_6) (+ Start Start_1) (* Start_8 Start_8) (div Start_9 Start_13) (mod Start_1 Start_16) (ite StartBool_1 Start_15 Start_9)))
   (Start_15 Int (y 4 2 (- Start_4) (- Start_13 Start_6) (div Start_3 Start_13) (mod Start_13 Start_3) (ite StartBool_5 Start_11 Start_4)))
   (Start_12 Int (5 (- Start_7) (- Start_7 Start_8) (* Start_11 Start_10) (abs Start_4) (ite StartBool_4 Start_13 Start)))
   (Start_3 Int (4 5 x 1 y 0 (+ Start Start_4) (mod Start_3 Start_3) (abs Start_2) (ite StartBool Start_4 Start_2)))
   (Start_5 Int (y (- Start_2 Start) (+ Start_8 Start_5) (div Start_7 Start_6) (abs Start_1) (ite StartBool_1 Start_8 Start_4)))
   (Start_4 Int (y (- Start Start_4) (+ Start_1 Start_2) (* Start_4 Start_1) (ite StartBool Start_4 Start_4)))
   (Start_2 Int (x 1 2 3 (- Start Start_4) (* Start_5 Start) (div Start_6 Start) (mod Start_3 Start_6) (abs Start_5)))
   (Start_6 Int (5 x y (- Start_2 Start_2) (* Start Start_7) (div Start Start_5)))
   (Start_1 Int (1 5 (mod Start_11 Start_16) (abs Start_13) (ite StartBool_4 Start_9 Start_15)))
   (Start_7 Int (4 0 (- Start_1 Start_4)))
   (Start_8 Int (1 (- Start_16) (- Start_5 Start) (+ Start_3 Start_4) (* Start_11 Start_11) (div Start_6 Start_7)))
   (StartBool_2 Bool (true (not StartBool_1) (and StartBool StartBool_3) (< Start_5 Start_4) (= Start_1 Start_3) (> Start Start_2)))
   (StartBool_3 Bool (true (or StartBool_1 StartBool_4) (< Start_9 Start_3) (<= Start_4 Start_10) (= Start_6 Start_6) (> Start_6 Start_4)))
   (Start_14 Int (x 5 (- Start_10) (- Start_4 Start_5) (* Start_2 Start_15) (div Start_11 Start_2) (mod Start_7 Start_14) (abs Start_2)))
   (Start_10 Int (1 (- Start_7) (mod Start_11 Start_6) (abs Start_10) (ite StartBool_1 Start_3 Start_2)))
   (Start_13 Int (3 4 5 (div Start_4 Start_14)))
   (Start_9 Int (0 2 (- Start_12) (mod Start Start_10) (abs Start_1)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_1 StartBool_2) (< Start_2 Start_8)))
   (Start_11 Int (x (- Start_5) (- Start_10 Start_2) (+ Start Start_11) (div Start_3 Start_4) (mod Start_11 Start) (ite StartBool_1 Start_2 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div 1 (div (* 4 5) 0)))))

(check-synth)
