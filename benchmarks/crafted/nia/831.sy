(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_11 Int) (Start_1 Int) (Start_2 Int) (Start_5 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_3 Int) (Start_7 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_8 Int) (Start_9 Int) (Start_10 Int) (Start_6 Int) (Start_4 Int))
  ((Start Int (0 (- Start) (+ Start Start_1) (* Start_2 Start_1) (mod Start_2 Start_3) (abs Start_1)))
   (StartBool Bool (true false (< Start_11 Start_10) (<= Start_3 Start_8) (= Start_3 Start_2) (>= Start_3 Start_3)))
   (StartBool_5 Bool (true false (not StartBool) (<= Start_11 Start_8) (> Start_1 Start_5)))
   (Start_11 Int (1 (- Start Start_1) (ite StartBool_5 Start_6 Start_6)))
   (Start_1 Int (0 (* Start_1 Start_2) (mod Start_1 Start_1)))
   (Start_2 Int (1 (- Start_9 Start_4) (+ Start_5 Start_7) (* Start_10 Start_8) (div Start_7 Start_10) (abs Start_7) (ite StartBool_1 Start_9 Start_4)))
   (Start_5 Int (0 (+ Start_6 Start_1) (* Start_6 Start_5) (div Start_5 Start_4) (abs Start_7) (ite StartBool Start Start_7)))
   (StartBool_1 Bool (false true (< Start Start_9) (<= Start_7 Start) (= Start_2 Start_2)))
   (StartBool_4 Bool (false true (or StartBool_1 StartBool_1) (< Start_9 Start_5) (<= Start_9 Start_5) (>= Start Start_1) (> Start Start_7)))
   (Start_3 Int (y (- Start_2) (+ Start_4 Start_1) (* Start_2 Start) (div Start_3 Start_2) (mod Start_5 Start_5) (abs Start_4)))
   (Start_7 Int (2 4 (+ Start_3 Start_5) (* Start_6 Start_8) (mod Start Start_2) (abs Start_4) (ite StartBool_1 Start_5 Start_1)))
   (StartBool_2 Bool (true (not StartBool_1) (or StartBool_3 StartBool_3) (< Start_8 Start_5) (= Start_8 Start_2) (>= Start_8 Start_5) (> Start_8 Start_4)))
   (StartBool_3 Bool (true (and StartBool_4 StartBool_2)))
   (Start_8 Int (1 2 y (ite StartBool Start_2 Start_2)))
   (Start_9 Int (4 3 (* Start_3 Start) (mod Start_5 Start_9) (abs Start_3) (ite StartBool_2 Start_7 Start_4)))
   (Start_10 Int (3 (- Start_9) (+ Start_5 Start_10) (* Start Start_2) (div Start_4 Start_2) (mod Start_1 Start_3) (ite StartBool_4 Start_9 Start_3)))
   (Start_6 Int (x (- Start_5) (- Start_7 Start_3) (+ Start_2 Start_7) (* Start_3 Start_9) (div Start_6 Start_10)))
   (Start_4 Int (4 x (- Start_2) (- Start_5 Start_6) (div Start_7 Start_7) (abs Start_3) (ite StartBool_3 Start_3 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* (mod 3 (mod 4 0)) 5))))

(check-synth)
