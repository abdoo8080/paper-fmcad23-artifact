(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_1 Int) (Start_16 Int) (Start_2 Int) (Start_3 Int) (StartBool_4 Bool) (Start_14 Int) (StartBool_2 Bool) (Start_17 Int) (Start_13 Int) (Start_12 Int) (Start_6 Int) (Start_8 Int) (Start_7 Int) (Start_5 Int) (StartBool_3 Bool) (Start_9 Int) (Start_4 Int) (Start_15 Int) (StartBool_1 Bool) (Start_10 Int) (Start_11 Int))
  ((Start Int (3 2 (- Start_1) (* Start_2 Start_3) (div Start Start_3) (abs Start_4) (ite StartBool_1 Start_1 Start)))
   (StartBool Bool (true (not StartBool) (and StartBool StartBool_5) (<= Start_6 Start) (= Start_17 Start_16) (>= Start_10 Start_3) (> Start_13 Start_4)))
   (StartBool_5 Bool (true false (not StartBool_5) (< Start_14 Start_4) (<= Start_16 Start_14) (>= Start Start_10) (> Start_2 Start_7)))
   (Start_1 Int (3 2 (- Start_3) (+ Start_17 Start_11)))
   (Start_16 Int (x (- Start_10) (- Start_4 Start_5) (div Start Start_1) (abs Start_4) (ite StartBool_4 Start_6 Start_14)))
   (Start_2 Int (5 2 x (+ Start_16 Start_5) (div Start_10 Start_14) (mod Start_6 Start_12) (abs Start_3)))
   (Start_3 Int (4 (- Start_3) (+ Start_8 Start_4) (* Start_8 Start_3)))
   (StartBool_4 Bool (true false (not StartBool_2) (and StartBool_4 StartBool) (= Start_8 Start) (> Start_11 Start)))
   (Start_14 Int (1 4 (- Start_9 Start_12) (* Start_11 Start) (mod Start_3 Start_14) (ite StartBool_2 Start_5 Start_2)))
   (StartBool_2 Bool (false true (<= Start_1 Start) (= Start_4 Start_3) (>= Start_3 Start_5) (> Start_3 Start_4)))
   (Start_17 Int (3 4 1 y (- Start_1) (div Start_10 Start_8) (mod Start_3 Start_4) (abs Start) (ite StartBool_1 Start_13 Start_2)))
   (Start_13 Int (y 5 0 x 3 2 (- Start_4 Start_9) (+ Start_8 Start_14) (abs Start_6)))
   (Start_12 Int (0 (* Start_10 Start_5) (div Start_1 Start_5) (mod Start_6 Start_2) (ite StartBool_4 Start_13 Start_6)))
   (Start_6 Int (5 x (- Start_7) (- Start_6 Start_6) (+ Start Start_3)))
   (Start_8 Int (3 (* Start_6 Start_4) (abs Start) (ite StartBool_1 Start_5 Start_1)))
   (Start_7 Int (3 2 4 5 (- Start_5 Start_1) (+ Start_7 Start) (* Start_4 Start_6) (div Start_4 Start_7) (mod Start_7 Start_7) (abs Start_4) (ite StartBool Start_4 Start_8)))
   (Start_5 Int (y 5 2 4 3 x 1 (- Start) (- Start_6 Start_5) (div Start_5 Start)))
   (StartBool_3 Bool (true false (not StartBool_3) (< Start_9 Start_3) (<= Start_1 Start_10)))
   (Start_9 Int (5 3 y x (- Start_14) (- Start_15 Start_3) (* Start_11 Start_2) (abs Start_3)))
   (Start_4 Int (y (- Start_7 Start_1) (* Start_4 Start_4) (ite StartBool_3 Start_4 Start_8)))
   (Start_15 Int (5 (+ Start_4 Start_12) (* Start_3 Start) (mod Start_9 Start_8) (abs Start)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_2) (< Start_4 Start_3) (> Start Start)))
   (Start_10 Int (0 y 4 (- Start_2 Start_4) (* Start_11 Start_9) (ite StartBool_1 Start_5 Start_1)))
   (Start_11 Int (3 (* Start_5 Start_4) (mod Start_11 Start_7) (ite StartBool_3 Start_12 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (abs (+ (abs (abs x)) 4)))))

(check-synth)
