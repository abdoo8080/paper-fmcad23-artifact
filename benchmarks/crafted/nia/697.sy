(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_12 Int) (StartBool_3 Bool) (Start_11 Int) (Start_1 Int) (Start_5 Int) (Start_9 Int) (Start_4 Int) (Start_10 Int) (Start_6 Int) (Start_7 Int) (Start_3 Int) (StartBool_2 Bool) (Start_8 Int) (Start_2 Int) (StartBool_1 Bool))
  ((Start Int (1 3 0 y (abs Start) (ite StartBool_1 Start_1 Start)))
   (StartBool Bool (false (not StartBool_3) (= Start_3 Start_5) (>= Start_10 Start_12) (> Start_11 Start_9)))
   (Start_13 Int (3 2 (- Start_1) (* Start_7 Start) (div Start_7 Start_13) (mod Start_12 Start_13) (abs Start_3)))
   (Start_12 Int (4 (- Start_3) (- Start_8 Start_1) (+ Start_2 Start_13) (* Start_2 Start_4) (mod Start Start_1) (abs Start_7) (ite StartBool Start_6 Start_9)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_2) (= Start_6 Start_10) (>= Start Start_9)))
   (Start_11 Int (x (- Start_3) (- Start Start_8) (* Start_11 Start_2) (mod Start_3 Start_5) (ite StartBool_3 Start_5 Start_2)))
   (Start_1 Int (2 1 (- Start_1) (- Start_2 Start_3) (+ Start_4 Start_4)))
   (Start_5 Int (y 3 (- Start_6) (+ Start_5 Start_6) (mod Start_4 Start_1) (abs Start_6) (ite StartBool_2 Start_4 Start_7)))
   (Start_9 Int (1 (- Start_9) (+ Start_3 Start_3) (* Start_2 Start_5) (ite StartBool Start_9 Start_3)))
   (Start_4 Int (y 1 3 (+ Start_3 Start_5) (div Start_6 Start_3) (mod Start_3 Start_4)))
   (Start_10 Int (5 (div Start_11 Start_4) (mod Start_8 Start_8) (abs Start_10) (ite StartBool_1 Start_1 Start_2)))
   (Start_6 Int (0 4 2 1 x (- Start_3) (div Start_2 Start_3)))
   (Start_7 Int (4 y (- Start_7) (- Start_4 Start) (mod Start_2 Start) (abs Start_1) (ite StartBool_2 Start_7 Start_3)))
   (Start_3 Int (x (- Start_3 Start_6) (+ Start_3 Start_9) (* Start_4 Start_1)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_1 StartBool_1) (<= Start_3 Start_3) (= Start_6 Start_2) (>= Start_7 Start_5) (> Start_8 Start_5)))
   (Start_8 Int (2 4 0 5 (- Start_4) (mod Start_7 Start_7) (ite StartBool_1 Start_5 Start_8)))
   (Start_2 Int (4 (- Start_9 Start_2) (div Start_9 Start)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_1 StartBool_3) (<= Start_10 Start_9) (>= Start_6 Start_8) (> Start Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod x x))))

(check-synth)
