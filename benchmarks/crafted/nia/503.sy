(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_3 Int) (StartBool_3 Bool) (Start_5 Int) (Start_2 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (Start_1 Int) (Start_7 Int) (Start_6 Int) (StartBool_6 Bool) (Start_4 Int) (Start_8 Int) (StartBool_7 Bool) (StartBool_4 Bool))
  ((Start Int (0 1 (- Start_1) (mod Start_2 Start_3) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false (or StartBool_5 StartBool_7)))
   (Start_3 Int (1 y (div Start_2 Start_6) (abs Start_4) (ite StartBool_1 Start_6 Start_6)))
   (StartBool_3 Bool (true (and StartBool_4 StartBool_1) (= Start_3 Start_8)))
   (Start_5 Int (4 3 1 (* Start_3 Start_3) (div Start_6 Start_7) (ite StartBool_1 Start_3 Start_8)))
   (Start_2 Int (4 (* Start Start_4) (div Start_7 Start_5) (mod Start Start_1) (ite StartBool_2 Start_8 Start_5)))
   (Start_9 Int (x 3 5 2 y 0 (- Start_9 Start_4) (+ Start_6 Start_4) (* Start_4 Start_4) (mod Start_5 Start_4) (ite StartBool_2 Start_6 Start_6)))
   (StartBool_1 Bool (false true (not StartBool_2) (< Start_2 Start) (<= Start_3 Start) (= Start_2 Start) (>= Start_1 Start_2)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool_3) (or StartBool_4 StartBool_5) (< Start_2 Start_3)))
   (StartBool_5 Bool (false (not StartBool_1) (and StartBool_5 StartBool) (< Start_3 Start_4) (<= Start_5 Start_2) (= Start Start_1) (> Start_5 Start_1)))
   (Start_1 Int (y 2 (- Start_4)))
   (Start_7 Int (2 (- Start_3 Start_4) (div Start_3 Start_2) (abs Start)))
   (Start_6 Int (1 y (- Start_4 Start_1) (* Start_5 Start_9) (div Start_8 Start_7) (mod Start_6 Start_5) (ite StartBool_6 Start_8 Start)))
   (StartBool_6 Bool (false (and StartBool_3 StartBool) (< Start_1 Start_4) (<= Start_2 Start_7) (= Start_4 Start_3) (>= Start_4 Start_9) (> Start_2 Start)))
   (Start_4 Int (5 0 (- Start_7) (- Start_8 Start_9) (+ Start_4 Start_7) (mod Start_4 Start_3) (ite StartBool_7 Start_4 Start_1)))
   (Start_8 Int (1 4 (- Start_7 Start_6) (* Start_3 Start_1) (div Start_2 Start) (mod Start_8 Start_8) (abs Start_3)))
   (StartBool_7 Bool (true (not StartBool_5) (and StartBool_4 StartBool_7) (< Start_9 Start_1) (<= Start_1 Start_7) (>= Start_3 Start_2)))
   (StartBool_4 Bool (false (not StartBool_7) (or StartBool_6 StartBool_1) (> Start_9 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 1 (div 3 y))))

(check-synth)
