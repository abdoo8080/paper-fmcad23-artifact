(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_24 Int) (Start_1 Int) (Start_13 Int) (Start_12 Int) (Start_10 Int) (Start_18 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_14 Int) (StartBool_3 Bool) (Start_23 Int) (Start_8 Int) (Start_3 Int) (Start_21 Int) (Start_15 Int) (StartBool_1 Bool) (Start_19 Int) (Start_20 Int) (Start_17 Int) (Start_16 Int) (StartBool_5 Bool) (Start_9 Int) (Start_5 Int) (Start_22 Int) (Start_6 Int) (Start_4 Int) (Start_11 Int) (Start_7 Int) (StartBool_6 Bool) (StartBool_7 Bool) (Start_2 Int))
  ((Start Int (4 (- Start_1) (* Start Start_1) (mod Start_1 Start_2) (abs Start_2) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true false (and StartBool_2 StartBool_5) (or StartBool_5 StartBool_2) (< Start_16 Start_11) (>= Start_24 Start_21) (> Start_4 Start_10)))
   (Start_24 Int (0 5 4 y (- Start) (* Start_11 Start_15) (div Start_11 Start_11) (mod Start_8 Start_6) (abs Start) (ite StartBool_4 Start_20 Start_23)))
   (Start_1 Int (3 x 0 1 (- Start Start_23) (+ Start_18 Start_3) (abs Start_23) (ite StartBool_3 Start_18 Start_6)))
   (Start_13 Int (1 0 2 x 3 5 (- Start_8) (- Start_5 Start_11) (* Start_6 Start_11) (div Start Start_15)))
   (Start_12 Int (4 2 5 (+ Start Start_13) (div Start_3 Start) (mod Start_12 Start) (ite StartBool_4 Start_10 Start_14)))
   (Start_10 Int (x (- Start_7 Start_7) (* Start Start_7) (mod Start_1 Start_5) (abs Start) (ite StartBool_4 Start_10 Start_9)))
   (Start_18 Int (2 (- Start_13) (- Start_10 Start_16) (+ Start_11 Start_19) (* Start_3 Start_10) (abs Start_16) (ite StartBool_2 Start_17 Start_18)))
   (StartBool_2 Bool (true (not StartBool_1) (or StartBool_7 StartBool_6) (= Start_5 Start_4) (> Start_7 Start_15)))
   (StartBool_4 Bool (true false (and StartBool StartBool_3) (or StartBool_2 StartBool_5) (<= Start_7 Start_4) (= Start_3 Start_3) (>= Start_11 Start_7) (> Start_6 Start_5)))
   (Start_14 Int (4 (+ Start_5 Start_8) (div Start_5 Start_6) (abs Start_14) (ite StartBool_4 Start_9 Start_2)))
   (StartBool_3 Bool (false (not StartBool) (and StartBool StartBool_1) (< Start Start_9) (<= Start_5 Start_2) (= Start_10 Start_3) (>= Start_1 Start_7) (> Start_7 Start_10)))
   (Start_23 Int (4 5 y 0 (- Start_4) (* Start_24 Start_11) (mod Start_20 Start_10) (abs Start_13)))
   (Start_8 Int (0 (- Start) (- Start_8 Start_1) (+ Start_2 Start_1) (* Start_7 Start_4) (mod Start_7 Start_3) (abs Start_9) (ite StartBool_3 Start_4 Start_9)))
   (Start_3 Int (2 (- Start_2 Start_4) (+ Start_5 Start_2) (* Start_2 Start_3) (div Start_4 Start_5) (mod Start Start_5)))
   (Start_21 Int (2 (- Start_3) (- Start_2 Start_17) (div Start_1 Start_21) (ite StartBool_6 Start_17 Start_18)))
   (Start_15 Int (x 4 1 (- Start_16 Start_17) (+ Start_6 Start_6) (* Start_17 Start_7) (div Start_8 Start_18) (mod Start_1 Start_14)))
   (StartBool_1 Bool (false true (not StartBool_2) (<= Start_3 Start_1) (= Start_1 Start_3) (>= Start Start_2)))
   (Start_19 Int (3 (* Start_12 Start_11) (div Start_15 Start_18) (mod Start_8 Start_15)))
   (Start_20 Int (y 2 0 4 (- Start_18 Start_10) (+ Start_16 Start_1) (ite StartBool_6 Start_20 Start_17)))
   (Start_17 Int (4 (- Start_8) (mod Start_19 Start_17)))
   (Start_16 Int (4 y 2 5 0 x (+ Start_19 Start_7) (mod Start_9 Start_16)))
   (StartBool_5 Bool (true (and StartBool StartBool_4) (or StartBool_3 StartBool_2) (< Start_16 Start_9) (= Start_5 Start) (>= Start_12 Start_5)))
   (Start_9 Int (2 (+ Start_17 Start_7) (* Start_1 Start_6) (div Start_5 Start_10) (abs Start_14)))
   (Start_5 Int (3 0 2 1 (+ Start_4 Start_3) (* Start_1 Start) (div Start_4 Start_1) (mod Start_2 Start) (ite StartBool_1 Start_2 Start_6)))
   (Start_22 Int (x 4 (+ Start Start) (div Start_18 Start_22)))
   (Start_6 Int (1 y 0 3 (- Start_2 Start_7) (+ Start_7 Start_2) (* Start_3 Start_4) (div Start_8 Start) (mod Start_2 Start_6) (abs Start_8) (ite StartBool_2 Start_7 Start_7)))
   (Start_4 Int (0 (* Start_20 Start_3)))
   (Start_11 Int (2 (div Start_12 Start_10)))
   (Start_7 Int (y 1 5 2 0 (* Start_18 Start_14) (mod Start_7 Start_14) (abs Start_15) (ite StartBool_5 Start_5 Start_16)))
   (StartBool_6 Bool (true (or StartBool_2 StartBool) (< Start_17 Start_14) (= Start_9 Start_5)))
   (StartBool_7 Bool (false (not StartBool_3) (< Start_21 Start_14) (<= Start_18 Start_15) (= Start_12 Start_11) (> Start_8 Start_10)))
   (Start_2 Int (y (* Start_12 Start_1) (div Start Start_5) (abs Start_2) (ite StartBool_6 Start_22 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod 1 0))))

(check-synth)
