(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_3 Int) (Start_6 Int) (Start_17 Int) (Start_15 Int) (Start_18 Int) (Start_5 Int) (Start_10 Int) (Start_2 Int) (StartBool_1 Bool) (Start_1 Int) (Start_9 Int) (Start_11 Int) (Start_4 Int) (Start_16 Int) (Start_14 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_13 Int) (Start_7 Int) (Start_8 Int) (Start_12 Int))
  ((Start Int (y (* Start_1 Start) (abs Start_2)))
   (StartBool Bool (true (not StartBool_3) (and StartBool_1 StartBool) (or StartBool StartBool_1) (<= Start_10 Start_3) (= Start_17 Start_3) (>= Start_17 Start_12)))
   (Start_3 Int (3 2 (+ Start_6 Start_6)))
   (Start_6 Int (y (+ Start_4 Start_11) (* Start_10 Start_8) (abs Start_17) (ite StartBool_3 Start_11 Start_7)))
   (Start_17 Int (5 (- Start_8 Start_16) (+ Start_16 Start_17) (* Start Start) (abs Start_6) (ite StartBool_2 Start_3 Start)))
   (Start_15 Int (y (- Start_16 Start_4) (mod Start_3 Start_11) (abs Start_12)))
   (Start_18 Int (2 (+ Start_12 Start_12) (mod Start_1 Start_6)))
   (Start_5 Int (1 3 2 4 x (- Start_1) (+ Start_2 Start_4) (abs Start_5)))
   (Start_10 Int (3 (- Start_8) (+ Start Start_6) (* Start_2 Start_11) (ite StartBool_1 Start_2 Start_9)))
   (Start_2 Int (1 (- Start_2) (+ Start_3 Start_2) (* Start_3 Start_1) (abs Start) (ite StartBool_1 Start Start_2)))
   (StartBool_1 Bool (true false (not StartBool) (or StartBool StartBool) (<= Start_4 Start_5) (= Start_3 Start_5) (> Start Start_2)))
   (Start_1 Int (2 (- Start_12) (- Start_16 Start_18) (+ Start_1 Start) (mod Start_13 Start_1) (abs Start_12)))
   (Start_9 Int (5 0 (* Start_8 Start_2) (ite StartBool_3 Start_4 Start_8)))
   (Start_11 Int (y 0 2 (- Start_8 Start_4) (+ Start_8 Start_3) (div Start_4 Start_3) (mod Start_11 Start_3) (ite StartBool_1 Start_12 Start_7)))
   (Start_4 Int (y 0 (- Start_3) (- Start_4 Start) (* Start_5 Start_2) (div Start_6 Start_6) (mod Start_7 Start_6)))
   (Start_16 Int (1 (* Start_15 Start_17) (div Start_16 Start_9) (mod Start_15 Start_11) (abs Start_6)))
   (Start_14 Int (2 (- Start_14) (- Start_6 Start_9) (+ Start_10 Start_10) (div Start Start_14) (mod Start_4 Start_5)))
   (StartBool_3 Bool (true false (and StartBool_2 StartBool_3) (< Start_8 Start) (<= Start_6 Start_3) (>= Start Start_6)))
   (StartBool_2 Bool (false true (not StartBool) (or StartBool StartBool_1) (< Start_3 Start_4) (<= Start_6 Start_5) (= Start_1 Start_5) (> Start_9 Start_6)))
   (Start_13 Int (5 (mod Start_15 Start_3) (abs Start_9) (ite StartBool Start_8 Start_5)))
   (Start_7 Int (4 (- Start_6) (- Start_6 Start_3) (* Start_1 Start_7) (div Start_4 Start) (mod Start_3 Start_8) (abs Start_7) (ite StartBool_2 Start Start_1)))
   (Start_8 Int (5 (- Start_1) (+ Start_5 Start_4) (* Start_2 Start_10) (div Start_4 Start_10)))
   (Start_12 Int (2 3 x 0 (- Start_6) (- Start_13 Start_14) (div Start_8 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div 5 0))))

(check-synth)
