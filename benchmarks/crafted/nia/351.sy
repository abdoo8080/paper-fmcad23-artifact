(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_13 Int) (StartBool_8 Bool) (Start_4 Int) (Start_2 Int) (Start_6 Int) (StartBool_2 Bool) (Start_5 Int) (StartBool_4 Bool) (Start_7 Int) (Start_9 Int) (StartBool_6 Bool) (Start_3 Int) (Start_11 Int) (StartBool_7 Bool) (Start_12 Int) (StartBool_5 Bool) (Start_10 Int) (Start_8 Int) (StartBool_3 Bool) (StartBool_1 Bool))
  ((Start Int (3 (- Start) (- Start Start_1) (+ Start Start_2) (div Start_2 Start_1)))
   (StartBool Bool (true (not StartBool) (< Start_12 Start_8) (= Start_13 Start_1)))
   (Start_1 Int (2 5 (- Start_4) (div Start Start_13) (mod Start Start_5) (abs Start_12)))
   (Start_13 Int (1 (- Start_5 Start_10) (+ Start_4 Start_4) (mod Start_5 Start_4) (abs Start_12)))
   (StartBool_8 Bool (false true (not StartBool_4) (<= Start_10 Start_8) (>= Start_11 Start_3)))
   (Start_4 Int (3 4 (- Start_7) (- Start_7 Start_1) (div Start_7 Start_2) (mod Start_9 Start_3) (abs Start_3) (ite StartBool_8 Start_10 Start_7)))
   (Start_2 Int (y (- Start_1) (- Start_3 Start_4) (abs Start_1) (ite StartBool_1 Start Start_5)))
   (Start_6 Int (x (- Start_6) (- Start_2 Start_4) (abs Start_5) (ite StartBool_2 Start_1 Start_3)))
   (StartBool_2 Bool (false true (not StartBool) (and StartBool StartBool_3) (or StartBool_2 StartBool_4) (<= Start_4 Start_4)))
   (Start_5 Int (1 (- Start) (+ Start_6 Start_1) (div Start_2 Start_1) (mod Start_3 Start_2)))
   (StartBool_4 Bool (false (and StartBool StartBool_2) (< Start_5 Start_5) (<= Start_6 Start_7) (>= Start_5 Start_1)))
   (Start_7 Int (x (- Start_5 Start_7) (* Start_4 Start_2) (mod Start_7 Start_4) (ite StartBool_5 Start Start_5)))
   (Start_9 Int (5 (* Start_10 Start_5) (mod Start_6 Start_11) (abs Start_13)))
   (StartBool_6 Bool (true false (not StartBool_6) (and StartBool_3 StartBool_1) (= Start_4 Start_4) (>= Start_8 Start_8) (> Start_6 Start)))
   (Start_3 Int (4 (+ Start_4 Start_9) (div Start_12 Start_6) (mod Start_2 Start_2) (abs Start_11) (ite StartBool_6 Start_12 Start_5)))
   (Start_11 Int (1 (- Start_2) (- Start_10 Start_3) (+ Start_12 Start_1) (* Start_5 Start_6) (div Start_6 Start_2) (mod Start_6 Start_4) (ite StartBool_3 Start_5 Start_1)))
   (StartBool_7 Bool (false (not StartBool_2) (or StartBool_1 StartBool_7)))
   (Start_12 Int (3 (- Start_6) (- Start_4 Start_12) (+ Start_3 Start_2) (* Start_1 Start_6) (div Start_6 Start_11) (ite StartBool_1 Start_4 Start_3)))
   (StartBool_5 Bool (false true (not StartBool_1) (or StartBool_2 StartBool_5) (> Start Start_8)))
   (Start_10 Int (5 1 0 (- Start_8) (div Start_2 Start_10)))
   (Start_8 Int (2 (- Start_2) (- Start_8 Start_3) (abs Start_1)))
   (StartBool_3 Bool (true (not StartBool_6) (>= Start_8 Start_1)))
   (StartBool_1 Bool (true false (and StartBool_2 StartBool_7) (< Start_6 Start_1) (<= Start_5 Start_3) (>= Start_7 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 1 (abs x))))

(check-synth)
