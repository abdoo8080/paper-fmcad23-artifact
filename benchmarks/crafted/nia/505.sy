(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_2 Bool) (StartBool_7 Bool) (Start_12 Int) (StartBool_6 Bool) (Start_4 Int) (Start_5 Int) (Start_6 Int) (StartBool_4 Bool) (Start_2 Int) (StartBool_8 Bool) (StartBool_3 Bool) (Start_7 Int) (Start_13 Int) (Start_3 Int) (Start_9 Int) (Start_8 Int) (StartBool_1 Bool) (StartBool_5 Bool) (Start_11 Int) (Start_10 Int))
  ((Start Int (y (- Start_1) (- Start_2 Start_1) (+ Start_3 Start_1) (* Start_4 Start_2) (abs Start)))
   (StartBool Bool (false (and StartBool_5 StartBool_1) (> Start_2 Start_3)))
   (Start_1 Int (0 x 5 (- Start_5) (- Start_3 Start) (+ Start_11 Start_10) (* Start_13 Start_7) (ite StartBool_8 Start_2 Start_2)))
   (StartBool_2 Bool (true false (< Start_6 Start_11) (= Start_8 Start_12) (>= Start_2 Start_11) (> Start_3 Start_1)))
   (StartBool_7 Bool (true (not StartBool_3) (or StartBool_2 StartBool_2) (>= Start_5 Start_12) (> Start_9 Start_10)))
   (Start_12 Int (2 4 3 (- Start_2) (- Start Start_12) (+ Start_4 Start_8) (* Start_11 Start_7) (div Start_5 Start_6)))
   (StartBool_6 Bool (true false (or StartBool StartBool_7) (= Start_8 Start_12) (> Start Start_12)))
   (Start_4 Int (2 (- Start Start) (* Start_2 Start_2) (mod Start Start_4) (abs Start)))
   (Start_5 Int (0 (- Start_6) (- Start_6 Start_3) (+ Start_3 Start_4) (mod Start Start_6) (ite StartBool Start_7 Start)))
   (Start_6 Int (x 0 (- Start_5) (div Start_10 Start_4) (mod Start_7 Start_2) (ite StartBool_5 Start_8 Start_1)))
   (StartBool_4 Bool (false true (not StartBool) (and StartBool_4 StartBool_5) (or StartBool StartBool_6)))
   (Start_2 Int (3 (- Start_1) (- Start_1 Start_3) (* Start_2 Start_4) (div Start_3 Start_5)))
   (StartBool_8 Bool (false true (<= Start_12 Start_3)))
   (StartBool_3 Bool (false (and StartBool_3 StartBool_4) (<= Start_11 Start) (= Start_2 Start_8)))
   (Start_7 Int (3 (+ Start_3 Start_2) (* Start_3 Start_1) (div Start_6 Start_8) (mod Start_1 Start_1)))
   (Start_13 Int (0 (* Start_10 Start_3) (div Start_10 Start_7)))
   (Start_3 Int (1 4 2 3 0 (- Start_2) (* Start_1 Start_1) (div Start_1 Start_3)))
   (Start_9 Int (4 (- Start_10) (- Start Start) (+ Start_6 Start_10) (mod Start_4 Start_8) (abs Start_10) (ite StartBool_5 Start_9 Start_10)))
   (Start_8 Int (5 1 (- Start_3 Start) (mod Start_8 Start_1) (ite StartBool_1 Start_4 Start_2)))
   (StartBool_1 Bool (true (not StartBool_2) (or StartBool_3 StartBool_4) (<= Start_8 Start_5) (= Start_8 Start_3) (>= Start_9 Start_6)))
   (StartBool_5 Bool (true false (and StartBool_5 StartBool_1) (or StartBool_3 StartBool_1) (< Start_2 Start_8) (<= Start_10 Start_7) (= Start_2 Start) (> Start_4 Start_11)))
   (Start_11 Int (y (- Start_1) (* Start_9 Start_5) (div Start_6 Start) (mod Start_1 Start_9) (abs Start_5) (ite StartBool_4 Start_2 Start_5)))
   (Start_10 Int (y (- Start_3 Start_5) (mod Start Start) (ite StartBool_2 Start Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod 2 (- y 5)))))

(check-synth)
