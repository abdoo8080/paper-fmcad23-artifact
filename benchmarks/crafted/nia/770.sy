(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (StartBool_8 Bool) (StartBool_9 Bool) (Start_12 Int) (StartBool_6 Bool) (Start_10 Int) (Start_16 Int) (Start_13 Int) (Start_11 Int) (Start_14 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_17 Int) (StartBool_2 Bool) (Start_7 Int) (Start_6 Int) (Start_2 Int) (Start_5 Int) (StartBool_1 Bool) (Start_4 Int) (Start_8 Int) (Start_15 Int) (Start_9 Int) (StartBool_7 Bool) (Start_3 Int) (Start_1 Int))
  ((Start Int (y 2 0 (- Start) (- Start Start_1) (* Start_2 Start_1) (div Start_1 Start_3) (ite StartBool_1 Start_4 Start_2)))
   (StartBool Bool (false true (not StartBool_3) (and StartBool_2 StartBool_4) (or StartBool StartBool) (> Start_8 Start_3)))
   (StartBool_3 Bool (false (not StartBool_9) (and StartBool_2 StartBool) (or StartBool_9 StartBool_4) (<= Start_4 Start_17) (= Start_16 Start_8) (>= Start_7 Start_2)))
   (StartBool_8 Bool (false true (not StartBool_6) (and StartBool_1 StartBool_2) (or StartBool_5 StartBool_3) (< Start_8 Start_6) (<= Start_15 Start_15) (>= Start_5 Start_2)))
   (StartBool_9 Bool (true (and StartBool_4 StartBool_6) (= Start_14 Start_3) (>= Start_11 Start_12) (> Start_12 Start_16)))
   (Start_12 Int (1 (- Start_15 Start_1) (+ Start_6 Start_3) (* Start_14 Start_16) (mod Start_17 Start_3)))
   (StartBool_6 Bool (false true (and StartBool StartBool_5) (or StartBool_6 StartBool_6) (< Start_11 Start_17) (> Start_3 Start_11)))
   (Start_10 Int (0 y))
   (Start_16 Int (5 (- Start_9) (+ Start_16 Start) (* Start Start_15) (div Start_10 Start_4) (mod Start_6 Start_1) (ite StartBool_6 Start_4 Start)))
   (Start_13 Int (x y (- Start_1) (* Start_12 Start_3) (mod Start_14 Start_1) (abs Start) (ite StartBool_2 Start_5 Start_8)))
   (Start_11 Int (x 5 0 y (+ Start_12 Start_4) (* Start_6 Start_1) (div Start_1 Start_12) (abs Start_3) (ite StartBool_1 Start Start_13)))
   (Start_14 Int (1 y 0 4 2 (- Start_6) (+ Start_5 Start_15) (* Start Start_12) (div Start_3 Start_16) (mod Start_2 Start_13) (abs Start_11) (ite StartBool_1 Start_4 Start_15)))
   (StartBool_4 Bool (false (not StartBool_4) (and StartBool_5 StartBool_4) (< Start_6 Start_4) (= Start_6 Start_10) (>= Start_11 Start_6)))
   (StartBool_5 Bool (true false (not StartBool_3) (and StartBool StartBool_5) (or StartBool_7 StartBool_1) (= Start_13 Start_1) (> Start_15 Start_13)))
   (Start_17 Int (x 3 1 0 (div Start_14 Start_1) (abs Start_9)))
   (StartBool_2 Bool (false true (or StartBool_2 StartBool_2) (< Start_9 Start_4) (<= Start_4 Start_5) (= Start_8 Start_3)))
   (Start_7 Int (0 3 (- Start_4) (- Start_5 Start_2) (+ Start_3 Start_8) (div Start_1 Start_8) (abs Start_7) (ite StartBool_2 Start_3 Start_8)))
   (Start_6 Int (x (- Start) (* Start_4 Start_4) (abs Start_1)))
   (Start_2 Int (0 (- Start_9 Start_7) (abs Start_3)))
   (Start_5 Int (2 (- Start_4 Start_7) (+ Start_7 Start) (* Start_7 Start_7) (div Start_4 Start_2) (mod Start_2 Start_3)))
   (StartBool_1 Bool (true (not StartBool_2) (or StartBool StartBool) (<= Start_2 Start_8) (= Start_2 Start_9) (>= Start_7 Start_9)))
   (Start_4 Int (1 (- Start_3) (- Start_1 Start_5) (* Start Start_6) (abs Start) (ite StartBool Start Start_1)))
   (Start_8 Int (4 5 0 1 2 (- Start_6 Start_9) (abs Start) (ite StartBool Start_4 Start_9)))
   (Start_15 Int (2 (- Start_16) (div Start_10 Start_14) (mod Start_9 Start_5) (ite StartBool_1 Start_5 Start_8)))
   (Start_9 Int (1 0 x (- Start_6) (abs Start) (ite StartBool_1 Start_9 Start_5)))
   (StartBool_7 Bool (true (not StartBool_6) (and StartBool_5 StartBool_8) (or StartBool StartBool_9) (<= Start_7 Start_8) (= Start_5 Start_14)))
   (Start_3 Int (4 (- Start_6) (* Start_5 Start_6) (abs Start_4)))
   (Start_1 Int (4 (- Start_9) (- Start Start_6) (div Start_3 Start_6) (mod Start_9 Start_7) (abs Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (+ (- (* x y)) (+ 5 2)))))

(check-synth)
