(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (StartBool_7 Bool) (Start_10 Int) (Start_12 Int) (Start_2 Int) (Start_11 Int) (Start_4 Int) (StartBool_1 Bool) (Start_6 Int) (Start_3 Int) (Start_5 Int) (Start_9 Int) (Start_8 Int) (Start_1 Int) (StartBool_2 Bool) (StartBool_3 Bool) (StartBool_4 Bool) (StartBool_6 Bool) (StartBool_5 Bool) (Start_7 Int))
  ((Start Int (x 0 y 4 (- Start_1) (- Start_1 Start_1) (div Start_1 Start)))
   (StartBool Bool (true false (or StartBool_7 StartBool_2) (<= Start_6 Start_12) (= Start_8 Start_13) (> Start_9 Start_12)))
   (Start_13 Int (4 (- Start_9 Start_1) (* Start_4 Start_8) (div Start_12 Start) (mod Start_2 Start_7)))
   (StartBool_7 Bool (true false (not StartBool_7) (or StartBool_4 StartBool_3) (< Start_6 Start_13) (<= Start_1 Start_10) (>= Start_7 Start_3)))
   (Start_10 Int (1 5 0 y (- Start_8 Start_13) (mod Start_2 Start_3) (ite StartBool_4 Start_6 Start_7)))
   (Start_12 Int (5 (- Start_3 Start_3) (+ Start_3 Start_5) (* Start_3 Start_12) (div Start_13 Start_13) (abs Start_13) (ite StartBool_5 Start_7 Start_1)))
   (Start_2 Int (0 (+ Start_3 Start_5) (* Start_6 Start_1) (div Start_10 Start_11) (mod Start_11 Start_10) (abs Start_4) (ite StartBool_6 Start_7 Start)))
   (Start_11 Int (x (+ Start_8 Start_7) (abs Start_12)))
   (Start_4 Int (3 (- Start Start_7) (div Start_7 Start_2) (ite StartBool_1 Start_7 Start_8)))
   (StartBool_1 Bool (false (or StartBool_6 StartBool_6) (>= Start_3 Start_9) (> Start_3 Start_5)))
   (Start_6 Int (5 x (- Start_2 Start_3) (* Start_6 Start_1) (abs Start_4) (ite StartBool_4 Start_9 Start)))
   (Start_3 Int (1 (div Start Start_4) (mod Start_4 Start_2) (ite StartBool_1 Start_5 Start_5)))
   (Start_5 Int (x (* Start_1 Start_6) (div Start_4 Start_1) (mod Start Start_1) (abs Start_7) (ite StartBool_2 Start_5 Start_5)))
   (Start_9 Int (3 y (- Start_1 Start_3) (+ Start_6 Start_6) (mod Start_8 Start_1) (ite StartBool_4 Start_9 Start_7)))
   (Start_8 Int (2 (- Start_1) (- Start Start_5) (+ Start Start_2) (div Start_8 Start_5) (mod Start_4 Start_6) (abs Start_7) (ite StartBool_6 Start_3 Start_4)))
   (Start_1 Int (y 2 x (- Start_2) (- Start Start_2) (ite StartBool_1 Start Start_3)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool StartBool_1) (<= Start_2 Start_6)))
   (StartBool_3 Bool (true false (not StartBool_4) (or StartBool_4 StartBool_3) (<= Start_2 Start_1) (= Start_2 Start_1) (> Start_2 Start)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_5 StartBool_6) (< Start_1 Start_3) (= Start_5 Start_1) (> Start_6 Start_2)))
   (StartBool_6 Bool (true (or StartBool_5 StartBool) (<= Start_2 Start) (> Start_3 Start_2)))
   (StartBool_5 Bool (false (and StartBool_1 StartBool_3) (or StartBool_6 StartBool_3) (<= Start_1 Start) (>= Start_6 Start_6) (> Start_2 Start_4)))
   (Start_7 Int (2 (- Start_7) (* Start Start_4) (div Start_4 Start) (mod Start_5 Start_8) (ite StartBool_5 Start_2 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 (- y))))

(check-synth)
