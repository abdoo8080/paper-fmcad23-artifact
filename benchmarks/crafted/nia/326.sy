(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_2 Bool) (Start_4 Int) (Start_12 Int) (Start_10 Int) (Start_3 Int) (StartBool_1 Bool) (Start_6 Int) (Start_8 Int) (Start_9 Int) (StartBool_4 Bool) (Start_13 Int) (StartBool_5 Bool) (Start_7 Int) (StartBool_3 Bool) (Start_5 Int) (Start_11 Int))
  ((Start Int (0 (+ Start Start_1) (* Start Start_1) (abs Start_2) (ite StartBool_1 Start_1 Start_2)))
   (StartBool Bool (true (not StartBool_5) (< Start_6 Start_2) (= Start_3 Start_11) (>= Start_9 Start) (> Start_12 Start_7)))
   (Start_1 Int (x 2 (- Start_10) (- Start_5 Start_7) (+ Start_1 Start_7) (* Start_10 Start_13)))
   (Start_2 Int (y 5 4 (- Start_12) (- Start_11 Start_11)))
   (StartBool_2 Bool (true (or StartBool_4 StartBool_2) (<= Start_9 Start_4) (>= Start Start_1) (> Start_6 Start)))
   (Start_4 Int (5 y 2 (- Start_3 Start_4) (* Start_1 Start_10) (mod Start_4 Start_1) (abs Start_11) (ite StartBool_3 Start_9 Start_1)))
   (Start_12 Int (0 5 (- Start_6) (+ Start_9 Start_11)))
   (Start_10 Int (5 (- Start_5) (- Start Start_2) (div Start_7 Start_7) (mod Start_10 Start_1) (abs Start) (ite StartBool_4 Start_4 Start_3)))
   (Start_3 Int (5 (- Start_4) (div Start_3 Start_2) (mod Start_3 Start_1) (ite StartBool_3 Start_5 Start_6)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool StartBool) (or StartBool_1 StartBool_2) (<= Start_3 Start) (= Start_1 Start)))
   (Start_6 Int (5 (- Start_5) (- Start_7 Start) (+ Start_7 Start_4) (* Start Start_4) (div Start_3 Start_8) (mod Start_7 Start_1) (abs Start_7)))
   (Start_8 Int (5 (abs Start_9) (ite StartBool_2 Start_9 Start_7)))
   (Start_9 Int (5 (- Start_9) (- Start_2 Start_2) (* Start_8 Start_7) (div Start_10 Start_9)))
   (StartBool_4 Bool (false true (not StartBool_5) (or StartBool_3 StartBool) (< Start_9 Start_10) (= Start_2 Start_8) (> Start_5 Start_6)))
   (Start_13 Int (y 1 (- Start_10) (- Start_5 Start_10) (* Start_7 Start_7) (div Start_7 Start_12)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_2) (< Start_2 Start_10) (<= Start_7 Start_1)))
   (Start_7 Int (5 2 0 (- Start) (- Start_1 Start_3) (+ Start_10 Start_4) (* Start_7 Start_9) (div Start_1 Start_5) (mod Start_7 Start_10) (abs Start_4)))
   (StartBool_3 Bool (true false (and StartBool StartBool_3) (= Start_8 Start_11)))
   (Start_5 Int (4 5 (- Start_8) (- Start_8 Start_1) (* Start_1 Start) (mod Start_4 Start_9) (abs Start_5)))
   (Start_11 Int (0 (- Start_4) (+ Start_2 Start_1) (* Start_3 Start_12) (ite StartBool_5 Start_1 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- x) 2)))

(check-synth)
