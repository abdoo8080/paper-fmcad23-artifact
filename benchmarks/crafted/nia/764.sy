(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_1 Int) (Start_17 Int) (Start_16 Int) (Start_14 Int) (Start_2 Int) (Start_6 Int) (Start_5 Int) (Start_8 Int) (StartBool_3 Bool) (Start_3 Int) (Start_10 Int) (StartBool_2 Bool) (Start_15 Int) (StartBool_1 Bool) (Start_9 Int) (Start_13 Int) (Start_7 Int) (Start_12 Int) (Start_11 Int) (Start_4 Int))
  ((Start Int (y 3 (+ Start Start_1) (* Start_1 Start_1) (mod Start_2 Start_3)))
   (StartBool Bool (false (and StartBool_2 StartBool_2) (< Start_11 Start_18) (= Start_5 Start_4) (>= Start_8 Start_6)))
   (Start_18 Int (y (- Start) (- Start_9 Start_2) (+ Start_14 Start_10) (div Start_4 Start_2) (mod Start_5 Start_17) (ite StartBool_3 Start Start_6)))
   (Start_1 Int (0 (+ Start_9 Start_6) (div Start_5 Start_1) (mod Start_17 Start_14) (abs Start_13)))
   (Start_17 Int (x (div Start_7 Start_8) (abs Start_13)))
   (Start_16 Int (5 (- Start_8 Start_9) (+ Start_17 Start_15) (* Start_6 Start_14) (div Start_9 Start_8) (ite StartBool_3 Start_4 Start_13)))
   (Start_14 Int (2 (- Start_3) (- Start_7 Start) (+ Start_10 Start_9) (div Start_1 Start_7) (ite StartBool_1 Start_15 Start_16)))
   (Start_2 Int (x 3 (- Start_7) (- Start_13 Start_14) (+ Start_11 Start_13) (* Start_4 Start_2) (div Start_14 Start_1) (mod Start_4 Start_2) (abs Start_7)))
   (Start_6 Int (4 2 (- Start_1) (- Start_3 Start) (mod Start_11 Start_11)))
   (Start_5 Int (0 (- Start_4) (- Start_4 Start_10) (mod Start_4 Start_4) (ite StartBool_2 Start_2 Start_7)))
   (Start_8 Int (x 2 (- Start_4) (- Start_6 Start_7) (+ Start_3 Start_7) (ite StartBool_1 Start Start_4)))
   (StartBool_3 Bool (true false (< Start_9 Start_7) (<= Start_16 Start_11) (>= Start_15 Start_7)))
   (Start_3 Int (x 2 3 (- Start_4 Start_1) (+ Start_5 Start_1) (* Start_6 Start_7) (div Start_8 Start_4)))
   (Start_10 Int (1 (- Start_6 Start_8)))
   (StartBool_2 Bool (false true (not StartBool) (< Start_9 Start) (<= Start_5 Start_9) (= Start_6 Start_6) (> Start Start_9)))
   (Start_15 Int (2 (- Start_13) (+ Start_16 Start_13) (div Start_3 Start_6)))
   (StartBool_1 Bool (true false (or StartBool_2 StartBool) (<= Start_7 Start) (= Start_1 Start)))
   (Start_9 Int (y (- Start_9) (abs Start_4) (ite StartBool_1 Start Start_7)))
   (Start_13 Int (2 y (- Start_15) (+ Start_9 Start_17) (* Start_9 Start_12) (mod Start_15 Start_5) (abs Start_17)))
   (Start_7 Int (3 5 1 (- Start_2 Start_2) (+ Start_3 Start_3) (* Start_1 Start_1) (div Start_1 Start_5) (mod Start_8 Start_10) (ite StartBool_2 Start_4 Start_6)))
   (Start_12 Int (x 5 (- Start_5) (- Start_10 Start_4) (+ Start_6 Start_12) (* Start_8 Start_4) (ite StartBool_1 Start_12 Start_2)))
   (Start_11 Int (0 (- Start_1) (- Start_4 Start_2) (div Start Start_6) (ite StartBool_2 Start_3 Start_4)))
   (Start_4 Int (2 1 y (- Start_2) (mod Start_4 Start_11) (abs Start_11) (ite StartBool_1 Start_12 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ y (div 1 0))))

(check-synth)
