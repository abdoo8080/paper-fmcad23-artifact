(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_7 Int) (Start_10 Int) (Start_3 Int) (Start_13 Int) (StartBool_1 Bool) (Start_9 Int) (Start_21 Int) (Start_2 Int) (Start_8 Int) (Start_14 Int) (Start_6 Int) (StartBool_3 Bool) (Start_4 Int) (Start_20 Int) (StartBool_7 Bool) (Start_15 Int) (StartBool_2 Bool) (StartBool_6 Bool) (Start_5 Int) (StartBool_8 Bool) (Start_11 Int) (StartBool_5 Bool) (StartBool_4 Bool) (Start_16 Int) (Start_18 Int) (Start_17 Int) (Start_19 Int) (Start_1 Int))
  ((Start Int (5 (- Start_1 Start) (+ Start Start_2) (* Start_2 Start_1) (div Start_3 Start_3) (mod Start_4 Start_3)))
   (StartBool Bool (true false (not StartBool_2) (and StartBool_5 StartBool_2) (or StartBool_7 StartBool_6) (< Start_1 Start_16) (<= Start_15 Start_1) (>= Start_19 Start_10) (> Start_2 Start_20)))
   (Start_12 Int (y (- Start_4) (* Start_10 Start_1) (div Start_11 Start_7) (abs Start_11) (ite StartBool_6 Start_5 Start_13)))
   (Start_7 Int (4 1 (- Start_2) (+ Start_7 Start_6) (* Start_8 Start_8) (div Start_9 Start_4) (ite StartBool_1 Start_4 Start)))
   (Start_10 Int (x (- Start_5) (- Start_4 Start_9) (* Start_4 Start_10) (mod Start_6 Start_3) (abs Start_8)))
   (Start_3 Int (4 1 3 0 x (- Start_3 Start_9) (+ Start_9 Start_2) (* Start_5 Start_10) (mod Start_3 Start_7) (ite StartBool_2 Start_7 Start)))
   (Start_13 Int (5 x (- Start_5) (- Start_12 Start_13) (+ Start_1 Start_7) (* Start_5 Start_2) (div Start_9 Start_6) (mod Start_2 Start_3) (abs Start_5)))
   (StartBool_1 Bool (true false (< Start_8 Start_10) (>= Start_1 Start_9)))
   (Start_9 Int (3 1 (- Start_5) (- Start_4 Start) (abs Start_5) (ite StartBool_1 Start_10 Start_7)))
   (Start_21 Int (5 3 (- Start_3) (+ Start_4 Start_15) (mod Start_5 Start_15)))
   (Start_2 Int (3 5 (* Start_14 Start_7) (div Start_10 Start_15) (mod Start_6 Start_16) (abs Start_10)))
   (Start_8 Int (y 4 x 0 (- Start_8 Start_2) (+ Start_3 Start_9) (* Start_10 Start_8) (mod Start_2 Start_1) (abs Start_1)))
   (Start_14 Int (2 (- Start_4) (- Start_8 Start_2) (mod Start_14 Start_13) (ite StartBool_6 Start_1 Start_5)))
   (Start_6 Int (5 y 1 2 3 (- Start_4) (* Start_6 Start_3) (div Start_4 Start_7) (ite StartBool Start_3 Start_8)))
   (StartBool_3 Bool (true false (not StartBool_7) (and StartBool_4 StartBool_2) (>= Start_15 Start_18)))
   (Start_4 Int (x (- Start_4) (- Start_5 Start_3) (+ Start_1 Start_4) (* Start_6 Start) (mod Start_2 Start_1)))
   (Start_20 Int (2 3 (- Start_9) (+ Start_8 Start) (* Start_21 Start_2) (div Start_5 Start_20)))
   (StartBool_7 Bool (true false (not StartBool_5) (and StartBool_6 StartBool_3) (< Start_5 Start_13) (> Start_8 Start_6)))
   (Start_15 Int (x 4 (- Start_13) (- Start_13 Start_13) (+ Start Start_7) (* Start_1 Start_14) (mod Start_15 Start_11) (abs Start_12) (ite StartBool_4 Start_3 Start_11)))
   (StartBool_2 Bool (true (not StartBool_3) (and StartBool StartBool_1) (or StartBool_4 StartBool_5) (<= Start_11 Start_12) (>= Start_5 Start_2)))
   (StartBool_6 Bool (true false (not StartBool_7) (and StartBool_3 StartBool_4) (or StartBool_6 StartBool_7) (< Start Start_5) (<= Start Start_14) (= Start_11 Start_8)))
   (Start_5 Int (1 (+ Start_6 Start_8) (* Start_9 Start_1) (mod Start_5 Start_9)))
   (StartBool_8 Bool (false (not StartBool_4) (and StartBool_8 StartBool) (or StartBool StartBool_2) (<= Start_2 Start_8) (= Start_17 Start_8) (>= Start_1 Start_14) (> Start_18 Start_1)))
   (Start_11 Int (1 (* Start_8 Start_13) (div Start Start_15) (mod Start_1 Start_6) (abs Start)))
   (StartBool_5 Bool (false (and StartBool_6 StartBool_4) (< Start_3 Start_9) (> Start_14 Start_5)))
   (StartBool_4 Bool (false (not StartBool_6) (and StartBool_2 StartBool_8) (or StartBool_1 StartBool_8) (= Start_11 Start_1) (>= Start_12 Start_10) (> Start_16 Start_9)))
   (Start_16 Int (5 (- Start_5) (* Start_10 Start_2) (div Start_13 Start_9) (mod Start_16 Start_14) (abs Start_6)))
   (Start_18 Int (3 1 x (- Start_14) (+ Start_14 Start_18) (abs Start_13) (ite StartBool_8 Start_6 Start_4)))
   (Start_17 Int (5 (- Start_6) (- Start_2 Start_11) (+ Start_12 Start_2) (ite StartBool Start_19 Start_1)))
   (Start_19 Int (1 5 4 2 (- Start_18 Start_18) (+ Start_12 Start_7)))
   (Start_1 Int (3 (- Start_12 Start_6) (+ Start_7 Start_18) (div Start_15 Start_14) (abs Start_1) (ite StartBool Start_5 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (div (mod x 2) 4) 2)))

(check-synth)
