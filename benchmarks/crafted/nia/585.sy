(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_2 Bool) (Start_8 Int) (Start_9 Int) (Start_19 Int) (Start_14 Int) (Start_20 Int) (Start_18 Int) (Start_12 Int) (Start_15 Int) (Start_11 Int) (Start_2 Int) (Start_4 Int) (Start_17 Int) (Start_6 Int) (Start_7 Int) (Start_3 Int) (Start_16 Int) (StartBool_1 Bool) (Start_1 Int) (Start_5 Int) (Start_10 Int) (Start_13 Int))
  ((Start Int (0 1 4 3 (+ Start_1 Start_1) (div Start_1 Start_2) (mod Start Start_1)))
   (StartBool Bool (false true (and StartBool_2 StartBool_1) (or StartBool_1 StartBool_2) (<= Start_17 Start_5) (>= Start_4 Start_17) (> Start_14 Start_5)))
   (StartBool_2 Bool (false (not StartBool_2) (and StartBool StartBool) (= Start_11 Start_8) (>= Start_12 Start_2)))
   (Start_8 Int (y 5 (- Start_8) (- Start_14 Start_16) (+ Start_1 Start_8) (div Start_15 Start_20) (mod Start_15 Start_20)))
   (Start_9 Int (4 3 1 x 5 (- Start Start_5) (+ Start_16 Start_14) (* Start_16 Start_13) (div Start_10 Start_11) (abs Start_15)))
   (Start_19 Int (0 (* Start_16 Start_4)))
   (Start_14 Int (x y (+ Start_6 Start_15) (div Start_3 Start_15) (mod Start_9 Start_5)))
   (Start_20 Int (3 (+ Start_15 Start) (* Start_2 Start_9)))
   (Start_18 Int (x (- Start_11 Start) (+ Start_7 Start_12) (* Start_4 Start_16) (div Start_6 Start_9) (abs Start_9) (ite StartBool Start_9 Start_3)))
   (Start_12 Int (3 (- Start) (* Start_2 Start_6) (mod Start_7 Start_10)))
   (Start_15 Int (5 (- Start_1) (* Start_11 Start) (abs Start_16) (ite StartBool Start_18 Start)))
   (Start_11 Int (0 (- Start) (+ Start_17 Start_16) (* Start_5 Start_19) (mod Start_2 Start_4)))
   (Start_2 Int (0 (* Start_1 Start_3) (mod Start_3 Start_4) (abs Start_1)))
   (Start_4 Int (x (* Start_3 Start_4) (div Start_1 Start) (mod Start_2 Start_2)))
   (Start_17 Int (4 (- Start_13) (* Start_6 Start_13) (mod Start_5 Start_13) (abs Start_10) (ite StartBool_1 Start_3 Start_8)))
   (Start_6 Int (4 0 (- Start_3 Start_5) (+ Start_5 Start_6) (div Start_1 Start_5) (abs Start_7)))
   (Start_7 Int (4 3 x 2 (- Start_6 Start_4) (+ Start_3 Start_3) (abs Start_4) (ite StartBool_1 Start_6 Start_5)))
   (Start_3 Int (4 (- Start_5) (+ Start Start_2) (div Start_3 Start_4) (mod Start_1 Start_3) (abs Start_2)))
   (Start_16 Int (4 0 (+ Start_5 Start_1) (div Start_7 Start_8) (mod Start_1 Start_17) (ite StartBool_1 Start Start_6)))
   (StartBool_1 Bool (true false (= Start_2 Start_4) (>= Start_4 Start_4)))
   (Start_1 Int (4 (- Start_6) (- Start_2 Start_8) (+ Start_9 Start_10) (div Start_5 Start_4) (abs Start_10)))
   (Start_5 Int (y (- Start Start_6) (+ Start Start) (* Start_2 Start_2)))
   (Start_10 Int (0 (- Start_11) (- Start_12 Start_7) (+ Start_9 Start_3) (abs Start_1) (ite StartBool Start_13 Start_11)))
   (Start_13 Int (1 (- Start) (+ Start_14 Start_15) (* Start_1 Start_16) (div Start_13 Start_16)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (mod (abs y) 0) 2)))

(check-synth)
