(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_3 Int) (Start_10 Int) (Start_2 Int) (Start_4 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_6 Int) (Start_12 Int) (StartBool_2 Bool) (Start_13 Int) (Start_7 Int) (Start_9 Int) (Start_5 Int) (Start_8 Int) (Start_1 Int))
  ((Start Int (3 4 2 (- Start) (* Start Start_1) (mod Start_1 Start_2)))
   (StartBool Bool (true false (not StartBool_3) (and StartBool_1 StartBool_3) (<= Start_5 Start_8) (= Start_12 Start_11) (>= Start_6 Start_1) (> Start_11 Start_1)))
   (Start_11 Int (1 5 2 (+ Start_9 Start_8) (* Start_8 Start_4) (div Start_6 Start_11)))
   (Start_3 Int (5 (- Start_8) (- Start Start_9) (div Start_7 Start_7) (mod Start_9 Start_7)))
   (Start_10 Int (2 3 5 (* Start_11 Start_2) (abs Start_6) (ite StartBool_2 Start_4 Start_6)))
   (Start_2 Int (1 (- Start_2 Start_1) (+ Start_1 Start_3) (div Start_3 Start_2) (ite StartBool Start Start_4)))
   (Start_4 Int (4 (+ Start_3 Start_1) (* Start_5 Start_5) (div Start Start) (ite StartBool_1 Start Start)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool StartBool) (< Start_6 Start_6) (<= Start_2 Start_2)))
   (StartBool_3 Bool (true (not StartBool) (<= Start_13 Start_7) (= Start_2 Start_4) (>= Start_12 Start_13)))
   (Start_6 Int (3 (- Start_6) (+ Start Start_4) (* Start Start_4) (mod Start_2 Start_3) (abs Start_1) (ite StartBool_1 Start_6 Start_3)))
   (Start_12 Int (2 4 1 0 3 5 (- Start_1) (* Start_5 Start) (div Start_3 Start_7)))
   (StartBool_2 Bool (false (not StartBool_2) (= Start Start_4)))
   (Start_13 Int (1 2 (- Start_1 Start_7) (* Start_3 Start_9) (div Start_9 Start_5) (mod Start_9 Start_3) (abs Start_1)))
   (Start_7 Int (1 (- Start_2) (* Start_3 Start_5) (div Start_1 Start_1) (abs Start_2)))
   (Start_9 Int (0 (- Start_5 Start_1) (* Start_4 Start_3) (div Start_9 Start_4) (mod Start_7 Start_4)))
   (Start_5 Int (x (+ Start_7 Start_3) (mod Start_3 Start_1) (abs Start_1)))
   (Start_8 Int (y 0 (- Start_2) (- Start Start_9) (div Start_3 Start_6) (mod Start_8 Start_4) (abs Start_6)))
   (Start_1 Int (1 2 (* Start_2 Start_3) (div Start_10 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod x y) 2)))

(check-synth)
