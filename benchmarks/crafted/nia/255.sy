(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (StartBool_4 Bool) (Start_17 Int) (Start_1 Int) (StartBool_3 Bool) (Start_13 Int) (Start_16 Int) (Start_3 Int) (Start_15 Int) (StartBool_1 Bool) (Start_5 Int) (Start_7 Int) (Start_2 Int) (StartBool_6 Bool) (Start_6 Int) (Start_9 Int) (Start_4 Int) (StartBool_2 Bool) (Start_10 Int) (Start_8 Int) (Start_12 Int) (Start_14 Int) (Start_11 Int))
  ((Start Int (3 (- Start_1 Start_1) (+ Start_2 Start_3) (div Start_2 Start_3) (ite StartBool_1 Start Start)))
   (StartBool Bool (true (< Start_3 Start_11) (<= Start_16 Start_10) (= Start_10 Start_6) (>= Start_11 Start_17) (> Start_8 Start_14)))
   (StartBool_5 Bool (false (not StartBool) (< Start_17 Start_13) (= Start Start_9) (>= Start_7 Start_5) (> Start_16 Start_2)))
   (StartBool_4 Bool (false (not StartBool_5) (or StartBool_6 StartBool_2) (< Start_13 Start_9) (<= Start_12 Start_5) (>= Start_1 Start_5)))
   (Start_17 Int (y 2 (- Start_1) (- Start_14 Start_4) (div Start_1 Start_12) (mod Start_11 Start_8) (abs Start_17) (ite StartBool_4 Start Start_17)))
   (Start_1 Int (y 3 4 2 (- Start_12) (+ Start_8 Start_9) (div Start_14 Start_5) (mod Start_1 Start_16)))
   (StartBool_3 Bool (false true (and StartBool_3 StartBool_2) (or StartBool_1 StartBool_3) (< Start Start) (> Start_13 Start_11)))
   (Start_13 Int (0 y (- Start_8) (- Start_3 Start) (+ Start_2 Start_14) (div Start_5 Start_2) (ite StartBool Start_1 Start_8)))
   (Start_16 Int (2 (+ Start_12 Start_16)))
   (Start_3 Int (3 (- Start_2) (* Start_1 Start_2)))
   (Start_15 Int (x (* Start_9 Start_8) (div Start_5 Start_5)))
   (StartBool_1 Bool (true false (not StartBool_1) (>= Start_3 Start_2)))
   (Start_5 Int (1 (+ Start_3 Start_5) (div Start_2 Start_4) (mod Start_4 Start_2) (ite StartBool_1 Start_5 Start_6)))
   (Start_7 Int (2 (- Start_7) (div Start_8 Start_3) (ite StartBool_2 Start_1 Start_1)))
   (Start_2 Int (x (div Start_2 Start_4) (abs Start_2) (ite StartBool Start_5 Start)))
   (StartBool_6 Bool (true false (not StartBool_6) (< Start_5 Start_15) (= Start_7 Start_12) (>= Start_11 Start_4) (> Start_16 Start_7)))
   (Start_6 Int (y (- Start_4 Start_6) (ite StartBool_1 Start_5 Start_3)))
   (Start_9 Int (3 (- Start_13 Start_1) (+ Start Start_9) (* Start_5 Start_10) (mod Start_8 Start_5) (abs Start_4) (ite StartBool Start_10 Start_12)))
   (Start_4 Int (2 (- Start_3) (* Start_7 Start_6)))
   (StartBool_2 Bool (false (or StartBool_3 StartBool) (< Start_3 Start_8) (<= Start_4 Start_9) (> Start_10 Start_3)))
   (Start_10 Int (1 2 4 (- Start_1 Start_3) (* Start Start_11) (mod Start_6 Start_12) (abs Start_10)))
   (Start_8 Int (0 (- Start_9) (+ Start Start_11) (* Start_5 Start_4) (div Start_12 Start_5) (mod Start_1 Start_12) (ite StartBool_3 Start_3 Start_9)))
   (Start_12 Int (2 (- Start_11) (ite StartBool_2 Start_10 Start_12)))
   (Start_14 Int (x (div Start Start_15) (ite StartBool_1 Start_15 Start_7)))
   (Start_11 Int (1 4 (* Start_12 Start_6) (div Start_9 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div x 5) 0)))

(check-synth)
