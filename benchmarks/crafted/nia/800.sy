(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_3 Int) (StartBool_6 Bool) (Start_16 Int) (Start_4 Int) (Start_15 Int) (Start_14 Int) (Start_6 Int) (Start_18 Int) (StartBool_5 Bool) (StartBool_1 Bool) (Start_5 Int) (Start_7 Int) (Start_10 Int) (Start_8 Int) (Start_17 Int) (StartBool_2 Bool) (Start_1 Int) (StartBool_3 Bool) (Start_12 Int) (Start_9 Int) (StartBool_4 Bool) (Start_11 Int) (Start_13 Int))
  ((Start Int (x 3 5 y (- Start_1 Start_2) (mod Start_2 Start) (abs Start_3) (ite StartBool Start_4 Start_5)))
   (StartBool Bool (true (not StartBool_3) (or StartBool_6 StartBool) (< Start_18 Start_2) (<= Start_5 Start_10) (>= Start_1 Start_9) (> Start_7 Start_11)))
   (Start_2 Int (x 2 (+ Start_13 Start_7) (* Start_4 Start_16) (div Start_11 Start_3) (mod Start_8 Start_15) (abs Start_5)))
   (Start_3 Int (3 (- Start_5) (* Start_11 Start_16) (mod Start_10 Start_4) (abs Start_6)))
   (StartBool_6 Bool (true (and StartBool_5 StartBool_3) (or StartBool_3 StartBool_2) (> Start_3 Start_3)))
   (Start_16 Int (1 x (- Start_6) (* Start_13 Start_13) (div Start_7 Start_15)))
   (Start_4 Int (0 2 (abs Start_15)))
   (Start_15 Int (0 (- Start_11) (* Start_4 Start_11) (div Start_7 Start_15) (mod Start_12 Start_9)))
   (Start_14 Int (3 (- Start_2 Start_5) (+ Start_1 Start) (* Start_5 Start_13) (div Start_15 Start_4) (mod Start_7 Start_8)))
   (Start_6 Int (2 (mod Start_14 Start_5) (ite StartBool_2 Start_8 Start_13)))
   (Start_18 Int (0 (+ Start_17 Start_14) (* Start_13 Start_15) (ite StartBool_5 Start_11 Start_14)))
   (StartBool_5 Bool (false (<= Start_8 Start_4)))
   (StartBool_1 Bool (true false (not StartBool_2) (or StartBool StartBool_1) (< Start_8 Start_4) (>= Start_3 Start_4)))
   (Start_5 Int (y 0 (- Start_2) (- Start Start_1) (div Start_5 Start_3) (mod Start_6 Start_4) (abs Start_7) (ite StartBool Start Start_6)))
   (Start_7 Int (5 (- Start_4 Start_3) (abs Start) (ite StartBool_1 Start_3 Start_2)))
   (Start_10 Int (0 2 4 (- Start_3 Start_9) (+ Start_13 Start_11) (* Start_10 Start_8) (div Start_7 Start_6) (ite StartBool_1 Start_12 Start_7)))
   (Start_8 Int (4 1 y 5 (- Start_2) (+ Start Start_7)))
   (Start_17 Int (0 2 (- Start_9 Start_9) (+ Start_5 Start_6) (* Start Start_5) (abs Start_5)))
   (StartBool_2 Bool (false true (or StartBool StartBool) (< Start_8 Start_3) (= Start_5 Start_1) (> Start_9 Start_5)))
   (Start_1 Int (x (- Start_15) (- Start_12 Start_17)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_4 StartBool) (< Start_3 Start_5) (= Start Start_8)))
   (Start_12 Int (0 (+ Start_6 Start_11) (* Start_5 Start_5) (mod Start_5 Start_8)))
   (Start_9 Int (2 y 1 4 (div Start_9 Start_7) (ite StartBool_3 Start_2 Start_2)))
   (StartBool_4 Bool (true (not StartBool_5) (< Start_10 Start_2) (<= Start_10 Start_6) (= Start_4 Start_11) (>= Start_4 Start_7) (> Start_2 Start_6)))
   (Start_11 Int (y 4 (* Start_8 Start_1) (div Start_12 Start_10) (abs Start_6)))
   (Start_13 Int (5 2 1 (- Start_4) (div Start Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (abs x) 3)))

(check-synth)
