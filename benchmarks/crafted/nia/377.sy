(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_16 Int) (Start_1 Int) (Start_2 Int) (StartBool_4 Bool) (Start_14 Int) (Start_13 Int) (Start_6 Int) (StartBool_3 Bool) (Start_15 Int) (StartBool_1 Bool) (Start_5 Int) (Start_8 Int) (StartBool_2 Bool) (Start_12 Int) (Start_4 Int) (Start_9 Int) (Start_7 Int) (Start_3 Int) (Start_11 Int) (Start_10 Int))
  ((Start Int (0 x y (- Start_1) (+ Start Start_1) (* Start_2 Start_3) (div Start_2 Start_1) (mod Start_4 Start_1) (abs Start_4) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (false (and StartBool_5 StartBool_4) (= Start_9 Start_1) (> Start_16 Start_10)))
   (StartBool_5 Bool (false (not StartBool_4) (and StartBool_3 StartBool_2) (< Start_8 Start_13) (<= Start_8 Start_14) (= Start_16 Start_11) (>= Start_2 Start_3)))
   (Start_16 Int (x 4 y (* Start_11 Start_13) (abs Start_5)))
   (Start_1 Int (x (- Start_3)))
   (Start_2 Int (3 0 (* Start_6 Start_2) (abs Start_13) (ite StartBool_4 Start_13 Start_1)))
   (StartBool_4 Bool (true false (not StartBool_1) (<= Start_3 Start_4) (= Start_15 Start_5) (> Start_15 Start_4)))
   (Start_14 Int (1 (- Start_15) (+ Start_1 Start_8) (div Start_1 Start_3) (ite StartBool_4 Start_11 Start_3)))
   (Start_13 Int (2 (- Start_2) (+ Start_4 Start_11) (div Start_12 Start_6) (mod Start_3 Start_3) (abs Start_6) (ite StartBool_3 Start_8 Start_14)))
   (Start_6 Int (2 x (- Start_1 Start_1) (+ Start_3 Start_2) (* Start_1 Start) (div Start_1 Start_6) (abs Start_7)))
   (StartBool_3 Bool (true false (not StartBool_1) (= Start_6 Start_6) (>= Start Start_9) (> Start_6 Start_7)))
   (Start_15 Int (0 3 (+ Start_5 Start_12) (* Start_6 Start_3) (div Start Start_6) (mod Start_12 Start_10) (abs Start_8) (ite StartBool_2 Start_13 Start_13)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool) (< Start_3 Start_1) (= Start_3 Start_3)))
   (Start_5 Int (y 1 (- Start_8) (+ Start_8 Start_8) (* Start_4 Start_7) (mod Start Start_9) (abs Start_9) (ite StartBool_3 Start_3 Start_4)))
   (Start_8 Int (3 (- Start_6 Start_5) (abs Start_5)))
   (StartBool_2 Bool (true (< Start_2 Start_1) (<= Start_1 Start_3) (>= Start_5 Start_6)))
   (Start_12 Int (4 (- Start_11 Start_8) (ite StartBool Start_4 Start_13)))
   (Start_4 Int (x (- Start_2 Start) (* Start_1 Start_2) (abs Start) (ite StartBool_1 Start_1 Start)))
   (Start_9 Int (y 2 4 (- Start Start_5) (+ Start_6 Start) (div Start_1 Start_1) (mod Start_7 Start_4) (abs Start_6) (ite StartBool Start_3 Start_3)))
   (Start_7 Int (0 (- Start_5) (* Start_5 Start_5) (ite StartBool_1 Start_6 Start_7)))
   (Start_3 Int (2 3 (- Start_7 Start_10) (* Start Start_7) (mod Start_3 Start_11) (abs Start_8) (ite StartBool Start_8 Start)))
   (Start_11 Int (0 x (- Start_9 Start_4) (div Start_3 Start) (mod Start_9 Start_10)))
   (Start_10 Int (4 3 (- Start_9) (- Start_7 Start) (* Start_4 Start_12) (abs Start_6) (ite StartBool_3 Start_2 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (- 2) (- 5 (div x 0)))))

(check-synth)
