(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_1 Int) (Start_10 Int) (Start_15 Int) (StartBool_3 Bool) (StartBool_7 Bool) (Start_3 Int) (Start_7 Int) (StartBool_2 Bool) (Start_12 Int) (Start_4 Int) (Start_2 Int) (StartBool_4 Bool) (Start_9 Int) (Start_13 Int) (Start_6 Int) (Start_14 Int) (Start_8 Int) (StartBool_8 Bool) (Start_5 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_11 Int))
  ((Start Int (4 x (- Start_1 Start) (+ Start Start_2) (* Start_1 Start_3) (mod Start_1 Start_2) (abs Start_2)))
   (StartBool Bool (true false (not StartBool_5) (or StartBool_4 StartBool_8) (< Start_13 Start_12) (<= Start Start_11) (= Start_11 Start_11) (>= Start_12 Start_7) (> Start_10 Start_9)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_6) (> Start_13 Start_7)))
   (Start_1 Int (0 1 y 3 (- Start_6 Start_7) (+ Start_13 Start_3) (div Start_11 Start_7) (abs Start_9) (ite StartBool Start_9 Start_13)))
   (Start_10 Int (4 0 (- Start_5) (- Start_1 Start_8) (* Start Start_14) (div Start_15 Start_13) (abs Start_1) (ite StartBool_5 Start_6 Start_13)))
   (Start_15 Int (y (* Start Start_13) (mod Start_14 Start_13) (abs Start_11)))
   (StartBool_3 Bool (true (not StartBool_2) (or StartBool_4 StartBool_1) (< Start_11 Start_12) (= Start_6 Start_7) (> Start_11 Start_10)))
   (StartBool_7 Bool (true (not StartBool_1) (< Start_1 Start_7) (<= Start Start_15) (>= Start_1 Start_6) (> Start_2 Start_5)))
   (Start_3 Int (y 2 1 (+ Start_4 Start_2)))
   (Start_7 Int (0 3 x (- Start_2) (- Start_7 Start_6) (* Start_4 Start_2) (div Start_1 Start_2)))
   (StartBool_2 Bool (true false (not StartBool_7) (and StartBool_8 StartBool_3) (< Start_4 Start_6) (>= Start_8 Start_2)))
   (Start_12 Int (0 (- Start_4 Start_8) (* Start_13 Start_14) (div Start_11 Start_4)))
   (Start_4 Int (4 x (- Start_3) (- Start_5 Start_2) (abs Start_6)))
   (Start_2 Int (0 x (mod Start_1 Start_7) (ite StartBool_4 Start_14 Start_3)))
   (StartBool_4 Bool (false (and StartBool_2 StartBool_3) (< Start_9 Start_5) (= Start Start_15)))
   (Start_9 Int (1 0 5 (abs Start_5)))
   (Start_13 Int (5 2 x y (- Start_12) (* Start_13 Start_2) (div Start_1 Start_14) (mod Start_15 Start_15) (abs Start_10) (ite StartBool_3 Start_14 Start)))
   (Start_6 Int (1 2 (- Start_6 Start_1) (+ Start Start_1) (mod Start_6 Start_3) (abs Start_7) (ite StartBool Start_8 Start_4)))
   (Start_14 Int (y x (+ Start_6 Start_7) (* Start_11 Start_6) (ite StartBool_2 Start_5 Start_1)))
   (Start_8 Int (5 (mod Start_6 Start_8) (abs Start_6) (ite StartBool Start Start_9)))
   (StartBool_8 Bool (false true (and StartBool_4 StartBool_8) (or StartBool_1 StartBool_8) (< Start_7 Start_14) (<= Start_13 Start_14) (= Start Start_13) (>= Start_10 Start_10) (> Start_11 Start_2)))
   (Start_5 Int (0 (- Start_7 Start_6) (+ Start_8 Start) (* Start Start_5) (div Start_8 Start_9) (mod Start_6 Start_1) (ite StartBool_1 Start Start_8)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_1 StartBool_2) (< Start_10 Start_7) (>= Start_4 Start_7) (> Start_11 Start_2)))
   (StartBool_6 Bool (false true (not StartBool_1) (or StartBool_3 StartBool_7) (= Start_11 Start_14)))
   (Start_11 Int (y (- Start_9) (- Start_12 Start_2) (+ Start_5 Start_3) (mod Start_11 Start_3) (abs Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (+ 1 (abs x)) (mod x x))))

(check-synth)
