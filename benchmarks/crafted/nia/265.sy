(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_14 Int) (Start_3 Int) (Start_12 Int) (Start_8 Int) (Start_1 Int) (StartBool_1 Bool) (StartBool_5 Bool) (Start_9 Int) (Start_5 Int) (Start_6 Int) (StartBool_3 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (Start_13 Int) (Start_4 Int) (Start_7 Int) (Start_10 Int) (Start_11 Int))
  ((Start Int (1 (- Start) (mod Start Start_1) (abs Start) (ite StartBool Start_1 Start)))
   (StartBool Bool (false true (and StartBool_5 StartBool_1) (or StartBool_4 StartBool_1) (<= Start_9 Start_7) (= Start_9 Start_1) (> Start_8 Start_3)))
   (Start_2 Int (x (- Start_12) (- Start_14 Start_9) (+ Start_9 Start_3)))
   (Start_14 Int (4 (- Start_12) (- Start_4 Start_6) (+ Start_9 Start_14) (abs Start_12) (ite StartBool_4 Start_6 Start_2)))
   (Start_3 Int (2 (- Start_2) (+ Start_1 Start_5) (* Start_4 Start_11) (div Start_10 Start_11) (mod Start_6 Start_1)))
   (Start_12 Int (y 0 1 (- Start_9 Start_13) (div Start_9 Start_11) (mod Start_12 Start_12) (ite StartBool_5 Start_6 Start_2)))
   (Start_8 Int (y (- Start_3 Start_10) (+ Start Start_8) (* Start_12 Start_11) (div Start_12 Start_6) (abs Start_3) (ite StartBool_5 Start_12 Start_11)))
   (Start_1 Int (2 5 0 (- Start) (- Start Start_2) (+ Start_2 Start_1) (* Start_1 Start_2) (div Start_2 Start_3) (mod Start_3 Start_2) (ite StartBool_1 Start Start_1)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool_3) (<= Start_1 Start) (>= Start_4 Start_4) (> Start_4 Start_3)))
   (StartBool_5 Bool (true (< Start_8 Start_4) (= Start_2 Start_6) (> Start_8 Start_1)))
   (Start_9 Int (4 (- Start_1 Start_10) (* Start_2 Start_7) (div Start Start) (ite StartBool_3 Start_6 Start_10)))
   (Start_5 Int (x 0 (- Start_2) (+ Start_4 Start_5) (div Start Start) (mod Start_1 Start_4)))
   (Start_6 Int (1 (- Start Start_6) (div Start_6 Start_5) (mod Start_2 Start) (ite StartBool Start_4 Start_6)))
   (StartBool_3 Bool (true (not StartBool_2) (and StartBool_2 StartBool_1) (<= Start Start_6) (>= Start_2 Start_5) (> Start_6 Start_1)))
   (StartBool_4 Bool (true false (not StartBool) (or StartBool_4 StartBool_3)))
   (StartBool_2 Bool (true (and StartBool_3 StartBool_3) (< Start_3 Start) (<= Start_7 Start_3) (= Start_6 Start_4)))
   (Start_13 Int (5 2 (* Start_5 Start_8) (mod Start_1 Start_5) (abs Start_6) (ite StartBool_3 Start_3 Start_11)))
   (Start_4 Int (5 x (- Start_3 Start_4) (+ Start_2 Start_5) (abs Start_4)))
   (Start_7 Int (y 5 2 1 x 4 0 (+ Start_4 Start_6) (mod Start_8 Start) (ite StartBool_4 Start_1 Start_9)))
   (Start_10 Int (3 (- Start_11 Start_1) (div Start_3 Start_7) (abs Start_11)))
   (Start_11 Int (y 0 (- Start_1) (- Start_8 Start_9) (div Start_3 Start_9) (mod Start_3 Start_2) (ite StartBool Start_2 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (div (- 4) 0) (div (* x 2) 0))))

(check-synth)
