(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_2 Bool) (Start_7 Int) (Start_9 Int) (Start_13 Int) (Start_15 Int) (Start_17 Int) (Start_10 Int) (Start_14 Int) (Start_2 Int) (Start_3 Int) (Start_5 Int) (StartBool_1 Bool) (Start_4 Int) (Start_18 Int) (Start_1 Int) (StartBool_7 Bool) (Start_6 Int) (StartBool_5 Bool) (Start_11 Int) (StartBool_4 Bool) (Start_16 Int) (Start_8 Int) (StartBool_6 Bool) (Start_12 Int) (StartBool_3 Bool))
  ((Start Int (5 (- Start_1 Start) (+ Start Start) (* Start_1 Start_1) (div Start Start_2) (mod Start_1 Start_2)))
   (StartBool Bool (true false (not StartBool_2) (and StartBool_2 StartBool_1) (or StartBool_1 StartBool_1) (<= Start Start_4) (= Start_5 Start_4) (>= Start_3 Start_4) (> Start_6 Start_1)))
   (StartBool_2 Bool (true false (not StartBool_6) (and StartBool_7 StartBool_1) (or StartBool_2 StartBool_5) (< Start Start) (<= Start_4 Start_17) (> Start_14 Start_8)))
   (Start_7 Int (1 (* Start_9 Start_6) (div Start_17 Start_17) (abs Start_12) (ite StartBool_6 Start_5 Start_9)))
   (Start_9 Int (2 5 x 1 0 4 (+ Start_1 Start) (mod Start_5 Start_4) (abs Start_1)))
   (Start_13 Int (3 (* Start_6 Start_10) (ite StartBool_4 Start_9 Start_6)))
   (Start_15 Int (2 (- Start_8) (- Start_4 Start_16) (+ Start_9 Start_15) (* Start_2 Start_1) (mod Start_11 Start_7) (abs Start_3)))
   (Start_17 Int (4 (- Start_13) (- Start_7 Start_4) (abs Start_15) (ite StartBool_4 Start_14 Start_8)))
   (Start_10 Int (5 0 1 y x 2 (* Start_11 Start_2) (ite StartBool_2 Start_1 Start_9)))
   (Start_14 Int (y (- Start_3) (+ Start_6 Start_3) (div Start_3 Start_8)))
   (Start_2 Int (4 (- Start_2 Start) (+ Start_2 Start) (* Start_1 Start_2) (mod Start_3 Start_2) (ite StartBool Start_1 Start_1)))
   (Start_3 Int (1 (- Start_2 Start) (+ Start_3 Start_2) (* Start_1 Start_1) (ite StartBool_1 Start_1 Start_2)))
   (Start_5 Int (2 x (- Start_2) (- Start_10 Start_18) (* Start Start_13) (div Start_18 Start_3) (mod Start_17 Start_4) (abs Start_9) (ite StartBool_5 Start_8 Start_6)))
   (StartBool_1 Bool (true (and StartBool_1 StartBool_1) (< Start_1 Start_2) (= Start_1 Start_1) (>= Start_4 Start_4) (> Start_4 Start_2)))
   (Start_4 Int (1 0 (- Start_4) (- Start_3 Start_4) (+ Start_1 Start_2) (div Start_4 Start_2) (mod Start_4 Start)))
   (Start_18 Int (5 x 1 3 (div Start_11 Start_8) (abs Start_4)))
   (Start_1 Int (0 (- Start) (- Start_4 Start_3) (+ Start_4 Start_3) (div Start_4 Start_1) (ite StartBool Start_1 Start_1)))
   (StartBool_7 Bool (false true (not StartBool_5) (< Start_11 Start_3) (<= Start_5 Start_9) (> Start_8 Start_13)))
   (Start_6 Int (x (- Start_1) (- Start_1 Start_3) (+ Start_4 Start) (mod Start_7 Start_8) (abs Start_3)))
   (StartBool_5 Bool (false true (or StartBool_3 StartBool_6) (< Start_3 Start_7) (= Start_7 Start_5) (>= Start_9 Start_3)))
   (Start_11 Int (y 0 (- Start_6) (+ Start_9 Start_6) (* Start_12 Start_5) (div Start_11 Start_6) (ite StartBool_2 Start_2 Start_2)))
   (StartBool_4 Bool (true (not StartBool_4) (and StartBool_3 StartBool_5) (or StartBool_2 StartBool_5) (< Start_15 Start_9) (= Start Start_5)))
   (Start_16 Int (y 4 2 (- Start_5) (- Start_10 Start_10) (+ Start_11 Start_15) (* Start_15 Start_7) (div Start_12 Start_2) (mod Start_4 Start_6) (abs Start_17)))
   (Start_8 Int (3 (- Start_7) (+ Start_4 Start_9) (* Start_3 Start_10) (div Start_5 Start_6) (ite StartBool Start_4 Start_4)))
   (StartBool_6 Bool (true (not StartBool) (or StartBool_7 StartBool) (< Start_4 Start_11)))
   (Start_12 Int (2 (+ Start_3 Start_12) (div Start_13 Start_3) (mod Start_2 Start_4) (ite StartBool_3 Start_11 Start_1)))
   (StartBool_3 Bool (true false (not StartBool) (or StartBool_3 StartBool_2) (< Start_13 Start_4) (<= Start_14 Start_10) (= Start_1 Start_15) (>= Start_16 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 2 (- (* 3 y) 5))))

(check-synth)
