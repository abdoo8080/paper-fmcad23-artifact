(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (StartBool_3 Bool) (Start_1 Int) (Start_5 Int) (Start_6 Int) (Start_4 Int) (Start_7 Int) (Start_8 Int) (Start_10 Int) (Start_3 Int) (Start_11 Int) (Start_2 Int) (Start_9 Int) (StartBool_2 Bool) (StartBool_1 Bool))
  ((Start Int (y 2 4 0 5 (- Start_1 Start_2) (+ Start_3 Start_4) (div Start Start_4) (abs Start_5)))
   (StartBool Bool (true (not StartBool_2) (< Start_11 Start_2) (<= Start_3 Start_7) (= Start_12 Start_7) (>= Start_5 Start_5)))
   (Start_12 Int (2 3 1 5 (- Start Start_3) (+ Start_10 Start_8) (* Start_12 Start_2) (div Start_3 Start_9) (mod Start_6 Start_2) (abs Start_7)))
   (StartBool_3 Bool (true (not StartBool_3) (< Start_7 Start_1) (> Start Start_6)))
   (Start_1 Int (4 2 (- Start_1) (* Start Start_4) (div Start_1 Start_10) (mod Start_3 Start_10) (abs Start_9) (ite StartBool_3 Start_8 Start_6)))
   (Start_5 Int (1 2 (- Start_6 Start_4) (div Start_2 Start_6) (mod Start_1 Start_5) (abs Start_4)))
   (Start_6 Int (2 (- Start) (mod Start_4 Start_5)))
   (Start_4 Int (5 (- Start_1) (div Start_7 Start_2) (abs Start_2) (ite StartBool Start_1 Start_4)))
   (Start_7 Int (4 y (- Start_4) (* Start_7 Start_7) (abs Start_3)))
   (Start_8 Int (x (- Start_7) (+ Start_4 Start_2) (* Start_4 Start_8) (div Start Start_5) (abs Start_6)))
   (Start_10 Int (4 (- Start_4) (- Start_10 Start_2) (ite StartBool_2 Start_9 Start_5)))
   (Start_3 Int (3 0 x 4 5 (- Start_8) (+ Start_1 Start_4) (* Start_6 Start_4) (div Start_5 Start_6) (abs Start_7)))
   (Start_11 Int (1 3 5 (- Start_7) (+ Start_11 Start_9) (* Start Start_6) (div Start_3 Start_9) (ite StartBool_1 Start_3 Start_4)))
   (Start_2 Int (x (- Start_8) (* Start_4 Start_6) (div Start_3 Start_6) (abs Start_7) (ite StartBool_1 Start_4 Start_9)))
   (Start_9 Int (5 (+ Start_10 Start_9) (* Start_2 Start) (abs Start_11)))
   (StartBool_2 Bool (true false (not StartBool_1) (or StartBool_1 StartBool_1) (< Start_11 Start_8) (<= Start_1 Start_6) (> Start_3 Start_1)))
   (StartBool_1 Bool (true (= Start Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (mod x (- y 5)) 5)))

(check-synth)
