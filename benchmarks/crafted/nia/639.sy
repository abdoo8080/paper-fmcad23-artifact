(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_3 Int) (Start_17 Int) (StartBool_7 Bool) (StartBool_5 Bool) (StartBool_6 Bool) (Start_11 Int) (Start_16 Int) (Start_14 Int) (Start_5 Int) (Start_4 Int) (Start_15 Int) (Start_6 Int) (Start_12 Int) (StartBool_1 Bool) (Start_13 Int) (Start_2 Int) (Start_10 Int) (StartBool_2 Bool) (Start_9 Int) (StartBool_3 Bool) (Start_8 Int) (Start_7 Int) (StartBool_4 Bool))
  ((Start Int (5 0 x (- Start_1) (+ Start_2 Start_3) (* Start_4 Start_4) (mod Start_5 Start_1) (abs Start)))
   (StartBool Bool (false true (= Start_6 Start_17) (>= Start_15 Start_9) (> Start_10 Start_9)))
   (Start_1 Int (x (- Start_9) (- Start_15 Start_11) (+ Start_4 Start_1) (* Start_16 Start_2) (ite StartBool_2 Start_4 Start_8)))
   (Start_3 Int (4 0 2 (+ Start_11 Start_9) (* Start_6 Start_14) (div Start_13 Start_17) (mod Start_14 Start_4)))
   (Start_17 Int (2 (+ Start_3 Start_17) (div Start_3 Start_6) (abs Start_7) (ite StartBool Start_13 Start_7)))
   (StartBool_7 Bool (false true (and StartBool_5 StartBool_1) (or StartBool_3 StartBool_7) (< Start_12 Start_11) (<= Start_3 Start_4) (= Start_17 Start_6) (> Start_11 Start_7)))
   (StartBool_5 Bool (false true (<= Start_14 Start_4) (= Start_11 Start_6) (>= Start_3 Start_3) (> Start_13 Start_10)))
   (StartBool_6 Bool (true false (not StartBool_3) (< Start_6 Start_6) (<= Start_3 Start_13) (> Start_4 Start_16)))
   (Start_11 Int (x y (div Start_13 Start_13) (abs Start_1) (ite StartBool_2 Start_13 Start_1)))
   (Start_16 Int (y (- Start_11 Start_6) (+ Start_9 Start_5) (div Start_16 Start_14) (mod Start_7 Start) (abs Start)))
   (Start_14 Int (x 4 y 2 (- Start_15) (div Start_4 Start_8) (mod Start_6 Start_7) (ite StartBool_1 Start_2 Start_3)))
   (Start_5 Int (5 2 3 (- Start_3) (- Start_2 Start_2) (div Start Start_3) (abs Start_2)))
   (Start_4 Int (4 x 3 1 0 (- Start_2 Start_6) (* Start_6 Start_1)))
   (Start_15 Int (x 1 2 (* Start_9 Start_5) (div Start_15 Start_3) (mod Start_10 Start_2)))
   (Start_6 Int (y x 1 (- Start_7) (div Start_7 Start_5) (mod Start_2 Start_3) (abs Start_6) (ite StartBool_1 Start_4 Start_5)))
   (Start_12 Int (y (* Start_3 Start_5) (div Start_4 Start_7) (mod Start_8 Start_13) (ite StartBool_4 Start_2 Start_7)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_1 StartBool_2) (or StartBool StartBool_2) (= Start_7 Start)))
   (Start_13 Int (4 (- Start_4) (- Start_1 Start_1) (* Start_6 Start_1) (div Start_8 Start_12) (abs Start_14) (ite StartBool_2 Start_12 Start_7)))
   (Start_2 Int (x (- Start_2) (- Start_11 Start_12) (+ Start_1 Start_9) (div Start_5 Start_14)))
   (Start_10 Int (0 (- Start_7 Start_10) (+ Start_11 Start) (* Start_11 Start_8) (mod Start_4 Start_7) (ite StartBool_5 Start_12 Start_11)))
   (StartBool_2 Bool (false (not StartBool_3) (or StartBool_3 StartBool_1) (< Start_3 Start) (= Start_3 Start_2)))
   (Start_9 Int (y x 4 0 (- Start_2) (* Start_10 Start_4) (mod Start_13 Start_15) (ite StartBool_6 Start_6 Start_4)))
   (StartBool_3 Bool (false true (or StartBool_2 StartBool_2) (<= Start Start_2)))
   (Start_8 Int (x 0 (+ Start_3 Start_7) (* Start_4 Start_5) (mod Start_9 Start_10) (abs Start_10) (ite StartBool_7 Start_8 Start_5)))
   (Start_7 Int (2 3 x 1 5 y (- Start_3 Start_8) (+ Start_6 Start_3) (* Start_4 Start_8) (mod Start_5 Start_6) (ite StartBool_4 Start_2 Start_5)))
   (StartBool_4 Bool (true (not StartBool_4) (or StartBool_3 StartBool_5) (< Start_1 Start_3) (<= Start_9 Start_3) (= Start_9 Start) (>= Start_10 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (mod (mod y 4) 0) (+ 1 5))))

(check-synth)
