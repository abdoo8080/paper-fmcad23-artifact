(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_17 Int) (Start_6 Int) (Start_8 Int) (Start_9 Int) (Start_11 Int) (Start_12 Int) (Start_20 Int) (Start_2 Int) (Start_5 Int) (Start_3 Int) (Start_1 Int) (Start_7 Int) (Start_14 Int) (StartBool_1 Bool) (Start_19 Int) (Start_4 Int) (StartBool_2 Bool) (Start_15 Int) (StartBool_3 Bool) (Start_16 Int) (Start_10 Int) (Start_13 Int))
  ((Start Int (x (* Start Start) (div Start Start_1)))
   (StartBool Bool (false (and StartBool_1 StartBool_3) (or StartBool_1 StartBool_3) (<= Start_9 Start_18) (= Start_15 Start_13) (> Start_9 Start_17)))
   (Start_18 Int (0 (- Start_10) (- Start_15 Start_7) (div Start_18 Start_13) (abs Start_8)))
   (Start_17 Int (y (- Start_13) (* Start_3 Start) (div Start_10 Start_11) (abs Start)))
   (Start_6 Int (y 3 (- Start_11 Start_3) (+ Start_16 Start) (mod Start_8 Start_14) (abs Start_15)))
   (Start_8 Int (x))
   (Start_9 Int (2 (- Start_11) (- Start_1 Start_14) (+ Start Start_12) (* Start_6 Start_5) (div Start_11 Start_5) (mod Start_13 Start_15) (abs Start_3) (ite StartBool_1 Start_3 Start_10)))
   (Start_11 Int (3 0 (- Start_8) (+ Start_2 Start_14) (div Start_7 Start_12) (ite StartBool_2 Start_11 Start_5)))
   (Start_12 Int (0 (* Start_6 Start_2)))
   (Start_20 Int (2 (- Start_1) (- Start_12 Start_16) (+ Start_16 Start_14) (div Start_4 Start_17) (mod Start_7 Start) (ite StartBool_2 Start_6 Start_13)))
   (Start_2 Int (5 (- Start_2) (- Start_1 Start_2) (mod Start Start_3) (ite StartBool_1 Start_3 Start_1)))
   (Start_5 Int (1 5 x 4 (- Start_5) (* Start_5 Start_3) (mod Start_4 Start) (abs Start_5)))
   (Start_3 Int (5 0 (- Start_13 Start_17) (abs Start_12)))
   (Start_1 Int (5 3 (abs Start_1) (ite StartBool Start_2 Start)))
   (Start_7 Int (5 (- Start_4 Start_1) (+ Start_8 Start_9) (div Start_10 Start_1) (mod Start_8 Start_2)))
   (Start_14 Int (1 3 y x 5 (- Start_16) (mod Start_2 Start_14) (abs Start_16)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool_1) (or StartBool_1 StartBool_1) (< Start_4 Start_1) (<= Start_5 Start_1) (= Start_5 Start_3) (> Start_3 Start_1)))
   (Start_19 Int (0 3 (- Start_12 Start) (+ Start_13 Start_4) (ite StartBool_3 Start_16 Start_10)))
   (Start_4 Int (x y (- Start_2) (+ Start_6 Start_6) (div Start_4 Start_2) (mod Start_7 Start_6)))
   (StartBool_2 Bool (false (or StartBool_2 StartBool_2) (< Start_4 Start_16)))
   (Start_15 Int (x (- Start_15) (- Start_2 Start) (+ Start_7 Start_10) (div Start_2 Start_13)))
   (StartBool_3 Bool (true false (< Start_5 Start_19) (<= Start_18 Start_16) (> Start_17 Start_20)))
   (Start_16 Int (2 4 3 (- Start_11) (- Start Start_15) (div Start_3 Start_16) (ite StartBool_2 Start_3 Start_2)))
   (Start_10 Int (3 (- Start_7 Start_10) (+ Start_1 Start_2) (* Start_11 Start_3) (div Start_7 Start_12) (mod Start_13 Start_10) (ite StartBool_1 Start_7 Start_8)))
   (Start_13 Int (x (- Start_2) (- Start_8 Start_12) (* Start_8 Start_2) (div Start_4 Start_14) (mod Start_15 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (div 4 y) y)))

(check-synth)
