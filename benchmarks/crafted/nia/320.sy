(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_14 Int) (Start_7 Int) (StartBool_3 Bool) (StartBool_4 Bool) (Start_12 Int) (Start_8 Int) (StartBool_2 Bool) (Start_4 Int) (Start_21 Int) (Start_3 Int) (Start_11 Int) (Start_1 Int) (Start_13 Int) (Start_5 Int) (Start_15 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_16 Int) (Start_17 Int) (StartBool_7 Bool) (StartBool_5 Bool) (Start_9 Int) (Start_6 Int) (Start_19 Int) (Start_20 Int) (Start_18 Int) (Start_2 Int) (Start_22 Int))
  ((Start Int (1 5 2 4 y x 3 0 (- Start) (- Start Start_1) (* Start_2 Start_2) (div Start_1 Start_3)))
   (StartBool Bool (true false (not StartBool_6) (= Start_1 Start_3) (>= Start_13 Start_22) (> Start_18 Start_1)))
   (Start_10 Int (1 4 (- Start_8 Start_11) (+ Start_1 Start_4) (* Start_12 Start_7) (abs Start_1) (ite StartBool_1 Start_5 Start_3)))
   (Start_14 Int (2 (- Start_1) (div Start_2 Start_14) (ite StartBool_3 Start_9 Start)))
   (Start_7 Int (4 y 5 0 (- Start_2) (- Start_9 Start_5) (+ Start_3 Start_6) (div Start_3 Start_5) (abs Start_7) (ite StartBool_6 Start_10 Start_3)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_4 StartBool_4) (or StartBool_4 StartBool_2) (< Start_5 Start_6) (>= Start Start_1) (> Start_3 Start_3)))
   (StartBool_4 Bool (true false (or StartBool_3 StartBool_5) (>= Start_2 Start_2)))
   (Start_12 Int (1 (- Start_2 Start) (* Start Start_13) (div Start_12 Start_3) (mod Start_14 Start_7) (abs Start_4) (ite StartBool_5 Start_11 Start)))
   (Start_8 Int (y 3 (- Start_1 Start_2) (mod Start_1 Start_7) (abs Start_7)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool) (or StartBool_3 StartBool_1) (<= Start_6 Start_4) (= Start_5 Start_3) (>= Start_6 Start_6) (> Start_5 Start_4)))
   (Start_4 Int (2 4 (+ Start_5 Start_2) (div Start_5 Start_6) (ite StartBool_1 Start_3 Start_1)))
   (Start_21 Int (1 3 0 2 (- Start_22) (* Start_3 Start_2)))
   (Start_3 Int (x (- Start_1) (+ Start_1 Start_3) (div Start_3 Start_3) (mod Start_3 Start_4) (abs Start_2) (ite StartBool Start_2 Start_2)))
   (Start_11 Int (y 4 5 (- Start_7) (- Start_12 Start_15) (+ Start_2 Start_14) (* Start_5 Start_8) (div Start_2 Start_11) (mod Start_10 Start_7) (abs Start_7) (ite StartBool_6 Start_1 Start_2)))
   (Start_1 Int (3 (- Start_17 Start_19) (div Start_21 Start_14) (mod Start_15 Start_20) (ite StartBool_6 Start_17 Start_16)))
   (Start_13 Int (4 (div Start_6 Start_10) (mod Start_15 Start_6) (abs Start_5) (ite StartBool Start_12 Start_12)))
   (Start_5 Int (x (- Start_5) (+ Start_15 Start_10) (mod Start_2 Start_19) (abs Start_10)))
   (Start_15 Int (y x 2 (- Start_3 Start_9) (mod Start_2 Start_9) (abs Start) (ite StartBool_6 Start_11 Start_8)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool_2 StartBool) (> Start Start_6)))
   (StartBool_6 Bool (true false (not StartBool_7) (and StartBool_2 StartBool_7) (or StartBool_7 StartBool_1) (< Start_16 Start_8) (<= Start_15 Start_5) (>= Start_11 Start_14) (> Start_5 Start_12)))
   (Start_16 Int (3 (abs Start_17)))
   (Start_17 Int (x (- Start_4) (+ Start_2 Start_1) (* Start_12 Start_14)))
   (StartBool_7 Bool (false true (not StartBool) (and StartBool_1 StartBool_1) (or StartBool_6 StartBool_5) (< Start_13 Start_5)))
   (StartBool_5 Bool (true false (not StartBool_1) (or StartBool_3 StartBool_4) (< Start_7 Start_2) (<= Start_8 Start_2) (>= Start_5 Start_5)))
   (Start_9 Int (x 4 2 (- Start_12) (- Start_5 Start_13) (+ Start_11 Start_4) (* Start_12 Start_17) (div Start_12 Start_18) (mod Start_5 Start_18) (abs Start_4) (ite StartBool_4 Start_18 Start_6)))
   (Start_6 Int (5 (* Start_4 Start_6) (mod Start_13 Start_1) (abs Start_3) (ite StartBool_2 Start_10 Start_18)))
   (Start_19 Int (y 4 (- Start_6 Start_17) (+ Start Start_9) (div Start_20 Start_5) (ite StartBool_2 Start_12 Start_1)))
   (Start_20 Int (4 (* Start_8 Start_9) (div Start_9 Start_5) (abs Start_10)))
   (Start_18 Int (1 (- Start_10 Start_3) (+ Start_18 Start_4) (* Start_13 Start_4) (mod Start_6 Start_9) (abs Start_5)))
   (Start_2 Int (x (- Start_20) (- Start_21 Start_18) (+ Start_11 Start_21) (* Start_7 Start_2) (abs Start_17)))
   (Start_22 Int (x 0 y 5 3 2 4 (- Start_4 Start_19) (* Start_4 Start_16) (mod Start_3 Start_1) (ite StartBool_2 Start_18 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 1 0)))

(check-synth)
