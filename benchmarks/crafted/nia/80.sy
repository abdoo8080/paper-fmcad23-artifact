(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_2 Bool) (StartBool_1 Bool) (StartBool_5 Bool) (Start_2 Int) (Start_4 Int) (Start_6 Int) (StartBool_4 Bool) (StartBool_3 Bool) (Start_12 Int) (Start_7 Int) (Start_9 Int) (Start_3 Int) (Start_8 Int) (Start_10 Int) (Start_5 Int) (Start_11 Int))
  ((Start Int (2 x y 4 (- Start_1 Start) (div Start Start) (ite StartBool_1 Start Start)))
   (StartBool Bool (true false (not StartBool_1) (or StartBool StartBool_3) (<= Start_3 Start) (> Start_10 Start_2)))
   (Start_1 Int (2 x (- Start_7 Start_6) (+ Start_7 Start_9) (* Start_5 Start_4) (div Start_4 Start_5) (ite StartBool Start_10 Start_12)))
   (StartBool_2 Bool (false (not StartBool_5) (or StartBool_2 StartBool_2) (>= Start_9 Start_9)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool_2 StartBool) (< Start Start_1) (> Start_2 Start_2)))
   (StartBool_5 Bool (false true (not StartBool) (and StartBool_5 StartBool_5) (>= Start_6 Start_9) (> Start_12 Start)))
   (Start_2 Int (5 (- Start_2) (- Start_3 Start_2) (+ Start_2 Start_3) (abs Start_3) (ite StartBool_3 Start_3 Start_4)))
   (Start_4 Int (4 (- Start_1 Start_4) (+ Start_4 Start_1) (* Start_4 Start_1) (mod Start_2 Start_5) (abs Start_5)))
   (Start_6 Int (y 0 3 (+ Start_4 Start_3) (* Start_5 Start) (mod Start_3 Start_2)))
   (StartBool_4 Bool (false true (and StartBool_1 StartBool_2) (>= Start_3 Start_6) (> Start_11 Start_2)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool) (or StartBool_3 StartBool_3) (< Start_7 Start_7) (<= Start_1 Start_5)))
   (Start_12 Int (4 (- Start_12 Start_5) (div Start Start_9) (mod Start_8 Start_11)))
   (Start_7 Int (3 y 0 2 (- Start Start_2) (+ Start_2 Start) (* Start_5 Start_6) (div Start_1 Start_4) (ite StartBool_1 Start_4 Start_4)))
   (Start_9 Int (0 3 2 (+ Start_8 Start_9) (ite StartBool_4 Start_1 Start_10)))
   (Start_3 Int (0 y 4 (- Start_7) (- Start_8 Start_6) (* Start_2 Start_6) (abs Start_3)))
   (Start_8 Int (4 (- Start_5) (abs Start_9) (ite StartBool_1 Start_6 Start_10)))
   (Start_10 Int (y (- Start_8) (- Start_8 Start_10) (+ Start_9 Start_1) (* Start_6 Start_6) (mod Start_6 Start_8) (ite StartBool_1 Start_11 Start_11)))
   (Start_5 Int (y (+ Start_4 Start_4) (* Start_4 Start_1) (div Start_2 Start_1) (mod Start_6 Start_3)))
   (Start_11 Int (y (+ Start_8 Start) (div Start_3 Start_1) (ite StartBool_4 Start_9 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 2 (mod 2 0))))

(check-synth)
