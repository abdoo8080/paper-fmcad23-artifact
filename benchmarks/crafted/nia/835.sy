(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_1 Int) (Start_12 Int) (Start_10 Int) (Start_3 Int) (Start_7 Int) (Start_8 Int) (Start_4 Int) (StartBool_2 Bool) (Start_5 Int) (Start_2 Int) (Start_11 Int) (Start_6 Int) (StartBool_4 Bool) (Start_9 Int) (StartBool_1 Bool) (StartBool_3 Bool))
  ((Start Int (1 x y (- Start_1 Start_2) (* Start_2 Start_3)))
   (StartBool Bool (true false (not StartBool_4) (= Start_5 Start_3) (>= Start_3 Start_7) (> Start_7 Start_4)))
   (Start_13 Int (y (- Start_10) (+ Start_4 Start_8) (* Start_3 Start_4) (div Start_5 Start_7) (mod Start_10 Start_10) (abs Start_9)))
   (Start_1 Int (5 (- Start_8 Start_5) (* Start_6 Start_9) (mod Start_6 Start_1) (ite StartBool_4 Start_9 Start_13)))
   (Start_12 Int (1 3 (- Start_5 Start_12) (+ Start_3 Start_4) (abs Start_7)))
   (Start_10 Int (4 (- Start_7 Start_10) (+ Start_10 Start_4) (* Start_4 Start_12) (div Start_9 Start_10) (mod Start_8 Start_7) (abs Start_6)))
   (Start_3 Int (0 (- Start) (+ Start_1 Start_1) (mod Start_4 Start)))
   (Start_7 Int (y (+ Start_4 Start_3) (div Start_5 Start_7) (mod Start_5 Start_8)))
   (Start_8 Int (2 0 (* Start Start_1) (div Start_8 Start_4)))
   (Start_4 Int (y 4 1 (- Start_5) (- Start_1 Start_3) (div Start_4 Start) (mod Start_6 Start_1)))
   (StartBool_2 Bool (true false (not StartBool_2) (<= Start_8 Start_8)))
   (Start_5 Int (x 1 (mod Start_3 Start_1) (abs Start_4) (ite StartBool Start_9 Start_3)))
   (Start_2 Int (1 (- Start_10) (- Start_8 Start_11) (* Start_3 Start_4) (div Start Start_11) (mod Start_2 Start_5) (abs Start_8) (ite StartBool_4 Start_11 Start_10)))
   (Start_11 Int (x (- Start_5) (mod Start_6 Start_5) (abs Start_6) (ite StartBool Start_5 Start_2)))
   (Start_6 Int (5 (- Start_2 Start_5) (+ Start_7 Start_3) (div Start_5 Start_1) (mod Start_7 Start_7) (abs Start_3) (ite StartBool Start_1 Start_1)))
   (StartBool_4 Bool (false (>= Start_6 Start_5)))
   (Start_9 Int (0 4 (+ Start_5 Start_6) (* Start_3 Start_7) (mod Start_2 Start_4) (ite StartBool_1 Start Start_6)))
   (StartBool_1 Bool (true false (or StartBool_2 StartBool_3) (<= Start_5 Start_3) (> Start_5 Start_7)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool_3) (< Start_8 Start_8) (> Start_1 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 0 0) 3)))

(check-synth)
