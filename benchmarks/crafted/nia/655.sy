(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_18 Int) (Start_1 Int) (Start_2 Int) (Start_3 Int) (Start_4 Int) (Start_17 Int) (Start_16 Int) (Start_14 Int) (Start_7 Int) (StartBool_1 Bool) (Start_12 Int) (Start_5 Int) (Start_6 Int) (StartBool_2 Bool) (Start_8 Int) (Start_13 Int) (StartBool_3 Bool) (Start_9 Int) (Start_15 Int) (Start_10 Int) (Start_11 Int))
  ((Start Int (0 y 2 x (- Start) (- Start_1 Start) (+ Start_2 Start) (div Start_1 Start) (mod Start_1 Start_2) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (false true (not StartBool_4) (= Start_15 Start_12) (>= Start_17 Start_12) (> Start_1 Start_14)))
   (StartBool_4 Bool (false (not StartBool_1) (< Start_12 Start_3) (<= Start_18 Start_5) (= Start_11 Start_8) (>= Start_7 Start_4)))
   (Start_18 Int (4 2 0 (- Start_16) (- Start_12 Start_6) (mod Start_1 Start_8) (ite StartBool_4 Start_8 Start_15)))
   (Start_1 Int (0 (- Start_13 Start_5) (+ Start_18 Start_13) (abs Start_8) (ite StartBool_2 Start Start_13)))
   (Start_2 Int (2 (- Start_14) (+ Start_11 Start_15) (mod Start_5 Start) (abs Start_17) (ite StartBool_2 Start_7 Start_12)))
   (Start_3 Int (1 4 y 0 5 (- Start_4 Start_16) (* Start_9 Start_11) (mod Start Start) (abs Start_2)))
   (Start_4 Int (y (- Start_8 Start_5) (+ Start_16 Start_17) (div Start_5 Start_10) (abs Start) (ite StartBool_3 Start_4 Start_14)))
   (Start_17 Int (1 x (- Start_6 Start_9) (+ Start_12 Start_17) (* Start_1 Start_17) (abs Start_6) (ite StartBool_2 Start_2 Start_15)))
   (Start_16 Int (0 (- Start_8) (div Start Start_15) (mod Start_11 Start_16) (abs Start_17) (ite StartBool_1 Start_3 Start_1)))
   (Start_14 Int (0 (- Start_2) (- Start_7 Start_1) (+ Start_15 Start_11)))
   (Start_7 Int (1 y (- Start_10) (+ Start Start_1) (* Start_5 Start_3) (mod Start Start_9) (abs Start) (ite StartBool_2 Start_11 Start_10)))
   (StartBool_1 Bool (true (or StartBool StartBool) (< Start Start_1) (<= Start_3 Start_4) (= Start_3 Start_2) (>= Start_5 Start_2)))
   (Start_12 Int (4 (+ Start_3 Start_11) (* Start_6 Start_7) (div Start_12 Start_5) (mod Start_13 Start_7) (abs Start_10) (ite StartBool_1 Start_9 Start_7)))
   (Start_5 Int (1 (- Start_2 Start_3) (+ Start Start_5) (mod Start_5 Start_4) (ite StartBool Start_2 Start_6)))
   (Start_6 Int (1 (- Start_2) (- Start_2 Start_5) (+ Start_2 Start) (* Start_3 Start_7) (div Start_3 Start_4) (mod Start Start_2) (ite StartBool_2 Start Start_3)))
   (StartBool_2 Bool (false true (or StartBool_2 StartBool_1) (<= Start_4 Start_5) (>= Start_2 Start_1) (> Start_8 Start_9)))
   (Start_8 Int (y 1 (* Start_8 Start_3) (div Start_1 Start_6) (mod Start_7 Start_2) (abs Start_7)))
   (Start_13 Int (0 5 3 4 2 1 (- Start_3) (- Start_13 Start_6) (* Start_7 Start_7) (div Start Start_12) (mod Start_6 Start_9)))
   (StartBool_3 Bool (false true (< Start_4 Start_7) (<= Start_11 Start_14) (= Start_14 Start_10) (>= Start_10 Start_1) (> Start_2 Start_1)))
   (Start_9 Int (y (+ Start_1 Start_9) (div Start_9 Start)))
   (Start_15 Int (3 (- Start_7 Start_16) (* Start_2 Start_14) (div Start_13 Start_10) (abs Start_11)))
   (Start_10 Int (4 1 (- Start_5) (- Start_4 Start_13) (div Start_7 Start_11) (abs Start) (ite StartBool_3 Start_6 Start_5)))
   (Start_11 Int (y x (- Start_12) (+ Start_13 Start_12) (* Start_13 Start_7) (div Start_13 Start_3) (mod Start_6 Start_3) (ite StartBool_1 Start_11 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 2 (abs (mod x 2))))))

(check-synth)
