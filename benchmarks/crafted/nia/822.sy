(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_12 Int) (StartBool_4 Bool) (Start_8 Int) (Start_16 Int) (Start_10 Int) (Start_1 Int) (Start_5 Int) (Start_13 Int) (StartBool_2 Bool) (Start_4 Int) (Start_9 Int) (Start_7 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_15 Int) (Start_14 Int) (Start_6 Int) (Start_3 Int) (Start_11 Int))
  ((Start Int (x (- Start_1) (* Start Start_1) (div Start Start) (mod Start_1 Start) (abs Start) (ite StartBool Start_1 Start)))
   (StartBool Bool (true (= Start_7 Start_16) (> Start_6 Start_15)))
   (Start_2 Int (2 y (+ Start_13 Start_4) (* Start_8 Start_14) (abs Start) (ite StartBool Start_9 Start_4)))
   (Start_12 Int (y (- Start_11 Start_1) (abs Start_8) (ite StartBool_3 Start_7 Start_7)))
   (StartBool_4 Bool (true (and StartBool_4 StartBool) (< Start_2 Start_7) (<= Start_3 Start_4) (= Start_12 Start_9) (> Start_7 Start_1)))
   (Start_8 Int (5 (+ Start Start_7) (* Start_5 Start_2) (abs Start_8) (ite StartBool_1 Start_3 Start_7)))
   (Start_16 Int (1 0 4 x y (+ Start_9 Start_6) (div Start_12 Start_9) (abs Start_9)))
   (Start_10 Int (1 (+ Start_4 Start_10) (mod Start_12 Start_9)))
   (Start_1 Int (y 0 (- Start_2) (+ Start_3 Start_2) (* Start_4 Start_1) (div Start_1 Start_4) (mod Start_5 Start_4)))
   (Start_5 Int (0 2 3 (+ Start Start) (div Start_6 Start_7) (mod Start_4 Start_1)))
   (Start_13 Int (2 4 1 (- Start_5) (abs Start_6)))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool_3) (< Start_4 Start_4) (= Start_8 Start_8)))
   (Start_4 Int (y 4 (div Start_4 Start_5) (mod Start_6 Start_9)))
   (Start_9 Int (0 (- Start_2)))
   (Start_7 Int (y (- Start_5 Start_5) (+ Start_7 Start) (div Start_1 Start_7) (mod Start_8 Start_8) (abs Start_4) (ite StartBool Start_7 Start_6)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool StartBool_2) (< Start_3 Start_1) (= Start_3 Start) (>= Start_5 Start_2) (> Start_7 Start_5)))
   (StartBool_3 Bool (false (not StartBool_2) (< Start_7 Start_7) (= Start_3 Start_7) (>= Start_6 Start_2)))
   (Start_15 Int (y (- Start_4) (- Start_1 Start_14) (* Start_1 Start_13) (mod Start_12 Start_15) (ite StartBool_2 Start_12 Start_12)))
   (Start_14 Int (5 0 (- Start_13 Start_7) (+ Start_10 Start_8) (mod Start_15 Start_6) (abs Start_14)))
   (Start_6 Int (3 (- Start_8 Start_7) (+ Start_4 Start_8) (* Start_1 Start_1) (div Start Start_4) (abs Start_2)))
   (Start_3 Int (3 (+ Start_10 Start_7) (* Start_4 Start_11) (mod Start_11 Start) (abs Start_1)))
   (Start_11 Int (x y (- Start_7 Start_2) (+ Start_10 Start_10) (div Start_6 Start) (mod Start_6 Start_3) (abs Start_6) (ite StartBool_4 Start_8 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (* y y) 2)))

(check-synth)
