(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_18 Int) (Start_16 Int) (Start_17 Int) (StartBool_6 Bool) (Start_14 Int) (Start_13 Int) (StartBool_3 Bool) (Start_15 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_4 Int) (Start_2 Int) (Start_6 Int) (StartBool_4 Bool) (Start_8 Int) (Start_5 Int) (Start_7 Int) (Start_3 Int) (Start_1 Int) (Start_12 Int) (Start_10 Int) (Start_9 Int) (Start_11 Int))
  ((Start Int (x (- Start) (- Start Start_1) (div Start Start_2) (mod Start_2 Start_1)))
   (StartBool Bool (false (and StartBool_1 StartBool_1) (= Start_1 Start_4) (>= Start_9 Start_10) (> Start_6 Start_4)))
   (StartBool_5 Bool (false true (< Start_8 Start_12) (<= Start_8 Start_5)))
   (Start_18 Int (x (- Start_17 Start_9) (+ Start_2 Start_16) (* Start_10 Start_13) (mod Start Start_7) (abs Start_9) (ite StartBool_4 Start_13 Start_16)))
   (Start_16 Int (y (- Start_16) (mod Start_3 Start_11) (abs Start_18) (ite StartBool Start_17 Start_11)))
   (Start_17 Int (2 (div Start_8 Start_12) (abs Start_7)))
   (StartBool_6 Bool (false true (and StartBool_4 StartBool_4) (or StartBool_5 StartBool_2) (< Start_16 Start_17)))
   (Start_14 Int (1 (* Start_7 Start_9) (div Start_8 Start_1) (mod Start_11 Start_4) (ite StartBool_6 Start_15 Start_9)))
   (Start_13 Int (y 0 4 (- Start_2) (- Start_1 Start_4) (+ Start_5 Start_3) (div Start_6 Start_1) (mod Start_14 Start_7) (ite StartBool_5 Start_13 Start_3)))
   (StartBool_3 Bool (true (and StartBool_2 StartBool_4)))
   (Start_15 Int (0 x (- Start_11 Start_12) (+ Start_7 Start_12) (* Start_7 Start_3) (div Start_15 Start_3) (abs Start_6) (ite StartBool_6 Start_4 Start_11)))
   (StartBool_1 Bool (true false (not StartBool_3) (and StartBool_2 StartBool)))
   (StartBool_2 Bool (true false (not StartBool_2) (< Start_7 Start_3) (= Start_2 Start_5) (>= Start_10 Start_6)))
   (Start_4 Int (2 (- Start_2) (- Start_5 Start_3) (+ Start_3 Start_3) (* Start_4 Start_5) (abs Start_6)))
   (Start_2 Int (0 (+ Start_1 Start) (div Start Start_3) (mod Start_4 Start_4)))
   (Start_6 Int (5 4 (- Start) (- Start_6 Start_1) (abs Start_6)))
   (StartBool_4 Bool (true (not StartBool_5) (and StartBool_5 StartBool_1) (< Start_3 Start_11) (<= Start_12 Start_13) (> Start_1 Start_12)))
   (Start_8 Int (3))
   (Start_5 Int (5 0 3 1 y (- Start_1 Start_1) (+ Start_2 Start_3) (* Start_4 Start_1) (abs Start_2) (ite StartBool Start_5 Start_7)))
   (Start_7 Int (1 2 (abs Start_7)))
   (Start_3 Int (y 3 2 x (+ Start_6 Start_7) (ite StartBool Start_6 Start_7)))
   (Start_1 Int (5 1 2 (- Start_6) (+ Start Start_4) (* Start_8 Start_8)))
   (Start_12 Int (5 1 (- Start_7 Start_3)))
   (Start_10 Int (2 (- Start_4) (- Start_3 Start_1) (+ Start_2 Start_3)))
   (Start_9 Int (4 y (- Start_11) (* Start Start_10) (div Start_9 Start_5) (mod Start_4 Start_6)))
   (Start_11 Int (1 (- Start_11) (abs Start_7) (ite StartBool_2 Start_8 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (* 3 y) 5)))

(check-synth)
