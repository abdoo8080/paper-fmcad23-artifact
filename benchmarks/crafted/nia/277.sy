(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_1 Int) (Start_4 Int) (Start_12 Int) (Start_17 Int) (StartBool_8 Bool) (Start_5 Int) (Start_8 Int) (Start_16 Int) (Start_11 Int) (Start_10 Int) (Start_6 Int) (Start_3 Int) (Start_14 Int) (StartBool_2 Bool) (StartBool_6 Bool) (StartBool_5 Bool) (Start_7 Int) (StartBool_4 Bool) (Start_9 Int) (StartBool_7 Bool) (StartBool_1 Bool) (StartBool_10 Bool) (Start_15 Int) (Start_13 Int) (StartBool_9 Bool) (Start_18 Int) (StartBool_3 Bool) (Start_19 Int) (Start_2 Int))
  ((Start Int (1 2 (+ Start_1 Start) (* Start_1 Start_2) (mod Start_1 Start_1) (abs Start_3) (ite StartBool Start_1 Start_4)))
   (StartBool Bool (false true (and StartBool_3 StartBool_9) (or StartBool_10 StartBool_9) (< Start_18 Start_5) (= Start_18 Start_15) (> Start_14 Start_19)))
   (Start_20 Int (1 y x (mod Start_11 Start_12)))
   (Start_1 Int (2 (- Start_8) (- Start_12 Start_11) (* Start Start_18) (abs Start_20) (ite StartBool_6 Start_12 Start_18)))
   (Start_4 Int (x (- Start_3) (* Start Start_1) (ite StartBool Start_5 Start_6)))
   (Start_12 Int (5 (- Start_3) (- Start_3 Start_1) (* Start_1 Start_6) (mod Start_7 Start_13) (abs Start_3) (ite StartBool Start_7 Start_8)))
   (Start_17 Int (2 3 (- Start_7) (- Start_5 Start_16) (+ Start_5 Start_10) (* Start_7 Start_17) (div Start_1 Start_12) (mod Start Start_5) (abs Start_2) (ite StartBool_6 Start_12 Start_8)))
   (StartBool_8 Bool (false (and StartBool_7 StartBool_2) (< Start_13 Start_6) (= Start_14 Start_14)))
   (Start_5 Int (2 (- Start) (* Start Start_6) (div Start_5 Start_6) (mod Start_8 Start_6) (ite StartBool Start_2 Start_4)))
   (Start_8 Int (3 2 (+ Start_5 Start_2) (div Start_1 Start_2) (mod Start_4 Start_4) (abs Start_2)))
   (Start_16 Int (5 (- Start_16) (* Start_13 Start_1) (div Start_12 Start_6) (abs Start_12) (ite StartBool_4 Start_6 Start_17)))
   (Start_11 Int (x (- Start_12) (- Start_8 Start_9) (+ Start_3 Start_10) (div Start_3 Start_6) (mod Start_4 Start_12)))
   (Start_10 Int (y (* Start_10 Start_11) (div Start_2 Start_6) (mod Start Start) (ite StartBool Start_10 Start_4)))
   (Start_6 Int (5 x (- Start_5) (- Start_7 Start) (+ Start_1 Start_5) (div Start_5 Start_5) (abs Start_2)))
   (Start_3 Int (2 (- Start_4 Start_1) (div Start_9 Start_10) (mod Start_3 Start_10)))
   (Start_14 Int (0 2 (- Start) (- Start_5 Start_8) (+ Start_7 Start_13) (div Start_3 Start_9) (abs Start_3)))
   (StartBool_2 Bool (true false (not StartBool_1) (and StartBool StartBool_1) (or StartBool_3 StartBool_4) (< Start_11 Start_9) (> Start_2 Start_8)))
   (StartBool_6 Bool (false (not StartBool_5) (or StartBool StartBool_7) (< Start_7 Start_9) (<= Start_7 Start_4) (= Start_7 Start_6) (>= Start_3 Start_13)))
   (StartBool_5 Bool (false (not StartBool) (and StartBool StartBool_9)))
   (Start_7 Int (5 x (- Start) (- Start_2 Start_5) (+ Start_1 Start_6) (* Start_3 Start_3) (div Start_5 Start) (abs Start_4) (ite StartBool_1 Start_5 Start_4)))
   (StartBool_4 Bool (true false (not StartBool_5) (or StartBool_4 StartBool_2) (= Start_15 Start_6) (>= Start_12 Start_9) (> Start_10 Start_7)))
   (Start_9 Int (2 (- Start_8) (- Start_10 Start_8) (+ Start_12 Start_3) (* Start_10 Start_11) (div Start Start) (mod Start_13 Start_11) (abs Start_11) (ite StartBool_2 Start_5 Start_14)))
   (StartBool_7 Bool (false (not StartBool_5) (or StartBool_2 StartBool_8) (<= Start_12 Start_7) (= Start_4 Start_7) (>= Start_13 Start_7) (> Start_13 Start_15)))
   (StartBool_1 Bool (true (and StartBool StartBool) (or StartBool StartBool) (<= Start_2 Start_8) (= Start_2 Start) (>= Start_1 Start_2)))
   (StartBool_10 Bool (false (not StartBool_1) (and StartBool_4 StartBool_2)))
   (Start_15 Int (1 2 (- Start_16 Start_13) (* Start_13 Start_10) (mod Start_7 Start_5) (abs Start_9)))
   (Start_13 Int (2 (- Start_3 Start_6) (+ Start_2 Start_12) (* Start_8 Start_5) (div Start_3 Start) (mod Start_12 Start_9)))
   (StartBool_9 Bool (false true (< Start_11 Start_6) (<= Start_11 Start_1) (= Start_6 Start_11) (>= Start_4 Start_18) (> Start_4 Start_11)))
   (Start_18 Int (y (- Start_17 Start_18) (div Start_18 Start_4) (mod Start_12 Start_8) (abs Start_15)))
   (StartBool_3 Bool (false (not StartBool_5) (or StartBool_6 StartBool_7) (< Start_18 Start_8) (<= Start_19 Start_12) (>= Start_7 Start_9)))
   (Start_19 Int (y 2 (- Start_7) (+ Start_16 Start_8) (* Start_6 Start_14) (mod Start_12 Start_5) (abs Start_18)))
   (Start_2 Int (1 (+ Start_18 Start_2) (abs Start_17) (ite StartBool_10 Start_7 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod y 4)))

(check-synth)
