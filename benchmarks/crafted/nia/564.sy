(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (Start_1 Int) (Start_2 Int) (Start_25 Int) (StartBool_3 Bool) (Start_17 Int) (StartBool_1 Bool) (Start_9 Int) (StartBool_2 Bool) (Start_11 Int) (Start_5 Int) (Start_7 Int) (Start_4 Int) (Start_26 Int) (Start_19 Int) (Start_15 Int) (Start_16 Int) (Start_27 Int) (StartBool_4 Bool) (Start_8 Int) (Start_13 Int) (Start_22 Int) (Start_14 Int) (Start_18 Int) (Start_23 Int) (Start_10 Int) (StartBool_6 Bool) (StartBool_5 Bool) (Start_12 Int) (Start_6 Int) (Start_3 Int) (Start_21 Int) (StartBool_7 Bool) (Start_20 Int) (Start_24 Int))
  ((Start Int (2 (- Start) (- Start Start_1) (div Start_1 Start) (mod Start Start_2) (abs Start_3) (ite StartBool Start_4 Start_4)))
   (StartBool Bool (false (not StartBool) (and StartBool_8 StartBool_7) (or StartBool_2 StartBool) (<= Start_11 Start_10)))
   (StartBool_8 Bool (false (not StartBool_5) (> Start_6 Start_6)))
   (Start_1 Int (x 1 (- Start_27 Start_24) (* Start_1 Start_7) (mod Start_14 Start_21) (abs Start_7) (ite StartBool_5 Start_8 Start_5)))
   (Start_2 Int (y (- Start_13 Start_2) (* Start_2 Start_7) (div Start_23 Start_3) (mod Start_26 Start_4) (abs Start_7) (ite StartBool_1 Start_11 Start_10)))
   (Start_25 Int (2 (+ Start_20 Start_19) (* Start_23 Start) (abs Start_13)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_4 StartBool_3) (< Start_8 Start_9) (<= Start_5 Start_5) (= Start_3 Start_11) (>= Start_11 Start_6) (> Start_10 Start_2)))
   (Start_17 Int (x 5 3 (+ Start_12 Start_13) (div Start_16 Start_4) (abs Start_11)))
   (StartBool_1 Bool (false true (not StartBool_2) (or StartBool_1 StartBool_1) (> Start_6 Start_5)))
   (Start_9 Int (x 1 2 0 5 3 (- Start_10) (* Start_2 Start_3) (div Start_4 Start_3) (mod Start_2 Start_9)))
   (StartBool_2 Bool (false true (not StartBool_2) (and StartBool_1 StartBool_3) (> Start_3 Start_11)))
   (Start_11 Int (1 (- Start_5) (+ Start_3 Start_10) (* Start_4 Start_8) (div Start_4 Start_4) (abs Start_2)))
   (Start_5 Int (4 (- Start_2) (- Start_6 Start_3) (+ Start_2 Start_4) (* Start_7 Start_8) (div Start_4 Start_9) (mod Start_10 Start) (abs Start_2)))
   (Start_7 Int (5 (- Start_8) (- Start_2 Start_6) (+ Start Start_7) (* Start_10 Start_6) (ite StartBool_1 Start_8 Start)))
   (Start_4 Int (x 2 5 (- Start_1) (- Start_3 Start_3) (div Start_4 Start_5)))
   (Start_26 Int (4 0 (- Start_19) (- Start_27 Start_25) (* Start_20 Start_24) (mod Start_13 Start_13)))
   (Start_19 Int (0 (- Start_9) (+ Start_20 Start_12) (* Start_7 Start_5) (mod Start_12 Start_15) (abs Start_14) (ite StartBool_6 Start_5 Start_4)))
   (Start_15 Int (0 (- Start_7 Start_16) (div Start_14 Start_3) (mod Start_1 Start_17)))
   (Start_16 Int (1 0 (- Start_1) (+ Start_16 Start_8) (* Start_1 Start_6) (mod Start_8 Start_17)))
   (Start_27 Int (1 3 0 5 (- Start_13 Start_17) (+ Start_10 Start_4) (* Start_13 Start) (div Start_24 Start_22) (mod Start_4 Start_2) (abs Start_14)))
   (StartBool_4 Bool (true (or StartBool_5 StartBool_1) (>= Start_12 Start_1) (> Start_4 Start_3)))
   (Start_8 Int (1 2 4 (- Start_7 Start_2) (+ Start_8 Start_5)))
   (Start_13 Int (3 0 x (- Start_4) (- Start_3 Start_5) (+ Start_9 Start_7) (* Start_3 Start_14) (mod Start_9 Start_15) (abs Start_7)))
   (Start_22 Int (1 (- Start_22)))
   (Start_14 Int (y (- Start_17) (- Start_11 Start_8) (* Start_2 Start) (ite StartBool_1 Start_11 Start_16)))
   (Start_18 Int (3 (- Start_23 Start_9) (+ Start_19 Start_22) (* Start_16 Start) (div Start_9 Start_1) (mod Start_25 Start_4) (abs Start_1)))
   (Start_23 Int (4 2 1 (+ Start_15 Start_4) (* Start_1 Start_22) (div Start_14 Start_17) (mod Start_12 Start_2) (abs Start_4) (ite StartBool_7 Start_9 Start_4)))
   (Start_10 Int (5 (- Start_1) (- Start_9 Start_4) (div Start_10 Start_7) (mod Start_10 Start_2) (abs Start_10) (ite StartBool Start_1 Start_10)))
   (StartBool_6 Bool (true (and StartBool_5 StartBool_4) (or StartBool_3 StartBool_4) (< Start_6 Start_5) (<= Start_17 Start_21) (= Start_9 Start_11)))
   (StartBool_5 Bool (false (not StartBool_5) (and StartBool_3 StartBool_1) (< Start_12 Start_9) (>= Start_14 Start_11) (> Start_14 Start_12)))
   (Start_12 Int (4 2 (- Start_10) (- Start_13 Start_12) (+ Start_7 Start_13) (div Start_11 Start_11) (abs Start_3) (ite StartBool_5 Start_7 Start_6)))
   (Start_6 Int (5 1 y (- Start_7) (+ Start Start_9) (* Start_4 Start_8) (mod Start_13 Start_2) (abs Start_10)))
   (Start_3 Int (5 (- Start_18 Start_14) (+ Start_9 Start_9) (div Start_1 Start_1) (abs Start_1) (ite StartBool Start_19 Start_12)))
   (Start_21 Int (5 (+ Start_19 Start_5) (div Start_7 Start_22) (abs Start_16) (ite StartBool Start_20 Start_23)))
   (StartBool_7 Bool (false (not StartBool_6) (and StartBool_7 StartBool_7) (<= Start_3 Start_2) (= Start Start_18) (>= Start_12 Start_9) (> Start_18 Start_6)))
   (Start_20 Int (3 (- Start_8 Start_16) (+ Start_24 Start_21) (* Start_13 Start_1) (mod Start_1 Start_8) (ite StartBool_2 Start_13 Start_16)))
   (Start_24 Int (x (- Start_8) (+ Start_5 Start_21) (div Start_22 Start_21) (mod Start_19 Start_2) (abs Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod 4 0))))

(check-synth)
