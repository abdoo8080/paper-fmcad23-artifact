(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (Start_1 Int) (Start_11 Int) (Start_5 Int) (Start_6 Int) (Start_9 Int) (Start_8 Int) (Start_7 Int) (Start_3 Int) (Start_2 Int) (Start_4 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_10 Int))
  ((Start Int (y (- Start_1) (- Start_2 Start) (+ Start_1 Start_2) (* Start_2 Start) (div Start Start_2) (mod Start Start_1) (abs Start_3) (ite StartBool Start_4 Start)))
   (StartBool Bool (false true (and StartBool_3 StartBool_1) (or StartBool StartBool) (< Start_9 Start_8)))
   (StartBool_3 Bool (true false (< Start_6 Start_7) (<= Start_7 Start_2) (> Start_4 Start_11)))
   (Start_1 Int (1 4 (- Start_10) (- Start_1 Start_3) (+ Start_6 Start_8) (* Start_5 Start_6) (mod Start_3 Start_8) (ite StartBool_3 Start_8 Start_5)))
   (Start_11 Int (1 3 (- Start_6) (- Start_6 Start_3) (* Start_8 Start_1) (abs Start_9) (ite StartBool_2 Start_3 Start_3)))
   (Start_5 Int (y 0 3 (- Start_3) (- Start_1 Start_3) (div Start_2 Start_6) (mod Start_8 Start_4) (abs Start_1) (ite StartBool Start_8 Start_2)))
   (Start_6 Int (5 (- Start_6) (- Start_6 Start_3) (+ Start_4 Start_2) (* Start_2 Start_6) (div Start_6 Start_6) (abs Start_7)))
   (Start_9 Int (x (- Start_5 Start_6) (+ Start Start_3) (mod Start_9 Start_8)))
   (Start_8 Int (y (- Start_6) (- Start_6 Start_5) (* Start_5 Start_4) (div Start_2 Start_9) (abs Start_6)))
   (Start_7 Int (0 x (+ Start Start_4) (* Start_3 Start_4) (div Start_6 Start) (abs Start_2)))
   (Start_3 Int (5 1 y 0 (- Start_1) (+ Start_5 Start_5) (* Start_6 Start_6) (div Start_4 Start_1) (abs Start_6)))
   (Start_2 Int (1 0 (- Start_6 Start_9) (* Start_3 Start_10) (mod Start_6 Start) (abs Start_7) (ite StartBool_1 Start_1 Start_5)))
   (Start_4 Int (3 (- Start_4) (+ Start_4 Start_3) (* Start_4 Start) (div Start_4 Start)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_2 StartBool) (< Start_10 Start_11) (<= Start_6 Start_2) (= Start_3 Start_6) (> Start_4 Start_10)))
   (StartBool_2 Bool (false (not StartBool_1) (<= Start_5 Start_10) (= Start_10 Start_5)))
   (Start_10 Int (2 5 1 (div Start_8 Start) (abs Start_8) (ite StartBool_2 Start_7 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 1 (- (ite (= 5 (mod 0 0)) (div 5 0) 0)))))

(check-synth)
