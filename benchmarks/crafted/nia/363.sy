(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_4 Int) (Start_5 Int) (Start_3 Int) (Start_2 Int))
  ((Start Int (1 y (- Start) (+ Start Start) (abs Start)))
   (StartBool Bool (false (or StartBool StartBool) (<= Start_1 Start) (= Start_1 Start_2) (>= Start Start_1)))
   (Start_1 Int (4 (- Start_3) (- Start_1 Start_5) (abs Start_2)))
   (Start_4 Int (4))
   (Start_5 Int (5 4 1 (- Start_3) (mod Start_3 Start_5) (abs Start_5)))
   (Start_3 Int (1 2 5 y (+ Start_1 Start_2) (* Start_1 Start_4) (div Start Start_4) (mod Start_5 Start_1) (abs Start_5)))
   (Start_2 Int (2 (+ Start Start_3) (div Start_1 Start) (mod Start Start) (abs Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div (- 1) 0))))

(check-synth)
