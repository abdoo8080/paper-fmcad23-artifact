(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_6 Bool) (Start_19 Int) (StartBool_4 Bool) (Start_17 Int) (Start_16 Int) (Start_15 Int) (StartBool_5 Bool) (Start_1 Int) (StartBool_2 Bool) (Start_13 Int) (Start_4 Int) (Start_18 Int) (StartBool_3 Bool) (Start_5 Int) (Start_6 Int) (Start_2 Int) (Start_7 Int) (Start_14 Int) (Start_8 Int) (StartBool_1 Bool) (Start_9 Int) (Start_10 Int) (Start_3 Int) (Start_11 Int) (Start_12 Int))
  ((Start Int (y 4 3 5 2 0 x (- Start_1 Start_1) (+ Start_1 Start_2) (mod Start_3 Start_2) (ite StartBool Start_4 Start_4)))
   (StartBool Bool (true false (and StartBool StartBool_3) (or StartBool_4 StartBool_5) (<= Start_9 Start_7)))
   (StartBool_6 Bool (false (not StartBool_6) (<= Start_10 Start_3) (= Start_15 Start_14) (>= Start_4 Start_1)))
   (Start_19 Int (1 y (* Start_15 Start_5) (mod Start_11 Start_13) (ite StartBool_4 Start_11 Start)))
   (StartBool_4 Bool (true (and StartBool_6 StartBool) (or StartBool_5 StartBool) (< Start_18 Start_8) (>= Start_4 Start_1) (> Start_7 Start_19)))
   (Start_17 Int (x 1 (* Start_15 Start_9) (abs Start_11)))
   (Start_16 Int (0 2 5 (- Start_6 Start_2) (* Start_13 Start_4) (div Start_12 Start_11) (mod Start_3 Start_15) (abs Start_6)))
   (Start_15 Int (y 4 (- Start_2) (+ Start_6 Start_14) (mod Start_16 Start_1)))
   (StartBool_5 Bool (false true (not StartBool_3) (and StartBool StartBool_4) (or StartBool_2 StartBool_4) (< Start_13 Start_9) (<= Start_8 Start_4) (>= Start_1 Start_16) (> Start_10 Start_7)))
   (Start_1 Int (5 0 y (- Start_11 Start) (* Start Start_2) (abs Start_10) (ite StartBool_2 Start_9 Start_2)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool_1 StartBool_1) (< Start_10 Start) (= Start_10 Start_13)))
   (Start_13 Int (2 (- Start_4) (* Start_14 Start_11) (div Start_11 Start_14) (mod Start_4 Start_4) (ite StartBool_3 Start_2 Start_4)))
   (Start_4 Int (y 3 (- Start) (- Start_1 Start_5) (* Start Start_2) (ite StartBool Start_5 Start_1)))
   (Start_18 Int (0 2 y x 3 5 4 1 (- Start_19) (- Start_8 Start_15) (+ Start_15 Start_8) (* Start_8 Start_10)))
   (StartBool_3 Bool (true false (< Start_17 Start_16) (<= Start_10 Start_5) (= Start_15 Start_7) (> Start_15 Start_16)))
   (Start_5 Int (x (- Start) (+ Start_1 Start_1) (mod Start_4 Start_1) (ite StartBool_1 Start_6 Start_1)))
   (Start_6 Int (2 (- Start_3) (- Start_2 Start_7) (+ Start_6 Start_7) (* Start_4 Start_6) (div Start_5 Start_6) (mod Start_2 Start) (ite StartBool_1 Start_7 Start_1)))
   (Start_2 Int (y 5 (- Start_6) (- Start_11 Start_12) (+ Start_10 Start_3) (mod Start_10 Start)))
   (Start_7 Int (x (- Start) (+ Start_4 Start_7) (mod Start_4 Start_5) (abs Start_2) (ite StartBool_1 Start_6 Start_6)))
   (Start_14 Int (3 (- Start_12 Start) (div Start_11 Start_8) (mod Start_11 Start_7) (ite StartBool_3 Start_6 Start_15)))
   (Start_8 Int (y 4 (- Start_3) (- Start_5 Start_3) (* Start_9 Start_6) (mod Start_4 Start_9) (ite StartBool_1 Start_4 Start_2)))
   (StartBool_1 Bool (false true (< Start_8 Start_7) (<= Start_8 Start_7) (= Start_8 Start_5) (>= Start_6 Start_4) (> Start Start)))
   (Start_9 Int (3 (- Start_8) (+ Start_3 Start_10) (* Start_8 Start) (div Start_5 Start_7) (ite StartBool Start_2 Start_2)))
   (Start_10 Int (5 0 x (- Start_9 Start_10) (+ Start_3 Start_1) (mod Start_8 Start_10) (abs Start_4)))
   (Start_3 Int (1 (- Start_8 Start_3) (+ Start_5 Start) (div Start_11 Start_11) (mod Start_6 Start_5)))
   (Start_11 Int (x (- Start_5) (- Start_3 Start_6) (mod Start_4 Start_12)))
   (Start_12 Int (y x 3 5 0 1 (- Start_8) (div Start_12 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- 5 (* (div 0 y) y)) y)))

(check-synth)
