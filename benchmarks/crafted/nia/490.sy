(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (StartBool_2 Bool) (Start_22 Int) (Start_21 Int) (Start_20 Int) (Start_19 Int) (StartBool_4 Bool) (Start_14 Int) (Start_3 Int) (Start_1 Int) (Start_4 Int) (Start_9 Int) (Start_13 Int) (Start_2 Int) (StartBool_3 Bool) (Start_6 Int) (Start_15 Int) (Start_16 Int) (Start_7 Int) (Start_23 Int) (Start_18 Int) (Start_8 Int) (Start_12 Int) (Start_17 Int) (Start_11 Int) (Start_10 Int) (Start_5 Int))
  ((Start Int (5 (abs Start_1)))
   (StartBool Bool (true (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_1) (= Start Start) (>= Start_2 Start)))
   (StartBool_1 Bool (true false (not StartBool_4) (or StartBool_1 StartBool_4) (< Start_5 Start_14) (= Start_4 Start_3) (> Start_14 Start_6)))
   (StartBool_2 Bool (true false (not StartBool_2) (< Start_12 Start_13) (<= Start_22 Start_2)))
   (Start_22 Int (y (- Start_16) (+ Start_6 Start_23) (* Start_13 Start_15) (div Start_22 Start_23) (mod Start_9 Start_4) (ite StartBool_1 Start_15 Start_16)))
   (Start_21 Int (4 (- Start) (- Start_22 Start_16) (+ Start_3 Start_16) (* Start_18 Start_23) (mod Start_10 Start_3) (abs Start_10)))
   (Start_20 Int (0))
   (Start_19 Int (4 0 2 x y 3 (- Start_18) (+ Start_13 Start) (div Start_5 Start_11) (ite StartBool_1 Start_15 Start_8)))
   (StartBool_4 Bool (false true (not StartBool_3) (or StartBool StartBool_4) (> Start_15 Start_16)))
   (Start_14 Int (4 3 y (- Start_3 Start_9) (* Start_4 Start_4) (div Start_13 Start_15) (abs Start_4) (ite StartBool_4 Start_13 Start_1)))
   (Start_3 Int (4 (- Start_5) (- Start_5 Start_14) (* Start_9 Start_6) (div Start_1 Start_9) (mod Start_12 Start_3) (ite StartBool_3 Start_3 Start_8)))
   (Start_1 Int (1 y (* Start Start) (ite StartBool Start_1 Start_1)))
   (Start_4 Int (y 2 (- Start_2) (- Start Start) (* Start_1 Start_3) (div Start_5 Start_6)))
   (Start_9 Int (1 (- Start_10) (+ Start Start_4) (* Start_2 Start_11) (div Start_3 Start_12) (mod Start_5 Start_6) (abs Start_7)))
   (Start_13 Int (1 y (- Start_10 Start_1) (* Start Start_11) (abs Start_11)))
   (Start_2 Int (5 0 4 (- Start_3) (- Start Start_4) (* Start_4 Start_2) (mod Start_1 Start_3)))
   (StartBool_3 Bool (true (< Start_14 Start_17) (<= Start_9 Start_12) (>= Start Start_21)))
   (Start_6 Int (y (- Start) (- Start Start_3) (div Start_7 Start_1) (mod Start_2 Start_1) (ite StartBool_3 Start_4 Start_4)))
   (Start_15 Int (y (- Start_14 Start_17) (+ Start Start_18) (mod Start_9 Start_1) (abs Start_4)))
   (Start_16 Int (5 1 2 0 y x (- Start_13) (abs Start_14) (ite StartBool_3 Start_6 Start_14)))
   (Start_7 Int (0 (- Start_4 Start) (+ Start_8 Start_7) (mod Start_7 Start_6) (abs Start_8) (ite StartBool_2 Start_7 Start_4)))
   (Start_23 Int (y (- Start_12) (* Start Start_18) (div Start_7 Start_17) (abs Start_10)))
   (Start_18 Int (2 (- Start_1) (* Start_4 Start_15) (mod Start_6 Start_19) (abs Start_9)))
   (Start_8 Int (1 (- Start_2) (- Start_9 Start_5) (div Start_4 Start)))
   (Start_12 Int (4 (- Start_4) (- Start Start) (mod Start_3 Start_9)))
   (Start_17 Int (2 3 0 (- Start_1) (- Start_15 Start_9) (+ Start_20 Start_3) (* Start_13 Start_8) (abs Start_2)))
   (Start_11 Int (y (- Start Start_8) (* Start_1 Start_2) (div Start_11 Start_7) (abs Start_7) (ite StartBool Start_11 Start_2)))
   (Start_10 Int (x 5 (- Start_7) (- Start_1 Start_1) (+ Start_5 Start_2) (mod Start_12 Start_11) (ite StartBool_2 Start_9 Start_7)))
   (Start_5 Int (5 (- Start_13) (- Start_5 Start) (div Start_11 Start_12) (mod Start_2 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 3 (- 3))))

(check-synth)
