(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_14 Int) (StartBool_5 Bool) (Start_1 Int) (Start_2 Int) (StartBool_3 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (Start_13 Int) (Start_8 Int) (StartBool_6 Bool) (StartBool_1 Bool) (Start_9 Int) (Start_7 Int) (Start_10 Int) (Start_12 Int) (Start_3 Int) (Start_4 Int) (Start_6 Int) (Start_5 Int) (Start_11 Int))
  ((Start Int (2 (- Start_1) (- Start Start) (+ Start_2 Start_3) (* Start_1 Start_4) (div Start_3 Start_4)))
   (StartBool Bool (false true (not StartBool_3) (< Start_3 Start_12) (<= Start Start_7) (>= Start_13 Start_5)))
   (Start_15 Int (2 x (+ Start_9 Start) (* Start_8 Start_4) (ite StartBool_6 Start_6 Start_3)))
   (Start_14 Int (2 y x (- Start) (- Start_15 Start_6) (abs Start_2)))
   (StartBool_5 Bool (true false (not StartBool_1) (<= Start_9 Start_6) (= Start_7 Start_7) (>= Start_6 Start_3) (> Start_8 Start_13)))
   (Start_1 Int (x (- Start_12) (- Start_6 Start_2) (* Start_11 Start_5) (mod Start_1 Start_8) (ite StartBool_4 Start_9 Start_9)))
   (Start_2 Int (1 x (- Start_1) (div Start_11 Start_6) (mod Start_5 Start_11) (ite StartBool_2 Start_10 Start)))
   (StartBool_3 Bool (true false (not StartBool_3) (or StartBool StartBool_1) (>= Start_6 Start_6)))
   (StartBool_4 Bool (true (not StartBool_5) (< Start_8 Start_2) (<= Start Start_1) (= Start_1 Start_12) (>= Start_1 Start_3) (> Start_4 Start_1)))
   (StartBool_2 Bool (true (not StartBool_3) (or StartBool_2 StartBool) (< Start_3 Start_7) (>= Start_7 Start_8)))
   (Start_13 Int (4 (- Start_8 Start_7) (+ Start_3 Start_7) (div Start Start_3) (abs Start_9)))
   (Start_8 Int (x 2 (- Start_3 Start_3) (+ Start_2 Start_9) (* Start_6 Start_2) (div Start_3 Start_3) (abs Start_4) (ite StartBool_3 Start_1 Start_2)))
   (StartBool_6 Bool (true false (or StartBool_5 StartBool_3) (= Start_4 Start_13) (> Start_4 Start_7)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool_2 StartBool_2) (or StartBool StartBool_3) (< Start_2 Start_5) (>= Start_2 Start_6) (> Start_4 Start_4)))
   (Start_9 Int (3 (- Start) (- Start_3 Start_7) (+ Start_10 Start_4) (* Start_9 Start_4) (div Start_7 Start_3) (abs Start_4)))
   (Start_7 Int (x (abs Start_1) (ite StartBool_1 Start_2 Start_3)))
   (Start_10 Int (0 (- Start)))
   (Start_12 Int (0 1 (- Start Start_14) (mod Start_7 Start_3) (ite StartBool_6 Start_1 Start_14)))
   (Start_3 Int (1 (- Start_10) (- Start_4 Start_9) (+ Start_3 Start_1) (div Start_10 Start_10) (abs Start_7)))
   (Start_4 Int (3 4 y (- Start_5) (- Start_5 Start_4) (* Start_2 Start) (mod Start_5 Start_6) (ite StartBool_1 Start_4 Start)))
   (Start_6 Int (1 (- Start_6 Start_6) (+ Start_3 Start_3) (* Start Start_8) (mod Start_5 Start_8) (ite StartBool Start_6 Start_5)))
   (Start_5 Int (3 5 (- Start_4) (* Start_11 Start_4) (div Start_2 Start_11)))
   (Start_11 Int (3 2 (- Start_8) (- Start_3 Start_6) (+ Start_4 Start_7) (mod Start_2 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 5 y)))

(check-synth)
