(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_3 Bool) (Start_7 Int) (Start_15 Int) (Start_14 Int) (StartBool_1 Bool) (Start_3 Int) (Start_13 Int) (Start_8 Int) (Start_2 Int) (Start_12 Int) (Start_5 Int) (Start_4 Int) (Start_16 Int) (Start_6 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_9 Int) (Start_11 Int) (Start_10 Int))
  ((Start Int (y (mod Start Start_1) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true (and StartBool StartBool_2) (< Start_7 Start) (<= Start_12 Start_11) (= Start Start_16) (> Start_13 Start_3)))
   (Start_1 Int (1 (- Start_7 Start_11) (* Start_16 Start_7) (abs Start_6)))
   (StartBool_3 Bool (true false (not StartBool) (and StartBool_2 StartBool_2) (> Start_10 Start_14)))
   (Start_7 Int (5 1 4 2 y (+ Start_8 Start_1) (div Start_11 Start_14) (ite StartBool_4 Start_16 Start_7)))
   (Start_15 Int (x 0 (- Start_14) (- Start_7 Start_14) (mod Start_15 Start_13) (abs Start_15)))
   (Start_14 Int (2 (+ Start_13 Start_6) (* Start_3 Start_1) (div Start_15 Start_2) (abs Start_11)))
   (StartBool_1 Bool (false true (not StartBool_1) (and StartBool StartBool_1) (or StartBool_2 StartBool) (< Start_3 Start) (> Start_1 Start_3)))
   (Start_3 Int (2 (- Start_2) (+ Start_3 Start_4) (mod Start_1 Start_5)))
   (Start_13 Int (3 (- Start_11 Start_12) (+ Start_2 Start_6) (* Start_12 Start_15) (mod Start_6 Start_1)))
   (Start_8 Int (y 2 (- Start_4) (div Start_8 Start_5) (mod Start_1 Start_4) (abs Start_9)))
   (Start_2 Int (0 4 (- Start) (+ Start_2 Start_2) (* Start Start_1)))
   (Start_12 Int (1 (div Start Start) (mod Start_3 Start_8)))
   (Start_5 Int (x (- Start_2 Start_3) (div Start Start_1) (mod Start_3 Start) (abs Start_3) (ite StartBool_2 Start_2 Start_2)))
   (Start_4 Int (y (+ Start_2 Start_5) (div Start_1 Start_4) (mod Start_2 Start)))
   (Start_16 Int (5 (- Start_15) (- Start_13 Start_13) (* Start_6 Start_15) (mod Start_2 Start_13) (ite StartBool_1 Start_5 Start_13)))
   (Start_6 Int (2 1 y 0 4 x 5 3 (- Start_6) (div Start_5 Start_4) (abs Start_2) (ite StartBool_3 Start_7 Start_8)))
   (StartBool_2 Bool (false true (not StartBool) (<= Start_6 Start_2) (>= Start_6 Start_5) (> Start_3 Start_1)))
   (StartBool_4 Bool (false (= Start_8 Start_9) (>= Start Start_8)))
   (Start_9 Int (1 (- Start_1) (- Start Start_9) (+ Start_9 Start_10) (abs Start_1) (ite StartBool_3 Start_1 Start_11)))
   (Start_11 Int (5 0 x (- Start_12) (- Start Start_8) (* Start_2 Start_2) (div Start_5 Start_8) (abs Start_1)))
   (Start_10 Int (3 (- Start_13) (+ Start_12 Start_3) (* Start_14 Start_11) (mod Start_14 Start_11) (abs Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (- (- (mod x 4) 1)) 4)))

(check-synth)
