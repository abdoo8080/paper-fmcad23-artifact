(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (StartBool_3 Bool) (Start_4 Int) (Start_2 Int) (Start_3 Int) (Start_5 Int) (StartBool_4 Bool) (Start_7 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_1 Int) (Start_8 Int) (Start_6 Int) (Start_9 Int))
  ((Start Int (0 x (- Start_1) (mod Start Start_1) (abs Start) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true (not StartBool_2) (and StartBool_1 StartBool_3) (or StartBool_2 StartBool) (= Start_7 Start_1) (> Start_9 Start_2)))
   (StartBool_5 Bool (true (not StartBool) (<= Start Start_6) (> Start_9 Start_3)))
   (StartBool_3 Bool (false (not StartBool_1) (and StartBool StartBool) (or StartBool_4 StartBool_1) (< Start_8 Start_5) (= Start_9 Start) (>= Start_6 Start_2) (> Start_2 Start_3)))
   (Start_4 Int (y (+ Start_5 Start_3) (div Start_4 Start_4) (mod Start_6 Start_2) (abs Start_4) (ite StartBool Start_3 Start_3)))
   (Start_2 Int (2 (- Start_1) (+ Start_2 Start_3) (* Start_1 Start_3)))
   (Start_3 Int (x (- Start_3) (+ Start_2 Start_2) (div Start_2 Start_4) (mod Start_5 Start_1) (ite StartBool_1 Start_3 Start)))
   (Start_5 Int (5 2 (- Start_1) (- Start_2 Start_2) (div Start_1 Start_5) (mod Start Start_5) (ite StartBool_1 Start_4 Start_5)))
   (StartBool_4 Bool (false true (not StartBool_2) (and StartBool_2 StartBool_5) (or StartBool StartBool_1) (= Start_1 Start_6) (>= Start_8 Start_8) (> Start_2 Start_3)))
   (Start_7 Int (3 (- Start_2 Start_2) (+ Start_4 Start) (* Start_5 Start) (div Start_4 Start_1) (ite StartBool_2 Start Start_1)))
   (StartBool_2 Bool (false (not StartBool_1) (or StartBool_1 StartBool) (<= Start_7 Start) (= Start_6 Start_1)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool StartBool_1) (<= Start_6 Start_4) (> Start Start)))
   (Start_1 Int (x 5 3 (+ Start Start_3) (div Start_4 Start_1) (mod Start_3 Start_7) (abs Start_8)))
   (Start_8 Int (1 4 (- Start_4) (- Start_7 Start_7) (mod Start_4 Start_8) (abs Start_2)))
   (Start_6 Int (x (- Start_3) (- Start_7 Start_6) (* Start_2 Start_5) (mod Start_1 Start_5)))
   (Start_9 Int (x (- Start_8) (- Start_7 Start) (* Start_6 Start_6) (div Start Start_5) (mod Start_6 Start_6) (ite StartBool_2 Start_7 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div y 4)))

(check-synth)
