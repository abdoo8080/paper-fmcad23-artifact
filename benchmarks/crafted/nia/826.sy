(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_10 Bool) (Start_23 Int) (Start_2 Int) (Start_22 Int) (Start_11 Int) (StartBool_4 Bool) (Start_12 Int) (Start_4 Int) (Start_14 Int) (Start_9 Int) (StartBool_7 Bool) (Start_13 Int) (Start_10 Int) (Start_7 Int) (Start_1 Int) (Start_16 Int) (StartBool_1 Bool) (Start_17 Int) (StartBool_5 Bool) (StartBool_6 Bool) (Start_15 Int) (StartBool_9 Bool) (Start_18 Int) (Start_19 Int) (StartBool_8 Bool) (StartBool_2 Bool) (Start_5 Int) (Start_20 Int) (StartBool_3 Bool) (Start_6 Int) (Start_21 Int) (Start_8 Int) (Start_3 Int))
  ((Start Int (2 (- Start) (* Start_1 Start)))
   (StartBool Bool (true (not StartBool_4) (and StartBool_10 StartBool_1) (< Start_11 Start_16) (= Start_2 Start_6) (> Start_5 Start_1)))
   (StartBool_10 Bool (false (< Start_3 Start) (<= Start_18 Start_7) (= Start_6 Start_21) (>= Start Start_23) (> Start_12 Start_13)))
   (Start_23 Int (y (- Start_9 Start_22) (+ Start_14 Start_21) (* Start_5 Start) (div Start_19 Start_3) (abs Start_2)))
   (Start_2 Int (3 (- Start_18) (- Start_11 Start_5) (+ Start_12 Start_6) (* Start_17 Start_9) (div Start_7 Start_15) (ite StartBool_9 Start_18 Start_16)))
   (Start_22 Int (1 x 5 3 0 (- Start_1) (+ Start_2 Start_6) (div Start_15 Start_19) (ite StartBool_9 Start_3 Start_21)))
   (Start_11 Int (x 4 (- Start_7) (- Start_16 Start_11) (+ Start_4 Start_18) (div Start_9 Start_7) (abs Start_11)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_5) (>= Start_14 Start) (> Start_6 Start_15)))
   (Start_12 Int (1 (- Start_6) (+ Start_7 Start_10) (* Start_11 Start_1) (div Start_13 Start_7) (ite StartBool_1 Start_15 Start_2)))
   (Start_4 Int (3 (- Start_5) (- Start_6 Start_5) (+ Start_1 Start_2) (* Start_5 Start) (div Start Start_7) (abs Start_5) (ite StartBool_1 Start_5 Start_7)))
   (Start_14 Int (0 (- Start_6 Start_6) (* Start_7 Start_11)))
   (Start_9 Int (1 (+ Start Start_2) (* Start_10 Start) (div Start_5 Start_5) (abs Start_10) (ite StartBool_1 Start_2 Start_6)))
   (StartBool_7 Bool (false (not StartBool_7) (and StartBool_2 StartBool_8) (<= Start_5 Start_14) (= Start_19 Start_19) (>= Start_3 Start_1)))
   (Start_13 Int (1 5 4 (div Start_3 Start_8) (mod Start_3 Start_10) (abs Start_5) (ite StartBool Start_4 Start_14)))
   (Start_10 Int (0 (- Start_6) (* Start_9 Start_1) (abs Start_1)))
   (Start_7 Int (2 (+ Start_8 Start_8) (* Start_1 Start_4) (div Start_9 Start_9) (mod Start_10 Start_10) (abs Start_1)))
   (Start_1 Int (5 1 (- Start_1) (+ Start_2 Start) (div Start Start_3) (ite StartBool_1 Start_4 Start_1)))
   (Start_16 Int (1 4 3 (div Start_16 Start_19) (mod Start_2 Start_15)))
   (StartBool_1 Bool (true false (not StartBool_1) (< Start_21 Start_16) (<= Start_17 Start_17) (> Start_2 Start_12)))
   (Start_17 Int (0 (div Start_9 Start_3) (ite StartBool Start_18 Start_2)))
   (StartBool_5 Bool (false (not StartBool_6) (or StartBool_5 StartBool_7) (<= Start_2 Start) (= Start_15 Start_11)))
   (StartBool_6 Bool (false (not StartBool_9) (and StartBool_9 StartBool_3) (or StartBool_6 StartBool_5) (< Start_22 Start_5) (= Start_7 Start_22) (>= Start_11 Start_13) (> Start_11 Start_4)))
   (Start_15 Int (3 (- Start_5) (+ Start_15 Start_16) (* Start_2 Start_7) (div Start_11 Start_4) (ite StartBool Start_17 Start_7)))
   (StartBool_9 Bool (true false (and StartBool_3 StartBool_6) (or StartBool_4 StartBool_9)))
   (Start_18 Int (5 (- Start_17 Start_7) (abs Start_6)))
   (Start_19 Int (4 5 (- Start_8) (ite StartBool_2 Start_16 Start_4)))
   (StartBool_8 Bool (true false (and StartBool_7 StartBool_2) (or StartBool_9 StartBool_8) (= Start_10 Start_7)))
   (StartBool_2 Bool (false (< Start_18 Start_19) (<= Start_3 Start_1) (= Start_18 Start_2) (>= Start_2 Start_19)))
   (Start_5 Int (5 3 0 (- Start_16) (- Start_18 Start_16) (mod Start_2 Start_20) (abs Start_2)))
   (Start_20 Int (4 (div Start_9 Start_8) (mod Start_20 Start_10) (ite StartBool_3 Start_8 Start_2)))
   (StartBool_3 Bool (true (not StartBool_1) (and StartBool_1 StartBool) (<= Start_8 Start_12) (> Start_7 Start_10)))
   (Start_6 Int (1 5 0 (+ Start_4 Start_11) (div Start_12 Start_13) (abs Start_8) (ite StartBool_1 Start Start_9)))
   (Start_21 Int (4 (- Start_6 Start) (+ Start_15 Start_9) (* Start_16 Start_2) (abs Start_20) (ite StartBool Start_18 Start_2)))
   (Start_8 Int (1 5 (* Start_10 Start_2) (abs Start_6) (ite StartBool_1 Start_8 Start_2)))
   (Start_3 Int (4 (- Start_9) (- Start_10 Start_11) (abs Start_11) (ite StartBool_4 Start_16 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* 5 y))))

(check-synth)
