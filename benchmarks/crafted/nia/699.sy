(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_4 Bool) (Start_8 Int) (StartBool_1 Bool) (Start_1 Int) (Start_18 Int) (StartBool_3 Bool) (Start_11 Int) (Start_9 Int) (StartBool_2 Bool) (Start_3 Int) (Start_2 Int) (Start_4 Int) (Start_12 Int) (Start_16 Int) (Start_17 Int) (StartBool_8 Bool) (Start_15 Int) (Start_7 Int) (Start_5 Int) (Start_13 Int) (StartBool_5 Bool) (Start_19 Int) (Start_14 Int) (Start_20 Int) (Start_10 Int) (Start_6 Int) (StartBool_6 Bool))
  ((Start Int (0 (- Start_1) (- Start_1 Start_1) (* Start Start) (div Start Start_2) (mod Start_2 Start_2)))
   (StartBool Bool (false true (or StartBool_5 StartBool_6) (= Start Start_9) (> Start_17 Start_9)))
   (StartBool_7 Bool (true false (not StartBool_1) (and StartBool_6 StartBool_1) (or StartBool_3 StartBool_6) (<= Start_13 Start_3) (= Start_16 Start_7) (>= Start_15 Start_3)))
   (StartBool_4 Bool (false (not StartBool) (and StartBool_4 StartBool_4) (<= Start_8 Start_9) (>= Start_6 Start_8)))
   (Start_8 Int (5 (- Start_12) (+ Start Start_13) (* Start_14 Start_13) (mod Start_3 Start_2) (abs Start_1) (ite StartBool_3 Start_10 Start_13)))
   (StartBool_1 Bool (true (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_4) (< Start_7 Start_3) (= Start Start_2) (> Start_6 Start_4)))
   (Start_1 Int (1 (- Start) (- Start Start_1) (div Start_3 Start_1)))
   (Start_18 Int (2 1))
   (StartBool_3 Bool (true (= Start_7 Start_6) (>= Start_14 Start_11)))
   (Start_11 Int (3 (- Start_11) (mod Start Start_2) (abs Start)))
   (Start_9 Int (0 (- Start_8) (- Start_8 Start_6) (+ Start_9 Start_5) (* Start_10 Start_4)))
   (StartBool_2 Bool (true (or StartBool_4 StartBool_4) (= Start_1 Start_8) (>= Start_5 Start_19)))
   (Start_3 Int (y (- Start_3 Start) (+ Start_1 Start_1) (* Start Start_4)))
   (Start_2 Int (1 (+ Start Start_2) (ite StartBool Start_1 Start)))
   (Start_4 Int (0 (* Start Start_5) (mod Start_4 Start)))
   (Start_12 Int (5 (- Start_1) (* Start_11 Start_10) (mod Start_20 Start_8)))
   (Start_16 Int (y 3 1 x 2 (- Start_12) (- Start_16 Start_8) (+ Start_4 Start_5) (* Start_2 Start_9) (mod Start_4 Start_2) (ite StartBool_3 Start_17 Start_16)))
   (Start_17 Int (1 y 3 (- Start_5) (div Start_2 Start_3)))
   (StartBool_8 Bool (true false (not StartBool_1) (< Start Start_14) (= Start_19 Start_5) (> Start_2 Start_3)))
   (Start_15 Int (x (- Start_7) (- Start_10 Start_6) (* Start_18 Start_9) (abs Start_13) (ite StartBool_4 Start_8 Start_9)))
   (Start_7 Int (3 4 (+ Start_4 Start_5) (mod Start_3 Start_3) (abs Start_7)))
   (Start_5 Int (5 (- Start_6 Start_1) (* Start_6 Start_4) (mod Start_6 Start_2) (abs Start_6) (ite StartBool_1 Start Start_1)))
   (Start_13 Int (0 1 y (- Start_4) (- Start_17 Start_19) (ite StartBool_2 Start_6 Start_12)))
   (StartBool_5 Bool (false (not StartBool_7) (and StartBool_4 StartBool_5) (or StartBool_6 StartBool_8) (< Start_14 Start_1) (<= Start_7 Start_18) (>= Start_6 Start_11)))
   (Start_19 Int (5 (- Start_14) (- Start_3 Start_1) (* Start_1 Start_18) (div Start_6 Start_4) (abs Start_7) (ite StartBool_1 Start_14 Start_12)))
   (Start_14 Int (2 (- Start_4) (+ Start_1 Start_1) (* Start_15 Start_8) (mod Start_16 Start_1)))
   (Start_20 Int (2 x 5 (- Start_14) (- Start_3 Start_2) (+ Start_15 Start) (* Start_11 Start_1)))
   (Start_10 Int (2 0 x (- Start_1) (* Start Start_2) (div Start_7 Start_9) (mod Start_7 Start_7) (abs Start_11)))
   (Start_6 Int (1 x (- Start_6) (* Start_1 Start_8) (div Start_15 Start_2) (mod Start_6 Start_16)))
   (StartBool_6 Bool (false (not StartBool_6) (< Start_19 Start_11) (>= Start_10 Start_3) (> Start_9 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- y (* x x))))

(check-synth)
