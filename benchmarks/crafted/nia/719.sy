(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_11 Int) (StartBool_1 Bool) (Start_18 Int) (Start_9 Int) (Start_10 Int) (Start_6 Int) (Start_4 Int) (Start_12 Int) (Start_5 Int) (Start_8 Int) (Start_3 Int) (StartBool_3 Bool) (Start_2 Int) (Start_14 Int) (Start_16 Int) (StartBool_4 Bool) (Start_13 Int) (Start_15 Int) (Start_21 Int) (StartBool_5 Bool) (StartBool_2 Bool) (Start_22 Int) (Start_7 Int) (Start_1 Int) (Start_17 Int) (Start_19 Int) (StartBool_6 Bool))
  ((Start Int (x (+ Start Start_1) (* Start Start_1) (mod Start_1 Start_1) (abs Start_1) (ite StartBool Start Start_2)))
   (StartBool Bool (true (not StartBool) (and StartBool_4 StartBool_5) (or StartBool_2 StartBool_6) (<= Start_12 Start_15) (> Start_12 Start_16)))
   (Start_20 Int (0 (- Start_21) (- Start_1 Start_22) (div Start_7 Start_21) (ite StartBool_5 Start_12 Start_5)))
   (Start_11 Int (4 2 (+ Start_7 Start_2) (* Start_3 Start_7) (div Start_6 Start_2) (mod Start_3 Start_7) (ite StartBool_4 Start_3 Start_6)))
   (StartBool_1 Bool (false true (and StartBool StartBool_2) (or StartBool_3 StartBool_3) (< Start_6 Start_9) (<= Start_11 Start_4)))
   (Start_18 Int (0 x (+ Start_16 Start_8)))
   (Start_9 Int (1 (- Start_9) (- Start_10 Start_10) (* Start_2 Start_10) (mod Start_1 Start_6) (abs Start_7)))
   (Start_10 Int (5 1 0 (- Start_1) (+ Start_8 Start_4) (mod Start_5 Start_4) (ite StartBool_1 Start_5 Start_7)))
   (Start_6 Int (1 (- Start_7) (+ Start_9 Start_7) (* Start_8 Start_7) (div Start_7 Start) (ite StartBool Start_9 Start_7)))
   (Start_4 Int (y (- Start_3) (+ Start Start_5) (* Start_3 Start_3) (div Start_5 Start) (ite StartBool Start_4 Start_2)))
   (Start_12 Int (5 (- Start_11) (- Start_8 Start_6) (+ Start_8 Start_13) (* Start_2 Start_3) (div Start_1 Start) (mod Start_9 Start_14) (abs Start_7) (ite StartBool_5 Start_11 Start_2)))
   (Start_5 Int (y (- Start_3 Start_2) (+ Start_3 Start_6) (* Start_4 Start_3) (div Start Start_1) (mod Start_1 Start_7)))
   (Start_8 Int (x 4 3 5 (- Start_7) (- Start_6 Start_3) (+ Start_2 Start_6) (div Start Start_5)))
   (Start_3 Int (1 5 3 (- Start_3) (- Start Start_1) (+ Start_4 Start_3)))
   (StartBool_3 Bool (true false (and StartBool_5 StartBool_1) (<= Start_1 Start) (>= Start Start_1) (> Start Start_12)))
   (Start_2 Int (y 1 4 (- Start) (* Start_2 Start) (mod Start_3 Start)))
   (Start_14 Int (1 3 (+ Start_14 Start_10) (mod Start_2 Start_12) (abs Start_9)))
   (Start_16 Int (2 x (- Start_9) (- Start_9 Start_1) (* Start_5 Start_6) (div Start_6 Start) (mod Start_14 Start_15) (abs Start_12)))
   (StartBool_4 Bool (true (not StartBool_2) (<= Start_6 Start_6) (= Start_7 Start_10)))
   (Start_13 Int (0 4 (- Start_15) (+ Start_12 Start_8) (* Start_9 Start)))
   (Start_15 Int (3 5 (- Start) (* Start_2 Start_4) (ite StartBool_5 Start_5 Start_9)))
   (Start_21 Int (4 (- Start_21) (- Start_21 Start_9) (div Start_3 Start_11) (mod Start_18 Start_6) (ite StartBool_2 Start_5 Start_7)))
   (StartBool_5 Bool (true false (not StartBool_4) (and StartBool_2 StartBool_1) (= Start_5 Start_13)))
   (StartBool_2 Bool (false (or StartBool_4 StartBool_5) (< Start_3 Start_16) (>= Start_4 Start_8)))
   (Start_22 Int (5 (- Start_9) (- Start_2 Start_2) (+ Start_9 Start_4) (div Start_14 Start_12)))
   (Start_7 Int (x (- Start) (- Start_4 Start_7) (+ Start_2 Start_4) (* Start Start_6) (div Start_1 Start_2) (abs Start_3) (ite StartBool Start Start_8)))
   (Start_1 Int (x (div Start_17 Start_8)))
   (Start_17 Int (y (- Start_1) (+ Start_16 Start_12) (abs Start_18)))
   (Start_19 Int (1 3 5 (+ Start_9 Start_8) (* Start_18 Start_20) (div Start_3 Start_18) (mod Start_4 Start_17) (abs Start_16) (ite StartBool_3 Start_2 Start_14)))
   (StartBool_6 Bool (false (and StartBool_6 StartBool_1) (<= Start_19 Start_1) (= Start_11 Start_7) (>= Start_1 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* x 4))))

(check-synth)
