(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_10 Int) (StartBool_5 Bool) (StartBool_4 Bool) (Start_2 Int) (Start_6 Int) (Start_7 Int) (Start_4 Int) (Start_1 Int) (Start_11 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_3 Int) (Start_5 Int) (StartBool_3 Bool) (Start_8 Int) (Start_9 Int))
  ((Start Int (4 x 3 y 5 (- Start_1) (- Start_1 Start_1) (+ Start Start_1) (* Start_1 Start) (div Start_2 Start_2) (mod Start_1 Start) (abs Start_3)))
   (StartBool Bool (true (not StartBool_1) (or StartBool_2 StartBool_1) (>= Start_6 Start_6)))
   (Start_12 Int (2 (ite StartBool_1 Start_2 Start_2)))
   (Start_10 Int (5 4 2 (- Start_12) (+ Start_9 Start_10) (* Start_11 Start_7) (div Start_11 Start) (ite StartBool_3 Start_11 Start_4)))
   (StartBool_5 Bool (true (not StartBool_5) (and StartBool_2 StartBool_1) (< Start_10 Start_2) (<= Start_8 Start_2) (= Start_8 Start_5)))
   (StartBool_4 Bool (false true (or StartBool_5 StartBool_4) (<= Start_9 Start_5) (> Start Start_4)))
   (Start_2 Int (1 (- Start_2) (+ Start_1 Start_2) (div Start_4 Start_1) (mod Start_3 Start_2)))
   (Start_6 Int (1 (+ Start_6 Start_4) (div Start_7 Start_6) (abs Start)))
   (Start_7 Int (0 (- Start_1) (div Start_1 Start_1) (mod Start_2 Start_3)))
   (Start_4 Int (1 (- Start_3) (div Start_2 Start_3) (abs Start_1)))
   (Start_1 Int (4 (- Start_2) (* Start_4 Start_1) (div Start_2 Start_1) (abs Start_1) (ite StartBool_1 Start_4 Start_2)))
   (Start_11 Int (x (* Start_1 Start_4) (ite StartBool_4 Start_2 Start_8)))
   (StartBool_1 Bool (false true (not StartBool_1) (and StartBool_1 StartBool_1) (>= Start_4 Start_5) (> Start_6 Start_1)))
   (StartBool_2 Bool (true (or StartBool_1 StartBool_3) (>= Start_7 Start_6)))
   (Start_3 Int (x 1 (- Start) (- Start_1 Start_2) (abs Start_2)))
   (Start_5 Int (3 (- Start_3) (div Start_5 Start_2) (mod Start_3 Start_4) (ite StartBool_2 Start_5 Start_4)))
   (StartBool_3 Bool (false true (= Start_3 Start_2) (> Start_8 Start_3)))
   (Start_8 Int (0 y 5 x (- Start_3) (mod Start_9 Start_8) (ite StartBool Start_8 Start_7)))
   (Start_9 Int (2 (- Start_10) (+ Start_5 Start_3) (div Start_7 Start_5) (mod Start_4 Start_11) (abs Start_9) (ite StartBool_3 Start_10 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 2 (div 3 x))))

(check-synth)
