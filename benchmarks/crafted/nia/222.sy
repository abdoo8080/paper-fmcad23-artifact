(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (StartBool_4 Bool) (StartBool_3 Bool) (StartBool_7 Bool) (Start_1 Int) (StartBool_6 Bool) (Start_5 Int) (Start_9 Int) (Start_6 Int) (Start_8 Int) (Start_10 Int) (StartBool_2 Bool) (Start_13 Int) (Start_12 Int) (Start_2 Int) (Start_4 Int) (Start_11 Int) (Start_7 Int) (StartBool_1 Bool) (StartBool_5 Bool) (Start_3 Int))
  ((Start Int (2 (- Start_1) (+ Start_2 Start_3) (ite StartBool_1 Start_4 Start_5)))
   (StartBool Bool (false true (not StartBool_4) (and StartBool_2 StartBool_4) (< Start_8 Start_5) (>= Start_7 Start_10)))
   (StartBool_8 Bool (false true (and StartBool_4 StartBool) (< Start Start_12) (<= Start_10 Start) (> Start_4 Start_12)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_4 StartBool_1) (or StartBool_6 StartBool_2) (= Start_9 Start_9) (>= Start_1 Start_1)))
   (StartBool_3 Bool (true false (<= Start_1 Start_11)))
   (StartBool_7 Bool (true false (not StartBool_1) (and StartBool StartBool_8) (> Start Start_11)))
   (Start_1 Int (x (- Start_4) (- Start_11 Start_3) (* Start_4 Start_7) (div Start_1 Start_2) (mod Start_9 Start_9) (ite StartBool_3 Start_8 Start_10)))
   (StartBool_6 Bool (true false (<= Start_6 Start_11) (>= Start_4 Start_2)))
   (Start_5 Int (3 (+ Start_6 Start_4) (ite StartBool Start_2 Start_6)))
   (Start_9 Int (4 (- Start_5 Start_4) (+ Start_3 Start_3) (* Start Start_9) (div Start_3 Start_6) (mod Start_6 Start)))
   (Start_6 Int (3 5 4 1 (- Start_2) (- Start_7 Start_4) (+ Start_7 Start) (div Start_4 Start_2) (mod Start_4 Start_8)))
   (Start_8 Int (3 (+ Start_6 Start_9) (* Start_4 Start_6) (abs Start_7)))
   (Start_10 Int (y (- Start_4 Start_10) (div Start_2 Start_1) (mod Start_8 Start_10)))
   (StartBool_2 Bool (false (not StartBool) (< Start_5 Start_4)))
   (Start_13 Int (2 x 4 (* Start_7 Start_11) (abs Start_11) (ite StartBool_4 Start_6 Start_6)))
   (Start_12 Int (4 (* Start_11 Start_3) (ite StartBool_6 Start_9 Start_13)))
   (Start_2 Int (0 (- Start_3) (- Start_11 Start_1) (+ Start_10 Start_1) (* Start_9 Start_6) (ite StartBool Start_9 Start_7)))
   (Start_4 Int (5 (- Start_5) (div Start_3 Start_5) (abs Start_11) (ite StartBool Start_6 Start_6)))
   (Start_11 Int (4 (- Start_10) (- Start_5 Start_5) (div Start Start_3) (mod Start_5 Start_2) (abs Start_8) (ite StartBool Start_8 Start_11)))
   (Start_7 Int (1 x 4 (* Start_10 Start_3) (mod Start_3 Start_3)))
   (StartBool_1 Bool (false (not StartBool_2) (< Start_6 Start_8) (<= Start Start_8) (= Start_3 Start_7) (>= Start_10 Start_1)))
   (StartBool_5 Bool (false (and StartBool_5 StartBool) (or StartBool_3 StartBool_7) (< Start_12 Start_1) (<= Start_12 Start) (>= Start_10 Start_5)))
   (Start_3 Int (1 x (+ Start_9 Start_10) (mod Start Start_1) (abs Start_2) (ite StartBool Start_4 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (ite (<= x 1) x (mod 2 0)))))

(check-synth)
