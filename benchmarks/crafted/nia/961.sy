(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_1 Int) (StartBool_1 Bool) (Start_13 Int) (Start_3 Int) (StartBool_2 Bool) (Start_6 Int) (Start_7 Int) (StartBool_4 Bool) (Start_8 Int) (Start_9 Int) (Start_5 Int) (StartBool_3 Bool) (Start_10 Int) (Start_12 Int) (Start_11 Int) (Start_2 Int) (Start_4 Int))
  ((Start Int (0 (- Start) (div Start_1 Start_1) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true false (not StartBool) (and StartBool_4 StartBool) (< Start Start_11) (<= Start_4 Start_13) (= Start_11 Start_4) (> Start_1 Start_2)))
   (Start_14 Int (2 1 (- Start_13) (* Start_9 Start_5) (div Start_14 Start_12)))
   (Start_1 Int (2 y (- Start_3) (mod Start_9 Start_5) (abs Start_7)))
   (StartBool_1 Bool (false (or StartBool StartBool_2)))
   (Start_13 Int (0 1 (- Start_2) (- Start_13 Start_2) (* Start_9 Start_1) (div Start_7 Start_2) (mod Start_9 Start_5)))
   (Start_3 Int (1 (- Start_6) (+ Start_10 Start_2) (* Start_5 Start_7) (div Start_11 Start)))
   (StartBool_2 Bool (false true (not StartBool_3) (and StartBool_2 StartBool_2) (< Start_4 Start_5) (= Start_6 Start_2)))
   (Start_6 Int (2 (- Start Start_7) (div Start_2 Start_7)))
   (Start_7 Int (x (* Start_3 Start_8) (div Start_3 Start_4) (mod Start_3 Start_1) (abs Start_8)))
   (StartBool_4 Bool (false (not StartBool_4) (or StartBool StartBool_4) (< Start_7 Start_9) (<= Start_6 Start_5) (>= Start_14 Start_14) (> Start_4 Start_14)))
   (Start_8 Int (y 1 0 (- Start_8) (- Start_6 Start_2) (* Start_1 Start_2) (div Start_5 Start_8) (mod Start_3 Start_8) (abs Start_9)))
   (Start_9 Int (x (- Start_1 Start_5) (+ Start_6 Start) (* Start_1 Start_6) (abs Start_2) (ite StartBool Start_9 Start_6)))
   (Start_5 Int (0 (- Start_10) (* Start_10 Start_2) (div Start_4 Start_7)))
   (StartBool_3 Bool (true false (not StartBool_1) (and StartBool StartBool_1) (or StartBool_1 StartBool_2) (< Start_10 Start) (<= Start_10 Start_5) (= Start_11 Start_8) (> Start Start_12)))
   (Start_10 Int (4 (* Start_8 Start_1) (mod Start_7 Start_2) (ite StartBool_2 Start Start_2)))
   (Start_12 Int (2 0 (- Start_7 Start_2) (mod Start_5 Start_5) (ite StartBool Start_10 Start_1)))
   (Start_11 Int (1 4 2 0 (- Start_4 Start_2) (+ Start_8 Start_8)))
   (Start_2 Int (3 (- Start_2) (- Start_2 Start) (+ Start Start_3) (* Start_3 Start_3) (div Start_4 Start_1) (mod Start_4 Start_3) (ite StartBool_2 Start_1 Start_2)))
   (Start_4 Int (2 x (- Start_7) (+ Start_3 Start_9) (* Start_11 Start_6) (div Start Start_3) (mod Start_12 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div x 5))))

(check-synth)
