(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (StartBool_6 Bool) (Start_18 Int) (Start_14 Int) (Start_5 Int) (Start_15 Int) (StartBool_4 Bool) (Start_13 Int) (Start_16 Int) (Start_2 Int) (StartBool_1 Bool) (Start_4 Int) (Start_12 Int) (Start_3 Int) (Start_6 Int) (Start_7 Int) (Start_10 Int) (StartBool_2 Bool) (StartBool_5 Bool) (Start_9 Int) (StartBool_3 Bool) (Start_11 Int) (Start_1 Int) (Start_8 Int))
  ((Start Int (0 2 (- Start_1) (- Start_2 Start_3) (* Start_4 Start_3) (div Start_2 Start_3) (mod Start_1 Start_1) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_5) (and StartBool StartBool_1) (or StartBool_1 StartBool_2) (= Start_17 Start_6) (> Start_15 Start_10)))
   (Start_17 Int (y 4))
   (StartBool_6 Bool (false true (not StartBool_4) (< Start_5 Start_9) (<= Start_15 Start_10)))
   (Start_18 Int (y 3 (abs Start_2) (ite StartBool_6 Start_4 Start_14)))
   (Start_14 Int (3 (abs Start_4)))
   (Start_5 Int (x (- Start) (- Start_2 Start_5) (+ Start_5 Start_6) (div Start_5 Start_7) (abs Start_14)))
   (Start_15 Int (1 x (- Start_6) (* Start_16 Start_13) (mod Start_8 Start_6) (abs Start_8)))
   (StartBool_4 Bool (true false (not StartBool_1) (and StartBool_3 StartBool_5) (<= Start_13 Start_9)))
   (Start_13 Int (2 (- Start_2 Start_12) (ite StartBool_4 Start_12 Start_3)))
   (Start_16 Int (4 (- Start_16) (- Start_17 Start_15) (+ Start_10 Start) (div Start_4 Start_18) (mod Start_10 Start_5)))
   (Start_2 Int (x (+ Start_15 Start_9) (div Start_6 Start_3)))
   (StartBool_1 Bool (true (not StartBool_1) (or StartBool StartBool_1) (<= Start_4 Start_4) (= Start_3 Start_1) (>= Start Start_3)))
   (Start_4 Int (x 5 (- Start_1) (- Start_2 Start) (+ Start_4 Start_3) (* Start Start_4) (ite StartBool_1 Start_2 Start)))
   (Start_12 Int (0 4 5 1 (+ Start_13 Start_11) (mod Start_9 Start_5)))
   (Start_3 Int (y (div Start_3 Start_4) (mod Start_3 Start_1) (abs Start_5) (ite StartBool_2 Start_6 Start_4)))
   (Start_6 Int (5 (* Start_2 Start_1) (div Start_3 Start_7) (abs Start_5)))
   (Start_7 Int (3 y 4 5 (- Start) (* Start_4 Start_7) (div Start_7 Start_4) (abs Start_7) (ite StartBool_3 Start_4 Start_6)))
   (Start_10 Int (0 x (* Start_11 Start_4) (div Start_8 Start_6)))
   (StartBool_2 Bool (false true (< Start_8 Start_9) (= Start_9 Start_1) (>= Start_3 Start_9)))
   (StartBool_5 Bool (false (not StartBool_1) (or StartBool_3 StartBool_2)))
   (Start_9 Int (4 3 (- Start_6) (- Start_2 Start_3) (* Start_1 Start_8) (div Start_3 Start) (abs Start_10)))
   (StartBool_3 Bool (false (<= Start_7 Start_2)))
   (Start_11 Int (3 (- Start_10 Start_1) (* Start_4 Start_3) (div Start_2 Start_6) (mod Start_7 Start) (abs Start_7) (ite StartBool_1 Start_10 Start_9)))
   (Start_1 Int (x 0 (div Start_13 Start)))
   (Start_8 Int (x (- Start) (div Start_4 Start_4) (mod Start_8 Start_12) (ite StartBool_1 Start_2 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (+ x (mod 4 0)))))

(check-synth)
