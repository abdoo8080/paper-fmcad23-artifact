(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_24 Int) (Start_1 Int) (Start_7 Int) (Start_10 Int) (Start_23 Int) (StartBool_5 Bool) (Start_18 Int) (Start_2 Int) (Start_21 Int) (StartBool_3 Bool) (Start_11 Int) (StartBool_1 Bool) (Start_4 Int) (StartBool_4 Bool) (Start_22 Int) (StartBool_6 Bool) (Start_20 Int) (Start_14 Int) (Start_9 Int) (Start_5 Int) (Start_3 Int) (Start_15 Int) (Start_8 Int) (Start_16 Int) (Start_13 Int) (Start_19 Int) (Start_17 Int) (Start_12 Int) (StartBool_2 Bool) (StartBool_8 Bool) (StartBool_7 Bool) (Start_6 Int))
  ((Start Int (5 (- Start) (+ Start_1 Start_2) (* Start_3 Start) (div Start_1 Start_3) (mod Start_1 Start) (ite StartBool Start Start_3)))
   (StartBool Bool (false (= Start_24 Start_12)))
   (Start_24 Int (0 x (+ Start_2 Start_19)))
   (Start_1 Int (0 (- Start_23) (- Start_19 Start_15) (+ Start_13 Start_11) (abs Start_24) (ite StartBool_8 Start_4 Start_18)))
   (Start_7 Int (3 y (- Start_4) (- Start_6 Start) (mod Start_8 Start_7) (ite StartBool_1 Start_5 Start_9)))
   (Start_10 Int (y (- Start_1) (+ Start_7 Start_9) (* Start_12 Start) (abs Start_13) (ite StartBool_3 Start_5 Start_9)))
   (Start_23 Int (3 (* Start_21 Start_16) (div Start_6 Start_17)))
   (StartBool_5 Bool (true false (and StartBool_5 StartBool) (<= Start_16 Start_7) (= Start_16 Start_10)))
   (Start_18 Int (4 (- Start_16) (* Start_5 Start_10) (div Start_17 Start_12) (mod Start_9 Start_8) (abs Start_5)))
   (Start_2 Int (4 5 (- Start_12 Start_11) (* Start_14 Start_23) (div Start_9 Start_10) (abs Start_15)))
   (Start_21 Int (4 2 (* Start_13 Start_9) (div Start_8 Start_20)))
   (StartBool_3 Bool (false (not StartBool_2) (or StartBool_4 StartBool) (= Start_10 Start)))
   (Start_11 Int (0 (- Start_11) (+ Start_4 Start_11) (div Start_9 Start_11) (mod Start_8 Start_2)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_2 StartBool) (or StartBool_2 StartBool) (< Start_6 Start_9)))
   (Start_4 Int (3 2 (- Start_13) (- Start_17 Start_20) (* Start_2 Start_15) (div Start_22 Start_20) (mod Start_17 Start_18)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool StartBool_3) (< Start_7 Start_14) (>= Start_11 Start_12) (> Start_6 Start_10)))
   (Start_22 Int (5 1 (- Start_15 Start_2) (+ Start_1 Start_16) (* Start_21 Start_6) (ite StartBool_7 Start_13 Start_19)))
   (StartBool_6 Bool (true false (and StartBool_1 StartBool_7) (or StartBool StartBool_3) (< Start_4 Start_16) (<= Start_19 Start_20) (>= Start_2 Start_14)))
   (Start_20 Int (4 (mod Start_20 Start_8) (abs Start_18) (ite StartBool Start_20 Start_17)))
   (Start_14 Int (5 x (- Start_5 Start_10) (+ Start_12 Start_10) (* Start_2 Start_15) (mod Start_2 Start_9)))
   (Start_9 Int (5 y (- Start_3 Start) (+ Start_6 Start_5) (ite StartBool_2 Start_4 Start_2)))
   (Start_5 Int (2 3 (div Start_5 Start_6) (mod Start_5 Start_2) (abs Start_7)))
   (Start_3 Int (0 1 3 (- Start_4) (- Start_5 Start_5) (+ Start_1 Start_3) (div Start_2 Start_1)))
   (Start_15 Int (2 1 (- Start_3) (div Start_4 Start_16) (mod Start_9 Start_3)))
   (Start_8 Int (5 (- Start_7) (- Start Start_10) (+ Start_11 Start_5) (ite StartBool_1 Start_7 Start)))
   (Start_16 Int (x 5 y 0 (- Start_2 Start_7) (+ Start_8 Start_1) (ite StartBool_3 Start_9 Start_7)))
   (Start_13 Int (5 (+ Start_17 Start_2) (abs Start_18) (ite StartBool Start_5 Start_4)))
   (Start_19 Int (y (* Start_20 Start_13)))
   (Start_17 Int (5 (+ Start_11 Start_4) (div Start_9 Start_9) (mod Start_3 Start_9) (ite StartBool_2 Start_4 Start_18)))
   (Start_12 Int (4 5 (- Start) (+ Start_6 Start_15) (* Start_1 Start) (div Start_9 Start_2) (ite StartBool_6 Start_17 Start_4)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_2 StartBool) (< Start_2 Start_6) (>= Start_2 Start_4) (> Start_4 Start_8)))
   (StartBool_8 Bool (false (not StartBool_4) (= Start_20 Start_17) (> Start_10 Start_15)))
   (StartBool_7 Bool (false (or StartBool StartBool_8) (< Start_6 Start_9) (= Start_5 Start) (>= Start_20 Start_20)))
   (Start_6 Int (0 2 x (- Start_3 Start_4) (+ Start_8 Start_9) (* Start_4 Start_6) (div Start_1 Start_20) (mod Start_6 Start_21) (abs Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (div x 4))))

(check-synth)
