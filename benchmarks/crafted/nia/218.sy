(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (Start_1 Int) (Start_7 Int) (StartBool_5 Bool) (StartBool_7 Bool) (Start_15 Int) (Start_13 Int) (Start_17 Int) (Start_6 Int) (Start_4 Int) (StartBool_1 Bool) (Start_3 Int) (Start_14 Int) (StartBool_2 Bool) (Start_8 Int) (Start_2 Int) (Start_5 Int) (Start_10 Int) (Start_11 Int) (StartBool_4 Bool) (StartBool_3 Bool) (Start_9 Int) (StartBool_6 Bool) (Start_16 Int) (Start_12 Int))
  ((Start Int (x 4 (* Start_1 Start_1) (div Start_1 Start_2) (mod Start_1 Start_3) (ite StartBool Start_1 Start_4)))
   (StartBool Bool (true (not StartBool_5) (or StartBool_8 StartBool) (>= Start_5 Start) (> Start_9 Start_1)))
   (StartBool_8 Bool (false (not StartBool_7) (< Start_15 Start_3) (= Start_13 Start_15) (>= Start_3 Start_9) (> Start_11 Start_10)))
   (Start_1 Int (y x 3 (- Start_8 Start_10) (+ Start_9 Start_8) (div Start Start) (mod Start_3 Start_1)))
   (Start_7 Int (1 y 3 (div Start_12 Start_12) (mod Start_5 Start_12) (ite StartBool Start_11 Start_3)))
   (StartBool_5 Bool (false true (and StartBool_2 StartBool_7) (< Start_4 Start_9) (<= Start_14 Start_6) (= Start_4 Start_15) (>= Start_4 Start_1) (> Start Start_9)))
   (StartBool_7 Bool (true (or StartBool_4 StartBool_6) (< Start_17 Start_12)))
   (Start_15 Int (1 (+ Start_12 Start_4) (* Start_3 Start_7) (mod Start_8 Start_10) (abs Start_5)))
   (Start_13 Int (3 2 (- Start_2) (- Start_12 Start_1) (+ Start_6 Start_14) (div Start_11 Start_14) (abs Start_1) (ite StartBool Start_15 Start_16)))
   (Start_17 Int (x 2 (div Start_16 Start_17) (abs Start_9) (ite StartBool Start_5 Start_9)))
   (Start_6 Int (2 (- Start_6) (- Start Start_3) (+ Start Start) (div Start_1 Start_4) (abs Start_2)))
   (Start_4 Int (3 (* Start_4 Start_3) (div Start_5 Start_3)))
   (StartBool_1 Bool (false (and StartBool StartBool_1) (<= Start_4 Start_1) (= Start_3 Start_5) (>= Start_3 Start_4) (> Start_1 Start_6)))
   (Start_3 Int (4 (- Start_4) (- Start_1 Start_2) (+ Start_4 Start_3) (* Start_1 Start_7) (div Start_1 Start_5) (mod Start_8 Start_6)))
   (Start_14 Int (3 0 2 (- Start_13) (* Start_14 Start_7) (div Start_10 Start_10) (mod Start_14 Start_2) (abs Start_3) (ite StartBool_7 Start_9 Start_2)))
   (StartBool_2 Bool (false true (not StartBool_3) (<= Start_7 Start_4) (= Start_6 Start_11) (>= Start_8 Start_9)))
   (Start_8 Int (y 3 x 1 0 4 2 5 (- Start_4) (- Start_1 Start_8) (* Start_9 Start_4) (div Start_1 Start_9) (abs Start_6) (ite StartBool_1 Start_10 Start)))
   (Start_2 Int (4 (* Start_11 Start_1) (div Start_13 Start_7) (abs Start)))
   (Start_5 Int (3 1 4 (- Start_3) (- Start_1 Start_6) (abs Start_5) (ite StartBool_1 Start_3 Start_3)))
   (Start_10 Int (y x 0 1 (* Start_3 Start_9) (div Start_4 Start_6) (abs Start_7) (ite StartBool_2 Start_8 Start_8)))
   (Start_11 Int (3 (- Start_10) (- Start_3 Start_10) (* Start_8 Start_8) (mod Start_3 Start_5) (ite StartBool Start_3 Start_1)))
   (StartBool_4 Bool (true (not StartBool_3) (or StartBool_2 StartBool) (< Start_5 Start_11) (>= Start_11 Start_2)))
   (StartBool_3 Bool (true false (not StartBool_1) (and StartBool_4 StartBool_5) (or StartBool_5 StartBool_6) (< Start_7 Start_10) (> Start_2 Start_11)))
   (Start_9 Int (5 x (- Start_8) (+ Start_6 Start_4) (* Start_7 Start_10) (abs Start_5)))
   (StartBool_6 Bool (true false (not StartBool_6) (and StartBool_5 StartBool_4) (or StartBool_5 StartBool_1) (<= Start_11 Start_12) (>= Start_2 Start_4) (> Start_7 Start_9)))
   (Start_16 Int (0 (- Start_9 Start_1) (+ Start_2 Start_5) (* Start_12 Start_8) (ite StartBool_2 Start_2 Start_5)))
   (Start_12 Int (y 4 (- Start_13) (div Start_4 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div y (div (* 2 y) (- x 4)))))

(check-synth)
