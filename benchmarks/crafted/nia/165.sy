(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_4 Bool) (Start_7 Int) (StartBool_2 Bool) (StartBool_1 Bool) (StartBool_3 Bool) (Start_4 Int) (Start_2 Int) (Start_11 Int) (Start_5 Int) (Start_6 Int) (Start_8 Int) (Start_10 Int) (Start_3 Int) (Start_9 Int) (StartBool_5 Bool))
  ((Start Int (2 3 (- Start_1) (- Start_1 Start) (+ Start_1 Start_1) (* Start_2 Start_3) (mod Start_1 Start_1)))
   (StartBool Bool (true (and StartBool StartBool_4) (or StartBool_5 StartBool_3) (> Start_9 Start_8)))
   (Start_1 Int (x 0 (- Start_3) (+ Start_9 Start_8) (* Start_11 Start_5) (div Start Start_3) (abs Start_5) (ite StartBool_3 Start_4 Start_2)))
   (StartBool_4 Bool (false (and StartBool_5 StartBool_4) (or StartBool_3 StartBool_1) (< Start_1 Start_4)))
   (Start_7 Int (3 y (- Start) (* Start Start_3) (abs Start_2) (ite StartBool_2 Start Start_4)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool StartBool) (= Start_5 Start_6) (>= Start_4 Start_7)))
   (StartBool_1 Bool (true false (not StartBool_3) (and StartBool_3 StartBool_1) (or StartBool_3 StartBool_1) (> Start_1 Start_7)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_4 StartBool_5) (or StartBool_1 StartBool_5) (= Start_6 Start_7) (> Start_7 Start_8)))
   (Start_4 Int (1 2 (* Start_5 Start_6) (div Start_2 Start_6) (mod Start_1 Start_7) (ite StartBool_5 Start_8 Start_10)))
   (Start_2 Int (4 (- Start_1) (+ Start Start_4) (div Start Start_1) (abs Start) (ite StartBool_1 Start_1 Start_5)))
   (Start_11 Int (4))
   (Start_5 Int (y (- Start_3) (- Start_3 Start_3) (+ Start_3 Start_6) (* Start_3 Start_6) (div Start_2 Start_1) (abs Start_1)))
   (Start_6 Int (0 2 x (- Start_6 Start_5) (* Start_3 Start_3) (div Start_7 Start) (mod Start_2 Start_4)))
   (Start_8 Int (4 (- Start_8) (+ Start_9 Start) (* Start_10 Start_6) (mod Start Start_1)))
   (Start_10 Int (x 5 (* Start Start_4) (div Start_10 Start_3) (mod Start Start_7)))
   (Start_3 Int (1 (- Start_2 Start) (* Start_1 Start_2)))
   (Start_9 Int (4 (- Start_8) (- Start Start_8) (+ Start_4 Start_8) (abs Start_9)))
   (StartBool_5 Bool (true false (not StartBool_3) (< Start_8 Start_4) (<= Start_1 Start) (>= Start_10 Start_3) (> Start_5 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- 5 y))))

(check-synth)
