(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_19 Int) (Start_18 Int) (Start_17 Int) (Start_7 Int) (StartBool_7 Bool) (Start_16 Int) (Start_5 Int) (StartBool_6 Bool) (StartBool_9 Bool) (Start_10 Int) (StartBool_10 Bool) (StartBool_5 Bool) (Start_12 Int) (Start_3 Int) (StartBool_1 Bool) (Start_4 Int) (Start_11 Int) (StartBool_3 Bool) (Start_6 Int) (StartBool_11 Bool) (Start_9 Int) (Start_14 Int) (Start_13 Int) (StartBool_8 Bool) (Start_8 Int) (StartBool_2 Bool) (Start_1 Int) (StartBool_4 Bool) (Start_15 Int) (Start_2 Int))
  ((Start Int (y (+ Start_1 Start) (div Start_1 Start_1) (mod Start_2 Start_3) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_4) (<= Start_14 Start_17) (= Start_17 Start_8) (>= Start_14 Start_3) (> Start_15 Start_3)))
   (Start_19 Int (3 (mod Start_14 Start_5) (ite StartBool_2 Start_18 Start_15)))
   (Start_18 Int (4 3 (* Start_16 Start_19) (div Start_3 Start_18)))
   (Start_17 Int (0 (* Start_18 Start_6) (div Start_1 Start_10) (mod Start_17 Start_5) (abs Start_12)))
   (Start_7 Int (y (- Start Start_5) (div Start_5 Start_6) (mod Start_4 Start_7)))
   (StartBool_7 Bool (false (and StartBool_8 StartBool_2) (or StartBool_9 StartBool_7) (<= Start_3 Start_6) (>= Start_2 Start_7)))
   (Start_16 Int (0 5 (- Start_14 Start_12) (* Start_5 Start_10) (div Start_2 Start_13)))
   (Start_5 Int (1 (- Start_3 Start_4) (+ Start_3 Start) (* Start_1 Start_5) (abs Start) (ite StartBool_7 Start_5 Start_3)))
   (StartBool_6 Bool (true (not StartBool) (or StartBool_2 StartBool_6) (> Start_3 Start_4)))
   (StartBool_9 Bool (false true (not StartBool_4) (or StartBool_9 StartBool_10) (>= Start_2 Start_9)))
   (Start_10 Int (x 3 (- Start_7 Start_3) (+ Start_3 Start_11) (* Start_3 Start_6) (div Start_10 Start_11) (abs Start_10) (ite StartBool_1 Start_8 Start_2)))
   (StartBool_10 Bool (true (and StartBool_11 StartBool_8) (or StartBool_2 StartBool) (< Start_3 Start_7) (<= Start_5 Start_5) (= Start_7 Start_5) (>= Start Start)))
   (StartBool_5 Bool (false (and StartBool_3 StartBool_6) (or StartBool_4 StartBool_3) (< Start_3 Start_3) (<= Start_2 Start_3) (>= Start_2 Start_1) (> Start_3 Start_1)))
   (Start_12 Int (x 1 (- Start_11) (- Start_10 Start_2) (div Start_13 Start_12) (mod Start_10 Start_2) (abs Start) (ite StartBool_2 Start_13 Start_14)))
   (Start_3 Int (x (- Start_15) (- Start_8 Start_6) (* Start_10 Start_1) (div Start_7 Start_15) (ite StartBool_7 Start_1 Start_5)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool StartBool_2) (or StartBool_3 StartBool_2) (= Start Start) (>= Start_1 Start_1) (> Start_2 Start_2)))
   (Start_4 Int (y (+ Start_2 Start_5) (* Start Start_5) (div Start_5 Start_2) (mod Start_2 Start_4) (abs Start_4)))
   (Start_11 Int (5 (- Start_10) (- Start_10 Start_5) (* Start_3 Start_4) (abs Start_8) (ite StartBool_5 Start_9 Start_1)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_1 StartBool_5) (or StartBool StartBool_1) (= Start_1 Start) (> Start_2 Start_2)))
   (Start_6 Int (x (- Start_2 Start_1) (+ Start_3 Start_6) (mod Start_7 Start_4) (abs Start_8) (ite StartBool_2 Start_6 Start)))
   (StartBool_11 Bool (true false (not StartBool_9) (< Start_4 Start_6) (<= Start_3 Start_1) (>= Start_7 Start_12)))
   (Start_9 Int (2 (div Start_6 Start_4) (mod Start_1 Start_1) (ite StartBool Start Start_10)))
   (Start_14 Int (x (- Start_4) (div Start_13 Start_10) (abs Start_4)))
   (Start_13 Int (5 (- Start_13 Start_10) (+ Start_11 Start_12) (div Start_4 Start_6) (mod Start_9 Start_9) (ite StartBool_4 Start_8 Start_9)))
   (StartBool_8 Bool (true (not StartBool_2) (or StartBool_5 StartBool_2) (= Start_4 Start_7) (>= Start_10 Start_1)))
   (Start_8 Int (2 1 (- Start_4 Start_8) (div Start_5 Start_7) (abs Start)))
   (StartBool_2 Bool (false (not StartBool_5) (< Start_2 Start_4) (= Start_6 Start_6)))
   (Start_1 Int (x y 0 3 (* Start_8 Start_9)))
   (StartBool_4 Bool (true false (not StartBool_6) (< Start_5 Start_3) (>= Start_4 Start_5) (> Start Start_12)))
   (Start_15 Int (4 0 (- Start_15) (+ Start_5 Start_5) (div Start_10 Start_5) (mod Start Start_9) (abs Start_13) (ite StartBool_9 Start_13 Start_14)))
   (Start_2 Int (5 (- Start_8) (* Start_10 Start_12) (mod Start_16 Start_6) (abs Start_13) (ite StartBool_3 Start_6 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (abs (mod 1 (- (div y (abs x))))))))

(check-synth)
