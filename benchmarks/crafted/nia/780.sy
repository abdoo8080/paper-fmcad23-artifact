(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_12 Int) (Start_11 Int) (Start_6 Int) (Start_5 Int) (StartBool_1 Bool) (Start_7 Int) (Start_4 Int) (Start_10 Int) (Start_2 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_9 Int) (Start_8 Int) (Start_3 Int))
  ((Start Int (3 (- Start) (- Start Start) (+ Start Start_1) (div Start_1 Start_2) (mod Start_2 Start_1)))
   (StartBool Bool (false true (not StartBool_2) (and StartBool_2 StartBool_1) (< Start_8 Start_9) (= Start_12 Start_1) (>= Start_5 Start_9)))
   (Start_1 Int (2 3 y (+ Start_5 Start_2) (* Start_6 Start_5) (div Start_5 Start_6) (mod Start_9 Start_2) (abs Start_6)))
   (Start_12 Int (y 0 (- Start_7 Start_5) (+ Start_7 Start_1) (ite StartBool Start_3 Start_12)))
   (Start_11 Int (5 y (div Start_7 Start_3) (ite StartBool_3 Start_1 Start_9)))
   (Start_6 Int (3 2 (mod Start_8 Start_8) (ite StartBool_1 Start_1 Start_4)))
   (Start_5 Int (3 (- Start_3) (- Start_4 Start) (+ Start_5 Start_2) (mod Start_6 Start) (ite StartBool_1 Start_5 Start_5)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool_2 StartBool_1) (< Start Start_7) (<= Start_4 Start_2) (= Start_7 Start_5) (>= Start_3 Start_4) (> Start_3 Start_6)))
   (Start_7 Int (4 0 (- Start Start_5) (+ Start_4 Start_6) (abs Start_3)))
   (Start_4 Int (x (* Start_9 Start_1) (div Start_9 Start)))
   (Start_10 Int (3 (- Start_11 Start_10) (* Start_3 Start_3) (div Start_3 Start) (abs Start_2) (ite StartBool_1 Start_11 Start_10)))
   (Start_2 Int (x (* Start_3 Start_4) (abs Start_5)))
   (StartBool_2 Bool (true (not StartBool_1) (and StartBool_3 StartBool) (or StartBool_1 StartBool_2) (< Start_5 Start_4) (<= Start_3 Start_6)))
   (StartBool_3 Bool (true false (not StartBool) (< Start_6 Start) (= Start Start_2) (>= Start Start_8) (> Start_7 Start_5)))
   (Start_9 Int (2 (- Start_5 Start_4) (div Start_1 Start_9) (abs Start) (ite StartBool_3 Start Start_6)))
   (Start_8 Int (1 (div Start_9 Start_5) (mod Start_2 Start_2)))
   (Start_3 Int (3 0 (- Start_8 Start_7) (+ Start_10 Start_7) (* Start_9 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 5 (abs (mod (- 1) (* 3 y))))))

(check-synth)
