(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_5 Bool) (Start_16 Int) (Start_13 Int) (StartBool_4 Bool) (Start_8 Int) (Start_15 Int) (Start_3 Int) (Start_5 Int) (Start_6 Int) (Start_2 Int) (Start_14 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_9 Int) (Start_10 Int) (Start_11 Int) (Start_12 Int) (Start_7 Int) (StartBool_1 Bool) (Start_4 Int))
  ((Start Int (x 0 (- Start_1) (- Start Start_1) (div Start_1 Start_1) (mod Start_2 Start_1) (ite StartBool_1 Start_1 Start_3)))
   (StartBool Bool (false (and StartBool_4 StartBool_3) (or StartBool_3 StartBool_2) (<= Start_12 Start_15) (> Start_14 Start_15)))
   (Start_1 Int (1 (* Start_4 Start_3) (div Start_12 Start_2) (mod Start_9 Start_14) (abs Start_1)))
   (StartBool_5 Bool (false true (not StartBool_1) (<= Start_1 Start_8) (>= Start_4 Start_13)))
   (Start_16 Int (0 5 (- Start_7) (- Start_1 Start_13) (+ Start_7 Start_1) (mod Start_16 Start_2) (abs Start_10) (ite StartBool_5 Start_1 Start_3)))
   (Start_13 Int (x (- Start_2 Start) (+ Start_11 Start_6) (mod Start Start_4) (ite StartBool_3 Start_1 Start_4)))
   (StartBool_4 Bool (false true (not StartBool) (and StartBool_4 StartBool_1) (< Start_3 Start_10) (<= Start_8 Start_11) (= Start_3 Start_12) (>= Start_13 Start)))
   (Start_8 Int (x y (- Start_1) (- Start_2 Start) (+ Start_9 Start_8) (* Start_10 Start_9) (abs Start)))
   (Start_15 Int (x (- Start_16 Start_16) (+ Start_6 Start_8) (* Start_3 Start_12) (ite StartBool_4 Start_3 Start_8)))
   (Start_3 Int (5 (- Start_4) (mod Start_3 Start_5) (ite StartBool Start_4 Start_2)))
   (Start_5 Int (y x 4 2 (- Start_5) (mod Start Start_2) (ite StartBool Start_6 Start_4)))
   (Start_6 Int (0 3 x (* Start_1 Start_5) (mod Start_6 Start_4) (abs Start_7)))
   (Start_2 Int (5 (- Start Start_16) (* Start_9 Start_6) (div Start_7 Start_11) (mod Start_16 Start_14) (abs Start_16) (ite StartBool_5 Start_12 Start_1)))
   (Start_14 Int (x 2 0 (+ Start_14 Start_13) (div Start_15 Start_16) (mod Start_4 Start_16) (abs Start_16)))
   (StartBool_3 Bool (true (not StartBool_1) (and StartBool_3 StartBool_2) (or StartBool StartBool) (<= Start_3 Start_11) (= Start_11 Start_7) (> Start Start_6)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_3) (<= Start_4 Start_11) (> Start_2 Start_9)))
   (Start_9 Int (1 (div Start_1 Start) (abs Start_7)))
   (Start_10 Int (3 y (mod Start_6 Start_4) (abs Start) (ite StartBool_2 Start_3 Start_3)))
   (Start_11 Int (4 (+ Start_4 Start_11) (div Start_2 Start_4)))
   (Start_12 Int (3 0 x (div Start_9 Start_5) (ite StartBool_2 Start_1 Start_14)))
   (Start_7 Int (x y 4 (- Start_8) (+ Start_6 Start_9) (abs Start_2) (ite StartBool_1 Start_2 Start_9)))
   (StartBool_1 Bool (true false (not StartBool_2) (or StartBool_4 StartBool) (= Start_9 Start_11) (> Start Start_6)))
   (Start_4 Int (4 y (+ Start_5 Start_1) (* Start_8 Start_10) (mod Start_3 Start_1) (abs Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 5 (- 5 y))))

(check-synth)
