(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_11 Int) (Start_10 Int) (StartBool_1 Bool) (Start_2 Int) (Start_7 Int) (Start_4 Int) (Start_3 Int) (Start_6 Int) (Start_8 Int) (StartBool_4 Bool) (StartBool_2 Bool) (Start_9 Int) (Start_5 Int) (StartBool_3 Bool))
  ((Start Int (2 (- Start_1) (div Start Start) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_3) (< Start_6 Start) (<= Start_2 Start_1) (>= Start_7 Start_10) (> Start_9 Start_11)))
   (Start_1 Int (0 5 4 (- Start_4 Start) (+ Start_11 Start_4) (mod Start_9 Start_10) (ite StartBool_2 Start_7 Start_4)))
   (Start_11 Int (5 4 (- Start_7) (- Start_9 Start_10) (+ Start_5 Start_5) (* Start_1 Start_8) (ite StartBool Start_3 Start_4)))
   (Start_10 Int (y (- Start_6) (+ Start Start_10) (div Start_6 Start_3) (mod Start_4 Start_6) (abs Start_11) (ite StartBool Start_2 Start_9)))
   (StartBool_1 Bool (true false (and StartBool_2 StartBool_3) (or StartBool StartBool_1) (< Start_1 Start_1) (>= Start Start_2) (> Start Start_1)))
   (Start_2 Int (x (- Start_3 Start_3) (+ Start_3 Start) (* Start_4 Start_1) (abs Start_1) (ite StartBool_2 Start_4 Start)))
   (Start_7 Int (4 3 (- Start_7 Start_6) (+ Start_7 Start_7) (mod Start_8 Start_1) (ite StartBool_3 Start_6 Start_9)))
   (Start_4 Int (y (- Start_1) (- Start_1 Start_2) (+ Start Start_2)))
   (Start_3 Int (1 x (- Start_4) (+ Start_5 Start_6) (* Start_4 Start_6) (ite StartBool_2 Start Start_4)))
   (Start_6 Int (x 4 y 3 2 (- Start_2 Start) (+ Start_4 Start_7) (* Start_6 Start_3) (div Start_5 Start_5) (mod Start_5 Start_7) (abs Start_4) (ite StartBool Start_2 Start_8)))
   (Start_8 Int (2 y (- Start_5) (* Start_4 Start_8) (div Start_3 Start_7) (mod Start_7 Start_2) (abs Start_1) (ite StartBool_4 Start_1 Start)))
   (StartBool_4 Bool (false true (not StartBool_3) (and StartBool_1 StartBool_1) (< Start_7 Start_4) (= Start_1 Start_8) (> Start_5 Start)))
   (StartBool_2 Bool (false (not StartBool) (< Start_8 Start_7) (> Start_9 Start_10)))
   (Start_9 Int (3 2 4 (- Start_1) (- Start_4 Start_2) (* Start_5 Start_2) (abs Start_7) (ite StartBool_1 Start_7 Start_1)))
   (Start_5 Int (0 (- Start) (- Start_4 Start_7) (* Start_3 Start_9) (abs Start_1)))
   (StartBool_3 Bool (true (and StartBool_4 StartBool) (<= Start_2 Start_8) (= Start_8 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (* 2 y) 0)))

(check-synth)
