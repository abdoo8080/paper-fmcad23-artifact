(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_9 Bool) (Start_13 Int) (StartBool_10 Bool) (StartBool_7 Bool) (Start_11 Int) (StartBool_8 Bool) (StartBool_5 Bool) (Start_14 Int) (StartBool_1 Bool) (Start_6 Int) (Start_4 Int) (StartBool_4 Bool) (Start_12 Int) (Start_3 Int) (Start_7 Int) (Start_8 Int) (Start_10 Int) (StartBool_3 Bool) (Start_9 Int) (StartBool_2 Bool) (Start_5 Int) (StartBool_6 Bool))
  ((Start Int (1 (+ Start Start) (mod Start_1 Start) (abs Start_2) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (false (not StartBool) (<= Start_9 Start_13) (= Start_4 Start_13)))
   (Start_1 Int (y 2 3 (- Start_1) (- Start_1 Start_7) (mod Start_14 Start_8) (abs Start_11) (ite StartBool_7 Start_11 Start_4)))
   (Start_2 Int (x 5 (* Start_10 Start_11) (div Start_11 Start_5) (abs Start_6) (ite StartBool_10 Start_1 Start_8)))
   (StartBool_9 Bool (false (not StartBool_5) (and StartBool_3 StartBool_3) (>= Start_13 Start_11)))
   (Start_13 Int (1 (- Start_6) (mod Start_5 Start_6) (ite StartBool_3 Start_10 Start_12)))
   (StartBool_10 Bool (false true (< Start_2 Start_12) (<= Start_10 Start_2) (= Start_2 Start)))
   (StartBool_7 Bool (false true (not StartBool_5) (and StartBool_3 StartBool_4) (<= Start_10 Start_12) (>= Start_6 Start_5) (> Start_9 Start_4)))
   (Start_11 Int (x (- Start_9 Start_5) (+ Start_9 Start_4) (div Start_2 Start_10) (abs Start_1)))
   (StartBool_8 Bool (true (and StartBool_7 StartBool_7) (< Start_1 Start) (<= Start_4 Start_3) (= Start_3 Start_6)))
   (StartBool_5 Bool (false true (not StartBool_5) (or StartBool_6 StartBool_3) (< Start_1 Start_4) (<= Start_1 Start_3) (= Start_2 Start_2) (>= Start_5 Start) (> Start_4 Start_6)))
   (Start_14 Int (0 (- Start_7) (div Start_2 Start_2) (mod Start_13 Start_14)))
   (StartBool_1 Bool (true false (not StartBool_2) (and StartBool_3 StartBool) (or StartBool_4 StartBool) (<= Start_3 Start_3) (= Start_3 Start) (>= Start_1 Start_2)))
   (Start_6 Int (2 (- Start_6 Start_1) (* Start_7 Start_6)))
   (Start_4 Int (2 (- Start_2 Start_7) (+ Start_10 Start) (div Start Start_5) (abs Start_3) (ite StartBool_6 Start_2 Start_4)))
   (StartBool_4 Bool (false (not StartBool_6) (and StartBool_5 StartBool_3) (or StartBool_4 StartBool_4) (< Start Start_4) (<= Start Start_8) (= Start_1 Start_12) (>= Start_13 Start_5)))
   (Start_12 Int (y (- Start_10 Start_9) (abs Start_1) (ite StartBool_8 Start_11 Start_11)))
   (Start_3 Int (2 4 3 x (+ Start Start_1) (abs Start_1) (ite StartBool_5 Start Start)))
   (Start_7 Int (5 0 (+ Start_8 Start_2) (* Start_1 Start_2) (mod Start_4 Start_8) (abs Start) (ite StartBool Start_2 Start_7)))
   (Start_8 Int (2 (- Start_7 Start_1) (* Start Start_9) (div Start_8 Start_9) (mod Start_1 Start_10) (abs Start_3)))
   (Start_10 Int (y 1 4 3 (- Start_7 Start_7) (* Start_3 Start_7) (abs Start_7) (ite StartBool_3 Start_9 Start)))
   (StartBool_3 Bool (true (or StartBool_4 StartBool_9) (= Start_1 Start) (> Start_10 Start_6)))
   (Start_9 Int (3 5 (+ Start_2 Start_2) (div Start_1 Start_2) (abs Start_5) (ite StartBool_3 Start_7 Start_1)))
   (StartBool_2 Bool (true (not StartBool_9) (and StartBool_9 StartBool_9) (or StartBool_5 StartBool_6) (<= Start_12 Start_7) (= Start_13 Start_12) (> Start_6 Start_13)))
   (Start_5 Int (x 5 (- Start Start_8) (+ Start_6 Start_4) (div Start_3 Start) (ite StartBool_3 Start Start_4)))
   (StartBool_6 Bool (false true (or StartBool_1 StartBool_7) (<= Start_3 Start_11) (= Start_7 Start_11) (>= Start_1 Start_4) (> Start_12 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 0 0)))

(check-synth)
