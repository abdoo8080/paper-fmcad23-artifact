(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (StartBool_6 Bool) (StartBool_8 Bool) (Start_8 Int) (Start_6 Int) (Start_10 Int) (Start_2 Int) (Start_4 Int) (Start_9 Int) (Start_3 Int) (Start_11 Int) (Start_1 Int) (Start_7 Int) (Start_12 Int) (StartBool_1 Bool) (Start_5 Int) (StartBool_9 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_7 Bool) (StartBool_3 Bool) (StartBool_5 Bool))
  ((Start Int (2 3 0 5 x y 4 (- Start) (* Start Start_1) (div Start Start_1) (mod Start Start_1) (abs Start_2)))
   (StartBool Bool (true (< Start_4 Start_6) (<= Start_1 Start_4)))
   (Start_13 Int (1 (- Start Start_10) (* Start_11 Start_5) (abs Start_2) (ite StartBool Start_9 Start_11)))
   (StartBool_6 Bool (false (and StartBool_9 StartBool_8) (or StartBool StartBool_3) (<= Start_12 Start_5) (>= Start_12 Start_5)))
   (StartBool_8 Bool (false (not StartBool_9) (or StartBool_9 StartBool_3) (<= Start_9 Start_7) (> Start_8 Start_1)))
   (Start_8 Int (x y 1 (- Start Start_8) (+ Start_1 Start_3) (* Start_3 Start_7) (div Start_7 Start) (ite StartBool_6 Start_4 Start_9)))
   (Start_6 Int (y (- Start_3) (- Start Start_2) (abs Start)))
   (Start_10 Int (x (- Start_8) (- Start Start) (* Start_7 Start_6) (mod Start Start_11)))
   (Start_2 Int (0 (- Start_2) (+ Start_1 Start) (mod Start_3 Start_4) (abs Start) (ite StartBool Start_2 Start_3)))
   (Start_4 Int (x (- Start Start_1) (mod Start_2 Start_1) (abs Start_4)))
   (Start_9 Int (4 (- Start_9) (* Start_3 Start_7) (mod Start_10 Start_9) (ite StartBool_7 Start_10 Start_7)))
   (Start_3 Int (1 5 y (- Start_1)))
   (Start_11 Int (1 4 0 5 2 3 (- Start_8 Start_2) (+ Start_3 Start_9) (div Start_2 Start_2) (mod Start_6 Start_10) (ite StartBool_6 Start_11 Start_7)))
   (Start_1 Int (0 (- Start_1) (- Start Start_2) (+ Start_5 Start) (div Start_1 Start_6) (mod Start_3 Start) (abs Start_4) (ite StartBool_1 Start_2 Start_3)))
   (Start_7 Int (5 (+ Start_5 Start) (div Start_3 Start_6) (ite StartBool_5 Start_3 Start_1)))
   (Start_12 Int (4 (- Start_3 Start_13) (+ Start_6 Start_9) (* Start_2 Start_9) (ite StartBool_5 Start_13 Start)))
   (StartBool_1 Bool (true false (<= Start Start_2) (>= Start_6 Start_4)))
   (Start_5 Int (1 4 5 0 (- Start_7 Start_7) (+ Start Start_4) (* Start Start_2) (div Start_4 Start_6) (abs Start_1) (ite StartBool_2 Start_7 Start_7)))
   (StartBool_9 Bool (true false (or StartBool_2 StartBool_3) (< Start_5 Start_5) (<= Start_4 Start_4) (>= Start_9 Start_11)))
   (StartBool_4 Bool (true false (and StartBool_2 StartBool_1) (or StartBool_2 StartBool_2) (<= Start_2 Start)))
   (StartBool_2 Bool (true (not StartBool) (or StartBool_3 StartBool_2) (< Start_5 Start) (>= Start_5 Start_6)))
   (StartBool_7 Bool (true false (and StartBool_2 StartBool_8) (< Start_10 Start_6)))
   (StartBool_3 Bool (false (and StartBool_4 StartBool_2) (< Start_4 Start_7)))
   (StartBool_5 Bool (false true (not StartBool_5) (or StartBool StartBool_2) (< Start_7 Start_8) (>= Start_1 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (* 3 4) x)))

(check-synth)
