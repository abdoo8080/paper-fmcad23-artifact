(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (Start_1 Int) (Start_2 Int) (Start_3 Int) (StartBool_5 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (Start_6 Int) (Start_16 Int) (Start_4 Int) (Start_10 Int) (Start_11 Int) (Start_7 Int) (Start_8 Int) (Start_17 Int) (Start_13 Int) (StartBool_6 Bool) (StartBool_2 Bool) (Start_9 Int) (Start_5 Int) (StartBool_3 Bool) (Start_12 Int) (Start_14 Int) (Start_15 Int))
  ((Start Int (1 x 0 y 2 (- Start) (- Start_1 Start_1) (* Start_2 Start_3) (mod Start Start_3) (abs Start_4)))
   (StartBool Bool (false (not StartBool_3) (or StartBool_7 StartBool_5) (< Start_1 Start_2) (<= Start_12 Start_16) (= Start_7 Start_1)))
   (StartBool_7 Bool (true (or StartBool_2 StartBool_1) (>= Start_5 Start_3) (> Start_4 Start_14)))
   (Start_1 Int (5 (* Start_11 Start_15)))
   (Start_2 Int (x y 2 1 (div Start_17 Start_9) (ite StartBool_2 Start_16 Start_9)))
   (Start_3 Int (3 (- Start_9 Start_4) (+ Start_8 Start_17) (abs Start_16)))
   (StartBool_5 Bool (false true (< Start_12 Start_4) (<= Start_13 Start_3) (= Start_3 Start_3) (>= Start Start_11)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_3 StartBool_4) (<= Start_9 Start_1) (> Start_13 Start_7)))
   (StartBool_4 Bool (true (and StartBool_3 StartBool_1) (or StartBool_4 StartBool_4)))
   (Start_6 Int (5 (- Start_6) (+ Start_7 Start_2) (div Start_3 Start_7)))
   (Start_16 Int (2 y (+ Start_15 Start_4) (mod Start_7 Start_3) (abs Start_5) (ite StartBool Start_2 Start_16)))
   (Start_4 Int (4 (+ Start_4 Start_4) (mod Start_5 Start_6) (ite StartBool Start Start_4)))
   (Start_10 Int (5 (- Start_3) (- Start Start_4) (+ Start_9 Start) (* Start_5 Start_8) (abs Start_10)))
   (Start_11 Int (5 2 y 1 (+ Start_6 Start_1) (* Start_7 Start_3) (abs Start_13)))
   (Start_7 Int (3 1 (- Start) (* Start_8 Start_2)))
   (Start_8 Int (4 1 x (- Start_3) (- Start_9 Start_6) (+ Start_6 Start_7) (div Start_5 Start_1) (mod Start_7 Start_8) (ite StartBool Start_5 Start_5)))
   (Start_17 Int (y x 0 (- Start_17) (+ Start_16 Start_4) (div Start_3 Start_12) (mod Start_11 Start_8) (abs Start_1) (ite StartBool_4 Start_12 Start_7)))
   (Start_13 Int (x (- Start_9 Start_14) (+ Start_13 Start_14) (* Start_5 Start_13) (abs Start_7)))
   (StartBool_6 Bool (false (not StartBool) (< Start_1 Start_12) (<= Start_6 Start_13) (> Start_3 Start_13)))
   (StartBool_2 Bool (false true (not StartBool_4) (and StartBool_6 StartBool_6) (= Start_11 Start_7) (>= Start_4 Start)))
   (Start_9 Int (4 (- Start_10 Start_1) (div Start_5 Start_8) (mod Start_1 Start_6) (ite StartBool Start_2 Start_2)))
   (Start_5 Int (4 (- Start_3 Start_11) (* Start_4 Start_12) (div Start_1 Start_2) (abs Start_6)))
   (StartBool_3 Bool (true false (not StartBool_5) (and StartBool_2 StartBool_4) (or StartBool_5 StartBool_3) (<= Start_2 Start_16)))
   (Start_12 Int (3 (- Start_1) (- Start_8 Start_6) (mod Start_6 Start_6)))
   (Start_14 Int (5 4 (- Start_15 Start_2) (+ Start_14 Start_2) (* Start_9 Start_1) (abs Start_3)))
   (Start_15 Int (4 0 5 (- Start_3) (* Start_1 Start_15) (mod Start_1 Start_6) (abs Start_8) (ite StartBool_1 Start_13 Start_16)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 5 (div x 3))))

(check-synth)
