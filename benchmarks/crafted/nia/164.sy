(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_6 Bool) (Start_15 Int) (Start_9 Int) (StartBool_5 Bool) (Start_10 Int) (StartBool_2 Bool) (Start_5 Int) (Start_18 Int) (Start_8 Int) (Start_7 Int) (Start_20 Int) (Start_22 Int) (Start_4 Int) (Start_3 Int) (Start_11 Int) (Start_24 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_6 Int) (Start_12 Int) (Start_23 Int) (StartBool_4 Bool) (Start_19 Int) (Start_14 Int) (Start_13 Int) (Start_16 Int) (Start_25 Int) (Start_17 Int) (Start_21 Int))
  ((Start Int (5 (- Start_1) (- Start_2 Start_1) (mod Start_1 Start_2) (ite StartBool_1 Start_2 Start_2)))
   (StartBool Bool (true (not StartBool_1) (and StartBool_6 StartBool_6) (<= Start_22 Start_15) (>= Start_12 Start_17) (> Start_19 Start_11)))
   (Start_1 Int (4 1 (+ Start_12 Start_1) (* Start_14 Start_4) (abs Start_21)))
   (Start_2 Int (x y 1 0 5 4 3 (+ Start_17 Start_24) (div Start_16 Start_16) (mod Start_19 Start_8) (ite StartBool_2 Start_25 Start_17)))
   (StartBool_6 Bool (true false (not StartBool_3) (and StartBool_3 StartBool_4) (or StartBool_5 StartBool_5) (= Start_13 Start_25) (>= Start_3 Start_19)))
   (Start_15 Int (0 (- Start_14) (+ Start_10 Start_14) (div Start_4 Start_22) (mod Start Start_13) (ite StartBool Start_18 Start_20)))
   (Start_9 Int (0 (+ Start_3 Start_2) (* Start_7 Start) (div Start_6 Start_5) (mod Start_4 Start_7) (ite StartBool_3 Start_4 Start_9)))
   (StartBool_5 Bool (false (and StartBool_3 StartBool_3) (or StartBool_1 StartBool_5) (<= Start_8 Start_9) (= Start_3 Start_5)))
   (Start_10 Int (1 (- Start_6) (+ Start_1 Start_5) (abs Start_6) (ite StartBool_2 Start_6 Start_9)))
   (StartBool_2 Bool (false (not StartBool_4) (and StartBool StartBool_1) (or StartBool_3 StartBool_5) (= Start_7 Start_2)))
   (Start_5 Int (y (- Start Start_5) (mod Start_1 Start_6) (ite StartBool_3 Start_1 Start_3)))
   (Start_18 Int (4 2 (- Start_15 Start_14) (+ Start_8 Start_17) (div Start_2 Start_15) (mod Start_8 Start_6) (ite StartBool_6 Start_10 Start_2)))
   (Start_8 Int (4 (- Start_7 Start_9) (+ Start_10 Start_7) (* Start_7 Start_3) (div Start_7 Start_4) (mod Start_8 Start_4)))
   (Start_7 Int (2 (- Start Start_2) (+ Start_3 Start_6) (mod Start_3 Start_3) (abs Start_7)))
   (Start_20 Int (0 2 (- Start_12 Start_21) (+ Start_11 Start_2) (div Start_11 Start_13) (mod Start_9 Start_3)))
   (Start_22 Int (4 (- Start_13) (- Start_12 Start_16) (+ Start_13 Start_23)))
   (Start_4 Int (3 2 (- Start_5) (* Start_6 Start_7) (div Start_2 Start_1) (mod Start_7 Start_1)))
   (Start_3 Int (2 4 3 (- Start_1) (div Start_2 Start) (mod Start Start_4) (abs Start_1)))
   (Start_11 Int (1 (- Start_15 Start_24) (+ Start_17 Start_20) (* Start_2 Start_14) (mod Start_12 Start_15) (ite StartBool_2 Start_24 Start_17)))
   (Start_24 Int (3 (- Start_18 Start_11) (+ Start_7 Start_11) (div Start_13 Start_25) (abs Start_15) (ite StartBool_3 Start_16 Start_20)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool_3) (or StartBool StartBool_2) (< Start_1 Start_3) (<= Start_1 Start_1) (>= Start Start_1) (> Start_1 Start_3)))
   (StartBool_3 Bool (false (and StartBool_2 StartBool_2) (= Start_2 Start_6)))
   (Start_6 Int (x (- Start_1) (- Start_4 Start_4) (abs Start_2)))
   (Start_12 Int (x (+ Start_11 Start) (* Start_13 Start_11) (div Start_5 Start_14) (mod Start_14 Start_6) (abs Start_11) (ite StartBool_4 Start_9 Start_1)))
   (Start_23 Int (2 (- Start_12 Start_10) (* Start_23 Start_1) (mod Start_17 Start_20)))
   (StartBool_4 Bool (false (or StartBool_6 StartBool_3) (>= Start_11 Start_7) (> Start_12 Start_6)))
   (Start_19 Int (y 3 (- Start_16) (+ Start_2 Start_7) (* Start_17 Start_9) (abs Start_10) (ite StartBool_2 Start_20 Start_9)))
   (Start_14 Int (3 y (* Start_10 Start_1) (div Start_5 Start_9) (abs Start_14)))
   (Start_13 Int (0 1 (- Start_12 Start_15) (+ Start_14 Start_12) (* Start_9 Start_16) (div Start_7 Start_1) (mod Start_12 Start_11) (ite StartBool_6 Start_13 Start_2)))
   (Start_16 Int (y 4 1 (- Start_7) (+ Start_2 Start_5) (* Start_9 Start_6) (mod Start_14 Start_6) (ite StartBool_1 Start_17 Start_3)))
   (Start_25 Int (0 x (- Start_11 Start_11) (+ Start_6 Start_12) (mod Start_7 Start_24)))
   (Start_17 Int (4 3 0 y (- Start_5 Start_10) (+ Start_6 Start_18) (* Start_15 Start_19) (abs Start_16)))
   (Start_21 Int (0 (- Start_9 Start_3) (+ Start_20 Start_17) (* Start_3 Start_1) (div Start_1 Start_6) (mod Start_20 Start_17) (abs Start_10) (ite StartBool Start_10 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (abs (div 1 (abs (mod 1 x)))) 0)))

(check-synth)
