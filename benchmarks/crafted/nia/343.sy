(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_10 Bool) (Start_16 Int) (Start_20 Int) (Start_1 Int) (Start_10 Int) (Start_2 Int) (StartBool_4 Bool) (Start_8 Int) (StartBool_5 Bool) (Start_14 Int) (Start_5 Int) (Start_22 Int) (Start_3 Int) (StartBool_6 Bool) (StartBool_8 Bool) (Start_11 Int) (StartBool_7 Bool) (Start_23 Int) (Start_6 Int) (Start_12 Int) (StartBool_1 Bool) (Start_15 Int) (StartBool_3 Bool) (Start_21 Int) (Start_13 Int) (Start_9 Int) (Start_18 Int) (StartBool_2 Bool) (Start_4 Int) (Start_19 Int) (Start_17 Int) (Start_7 Int) (StartBool_9 Bool))
  ((Start Int (3 (- Start_1 Start) (+ Start_2 Start) (* Start_1 Start_1) (div Start_3 Start_1)))
   (StartBool Bool (true (not StartBool_2) (and StartBool_6 StartBool_10) (or StartBool StartBool_9) (= Start_13 Start_19)))
   (StartBool_10 Bool (true (not StartBool_7) (or StartBool StartBool_1) (>= Start_12 Start_15) (> Start_1 Start_19)))
   (Start_16 Int (5 (+ Start_21 Start_15) (div Start_18 Start_20) (abs Start_3)))
   (Start_20 Int (2 (+ Start_20 Start_2) (abs Start_2)))
   (Start_1 Int (x 1 5 (- Start_17) (- Start_2 Start_21) (+ Start_4 Start_18) (mod Start_3 Start_23)))
   (Start_10 Int (y 4 (+ Start_9 Start_10) (* Start Start) (mod Start_10 Start_2) (abs Start_9) (ite StartBool_6 Start_7 Start_8)))
   (Start_2 Int (1 (+ Start_4 Start_2) (* Start_4 Start) (mod Start_3 Start_2) (abs Start) (ite StartBool_1 Start_2 Start_5)))
   (StartBool_4 Bool (false (< Start Start_1) (= Start_8 Start_5) (>= Start_4 Start)))
   (Start_8 Int (x (- Start_7) (div Start_1 Start_9) (abs Start_2)))
   (StartBool_5 Bool (false (and StartBool StartBool) (or StartBool_5 StartBool_3) (<= Start_4 Start_4) (= Start Start_9)))
   (Start_14 Int (2 y (- Start) (- Start_8 Start_11) (div Start_16 Start_17) (abs Start_17)))
   (Start_5 Int (3 (- Start_4 Start_2) (+ Start_3 Start_3) (* Start_1 Start_6) (div Start Start_6) (ite StartBool_2 Start_5 Start_5)))
   (Start_22 Int (x 1 5 4 3 (- Start_8) (- Start_5 Start_19) (+ Start_17 Start_15) (div Start_15 Start_11) (mod Start_19 Start_4)))
   (Start_3 Int (5 0 x 2))
   (StartBool_6 Bool (true (not StartBool_7) (and StartBool_8 StartBool_1) (or StartBool_4 StartBool_1) (< Start_7 Start_6) (<= Start_10 Start_3) (> Start_4 Start_11)))
   (StartBool_8 Bool (false (not StartBool_1) (or StartBool_8 StartBool_1) (> Start_2 Start_7)))
   (Start_11 Int (y (- Start_11) (- Start_9 Start_10) (ite StartBool_5 Start_6 Start_4)))
   (StartBool_7 Bool (false (not StartBool_6) (or StartBool_5 StartBool_7)))
   (Start_23 Int (5 (+ Start_6 Start_13) (* Start_19 Start_1) (div Start_9 Start_14) (mod Start_10 Start_5)))
   (Start_6 Int (5 (- Start_8 Start_5) (+ Start_7 Start_12) (* Start_5 Start_9) (div Start_1 Start_11) (mod Start_7 Start_4) (ite StartBool_5 Start_12 Start_4)))
   (Start_12 Int (x 1 (- Start_5) (+ Start_1 Start_6) (* Start_10 Start_4) (div Start_3 Start_4) (mod Start_5 Start_5) (abs Start_1)))
   (StartBool_1 Bool (false true (and StartBool_7 StartBool_1) (or StartBool_7 StartBool) (<= Start_11 Start_3) (= Start_1 Start_4) (> Start_13 Start_5)))
   (Start_15 Int (4 (- Start_13) (+ Start_13 Start_13) (abs Start_9)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_6 StartBool_6) (or StartBool_3 StartBool_3) (< Start_4 Start_10) (<= Start_9 Start_3)))
   (Start_21 Int (x 2 4 5 (- Start_1) (* Start_22 Start_22) (div Start_19 Start_13) (mod Start_10 Start_22) (abs Start_4)))
   (Start_13 Int (x 3 (- Start_6 Start_9) (+ Start_11 Start_2) (* Start_2 Start_5) (div Start_5 Start) (ite StartBool_8 Start_13 Start)))
   (Start_9 Int (y 1 (+ Start_3 Start_1) (div Start Start_5) (mod Start_3 Start_5)))
   (Start_18 Int (5 (- Start_20) (abs Start_21)))
   (StartBool_2 Bool (true false (and StartBool_3 StartBool_4) (or StartBool_4 StartBool_5) (< Start_1 Start_1) (<= Start_4 Start_7) (> Start_5 Start_1)))
   (Start_4 Int (0 4 (- Start_8 Start_4) (+ Start_4 Start_4) (* Start_9 Start) (div Start_7 Start_1) (mod Start_14 Start_15) (abs Start_8) (ite StartBool_6 Start_8 Start_11)))
   (Start_19 Int (1 y (ite StartBool_4 Start_16 Start_5)))
   (Start_17 Int (3 (- Start_1) (- Start_18 Start_15) (+ Start_10 Start_5) (div Start_12 Start_19) (abs Start_1) (ite StartBool_9 Start_9 Start_12)))
   (Start_7 Int (x (- Start_2) (- Start_1 Start_5) (mod Start_5 Start_5) (abs Start_8)))
   (StartBool_9 Bool (true false (<= Start_11 Start_18) (= Start_7 Start_13) (> Start_16 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (div x y) y)))

(check-synth)
