(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_9 Bool) (Start_5 Int) (StartBool_7 Bool) (Start_7 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_12 Int) (Start_2 Int) (Start_6 Int) (Start_13 Int) (StartBool_3 Bool) (StartBool_6 Bool) (Start_4 Int) (Start_3 Int) (StartBool_2 Bool) (Start_19 Int) (Start_11 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_8 Bool) (Start_8 Int) (Start_14 Int) (Start_16 Int) (Start_17 Int) (Start_18 Int) (Start_10 Int) (Start_15 Int) (Start_1 Int))
  ((Start Int (1 x 4 (- Start) (+ Start Start_1) (abs Start_1) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (true (and StartBool_2 StartBool_9) (or StartBool_2 StartBool_3) (<= Start_16 Start_11) (= Start_9 Start_16) (> Start_1 Start_13)))
   (StartBool_9 Bool (true (not StartBool_3) (or StartBool_3 StartBool_5) (<= Start_6 Start_12) (= Start_12 Start_14) (> Start_13 Start_5)))
   (Start_5 Int (4 (- Start_5) (mod Start_11 Start_8) (abs Start_9) (ite StartBool_1 Start_7 Start_2)))
   (StartBool_7 Bool (true (and StartBool_3 StartBool_3) (or StartBool_3 StartBool_6) (< Start_2 Start_8) (>= Start_9 Start_8) (> Start_9 Start_19)))
   (Start_7 Int (2 (- Start_4 Start_7) (div Start_3 Start_5) (mod Start_6 Start_2) (ite StartBool_4 Start_7 Start_8)))
   (StartBool_4 Bool (false true (or StartBool_1 StartBool_5) (= Start_7 Start)))
   (StartBool_5 Bool (false true (not StartBool) (< Start_6 Start_6) (<= Start_2 Start_2) (= Start_4 Start_8) (> Start_3 Start)))
   (Start_12 Int (x 1 (* Start_9 Start_4) (div Start_12 Start_2) (mod Start_5 Start_3) (abs Start_7)))
   (Start_2 Int (3 (- Start_14) (+ Start_5 Start_6) (abs Start_6) (ite StartBool_2 Start_2 Start_1)))
   (Start_6 Int (x y 2 3 (- Start_3) (div Start_3 Start_9) (mod Start_8 Start_5) (ite StartBool_1 Start_7 Start_4)))
   (Start_13 Int (5 (+ Start_7 Start_12) (* Start_7 Start_13) (div Start_6 Start_9) (mod Start_4 Start_11) (ite StartBool_8 Start_12 Start_4)))
   (StartBool_3 Bool (false true (or StartBool_4 StartBool_3) (< Start_3 Start) (= Start_2 Start_6) (>= Start_3 Start)))
   (StartBool_6 Bool (false true (and StartBool_7 StartBool_7) (or StartBool_4 StartBool_7) (> Start_13 Start_4)))
   (Start_4 Int (x 0 (* Start_5 Start) (div Start_5 Start_6) (abs Start_1) (ite StartBool_2 Start Start)))
   (Start_3 Int (4 3 (- Start_3) (- Start_3 Start_2) (div Start_1 Start_2) (ite StartBool_1 Start_4 Start_3)))
   (StartBool_2 Bool (true (not StartBool) (and StartBool_3 StartBool_3) (or StartBool_1 StartBool_3) (< Start_2 Start_3) (>= Start Start_5)))
   (Start_19 Int (2 (- Start_12) (- Start_5 Start_18) (+ Start_11 Start) (mod Start_12 Start_16) (abs Start_15)))
   (Start_11 Int (1 (- Start_9 Start_10) (* Start Start_2)))
   (Start_9 Int (y (mod Start_5 Start_2) (abs Start) (ite StartBool_2 Start_10 Start_1)))
   (StartBool_1 Bool (false true (and StartBool_3 StartBool_2) (or StartBool_4 StartBool_6) (<= Start_12 Start_11) (= Start_7 Start_10)))
   (StartBool_8 Bool (false (and StartBool_8 StartBool_7) (< Start_14 Start_6) (>= Start_13 Start_6)))
   (Start_8 Int (4 (ite StartBool Start_7 Start_2)))
   (Start_14 Int (5 (- Start_6) (+ Start_13 Start_15) (* Start_16 Start_14) (div Start_9 Start_3)))
   (Start_16 Int (1 0 3 (- Start_4) (- Start_9 Start_6) (+ Start_13 Start_17)))
   (Start_17 Int (3 (- Start_11 Start_10) (* Start_17 Start_1) (abs Start_1)))
   (Start_18 Int (1 (- Start_13) (- Start_3 Start_6) (+ Start_10 Start_16) (* Start_15 Start_9) (div Start_1 Start_13) (mod Start_8 Start_13)))
   (Start_10 Int (3 (- Start_2 Start_6) (mod Start_1 Start)))
   (Start_15 Int (1 (- Start_6) (* Start_16 Start_3) (mod Start_14 Start_18) (abs Start_9)))
   (Start_1 Int (x (* Start_18 Start_7) (div Start_8 Start_12) (ite StartBool_3 Start_8 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ x (div 5 0))))

(check-synth)
