(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_10 Int) (StartBool_11 Bool) (Start_15 Int) (StartBool_3 Bool) (Start_2 Int) (Start_11 Int) (Start_7 Int) (StartBool_2 Bool) (Start_8 Int) (Start_9 Int) (StartBool_6 Bool) (Start_5 Int) (StartBool_1 Bool) (StartBool_10 Bool) (Start_3 Int) (Start_16 Int) (StartBool_7 Bool) (StartBool_8 Bool) (StartBool_5 Bool) (StartBool_9 Bool) (Start_12 Int) (Start_13 Int) (StartBool_4 Bool) (Start_4 Int) (Start_14 Int) (Start_6 Int) (Start_1 Int))
  ((Start Int (x (- Start_1) (+ Start Start_2) (mod Start_3 Start_1) (ite StartBool Start Start)))
   (StartBool Bool (true (or StartBool_4 StartBool_4) (< Start_3 Start_13) (= Start_13 Start_8) (> Start_17 Start_12)))
   (Start_17 Int (4 0 (mod Start_3 Start_2) (ite StartBool_8 Start_8 Start_11)))
   (Start_10 Int (1 (* Start_5 Start_1) (div Start_8 Start_2) (mod Start_10 Start_5) (abs Start_1) (ite StartBool_5 Start_6 Start_11)))
   (StartBool_11 Bool (false true (not StartBool_10) (< Start_8 Start_8) (<= Start_12 Start_4) (> Start_4 Start_9)))
   (Start_15 Int (2 (- Start_5) (+ Start_13 Start_10) (div Start_11 Start_13) (abs Start_8) (ite StartBool_4 Start_1 Start_3)))
   (StartBool_3 Bool (true (not StartBool_2) (or StartBool_4 StartBool_2) (= Start_2 Start_10)))
   (Start_2 Int (5 y 4 (+ Start_11 Start_6) (div Start_3 Start_3) (mod Start_2 Start_5) (ite StartBool_8 Start Start_13)))
   (Start_11 Int (1 4 (- Start_6) (- Start_10 Start_10) (* Start_4 Start_3) (div Start_9 Start_7)))
   (Start_7 Int (5 y (- Start_4) (* Start_3 Start_3) (mod Start_8 Start_8)))
   (StartBool_2 Bool (true false (not StartBool) (or StartBool_3 StartBool_3) (> Start_6 Start_1)))
   (Start_8 Int (x (- Start Start_7) (+ Start_6 Start_7) (* Start_8 Start) (div Start_5 Start_3) (abs Start_6) (ite StartBool_1 Start_9 Start_4)))
   (Start_9 Int (2 3 4 5 y x 0 1 (- Start_6) (- Start_1 Start_5) (+ Start_6 Start_3) (mod Start_8 Start_4) (ite StartBool_2 Start_5 Start_4)))
   (StartBool_6 Bool (true false (not StartBool_10) (and StartBool_2 StartBool_11) (= Start_11 Start_7) (>= Start_2 Start_11) (> Start_12 Start_7)))
   (Start_5 Int (0 (- Start_6) (+ Start_3 Start_2) (* Start_1 Start) (mod Start_4 Start_1) (ite StartBool_1 Start Start_1)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_1 StartBool_2) (< Start Start_6) (= Start Start_1) (>= Start_7 Start_1)))
   (StartBool_10 Bool (true false (not StartBool_9) (and StartBool_9 StartBool_11) (or StartBool_7 StartBool_2) (< Start_10 Start_1) (>= Start_3 Start_13)))
   (Start_3 Int (x 2 (+ Start Start_1) (* Start Start_3) (div Start_2 Start_4) (abs Start_4) (ite StartBool_1 Start_2 Start_5)))
   (Start_16 Int (x 4 (- Start_14) (+ Start Start_14) (* Start_13 Start_4) (abs Start_15)))
   (StartBool_7 Bool (false (and StartBool StartBool_8) (< Start_9 Start_10)))
   (StartBool_8 Bool (false (not StartBool_4) (and StartBool_9 StartBool_4) (or StartBool_6 StartBool_8) (<= Start_4 Start_8) (= Start_11 Start_1)))
   (StartBool_5 Bool (false true (and StartBool_6 StartBool_7) (or StartBool_4 StartBool_4)))
   (StartBool_9 Bool (false true (not StartBool_6) (and StartBool_2 StartBool) (or StartBool StartBool_6) (<= Start_3 Start_9) (> Start_10 Start_5)))
   (Start_12 Int (x 2 (- Start_9) (* Start_8 Start_6) (ite StartBool_5 Start_12 Start_3)))
   (Start_13 Int (2 3 (- Start Start_4) (+ Start_9 Start_6) (div Start_1 Start_12) (ite StartBool_9 Start Start_13)))
   (StartBool_4 Bool (true false (and StartBool_7 StartBool_8) (or StartBool_7 StartBool_3) (< Start_7 Start_4) (<= Start_5 Start_9) (= Start_10 Start_10) (> Start_4 Start_7)))
   (Start_4 Int (0 1 x (- Start_14) (- Start_12 Start_14) (div Start_4 Start_11) (mod Start_14 Start_14) (abs Start_15) (ite StartBool_1 Start_5 Start_6)))
   (Start_14 Int (5 4 2 3 (- Start_3) (+ Start Start_8) (* Start_8 Start_6) (abs Start_10)))
   (Start_6 Int (0 (- Start_2) (abs Start_6)))
   (Start_1 Int (x 3 (- Start_11 Start_3) (ite StartBool Start_16 Start_15)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (- 5 (mod y 4)))))

(check-synth)
