(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (StartBool_7 Bool) (StartBool_2 Bool) (StartBool_3 Bool) (StartBool_9 Bool) (StartBool_5 Bool) (Start_13 Int) (Start_2 Int) (Start_6 Int) (Start_8 Int) (StartBool_8 Bool) (StartBool_1 Bool) (Start_7 Int) (Start_9 Int) (Start_3 Int) (Start_5 Int) (Start_1 Int) (Start_12 Int) (Start_10 Int) (Start_4 Int) (StartBool_6 Bool) (Start_11 Int))
  ((Start Int (5 (- Start Start) (+ Start Start_1) (* Start Start_1) (div Start_2 Start_1) (abs Start)))
   (StartBool Bool (false (and StartBool_2 StartBool_1) (or StartBool_2 StartBool_3) (< Start_8 Start_12) (>= Start_8 Start_4)))
   (StartBool_4 Bool (false true (or StartBool_7 StartBool) (< Start_13 Start_11) (<= Start_12 Start_11) (= Start_1 Start_7) (>= Start Start_5) (> Start_8 Start_12)))
   (StartBool_7 Bool (false (not StartBool) (and StartBool_2 StartBool_6) (or StartBool_8 StartBool_9) (< Start_10 Start_7)))
   (StartBool_2 Bool (true false (not StartBool_4) (and StartBool_5 StartBool_6) (or StartBool_2 StartBool_1) (< Start_1 Start_3) (= Start_9 Start_6)))
   (StartBool_3 Bool (true false (not StartBool_2) (< Start_8 Start_10) (<= Start_1 Start_1) (= Start_3 Start_6)))
   (StartBool_9 Bool (true (not StartBool) (and StartBool_8 StartBool_8) (<= Start_11 Start_9) (= Start_1 Start_6) (>= Start_5 Start_11)))
   (StartBool_5 Bool (true false (or StartBool_7 StartBool_4) (< Start_11 Start_2) (= Start_12 Start_9) (> Start_4 Start_2)))
   (Start_13 Int (5 (- Start_10) (mod Start_10 Start_1)))
   (Start_2 Int (1 0 (- Start_3) (- Start_3 Start_2) (+ Start_4 Start_1) (* Start Start_5) (abs Start_1) (ite StartBool_1 Start_1 Start_6)))
   (Start_6 Int (4 y (- Start_7 Start_4) (* Start_1 Start_5) (div Start_2 Start_8) (ite StartBool_1 Start_6 Start_4)))
   (Start_8 Int (y 5 4 (- Start_4) (- Start_1 Start) (div Start_5 Start_8) (mod Start_1 Start_7) (abs Start_4) (ite StartBool_1 Start_7 Start_3)))
   (StartBool_8 Bool (true (not StartBool_7) (or StartBool_6 StartBool_1) (<= Start_13 Start_6) (>= Start_1 Start_3) (> Start_10 Start_5)))
   (StartBool_1 Bool (true (< Start Start_2) (= Start_2 Start_8) (>= Start_3 Start_8) (> Start_7 Start_9)))
   (Start_7 Int (y (- Start_6) (- Start_4 Start_8) (+ Start Start) (div Start_4 Start_4) (mod Start_7 Start_5) (ite StartBool_1 Start Start_6)))
   (Start_9 Int (0 y 4 (- Start_7) (- Start_6 Start_1) (div Start_2 Start_8) (mod Start_8 Start_8) (abs Start_4) (ite StartBool Start_5 Start_7)))
   (Start_3 Int (3 (+ Start_9 Start_9)))
   (Start_5 Int (y 2 (- Start_6) (+ Start_4 Start_1) (mod Start_5 Start_3) (abs Start_10) (ite StartBool_1 Start_9 Start_4)))
   (Start_1 Int (4 (* Start_10 Start_11) (mod Start_10 Start_8) (abs Start_5)))
   (Start_12 Int (4 (+ Start_11 Start_3) (* Start_3 Start) (abs Start_2) (ite StartBool_1 Start_7 Start_8)))
   (Start_10 Int (y 0 (- Start_8) (- Start Start_3) (+ Start_1 Start_7) (* Start_2 Start)))
   (Start_4 Int (y (- Start_11) (- Start_1 Start_11) (* Start_1 Start_4) (mod Start_8 Start_3) (abs Start_5)))
   (StartBool_6 Bool (true (not StartBool_2) (and StartBool_2 StartBool_4) (<= Start_3 Start_5) (= Start_8 Start_8) (>= Start_12 Start_2)))
   (Start_11 Int (3 1 (+ Start_2 Start_8) (* Start_4 Start_4) (div Start_8 Start_11) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 0 0))))

(check-synth)
