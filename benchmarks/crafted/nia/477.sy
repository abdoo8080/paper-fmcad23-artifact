(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_18 Int) (Start_2 Int) (StartBool_1 Bool) (Start_16 Int) (Start_12 Int) (Start_14 Int) (Start_13 Int) (Start_4 Int) (Start_15 Int) (Start_11 Int) (Start_5 Int) (StartBool_2 Bool) (Start_3 Int) (StartBool_5 Bool) (StartBool_3 Bool) (Start_8 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_9 Int) (Start_1 Int) (Start_6 Int) (Start_7 Int) (Start_10 Int))
  ((Start Int (4 y (- Start) (- Start_1 Start) (+ Start_1 Start) (div Start_1 Start) (mod Start_1 Start_1) (abs Start_2) (ite StartBool_1 Start_3 Start_2)))
   (StartBool Bool (true (and StartBool_3 StartBool_3) (< Start_3 Start_6) (<= Start_9 Start_17) (= Start_3 Start_9) (> Start_6 Start_7)))
   (Start_17 Int (4 (- Start_3 Start_3) (abs Start_3)))
   (Start_18 Int (x 3 (mod Start_12 Start_18)))
   (Start_2 Int (1 2 (- Start_17 Start_12) (mod Start_17 Start_14) (abs Start_18)))
   (StartBool_1 Bool (false (not StartBool_2) (<= Start_4 Start_8)))
   (Start_16 Int (4 (- Start_12) (- Start_5 Start_8) (div Start_7 Start_9) (ite StartBool Start_9 Start_14)))
   (Start_12 Int (2 (- Start_14) (+ Start_5 Start_13) (* Start_4 Start_6) (mod Start_7 Start_3) (abs Start_15) (ite StartBool_1 Start_10 Start_12)))
   (Start_14 Int (2 y (- Start_11) (div Start_16 Start_9)))
   (Start_13 Int (3 (- Start_4) (- Start_2 Start_8) (div Start_8 Start_6)))
   (Start_4 Int (3 (+ Start_5 Start_12) (div Start Start_13) (abs Start_5) (ite StartBool_2 Start_8 Start_4)))
   (Start_15 Int (3 5 (div Start_4 Start_16) (mod Start_14 Start_12)))
   (Start_11 Int (5 1 3 (div Start_11 Start) (ite StartBool_5 Start_2 Start_7)))
   (Start_5 Int (y 3 5 (- Start_2) (* Start_4 Start_6) (div Start_2 Start_2) (mod Start_2 Start_1) (abs Start_7) (ite StartBool_2 Start_7 Start_5)))
   (StartBool_2 Bool (false true (and StartBool_1 StartBool_3) (or StartBool_2 StartBool_4) (< Start Start_2) (<= Start_3 Start_3) (= Start_3 Start_4)))
   (Start_3 Int (2 (- Start_4) (mod Start_5 Start_3) (abs Start_4)))
   (StartBool_5 Bool (true false (not StartBool_5) (and StartBool_2 StartBool_2) (< Start_2 Start) (<= Start_6 Start_1) (= Start_4 Start_6) (> Start_4 Start_2)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_6 StartBool_1) (>= Start_8 Start_3)))
   (Start_8 Int (2 (- Start_8) (- Start_7 Start_8) (+ Start_8 Start_3) (* Start_9 Start_9) (mod Start_5 Start_2) (abs Start)))
   (StartBool_4 Bool (false true (not StartBool_5) (or StartBool_3 StartBool_3) (< Start_4 Start_7) (<= Start_3 Start_6) (> Start_2 Start_3)))
   (StartBool_6 Bool (true false (not StartBool_1) (and StartBool StartBool_5) (<= Start_1 Start_2)))
   (Start_9 Int (2 5 (- Start_1) (- Start_7 Start_8) (+ Start_4 Start_8) (mod Start_9 Start_1) (ite StartBool_2 Start_2 Start_9)))
   (Start_1 Int (4 (+ Start_8 Start_16) (mod Start_10 Start_15)))
   (Start_6 Int (4 x (- Start_10) (- Start_6 Start_4) (+ Start_2 Start_3) (* Start_2 Start_1) (mod Start_10 Start_3) (abs Start_10)))
   (Start_7 Int (2 (- Start_8) (* Start Start_9) (div Start_6 Start_9) (abs Start_5) (ite StartBool_1 Start_1 Start_1)))
   (Start_10 Int (5 2 (- Start_9) (- Start_2 Start_9) (+ Start_7 Start_9) (* Start_1 Start_11) (mod Start_3 Start_1) (abs Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (mod 0 y) y)))

(check-synth)
