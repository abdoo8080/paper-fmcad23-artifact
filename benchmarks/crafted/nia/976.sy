(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_12 Bool) (Start_22 Int) (Start_21 Int) (Start_19 Int) (Start_1 Int) (StartBool_7 Bool) (StartBool_11 Bool) (Start_3 Int) (Start_7 Int) (Start_14 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_5 Int) (StartBool_4 Bool) (Start_4 Int) (Start_17 Int) (Start_8 Int) (StartBool_1 Bool) (Start_10 Int) (Start_12 Int) (StartBool_6 Bool) (Start_11 Int) (Start_18 Int) (Start_6 Int) (StartBool_9 Bool) (Start_13 Int) (Start_16 Int) (Start_2 Int) (Start_9 Int) (Start_15 Int) (StartBool_10 Bool) (StartBool_5 Bool) (StartBool_8 Bool) (Start_20 Int))
  ((Start Int (1 4 (* Start Start_1) (div Start Start_2) (mod Start Start_1) (ite StartBool_1 Start_2 Start_2)))
   (StartBool Bool (true false (and StartBool_12 StartBool_5) (<= Start_3 Start_21) (= Start_14 Start_3) (>= Start_12 Start_8) (> Start_7 Start_18)))
   (StartBool_12 Bool (false (or StartBool_7 StartBool_12) (< Start_10 Start_20) (>= Start_2 Start_5) (> Start_21 Start_5)))
   (Start_22 Int (3 (+ Start_11 Start_10) (abs Start_6)))
   (Start_21 Int (1 (- Start_12) (- Start_15 Start_15) (+ Start_10 Start_14) (* Start_21 Start_21) (div Start_11 Start_5) (mod Start_15 Start_22)))
   (Start_19 Int (y x 5 (div Start_16 Start_11) (abs Start_8) (ite StartBool_7 Start_16 Start_2)))
   (Start_1 Int (y (* Start_2 Start_20) (div Start_20 Start_18)))
   (StartBool_7 Bool (true (and StartBool_3 StartBool_8) (or StartBool_1 StartBool) (< Start_11 Start_1) (>= Start_1 Start_12)))
   (StartBool_11 Bool (false (<= Start_8 Start_5) (= Start_6 Start_1)))
   (Start_3 Int (1 (- Start_4) (mod Start_4 Start)))
   (Start_7 Int (1 (- Start_5) (- Start_3 Start_6) (+ Start_7 Start_3) (mod Start_6 Start_4)))
   (Start_14 Int (5 (+ Start_15 Start) (* Start_11 Start_10) (abs Start_10) (ite StartBool_3 Start Start_4)))
   (StartBool_2 Bool (true (not StartBool_1) (< Start_3 Start_6) (= Start_2 Start_1) (>= Start_1 Start_7)))
   (StartBool_3 Bool (true (not StartBool_5) (and StartBool_6 StartBool_2) (or StartBool_4 StartBool_5) (= Start_7 Start_9) (> Start_10 Start_1)))
   (Start_5 Int (3 (- Start_4) (+ Start_4 Start) (div Start_2 Start_3) (abs Start_1) (ite StartBool_1 Start_5 Start)))
   (StartBool_4 Bool (true (not StartBool) (<= Start_6 Start_5) (= Start_2 Start_2)))
   (Start_4 Int (2 (- Start_5) (* Start_5 Start_1)))
   (Start_17 Int (1 (- Start_16) (- Start_17 Start_4) (mod Start_16 Start_1) (abs Start_10)))
   (Start_8 Int (1 4 5 x 3 0 2 y (- Start_3 Start_2) (+ Start_3 Start_8) (* Start_1 Start_5) (div Start_1 Start_5) (ite StartBool_4 Start_9 Start_4)))
   (StartBool_1 Bool (false (not StartBool_1) (or StartBool_2 StartBool_1) (= Start_1 Start_3) (>= Start_1 Start) (> Start Start_4)))
   (Start_10 Int (2 (+ Start_3 Start_5) (div Start Start_10) (ite StartBool_5 Start_9 Start)))
   (Start_12 Int (4 (- Start_12) (* Start_12 Start_7) (mod Start_11 Start_5) (abs Start_3) (ite StartBool_7 Start_5 Start_6)))
   (StartBool_6 Bool (true false (not StartBool_6) (and StartBool_7 StartBool_4) (or StartBool_1 StartBool_6) (< Start_8 Start_9) (>= Start_4 Start_4) (> Start_3 Start_9)))
   (Start_11 Int (1 (- Start_11) (- Start_11 Start_5) (div Start_12 Start_3) (mod Start Start_5) (ite StartBool_9 Start_3 Start)))
   (Start_18 Int (2 (- Start_19) (- Start_15 Start_9) (* Start_11 Start_4) (div Start_20 Start_8) (mod Start_1 Start_7) (abs Start_9) (ite StartBool_3 Start_12 Start_11)))
   (Start_6 Int (y (ite StartBool_3 Start_2 Start_8)))
   (StartBool_9 Bool (false true (and StartBool_5 StartBool_3) (or StartBool_3 StartBool_6) (<= Start_2 Start_7) (>= Start Start_13)))
   (Start_13 Int (0 2 y 5 (- Start_10) (- Start_10 Start_13) (+ Start_13 Start_7) (ite StartBool_7 Start_5 Start_6)))
   (Start_16 Int (1 3 (- Start_12) (- Start_13 Start_17) (* Start_18 Start_9) (mod Start_2 Start_12) (ite StartBool_11 Start_12 Start_13)))
   (Start_2 Int (3 y x 2 (* Start_13 Start_9) (div Start_16 Start_4) (mod Start Start_12) (abs Start_9)))
   (Start_9 Int (x (- Start_4) (* Start_3 Start_5) (div Start_1 Start_9) (ite StartBool_5 Start_6 Start_3)))
   (Start_15 Int (1 5 0 (* Start_6 Start_13) (mod Start_4 Start_2) (ite StartBool_10 Start_10 Start_5)))
   (StartBool_10 Bool (false true (and StartBool_4 StartBool) (= Start_8 Start_8)))
   (StartBool_5 Bool (false (= Start_1 Start_8) (> Start_3 Start_9)))
   (StartBool_8 Bool (false true (not StartBool_7) (< Start_9 Start_4) (= Start_4 Start_14) (>= Start_9 Start_10)))
   (Start_20 Int (3 2 1 (- Start_17 Start_1) (div Start_12 Start_6) (ite StartBool_2 Start_14 Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div y (mod (- 2 x) 0)))))

(check-synth)
