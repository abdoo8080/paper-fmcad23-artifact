(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_27 Int) (Start_25 Int) (Start_26 Int) (Start_19 Int) (Start_24 Int) (Start_22 Int) (Start_20 Int) (Start_12 Int) (Start_11 Int) (Start_4 Int) (Start_9 Int) (Start_6 Int) (Start_1 Int) (Start_7 Int) (Start_8 Int) (StartBool_6 Bool) (Start_2 Int) (Start_5 Int) (Start_14 Int) (Start_15 Int) (Start_16 Int) (Start_17 Int) (Start_13 Int) (Start_10 Int) (StartBool_2 Bool) (Start_18 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_21 Int) (StartBool_5 Bool) (Start_23 Int) (Start_3 Int) (StartBool_7 Bool) (StartBool_9 Bool) (StartBool_10 Bool) (StartBool_8 Bool))
  ((Start Int (0 (* Start Start) (div Start_1 Start_1) (mod Start Start_1) (abs Start_2)))
   (StartBool Bool (true false (not StartBool_5) (and StartBool_2 StartBool_7) (= Start Start_13) (> Start_6 Start_2)))
   (StartBool_4 Bool (true (and StartBool_9 StartBool_8) (<= Start_13 Start_26) (>= Start_21 Start_7)))
   (Start_27 Int (1 (- Start_15) (- Start_19 Start_21) (* Start_6 Start) (div Start_11 Start_14) (mod Start_4 Start_7) (abs Start)))
   (Start_25 Int (2 3 (mod Start_27 Start_2) (abs Start_13) (ite StartBool_10 Start_7 Start_21)))
   (Start_26 Int (2 5 0 (- Start_13) (+ Start_18 Start) (* Start_19 Start_24) (mod Start_26 Start_15) (ite StartBool_2 Start_12 Start_10)))
   (Start_19 Int (2 (- Start_9) (div Start_14 Start_8) (mod Start_17 Start_14) (abs Start_2)))
   (Start_24 Int (1 (- Start_15) (- Start_10 Start_15) (mod Start_16 Start_7) (abs Start_6) (ite StartBool_1 Start_9 Start)))
   (Start_22 Int (y 4 (- Start_18) (- Start_10 Start_6) (mod Start_5 Start_23) (abs Start_24)))
   (Start_20 Int (3 (- Start_22) (- Start_1 Start_15) (+ Start_12 Start_2) (* Start_22 Start_2) (abs Start_14) (ite StartBool_8 Start_7 Start_11)))
   (Start_12 Int (y 0 4 (- Start_1 Start_7) (+ Start_13 Start_9) (mod Start_14 Start_14) (abs Start_12) (ite StartBool Start_12 Start_2)))
   (Start_11 Int (5 (- Start_1) (- Start_4 Start_10) (abs Start_5) (ite StartBool Start_7 Start_9)))
   (Start_4 Int (2 (mod Start Start_5) (ite StartBool_1 Start_6 Start_1)))
   (Start_9 Int (x (* Start_2 Start_11) (mod Start_7 Start_7) (abs Start_1)))
   (Start_6 Int (5 (- Start_6) (- Start_6 Start_7) (* Start_6 Start) (div Start_2 Start_8) (abs Start)))
   (Start_1 Int (y x 5 (- Start_3) (mod Start_2 Start_2) (ite StartBool_1 Start_1 Start_3)))
   (Start_7 Int (5 1 3 (* Start Start_7) (div Start_10 Start_3)))
   (Start_8 Int (5 (- Start_2) (div Start_9 Start_10) (abs Start_10) (ite StartBool Start_1 Start_3)))
   (StartBool_6 Bool (false (not StartBool) (or StartBool_7 StartBool_2) (<= Start_6 Start_5) (= Start_16 Start_1)))
   (Start_2 Int (0 2 (* Start_1 Start)))
   (Start_5 Int (3 (- Start_9 Start_3) (+ Start_12 Start_7) (div Start_2 Start_3) (mod Start_10 Start_12) (abs Start_6)))
   (Start_14 Int (2 y 0 x (+ Start_12 Start_1) (* Start_13 Start_4) (div Start_15 Start_6) (abs Start_15) (ite StartBool Start_7 Start_3)))
   (Start_15 Int (4 (- Start_13) (- Start_14 Start_16) (div Start_8 Start_10) (mod Start_11 Start_16) (abs Start_1) (ite StartBool Start_6 Start_6)))
   (Start_16 Int (5 (- Start_11 Start_17) (div Start_13 Start_16) (mod Start_13 Start_3) (abs Start_16) (ite StartBool_2 Start_2 Start_8)))
   (Start_17 Int (y (- Start_8 Start_12) (+ Start_5 Start_15) (* Start_2 Start_15) (div Start_5 Start_6) (mod Start_16 Start_17) (abs Start_11)))
   (Start_13 Int (0 x (- Start_3) (- Start_17 Start_18)))
   (Start_10 Int (1 3 (- Start_10) (+ Start_5 Start_6) (* Start_3 Start_1) (mod Start_1 Start_5)))
   (StartBool_2 Bool (true false (not StartBool_1) (and StartBool_2 StartBool_2) (>= Start_3 Start)))
   (Start_18 Int (5 4 0 (+ Start_16 Start_8)))
   (StartBool_1 Bool (false (and StartBool StartBool_1) (= Start_1 Start_1) (>= Start_4 Start_4) (> Start Start_2)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_5 StartBool_5) (<= Start_14 Start_12) (= Start_9 Start_14) (>= Start_9 Start_1)))
   (Start_21 Int (0 (- Start) (* Start_13 Start_8) (div Start_5 Start_15) (ite StartBool_6 Start_9 Start_19)))
   (StartBool_5 Bool (false (not StartBool_3) (and StartBool_1 StartBool_5) (< Start_2 Start_19) (<= Start_16 Start_9) (= Start_20 Start_14) (>= Start_12 Start_5) (> Start_21 Start_16)))
   (Start_23 Int (4 (* Start_6 Start_12) (div Start_2 Start_25) (mod Start_16 Start_9) (abs Start_14) (ite StartBool_10 Start_26 Start_1)))
   (Start_3 Int (1 (- Start_5) (- Start_10 Start_18) (+ Start_15 Start_10) (mod Start_15 Start_19) (abs Start) (ite StartBool_3 Start Start_5)))
   (StartBool_7 Bool (false true (not StartBool_8) (and StartBool_9 StartBool_6) (or StartBool_4 StartBool_6) (< Start_9 Start_12) (>= Start_9 Start_14)))
   (StartBool_9 Bool (false (and StartBool_8 StartBool_8) (or StartBool_1 StartBool_10) (< Start_19 Start_7) (= Start_14 Start_12) (>= Start_21 Start_21) (> Start_2 Start_11)))
   (StartBool_10 Bool (true (and StartBool_9 StartBool_9) (< Start_6 Start_14) (>= Start_6 Start_13)))
   (StartBool_8 Bool (true false (or StartBool_7 StartBool_5) (<= Start_2 Start_5) (= Start_5 Start_16) (>= Start_15 Start_18) (> Start_17 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (+ x 5) x)))

(check-synth)
