(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_4 Int) (StartBool_7 Bool) (Start_13 Int) (Start_12 Int) (StartBool_5 Bool) (StartBool_3 Bool) (StartBool_2 Bool) (StartBool_6 Bool) (Start_2 Int) (Start_3 Int) (Start_7 Int) (StartBool_4 Bool) (Start_6 Int) (StartBool_1 Bool) (Start_5 Int) (Start_10 Int) (Start_8 Int) (Start_9 Int) (Start_1 Int) (Start_11 Int))
  ((Start Int (2 (- Start_1) (- Start_2 Start_2)))
   (StartBool Bool (true false (not StartBool_1) (< Start_7 Start_3) (= Start_3 Start_3) (> Start_12 Start_5)))
   (Start_4 Int (1 (ite StartBool_4 Start_8 Start_3)))
   (StartBool_7 Bool (true false (and StartBool_6 StartBool_1)))
   (Start_13 Int (0 5 3 2 y (- Start_6 Start_11) (* Start_5 Start_3) (div Start_6 Start_5)))
   (Start_12 Int (x y (+ Start_4 Start_3) (* Start_8 Start_13) (div Start_4 Start_1) (mod Start_13 Start_3)))
   (StartBool_5 Bool (false true (not StartBool_1) (or StartBool_6 StartBool_4) (<= Start_11 Start_1) (= Start_7 Start_1) (>= Start_12 Start_8)))
   (StartBool_3 Bool (false (not StartBool_1) (and StartBool_4 StartBool_4) (or StartBool_1 StartBool_4) (< Start Start_3)))
   (StartBool_2 Bool (true false (not StartBool_1) (< Start_4 Start) (>= Start_4 Start_4)))
   (StartBool_6 Bool (false (not StartBool_7) (or StartBool_3 StartBool_1) (< Start_1 Start) (= Start_12 Start_5)))
   (Start_2 Int (5 1 (- Start Start_2) (* Start_1 Start_3)))
   (Start_3 Int (2 (- Start_3 Start_3) (div Start Start_2) (abs Start)))
   (Start_7 Int (y (+ Start_9 Start_5) (abs Start) (ite StartBool_2 Start_5 Start_4)))
   (StartBool_4 Bool (true (and StartBool_5 StartBool_4) (or StartBool_5 StartBool_6) (= Start_9 Start_8) (>= Start_11 Start_1) (> Start_10 Start_10)))
   (Start_6 Int (3 (- Start_3) (- Start_7 Start_9) (+ Start_9 Start_8) (* Start_7 Start) (div Start_10 Start_11) (abs Start_1)))
   (StartBool_1 Bool (true (and StartBool StartBool_1) (or StartBool_2 StartBool) (< Start_4 Start_4) (<= Start_2 Start_4) (= Start_3 Start_5) (>= Start_1 Start)))
   (Start_5 Int (1 x 0 3 4 2 y 5 (- Start_4) (- Start_6 Start_3) (* Start_4 Start_2) (div Start_7 Start_3) (ite StartBool_2 Start_1 Start_8)))
   (Start_10 Int (y 5 (- Start_6) (- Start_9 Start_1) (* Start_3 Start_7) (abs Start_1)))
   (Start_8 Int (2 (- Start_3 Start_7) (+ Start_2 Start_2) (mod Start_4 Start) (ite StartBool_2 Start_4 Start_5)))
   (Start_9 Int (2 5 (- Start_10) (* Start_3 Start_2) (div Start_4 Start_1) (mod Start_1 Start_9)))
   (Start_1 Int (1 3 2 (- Start_4) (div Start_4 Start_4) (mod Start Start_1) (abs Start_5) (ite StartBool_1 Start_5 Start_4)))
   (Start_11 Int (0 (- Start_10) (* Start_10 Start_7) (div Start_11 Start_1) (abs Start_3) (ite StartBool_3 Start_8 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (abs (mod x 2)))))

(check-synth)
