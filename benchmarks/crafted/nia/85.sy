(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (Start_3 Int) (Start_5 Int) (Start_15 Int) (Start_16 Int) (Start_6 Int) (Start_1 Int) (Start_11 Int) (StartBool_1 Bool) (Start_17 Int) (Start_2 Int) (Start_7 Int) (Start_13 Int) (StartBool_6 Bool) (Start_8 Int) (Start_12 Int) (StartBool_2 Bool) (Start_18 Int) (Start_4 Int) (Start_14 Int) (StartBool_3 Bool) (StartBool_4 Bool) (StartBool_5 Bool) (Start_10 Int) (Start_9 Int))
  ((Start Int (1 y x 3 (- Start Start) (div Start Start_1) (mod Start_2 Start)))
   (StartBool Bool (false (not StartBool_3) (< Start_13 Start_17) (<= Start_14 Start_7) (= Start_12 Start_2)))
   (StartBool_7 Bool (false (not StartBool) (= Start_6 Start_15)))
   (Start_3 Int (1 (- Start_13) (+ Start_14 Start_1) (* Start Start_3) (div Start_8 Start_17) (mod Start_17 Start_4) (abs Start_9) (ite StartBool_5 Start_18 Start_3)))
   (Start_5 Int (x 2 (* Start Start_1) (abs Start_12)))
   (Start_15 Int (1 0 (- Start_8) (div Start_6 Start_5) (abs Start_5) (ite StartBool_4 Start_9 Start_6)))
   (Start_16 Int (1 (- Start_8) (- Start_16 Start_5) (mod Start_16 Start_16) (ite StartBool_2 Start_12 Start_11)))
   (Start_6 Int (x (- Start_6 Start_2) (+ Start_15 Start_7) (* Start_16 Start_14) (div Start_3 Start_5) (mod Start_9 Start_5) (abs Start_15)))
   (Start_1 Int (4 3 1 (+ Start_2 Start_3) (* Start_4 Start_13) (div Start_1 Start_5) (mod Start_18 Start_1) (abs Start_7) (ite StartBool_7 Start_12 Start_17)))
   (Start_11 Int (3 1 5 (- Start_13) (- Start_5 Start_11) (div Start_6 Start_14) (abs Start_6)))
   (StartBool_1 Bool (true (not StartBool_1) (< Start_5 Start_6) (<= Start_7 Start_5) (> Start_4 Start_5)))
   (Start_17 Int (1 3 y 5 (- Start_15) (+ Start_3 Start_4) (div Start_13 Start_16) (abs Start_15)))
   (Start_2 Int (0 (- Start_1) (- Start Start_3) (* Start_4 Start_4) (mod Start Start_2) (abs Start_5) (ite StartBool_1 Start Start)))
   (Start_7 Int (2 5 1 x y (* Start_8 Start_5) (div Start_9 Start_5) (mod Start_3 Start_10) (ite StartBool_2 Start Start)))
   (Start_13 Int (3 (- Start_14) (- Start_12 Start) (* Start_10 Start) (div Start_12 Start_8) (abs Start_5)))
   (StartBool_6 Bool (true false (and StartBool_6 StartBool) (< Start_6 Start_7) (= Start_9 Start_4) (>= Start_9 Start_5)))
   (Start_8 Int (1 4 (- Start_11) (* Start_4 Start_12) (div Start_5 Start_7) (abs Start_9)))
   (Start_12 Int (y 1 (- Start_1) (- Start_10 Start_1) (+ Start_7 Start_1) (div Start_10 Start_12) (abs Start_4) (ite StartBool Start_4 Start_13)))
   (StartBool_2 Bool (false (and StartBool_2 StartBool) (or StartBool_3 StartBool_2) (< Start_6 Start_6) (= Start_10 Start_6) (>= Start_6 Start_1) (> Start_7 Start_6)))
   (Start_18 Int (4 (ite StartBool_5 Start_11 Start_15)))
   (Start_4 Int (0 1 (div Start_10 Start_2) (mod Start_13 Start_2) (ite StartBool_2 Start_9 Start_7)))
   (Start_14 Int (1 5 2 (- Start_12) (div Start_6 Start_14) (abs Start_4) (ite StartBool_5 Start_4 Start_12)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool StartBool_5) (< Start_6 Start) (> Start_6 Start_1)))
   (StartBool_4 Bool (false (>= Start_3 Start) (> Start_7 Start_6)))
   (StartBool_5 Bool (true (or StartBool_6 StartBool_4) (< Start_6 Start_1) (>= Start_3 Start_5)))
   (Start_10 Int (x 0 y 3 (+ Start_1 Start_2) (abs Start_9) (ite StartBool_2 Start Start_8)))
   (Start_9 Int (y 3 2 (- Start_10 Start_6) (+ Start_8 Start_7) (* Start_8 Start_1) (div Start_3 Start) (abs Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (+ y 3) (div y (- y 5)))))

(check-synth)
