(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (Start_12 Int) (Start_10 Int) (Start_3 Int) (Start_5 Int) (Start_14 Int) (Start_11 Int) (Start_15 Int) (Start_6 Int) (Start_4 Int) (Start_7 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_9 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_8 Int) (Start_13 Int))
  ((Start Int (4 1 x (- Start) (- Start_1 Start_2) (+ Start_1 Start) (abs Start_3)))
   (StartBool Bool (true (not StartBool_2) (and StartBool_4 StartBool_3) (or StartBool_1 StartBool_3) (< Start_15 Start_9) (<= Start_11 Start_10) (= Start_4 Start_15) (>= Start_5 Start_15)))
   (Start_1 Int (1 (- Start_9 Start_9) (+ Start_6 Start_10) (* Start_13 Start) (div Start_2 Start_3) (ite StartBool_3 Start_13 Start_15)))
   (Start_2 Int (1 5 y 3 (- Start_5) (abs Start_4) (ite StartBool_4 Start_9 Start_1)))
   (Start_12 Int (2 (- Start_13) (- Start_11 Start_5) (div Start_2 Start_5) (abs Start_10)))
   (Start_10 Int (4 (- Start_10 Start_2) (+ Start_12 Start_3) (* Start_12 Start_5) (div Start Start_14) (abs Start_2) (ite StartBool_4 Start_1 Start_2)))
   (Start_3 Int (2 (- Start_4) (- Start_1 Start_2) (* Start_1 Start) (div Start Start) (ite StartBool_1 Start_1 Start_5)))
   (Start_5 Int (1 x (+ Start_5 Start_1) (* Start_6 Start_2) (abs Start_2)))
   (Start_14 Int (2 0 (- Start_3) (+ Start_5 Start_12) (* Start_13 Start_2) (mod Start_4 Start_4) (abs Start_4)))
   (Start_11 Int (1 (- Start_2 Start_8) (+ Start_12 Start_13) (mod Start Start_5)))
   (Start_15 Int (3 0 (- Start_10) (- Start_11 Start_6) (ite StartBool Start_9 Start_10)))
   (Start_6 Int (4 0 (- Start_5) (- Start_3 Start_1) (+ Start_6 Start_7) (* Start_7 Start) (div Start_3 Start_8) (mod Start_4 Start_3) (ite StartBool Start_1 Start_7)))
   (Start_4 Int (5 1 4 (+ Start_3 Start_8) (* Start_2 Start_8) (div Start_2 Start_7) (mod Start_3 Start_10) (abs Start_3) (ite StartBool_3 Start_1 Start_9)))
   (Start_7 Int (y x 2 (mod Start_4 Start_7) (abs Start_9) (ite StartBool_2 Start_1 Start_6)))
   (StartBool_3 Bool (true false (not StartBool_1) (< Start_11 Start_10) (<= Start_7 Start_11) (= Start_5 Start_8)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool_1 StartBool_1) (>= Start_6 Start_2)))
   (Start_9 Int (3 (- Start_7) (- Start Start_6) (div Start Start_7) (mod Start_2 Start_2)))
   (StartBool_1 Bool (false true (< Start_6 Start_4) (<= Start_7 Start_9) (= Start_7 Start_6) (>= Start_5 Start_3)))
   (StartBool_4 Bool (false (not StartBool_2) (and StartBool_3 StartBool_1) (>= Start_1 Start_3)))
   (Start_8 Int (2 1 x 5 (+ Start_7 Start_3) (* Start_2 Start) (div Start Start_4) (mod Start_8 Start_1) (abs Start_7) (ite StartBool_2 Start_3 Start_2)))
   (Start_13 Int (0 5 (- Start_10) (* Start_1 Start_4) (mod Start_5 Start_12) (ite StartBool_4 Start_1 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 2 (- (div x y)))))

(check-synth)
