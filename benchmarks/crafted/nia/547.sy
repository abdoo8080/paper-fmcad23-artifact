(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_14 Int) (Start_12 Int) (Start_4 Int) (Start_3 Int) (Start_7 Int) (Start_5 Int) (Start_6 Int) (Start_8 Int) (Start_2 Int) (Start_13 Int) (Start_9 Int) (Start_1 Int) (Start_10 Int) (Start_11 Int))
  ((Start Int (x (- Start_1) (+ Start_2 Start_1) (* Start_3 Start_1) (mod Start_2 Start)))
   (StartBool Bool (true false (< Start_2 Start_14) (<= Start_11 Start_3) (= Start_1 Start_7) (>= Start_3 Start_8)))
   (Start_15 Int (5 (- Start_8 Start_13)))
   (Start_14 Int (4 (+ Start_7 Start) (div Start_4 Start) (mod Start_9 Start_7) (ite StartBool Start_15 Start_10)))
   (Start_12 Int (1 3 (+ Start_2 Start_10) (* Start_6 Start_2) (div Start_11 Start) (abs Start_12) (ite StartBool Start_2 Start_11)))
   (Start_4 Int (0 (* Start_5 Start_4) (div Start_2 Start_2) (abs Start_4)))
   (Start_3 Int (1 (- Start_4) (div Start_4 Start_4) (abs Start_4) (ite StartBool Start_3 Start_2)))
   (Start_7 Int (3 5 (- Start_7 Start) (+ Start_3 Start_7) (mod Start_7 Start_3)))
   (Start_5 Int (5 (- Start_6) (* Start_1 Start_1) (abs Start) (ite StartBool Start_7 Start_4)))
   (Start_6 Int (1 (- Start_3 Start) (+ Start_3 Start_8) (div Start_5 Start_1) (mod Start_4 Start_7)))
   (Start_8 Int (5 (- Start_3) (* Start_9 Start_9) (div Start_5 Start_3) (mod Start_2 Start_10) (abs Start_7)))
   (Start_2 Int (2 (- Start) (* Start_7 Start)))
   (Start_13 Int (0 (- Start_13) (+ Start_3 Start_4) (* Start_13 Start_9) (div Start Start_3) (mod Start_13 Start_8)))
   (Start_9 Int (3 (- Start_6) (+ Start_3 Start_1) (* Start_3 Start) (div Start_9 Start_4) (mod Start_4 Start_8) (abs Start_5)))
   (Start_1 Int (5 x (- Start_11 Start_11) (+ Start_9 Start_5) (div Start_8 Start_11) (mod Start_9 Start_9)))
   (Start_10 Int (2 (+ Start_5 Start_1) (mod Start_2 Start_6)))
   (Start_11 Int (x 1 5 y (- Start_12 Start_3) (* Start_11 Start_7) (div Start_12 Start_6) (mod Start_13 Start_5) (abs Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- (+ (- 1 x) (div 3 0))))))

(check-synth)
