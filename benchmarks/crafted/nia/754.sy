(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_12 Int) (StartBool_6 Bool) (StartBool_7 Bool) (StartBool_5 Bool) (Start_2 Int) (Start_6 Int) (Start_3 Int) (Start_7 Int) (Start_4 Int) (Start_5 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_11 Int) (Start_8 Int) (StartBool_2 Bool) (Start_10 Int) (Start_1 Int))
  ((Start Int (1 (- Start_1) (- Start Start) (+ Start Start) (div Start_2 Start_1) (abs Start_1) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (false true (not StartBool_4) (and StartBool StartBool_5) (> Start_5 Start_5)))
   (StartBool_4 Bool (false true (and StartBool_6 StartBool_3) (= Start_12 Start_7)))
   (Start_12 Int (1 2 3 (- Start_10) (div Start_7 Start_10)))
   (StartBool_6 Bool (false true (and StartBool_2 StartBool_7) (< Start_3 Start_3) (<= Start_4 Start_6) (= Start_5 Start_11) (> Start_1 Start_1)))
   (StartBool_7 Bool (false (not StartBool_4) (and StartBool_7 StartBool_5) (< Start_12 Start_1) (<= Start_7 Start_10) (>= Start Start_3)))
   (StartBool_5 Bool (true (not StartBool_6) (>= Start_5 Start_4) (> Start_3 Start_8)))
   (Start_2 Int (2 (- Start_2) (+ Start Start) (mod Start_1 Start_3) (ite StartBool Start Start_3)))
   (Start_6 Int (0 (+ Start_7 Start_3) (* Start Start) (mod Start_9 Start_6) (abs Start_8) (ite StartBool Start_2 Start)))
   (Start_3 Int (y 2 x (- Start_1) (- Start_4 Start_4) (+ Start_2 Start_4) (div Start_3 Start_5)))
   (Start_7 Int (0 5 2 4 (div Start_5 Start) (mod Start_3 Start_8) (abs Start_8)))
   (Start_4 Int (0 2 (- Start_1) (- Start_2 Start_6) (mod Start_6 Start_4) (ite StartBool_1 Start_5 Start_4)))
   (Start_5 Int (0 y (- Start_1) (* Start_2 Start_2) (abs Start_1)))
   (Start_9 Int (y (- Start_8 Start_5) (+ Start_1 Start_3) (* Start_7 Start_8) (div Start_1 Start_3) (mod Start_8 Start_6) (ite StartBool_2 Start_4 Start_9)))
   (StartBool_1 Bool (true (<= Start_4 Start_4) (= Start_7 Start_5) (>= Start_8 Start_2)))
   (StartBool_3 Bool (false (not StartBool_3) (<= Start_4 Start) (= Start_6 Start_2) (> Start_7 Start_1)))
   (Start_11 Int (3 0 5 (- Start) (- Start_6 Start_1) (div Start_4 Start_4) (mod Start_11 Start) (ite StartBool_3 Start_11 Start_6)))
   (Start_8 Int (4 3 (- Start) (- Start_2 Start) (* Start_8 Start_8) (div Start Start_5) (ite StartBool_1 Start_2 Start_3)))
   (StartBool_2 Bool (false (and StartBool StartBool_2) (<= Start_6 Start_9) (= Start_6 Start_8) (>= Start_1 Start_8) (> Start_4 Start_7)))
   (Start_10 Int (y x (- Start_9) (- Start_11 Start_10)))
   (Start_1 Int (y 5 (- Start_4 Start_10) (+ Start_1 Start_4) (div Start Start_5) (abs Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (< 0 (div y 0)) (- x) (+ 5 4))))

(check-synth)
