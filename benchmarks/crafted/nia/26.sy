(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_16 Int) (Start_13 Int) (Start_17 Int) (Start_11 Int) (Start_12 Int) (Start_15 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_8 Int) (Start_2 Int) (Start_6 Int) (Start_14 Int) (StartBool_2 Bool) (Start_1 Int) (Start_5 Int) (Start_7 Int) (Start_10 Int) (Start_4 Int) (StartBool_1 Bool) (StartBool_7 Bool) (Start_3 Int) (Start_9 Int) (StartBool_5 Bool) (StartBool_3 Bool))
  ((Start Int (2 5 (+ Start Start) (* Start_1 Start) (abs Start_1)))
   (StartBool Bool (false (and StartBool_6 StartBool_6) (< Start_13 Start_14) (<= Start_14 Start_1) (= Start_9 Start_3)))
   (Start_18 Int (x 5 1 (+ Start Start_17) (div Start_1 Start_18) (abs Start_2) (ite StartBool_7 Start_4 Start_11)))
   (Start_16 Int (3 2 y x (- Start_10) (- Start_17 Start_3) (+ Start_14 Start_4) (div Start_3 Start_13)))
   (Start_13 Int (1 (- Start_3 Start_12) (* Start_13 Start_13) (div Start_8 Start_2) (mod Start_11 Start_16)))
   (Start_17 Int (4 (- Start_13) (- Start_5 Start_4) (+ Start_15 Start_16) (div Start_5 Start_14) (mod Start_12 Start_3) (abs Start_8) (ite StartBool_1 Start_18 Start_11)))
   (Start_11 Int (x (- Start) (+ Start_10 Start_7) (* Start_6 Start_8) (mod Start_8 Start_1) (abs Start_8)))
   (Start_12 Int (5 x 2 (div Start_2 Start) (abs Start_1) (ite StartBool Start_2 Start)))
   (Start_15 Int (4 x (* Start_10 Start_9) (ite StartBool_5 Start_13 Start_6)))
   (StartBool_4 Bool (true (not StartBool_5) (and StartBool_2 StartBool_5) (< Start_11 Start_7) (= Start_12 Start_12) (>= Start_9 Start_2) (> Start_4 Start_11)))
   (StartBool_6 Bool (false (> Start Start_15)))
   (Start_8 Int (1 3 (- Start_9) (mod Start_12 Start_1) (abs Start_6)))
   (Start_2 Int (1 3 y 4 (- Start_3) (- Start_4 Start) (div Start_5 Start_1) (abs Start_6) (ite StartBool Start_5 Start)))
   (Start_6 Int (5 x (- Start_6) (+ Start_1 Start) (* Start_1 Start) (div Start Start_1) (abs Start_6) (ite StartBool Start Start_6)))
   (Start_14 Int (3 4 0 (- Start_10) (- Start_12 Start_6) (+ Start_5 Start) (div Start_9 Start_15) (mod Start_5 Start_11)))
   (StartBool_2 Bool (true false (and StartBool_4 StartBool_5) (or StartBool_1 StartBool_1) (<= Start_10 Start_6) (= Start_6 Start_1)))
   (Start_1 Int (2 1 (- Start_1) (- Start_1 Start_2) (+ Start Start_3) (mod Start Start_3)))
   (Start_5 Int (0 (- Start_6 Start_1) (+ Start_4 Start) (* Start_6 Start_4) (div Start_5 Start_1) (mod Start_7 Start_4) (ite StartBool Start_3 Start_3)))
   (Start_7 Int (2 1 (* Start_6 Start_3) (div Start_2 Start_3) (mod Start Start_3)))
   (Start_10 Int (0 x 3 5 (- Start_1 Start_8) (+ Start_6 Start_9) (div Start Start_4) (mod Start_4 Start_5) (abs Start_5) (ite StartBool Start_2 Start_4)))
   (Start_4 Int (4 (- Start) (- Start_1 Start_8) (+ Start_4 Start_8) (* Start_1 Start_4) (div Start_6 Start_6) (ite StartBool_1 Start Start)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool StartBool_2) (or StartBool_2 StartBool_3) (< Start Start) (<= Start_9 Start_7)))
   (StartBool_7 Bool (true (not StartBool_3) (< Start_9 Start_7) (= Start_3 Start_5)))
   (Start_3 Int (y (- Start_2 Start_2) (ite StartBool Start_2 Start_1)))
   (Start_9 Int (x 4 (- Start_3) (- Start_1 Start_2) (+ Start_2 Start_4) (div Start_8 Start_3) (mod Start_5 Start_9) (abs Start_6) (ite StartBool_3 Start_6 Start_7)))
   (StartBool_5 Bool (true (and StartBool StartBool_4) (<= Start_7 Start_1)))
   (StartBool_3 Bool (true (not StartBool_1) (and StartBool_3 StartBool_1) (or StartBool_2 StartBool_3) (<= Start_2 Start_3) (= Start Start_4) (> Start_4 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 4)))

(check-synth)
