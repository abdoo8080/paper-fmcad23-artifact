(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_4 Int) (StartBool_3 Bool) (StartBool_7 Bool) (Start_13 Int) (Start_12 Int) (Start_11 Int) (StartBool_4 Bool) (Start_3 Int) (Start_14 Int) (StartBool_1 Bool) (Start_7 Int) (StartBool_2 Bool) (Start_10 Int) (Start_5 Int) (StartBool_5 Bool) (Start_2 Int) (Start_6 Int) (StartBool_6 Bool) (Start_9 Int) (Start_8 Int))
  ((Start Int (0 y (div Start_1 Start_2) (mod Start_1 Start_3) (abs Start_2)))
   (StartBool Bool (true false (not StartBool_6) (and StartBool_2 StartBool_6) (or StartBool_2 StartBool_6) (<= Start_14 Start_5)))
   (Start_1 Int (5 (- Start_12 Start_5) (div Start_8 Start_12) (mod Start_3 Start_9) (ite StartBool_2 Start_8 Start_1)))
   (Start_4 Int (5 x (- Start_8 Start_11) (* Start_6 Start_10) (mod Start_12 Start_10) (ite StartBool_6 Start_12 Start_9)))
   (StartBool_3 Bool (true (not StartBool_1) (and StartBool StartBool_6) (or StartBool_2 StartBool_3) (>= Start_11 Start_13)))
   (StartBool_7 Bool (false (and StartBool_5 StartBool_1) (< Start_2 Start_7) (= Start Start_1) (>= Start_5 Start_2)))
   (Start_13 Int (2 (- Start_6 Start_1) (* Start_7 Start_6) (abs Start_11)))
   (Start_12 Int (4 (- Start_3 Start_13) (+ Start_1 Start_4) (* Start_2 Start_10) (div Start_1 Start) (mod Start_11 Start_8)))
   (Start_11 Int (0 (* Start_5 Start_12) (div Start_3 Start_7) (ite StartBool_6 Start_5 Start_10)))
   (StartBool_4 Bool (false true (not StartBool_4) (and StartBool_7 StartBool_6) (<= Start_9 Start_8) (= Start_1 Start_5) (>= Start_7 Start_9) (> Start_11 Start_8)))
   (Start_3 Int (5 (- Start) (* Start Start) (ite StartBool_1 Start_3 Start)))
   (Start_14 Int (4 5 2 (- Start_5) (+ Start Start_4)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (or StartBool_1 StartBool) (< Start_2 Start_1) (<= Start_3 Start_3)))
   (Start_7 Int (0 (- Start_5) (- Start_6 Start_3) (* Start_3 Start) (div Start_8 Start_9)))
   (StartBool_2 Bool (true (not StartBool_3) (and StartBool_4 StartBool_5) (or StartBool_1 StartBool_6) (<= Start_5 Start_1) (>= Start_5 Start_3)))
   (Start_10 Int (y (* Start_4 Start_10) (div Start_9 Start_3) (abs Start_1)))
   (Start_5 Int (3 (- Start_3) (- Start_1 Start_1) (mod Start_5 Start) (ite StartBool_5 Start_1 Start_4)))
   (StartBool_5 Bool (true false (not StartBool_6) (or StartBool_1 StartBool_5) (< Start_6 Start_8) (> Start_10 Start_7)))
   (Start_2 Int (x (* Start_4 Start) (ite StartBool_2 Start_4 Start)))
   (Start_6 Int (3 (- Start_3 Start_3) (* Start Start_4) (mod Start_3 Start_6) (abs Start_7) (ite StartBool_1 Start_1 Start)))
   (StartBool_6 Bool (true false (not StartBool_6) (and StartBool_5 StartBool_3) (<= Start_3 Start_1) (>= Start_6 Start)))
   (Start_9 Int (2 (- Start_5) (+ Start_8 Start_10) (div Start_3 Start_5) (abs Start_10)))
   (Start_8 Int (x (* Start_6 Start_5) (mod Start_6 Start_4) (abs Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 3 (div 1 (mod 4 (- (+ y 2)))))))

(check-synth)
