(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_13 Int) (Start_15 Int) (Start_14 Int) (Start_10 Int) (Start_1 Int) (Start_2 Int) (StartBool_6 Bool) (StartBool_5 Bool) (Start_4 Int) (Start_6 Int) (Start_7 Int) (Start_11 Int) (StartBool_2 Bool) (Start_9 Int) (Start_3 Int) (Start_8 Int) (Start_5 Int) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_3 Bool))
  ((Start Int (x 5 (- Start) (- Start_1 Start_2) (abs Start_3) (ite StartBool_1 Start_3 Start_4)))
   (StartBool Bool (true false (< Start_5 Start_6) (<= Start Start_1) (= Start_10 Start_9) (>= Start_7 Start_9)))
   (Start_12 Int (x 0 (- Start_5) (+ Start Start_6) (abs Start_13) (ite StartBool_6 Start_5 Start)))
   (Start_13 Int (y 0 (- Start_15) (mod Start_9 Start_14) (abs Start_14)))
   (Start_15 Int (y (abs Start_6)))
   (Start_14 Int (4 (- Start_8) (+ Start_5 Start_11) (ite StartBool_3 Start_15 Start_7)))
   (Start_10 Int (4 (- Start_11) (- Start_12 Start_8) (div Start_9 Start_13) (abs Start_11) (ite StartBool_2 Start_10 Start_14)))
   (Start_1 Int (3 0 5 y 4 (- Start_7 Start) (+ Start_7 Start_7) (div Start Start_3) (ite StartBool_1 Start_9 Start_4)))
   (Start_2 Int (0 (* Start_9 Start_3) (div Start_9 Start_1)))
   (StartBool_6 Bool (true false (not StartBool_1) (or StartBool_5 StartBool_5) (<= Start_1 Start_3) (>= Start_8 Start_5)))
   (StartBool_5 Bool (false (not StartBool_5) (or StartBool StartBool_5) (<= Start_2 Start_4) (= Start_5 Start_8) (>= Start_8 Start_3) (> Start_7 Start_4)))
   (Start_4 Int (2 (- Start_1 Start_5) (div Start_6 Start_7) (mod Start_7 Start_3) (abs Start_3)))
   (Start_6 Int (4 (- Start_5) (+ Start_5 Start_6) (mod Start_6 Start_8)))
   (Start_7 Int (5 (div Start_4 Start_4) (mod Start_6 Start) (ite StartBool Start_3 Start_4)))
   (Start_11 Int (y 2 (* Start_15 Start_7) (mod Start_15 Start_14) (ite StartBool_1 Start_14 Start_12)))
   (StartBool_2 Bool (true (and StartBool_4 StartBool_5) (< Start Start) (<= Start_2 Start_4)))
   (Start_9 Int (4 (- Start_8) (- Start_4 Start_3) (+ Start_1 Start_3) (div Start_4 Start_4) (ite StartBool_5 Start_2 Start_8)))
   (Start_3 Int (4 (* Start_5 Start_7) (div Start Start_3) (ite StartBool_6 Start_9 Start_2)))
   (Start_8 Int (x (- Start_5) (- Start_5 Start_2) (+ Start Start_3) (mod Start Start_6) (abs Start_3)))
   (Start_5 Int (3 y 2 5 (- Start Start_5) (+ Start_7 Start_5) (abs Start_4)))
   (StartBool_1 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_3) (or StartBool_4 StartBool_1) (< Start_5 Start_1) (<= Start Start_2)))
   (StartBool_4 Bool (false true (and StartBool_3 StartBool) (or StartBool_3 StartBool_4) (< Start_8 Start_6) (<= Start_5 Start_3) (= Start_4 Start_8) (>= Start_4 Start_8) (> Start Start_4)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool StartBool_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (+ (mod x 3) (- x 5)))))

(check-synth)
