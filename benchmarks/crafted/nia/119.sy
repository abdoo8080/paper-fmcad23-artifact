(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (Start_4 Int) (StartBool_2 Bool) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_9 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (Start_7 Int) (StartBool_5 Bool) (Start_12 Int) (Start_2 Int) (Start_8 Int) (StartBool_6 Bool) (Start_1 Int) (Start_3 Int) (Start_5 Int) (Start_6 Int) (Start_9 Int) (Start_10 Int) (Start_11 Int))
  ((Start Int (y (- Start_1) (div Start Start_1) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false (not StartBool_9) (< Start_9 Start_1) (> Start Start_10)))
   (StartBool_3 Bool (false (not StartBool_6) (or StartBool_3 StartBool_2) (< Start_4 Start_8) (<= Start Start_1) (= Start_11 Start_5) (>= Start_3 Start_10) (> Start_5 Start_7)))
   (Start_4 Int (y 2 1 3 5 0 (- Start_3 Start_9) (* Start_9 Start_6) (abs Start_9) (ite StartBool_6 Start_8 Start_1)))
   (StartBool_2 Bool (true (not StartBool_6) (or StartBool_4 StartBool) (< Start_10 Start) (>= Start_1 Start_11)))
   (StartBool_8 Bool (true (not StartBool_6) (<= Start_9 Start_7) (> Start_3 Start_10)))
   (StartBool_7 Bool (false (or StartBool_8 StartBool_6) (< Start_11 Start_5) (>= Start_6 Start_7)))
   (StartBool_9 Bool (true (and StartBool_1 StartBool_7) (<= Start_10 Start_9) (= Start_7 Start_2)))
   (StartBool_1 Bool (false (or StartBool StartBool_2) (= Start_1 Start) (> Start_1 Start_2)))
   (StartBool_4 Bool (true false (not StartBool) (and StartBool_2 StartBool_4) (or StartBool_4 StartBool_1) (<= Start_2 Start_2) (= Start_5 Start) (>= Start_4 Start_2)))
   (Start_7 Int (x 3 (+ Start_2 Start_1) (mod Start_4 Start_3)))
   (StartBool_5 Bool (false (and StartBool_4 StartBool_6) (or StartBool_3 StartBool_2) (< Start_8 Start) (<= Start_1 Start_8) (>= Start_1 Start_1)))
   (Start_12 Int (0 (- Start Start_10) (mod Start_5 Start_1) (abs Start_6)))
   (Start_2 Int (5 4 (+ Start_2 Start) (div Start_2 Start_2) (ite StartBool_3 Start_3 Start_1)))
   (Start_8 Int (y (- Start_6) (- Start_5 Start_1) (div Start_8 Start_3) (mod Start_6 Start_6) (abs Start_8) (ite StartBool_5 Start_3 Start_6)))
   (StartBool_6 Bool (false true (not StartBool_1) (and StartBool_3 StartBool_1) (or StartBool_7 StartBool_2) (= Start_9 Start_6) (>= Start_6 Start_10)))
   (Start_1 Int (x y (- Start_1) (+ Start_12 Start_11) (div Start_11 Start_9) (abs Start) (ite StartBool_3 Start_8 Start_8)))
   (Start_3 Int (1 (- Start_2) (* Start_4 Start) (div Start_4 Start_3) (mod Start_3 Start) (abs Start_3) (ite StartBool_4 Start_1 Start)))
   (Start_5 Int (2 4 0 (- Start_1 Start_6) (+ Start_1 Start_4) (* Start_5 Start_2) (div Start_3 Start_1) (mod Start_3 Start_3)))
   (Start_6 Int (0 (- Start_7 Start_8) (+ Start Start_7) (* Start_8 Start_5) (abs Start_6) (ite StartBool_3 Start_5 Start_6)))
   (Start_9 Int (5 (- Start_4 Start_2) (+ Start_6 Start_11) (div Start_3 Start_1) (mod Start_5 Start_8) (abs Start_3) (ite StartBool_1 Start Start_1)))
   (Start_10 Int (x (+ Start_9 Start_7) (* Start_1 Start_4) (mod Start_7 Start_5) (ite StartBool_6 Start_1 Start_8)))
   (Start_11 Int (3 5 0 (- Start_10) (* Start_11 Start_1) (mod Start_2 Start_8) (abs Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* y (+ 4 4))))

(check-synth)
