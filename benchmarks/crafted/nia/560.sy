(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_1 Int) (Start_3 Int) (Start_4 Int) (Start_18 Int) (Start_6 Int) (StartBool_5 Bool) (StartBool_6 Bool) (Start_17 Int) (Start_16 Int) (StartBool_7 Bool) (StartBool_3 Bool) (Start_13 Int) (Start_2 Int) (Start_5 Int) (Start_9 Int) (Start_19 Int) (Start_7 Int) (Start_10 Int) (Start_11 Int) (StartBool_4 Bool) (Start_8 Int) (Start_12 Int) (StartBool_2 Bool) (Start_14 Int) (StartBool_1 Bool) (Start_15 Int))
  ((Start Int (2 4 0 (mod Start_1 Start) (ite StartBool Start_2 Start_2)))
   (StartBool Bool (false (not StartBool_2) (< Start Start_10) (>= Start_20 Start_19)))
   (Start_20 Int (4 x (- Start_20 Start) (+ Start_11 Start_9)))
   (Start_1 Int (3 5 (- Start_16 Start_4) (+ Start_5 Start_18) (div Start_9 Start_17) (mod Start_19 Start_18) (ite StartBool Start_12 Start_10)))
   (Start_3 Int (3 2 0 5 (* Start_7 Start_9) (div Start_5 Start_13) (abs Start_6)))
   (Start_4 Int (0 1 5 y (- Start_14) (+ Start_8 Start_6) (* Start_11 Start_5) (ite StartBool_6 Start_7 Start_14)))
   (Start_18 Int (0 4 y 2 x (+ Start_13 Start_17) (div Start_5 Start_16) (abs Start_5)))
   (Start_6 Int (0 5 (- Start_2) (- Start_5 Start_15) (mod Start_6 Start_8) (ite StartBool Start_18 Start_12)))
   (StartBool_5 Bool (true (not StartBool) (< Start_12 Start_13) (<= Start_15 Start_9) (= Start_5 Start) (>= Start_9 Start_14)))
   (StartBool_6 Bool (true (and StartBool_4 StartBool) (<= Start_17 Start_14) (>= Start_11 Start_8) (> Start Start_3)))
   (Start_17 Int (0 4 (- Start_5) (- Start_10 Start_7) (+ Start_14 Start_4) (mod Start_11 Start_16) (ite StartBool_3 Start_3 Start)))
   (Start_16 Int (5 4 (- Start_14 Start_3) (* Start_4 Start_3) (div Start_10 Start_2) (mod Start_2 Start_17) (abs Start_7)))
   (StartBool_7 Bool (false true (not StartBool_1) (or StartBool_7 StartBool) (<= Start_7 Start_3) (= Start_16 Start_6) (> Start_4 Start_10)))
   (StartBool_3 Bool (true (not StartBool) (and StartBool_4 StartBool_5) (or StartBool_6 StartBool_7) (<= Start_11 Start_6) (>= Start Start_14) (> Start_8 Start_12)))
   (Start_13 Int (5 (+ Start_10 Start_11) (* Start_11 Start_6) (div Start_9 Start_10)))
   (Start_2 Int (0 (- Start_1 Start_1) (+ Start_2 Start_2) (* Start_3 Start_4) (div Start_3 Start_1) (mod Start_3 Start_3) (abs Start_5)))
   (Start_5 Int (0 5 (- Start_6) (- Start_5 Start_5) (+ Start_2 Start_4) (div Start_5 Start_7) (abs Start_7) (ite StartBool Start_8 Start_3)))
   (Start_9 Int (y x (- Start_9 Start_2) (* Start_9 Start) (abs Start_2) (ite StartBool Start_10 Start_5)))
   (Start_19 Int (x (- Start_3 Start_17) (* Start_16 Start_7) (div Start_18 Start_15) (abs Start_3) (ite StartBool_7 Start Start_13)))
   (Start_7 Int (5 (div Start_3 Start_1) (mod Start_4 Start_3) (abs Start_6) (ite StartBool_1 Start_9 Start_4)))
   (Start_10 Int (x 0 4 (- Start_6) (* Start_3 Start_10) (mod Start_4 Start_6) (ite StartBool_2 Start_1 Start_11)))
   (Start_11 Int (1 (- Start_10 Start_1) (div Start_1 Start_12) (mod Start_10 Start_11) (abs Start_7)))
   (StartBool_4 Bool (false true (not StartBool_6) (< Start_2 Start_15) (<= Start_16 Start_7)))
   (Start_8 Int (x (- Start_6) (- Start_1 Start_1) (+ Start_5 Start_1) (* Start Start) (ite StartBool Start Start_4)))
   (Start_12 Int (2 0 (+ Start_6 Start_4) (* Start_12 Start_7) (div Start_5 Start_10)))
   (StartBool_2 Bool (false true (and StartBool_2 StartBool_1) (< Start_11 Start_10) (= Start_4 Start_11) (>= Start_11 Start_10)))
   (Start_14 Int (2 (- Start_9) (- Start_14 Start_3) (+ Start_10 Start_12) (div Start_14 Start_15) (mod Start_12 Start_1) (abs Start_7) (ite StartBool_2 Start_10 Start_3)))
   (StartBool_1 Bool (true false (not StartBool_3) (or StartBool_1 StartBool_3) (< Start_8 Start_13) (<= Start_4 Start_12) (= Start_10 Start_4) (> Start_11 Start_14)))
   (Start_15 Int (3 0 (div Start_11 Start_12) (mod Start_12 Start_1) (abs Start_4) (ite StartBool_3 Start_12 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (abs x))))

(check-synth)
