(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_14 Int) (Start_18 Int) (Start_15 Int) (Start_2 Int) (Start_3 Int) (Start_12 Int) (Start_19 Int) (StartBool_4 Bool) (Start_13 Int) (Start_16 Int) (Start_1 Int) (StartBool_6 Bool) (StartBool_1 Bool) (Start_4 Int) (Start_6 Int) (Start_10 Int) (Start_7 Int) (StartBool_5 Bool) (Start_17 Int) (Start_5 Int) (Start_9 Int) (Start_8 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_11 Int))
  ((Start Int (y 1 3 (* Start Start) (abs Start) (ite StartBool Start Start_1)))
   (StartBool Bool (false true (not StartBool_3) (or StartBool_5 StartBool_6) (= Start Start_6)))
   (Start_20 Int (2 (- Start_17) (- Start_12 Start_6) (+ Start_18 Start_5) (abs Start_11)))
   (Start_14 Int (0 2 3 (- Start_17) (- Start_8 Start_8) (mod Start_3 Start_9) (abs Start_15) (ite StartBool Start_19 Start_11)))
   (Start_18 Int (x (+ Start_12 Start_16) (* Start_6 Start_18) (abs Start_7)))
   (Start_15 Int (x (- Start_4) (- Start Start_10) (* Start Start_12) (div Start_15 Start_2) (mod Start_16 Start_1) (ite StartBool_6 Start_9 Start_5)))
   (Start_2 Int (x (- Start_3 Start_7) (div Start_7 Start_10) (ite StartBool_1 Start_5 Start_11)))
   (Start_3 Int (4 (- Start_3) (* Start_5 Start_2) (div Start Start_8)))
   (Start_12 Int (4 (div Start_11 Start_4) (mod Start_4 Start_7) (abs Start_9) (ite StartBool_4 Start_8 Start_11)))
   (Start_19 Int (5 0 (- Start_15) (+ Start_19 Start_8) (* Start_4 Start_20) (div Start_15 Start_9) (abs Start_4) (ite StartBool_1 Start Start_10)))
   (StartBool_4 Bool (false (and StartBool_1 StartBool) (< Start_10 Start_6) (<= Start_11 Start_7) (= Start_4 Start_8)))
   (Start_13 Int (0 (- Start_11 Start_1) (+ Start_8 Start_12) (* Start_11 Start) (div Start_6 Start_6) (ite StartBool Start_6 Start_3)))
   (Start_16 Int (5 (* Start_4 Start) (mod Start_6 Start_3) (abs Start_16) (ite StartBool_1 Start_17 Start_8)))
   (Start_1 Int (y 2 (- Start) (- Start_2 Start_1) (* Start Start_3) (div Start_4 Start_2) (abs Start_1)))
   (StartBool_6 Bool (true (not StartBool_2) (and StartBool_2 StartBool_6) (or StartBool_4 StartBool_4) (< Start_5 Start_9) (<= Start_3 Start_9) (= Start_1 Start_8) (>= Start_9 Start_14) (> Start_10 Start_15)))
   (StartBool_1 Bool (true false (not StartBool) (or StartBool StartBool_2) (< Start_6 Start_7) (<= Start_5 Start_6) (= Start_2 Start_5) (>= Start_1 Start_3)))
   (Start_4 Int (3 y 5 2 4 x 0 (- Start) (- Start_5 Start_2) (* Start_1 Start) (div Start_1 Start_2) (abs Start_6)))
   (Start_6 Int (0 (- Start_6) (- Start_5 Start_1) (* Start_1 Start_5) (div Start_4 Start_7) (mod Start_2 Start_5) (abs Start_2)))
   (Start_10 Int (x (div Start_10 Start_9) (mod Start_1 Start_5)))
   (Start_7 Int (0 3 5 y 4 1 (+ Start_1 Start_6) (* Start_5 Start_1) (mod Start_4 Start_7)))
   (StartBool_5 Bool (false (or StartBool_6 StartBool_4) (>= Start_15 Start_7) (> Start_15 Start_15)))
   (Start_17 Int (2 (* Start_12 Start_9) (div Start_2 Start_8) (mod Start_10 Start_11) (abs Start_18) (ite StartBool_1 Start_13 Start_13)))
   (Start_5 Int (y (- Start_6) (- Start_7 Start_5) (+ Start_8 Start_4) (div Start_4 Start_2) (mod Start_1 Start_2) (abs Start_1)))
   (Start_9 Int (1 (- Start_9) (- Start_3 Start_12) (+ Start_2 Start_6) (* Start_3 Start_11) (mod Start_13 Start_8) (abs Start)))
   (Start_8 Int (3 (- Start_2) (* Start_1 Start_1) (mod Start_9 Start_8) (ite StartBool_1 Start_9 Start)))
   (StartBool_2 Bool (true (and StartBool_3 StartBool_3) (> Start_6 Start_3)))
   (StartBool_3 Bool (true false (not StartBool) (<= Start_1 Start) (= Start_6 Start_1) (> Start_10 Start_11)))
   (Start_11 Int (y (- Start_9) (- Start_9 Start_4) (* Start_5 Start_9) (div Start_3 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div (- x) 5))))

(check-synth)
