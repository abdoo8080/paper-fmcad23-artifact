(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (StartBool_2 Bool) (Start_13 Int) (Start_2 Int) (Start_5 Int) (Start_6 Int) (Start_1 Int) (Start_7 Int) (Start_8 Int) (StartBool_4 Bool) (Start_3 Int) (Start_10 Int) (Start_4 Int) (Start_11 Int) (StartBool_3 Bool) (Start_9 Int) (Start_12 Int))
  ((Start Int (3 (- Start_1) (- Start_2 Start_1) (* Start Start) (mod Start_1 Start_2) (abs Start_1)))
   (StartBool Bool (false (and StartBool_1 StartBool_2) (or StartBool_2 StartBool_2) (= Start_5 Start_11) (>= Start_1 Start_3) (> Start_13 Start_12)))
   (StartBool_1 Bool (false true (and StartBool_4 StartBool_4) (or StartBool_3 StartBool_1) (< Start_11 Start_13) (> Start_8 Start)))
   (StartBool_2 Bool (true false (not StartBool_1) (and StartBool_3 StartBool_2) (or StartBool_2 StartBool_4) (< Start_5 Start_5)))
   (Start_13 Int (2 x 0 (- Start_5) (+ Start Start_9) (* Start_3 Start_2) (div Start_2 Start_2) (mod Start_3 Start_10) (ite StartBool_3 Start_1 Start_11)))
   (Start_2 Int (4 5 (- Start Start_2) (+ Start Start) (* Start_3 Start_3) (abs Start_2) (ite StartBool Start_4 Start_5)))
   (Start_5 Int (0 (+ Start Start_1) (* Start_6 Start_2) (div Start_3 Start_5) (mod Start_7 Start_1) (abs Start_5)))
   (Start_6 Int (4 y x 3 1 0 (- Start_8) (- Start_5 Start_6) (+ Start_2 Start_1) (* Start_6 Start) (div Start_6 Start_1) (mod Start_1 Start_7) (ite StartBool Start_4 Start_6)))
   (Start_1 Int (4 (- Start_9 Start_9) (+ Start_4 Start_4) (* Start_5 Start_1) (div Start_11 Start) (abs Start_6)))
   (Start_7 Int (4 (- Start_2) (+ Start_1 Start_1) (* Start_6 Start_7) (mod Start Start_2) (abs Start_8) (ite StartBool Start_4 Start_1)))
   (Start_8 Int (x 5 (- Start_5) (- Start_1 Start_4) (+ Start Start_6)))
   (StartBool_4 Bool (true false (<= Start_9 Start_2) (= Start_9 Start_3)))
   (Start_3 Int (1 0 (- Start) (- Start Start_1) (div Start_8 Start_10) (mod Start_5 Start_7) (abs Start)))
   (Start_10 Int (x (- Start_7) (+ Start_10 Start) (* Start Start_6)))
   (Start_4 Int (5 3 (- Start_6) (- Start_6 Start_3) (* Start_9 Start_1) (mod Start_7 Start_9) (abs Start_5)))
   (Start_11 Int (5 0 (- Start_8 Start_5) (+ Start_1 Start_1) (* Start_12 Start_3) (abs Start_1) (ite StartBool Start_11 Start_4)))
   (StartBool_3 Bool (true (and StartBool StartBool_2)))
   (Start_9 Int (2 (- Start_7 Start_2) (+ Start_4 Start_5) (* Start_8 Start_1) (div Start_7 Start_1)))
   (Start_12 Int (1 4 (- Start_5) (+ Start_11 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod x (div y 0))))

(check-synth)
