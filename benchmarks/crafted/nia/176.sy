(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_14 Int) (Start_13 Int) (Start_11 Int) (Start_9 Int) (Start_2 Int) (Start_12 Int) (Start_3 Int) (Start_6 Int) (Start_7 Int) (Start_10 Int) (Start_4 Int) (StartBool_3 Bool) (StartBool_4 Bool) (StartBool_1 Bool) (StartBool_7 Bool) (Start_5 Int) (StartBool_5 Bool) (Start_8 Int) (StartBool_2 Bool) (StartBool_6 Bool))
  ((Start Int (0 (- Start Start_1) (div Start_1 Start) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true false (not StartBool_4) (or StartBool_5 StartBool) (= Start Start_5) (>= Start_3 Start_4)))
   (Start_1 Int (4 (- Start_5) (+ Start_8 Start_6) (* Start_6 Start_12) (abs Start_14) (ite StartBool_2 Start_13 Start_10)))
   (Start_14 Int (2 1 (- Start_14) (- Start_5 Start_9) (+ Start_9 Start_7) (* Start_14 Start_6) (mod Start_5 Start_1) (abs Start_7)))
   (Start_13 Int (y (- Start_6) (- Start_4 Start_4) (+ Start_14 Start_9) (div Start_4 Start_14) (abs Start_2)))
   (Start_11 Int (x (- Start_11 Start_3) (ite StartBool_7 Start_11 Start_4)))
   (Start_9 Int (3 x (- Start_4) (- Start_1 Start_11) (+ Start_7 Start_9) (* Start_4 Start) (mod Start_6 Start_5) (abs Start_3)))
   (Start_2 Int (x (- Start) (+ Start_2 Start_1) (div Start_2 Start_2) (abs Start) (ite StartBool Start_3 Start_3)))
   (Start_12 Int (0 (- Start_2) (- Start_13 Start_3) (+ Start_2 Start_10) (div Start Start_3) (mod Start_10 Start) (abs Start_10) (ite StartBool_4 Start_9 Start_2)))
   (Start_3 Int (2 5 4 (- Start_2) (- Start Start_2) (+ Start_3 Start_4) (* Start_4 Start_4) (div Start_4 Start_5) (abs Start_6) (ite StartBool Start_5 Start)))
   (Start_6 Int (2 (- Start_7 Start_1) (abs Start_6)))
   (Start_7 Int (3 (mod Start_5 Start_1) (abs Start)))
   (Start_10 Int (4 0 1 (- Start_9) (div Start_5 Start_10) (mod Start_6 Start_8) (abs Start_3) (ite StartBool_1 Start_7 Start_2)))
   (Start_4 Int (0 (- Start_6 Start_5) (* Start Start_4) (mod Start_6 Start_2) (abs Start_8) (ite StartBool_4 Start_4 Start_3)))
   (StartBool_3 Bool (false true))
   (StartBool_4 Bool (true (or StartBool_1 StartBool_5) (< Start_3 Start_8) (<= Start_8 Start_2)))
   (StartBool_1 Bool (true false (not StartBool_7) (or StartBool_2 StartBool_1) (>= Start_7 Start_3)))
   (StartBool_7 Bool (true false (not StartBool) (< Start_6 Start_7) (= Start_3 Start_8) (>= Start_10 Start_5) (> Start_12 Start_1)))
   (Start_5 Int (3 0 2 y 4 5 (+ Start_7 Start_5) (div Start_6 Start_7) (ite StartBool_2 Start_3 Start_6)))
   (StartBool_5 Bool (false true (< Start_5 Start_1) (= Start_4 Start_7)))
   (Start_8 Int (3 (* Start_8 Start_9) (div Start_2 Start_2) (mod Start_4 Start_4) (ite StartBool_6 Start Start_7)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_3) (< Start_4 Start_7) (<= Start_6 Start_1) (>= Start_6 Start_4)))
   (StartBool_6 Bool (false true (not StartBool_3) (or StartBool StartBool_2) (>= Start_3 Start_8) (> Start_1 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- y))))

(check-synth)
