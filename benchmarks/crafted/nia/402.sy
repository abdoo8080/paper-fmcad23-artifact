(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_1 Bool) (Start_4 Int) (Start_7 Int) (Start_6 Int) (StartBool_4 Bool) (Start_10 Int) (Start_3 Int) (StartBool_2 Bool) (Start_1 Int) (Start_8 Int) (Start_9 Int) (StartBool_3 Bool) (Start_5 Int))
  ((Start Int (1 (div Start_1 Start_1) (mod Start Start_2) (abs Start_2) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (true (< Start_9 Start_1) (= Start_5 Start_5)))
   (Start_2 Int (3 x (- Start_6) (- Start_9 Start) (* Start_7 Start) (div Start_10 Start_2) (ite StartBool_1 Start_9 Start_2)))
   (StartBool_1 Bool (false (> Start Start_3)))
   (Start_4 Int (4 y (- Start_1 Start_3) (+ Start_2 Start_3) (* Start Start_5) (div Start_4 Start_4) (mod Start_1 Start_4) (ite StartBool Start_4 Start_6)))
   (Start_7 Int (3 (- Start_2 Start_4) (* Start Start_6) (abs Start_1) (ite StartBool_2 Start_1 Start_2)))
   (Start_6 Int (4 y 3 0 (- Start_3) (- Start_1 Start_6) (* Start_2 Start_6) (div Start_2 Start_7) (ite StartBool Start_2 Start_3)))
   (StartBool_4 Bool (true false (or StartBool_3 StartBool_1) (<= Start_5 Start_7) (>= Start_8 Start_4) (> Start_9 Start_8)))
   (Start_10 Int (4 x 3 (- Start_10) (+ Start_6 Start_3) (mod Start_6 Start_3)))
   (Start_3 Int (0 y 4 5 3 (+ Start_1 Start_3) (* Start_2 Start_3) (mod Start Start_4) (abs Start_2)))
   (StartBool_2 Bool (true (not StartBool_1) (or StartBool_3 StartBool) (= Start Start_7)))
   (Start_1 Int (y 1 (+ Start_7 Start_7) (* Start_10 Start_7) (div Start_2 Start) (mod Start_7 Start_5)))
   (Start_8 Int (x 1 (- Start_3 Start_6) (+ Start_5 Start_6) (* Start_2 Start_9) (div Start Start_7) (mod Start_1 Start_7) (ite StartBool_4 Start_1 Start_9)))
   (Start_9 Int (y (* Start_3 Start_4) (div Start_2 Start_10) (mod Start_4 Start)))
   (StartBool_3 Bool (false true (< Start_7 Start_2) (= Start_8 Start_1) (>= Start_7 Start_1)))
   (Start_5 Int (0 (* Start_10 Start) (mod Start_3 Start_5) (abs Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- 3 (abs y)))))

(check-synth)
