(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_5 Int) (Start_14 Int) (StartBool_7 Bool) (StartBool_9 Bool) (Start_13 Int) (Start_9 Int) (StartBool_1 Bool) (StartBool_3 Bool) (StartBool_8 Bool) (Start_15 Int) (Start_11 Int) (Start_8 Int) (Start_7 Int) (Start_6 Int) (Start_2 Int) (StartBool_10 Bool) (Start_4 Int) (Start_3 Int) (Start_18 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_16 Int) (Start_12 Int) (Start_10 Int) (StartBool_5 Bool) (Start_17 Int) (StartBool_2 Bool) (StartBool_11 Bool))
  ((Start Int (y (+ Start_1 Start_2) (mod Start Start_3)))
   (StartBool Bool (true false (< Start_9 Start_8) (= Start_3 Start_9)))
   (Start_1 Int (3 1 x y 4 5 (- Start_2) (mod Start_9 Start_10) (abs Start_6) (ite StartBool Start_1 Start_15)))
   (Start_5 Int (3 (- Start_4 Start_7) (+ Start_7 Start_3) (abs Start_3) (ite StartBool Start Start_3)))
   (Start_14 Int (5 4 (- Start) (- Start_10 Start) (* Start_5 Start_12) (mod Start_7 Start_4)))
   (StartBool_7 Bool (false (and StartBool_7 StartBool_8) (or StartBool_1 StartBool_6) (< Start_10 Start_2) (<= Start_10 Start_8)))
   (StartBool_9 Bool (false (not StartBool_3) (< Start_7 Start_12) (= Start_5 Start_9) (>= Start Start)))
   (Start_13 Int (3 4 (- Start_8) (- Start_8 Start_2) (+ Start_13 Start_1) (* Start_4 Start_1)))
   (Start_9 Int (5 (+ Start_5 Start_8) (* Start_10 Start_10) (div Start_1 Start_11) (mod Start_8 Start_10) (ite StartBool_1 Start_6 Start_3)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_1 StartBool_2) (or StartBool StartBool_3) (< Start_6 Start_7) (>= Start_6 Start_13)))
   (StartBool_3 Bool (false true (and StartBool_4 StartBool) (or StartBool_2 StartBool_1) (< Start_1 Start_4) (<= Start_6 Start_6) (>= Start_3 Start_10) (> Start_7 Start_1)))
   (StartBool_8 Bool (false (and StartBool_8 StartBool_5) (or StartBool_7 StartBool_9) (= Start_1 Start_2) (>= Start Start_14)))
   (Start_15 Int (x 4 (- Start_16) (- Start_10 Start_6) (* Start_13 Start_14) (mod Start_6 Start_14) (abs Start_10)))
   (Start_11 Int (2 4 (- Start_11 Start_3) (* Start_3 Start_10) (div Start Start_9) (mod Start_2 Start) (abs Start_1) (ite StartBool Start_12 Start_2)))
   (Start_8 Int (5 x (- Start_5) (- Start_2 Start_8) (+ Start_7 Start_6) (div Start_4 Start_4) (mod Start_2 Start_8) (ite StartBool_1 Start_9 Start)))
   (Start_7 Int (0 (+ Start_5 Start_1) (div Start_4 Start_3) (abs Start_6) (ite StartBool Start_3 Start_5)))
   (Start_6 Int (4 y 3 (- Start_6) (div Start Start_2) (mod Start_2 Start_7)))
   (Start_2 Int (x (- Start_8) (div Start_4 Start_4) (mod Start_1 Start_1) (ite StartBool Start_2 Start_5)))
   (StartBool_10 Bool (true (or StartBool_11 StartBool_5) (< Start_15 Start_11) (<= Start_4 Start_7) (> Start_17 Start_2)))
   (Start_4 Int (1 y 5 4 (- Start_1) (- Start_5 Start_4) (+ Start_2 Start_4) (* Start_6 Start_4) (ite StartBool Start_4 Start_2)))
   (Start_3 Int (5 (- Start_4 Start_3) (* Start Start_2) (mod Start_1 Start_3) (abs Start_3)))
   (Start_18 Int (y 4 0 (- Start_16) (- Start_5 Start_8) (mod Start_11 Start_5)))
   (StartBool_4 Bool (false true (not StartBool_5) (or StartBool_2 StartBool_6) (< Start_7 Start_11) (<= Start_11 Start_12) (= Start_5 Start_10) (> Start_12 Start_5)))
   (StartBool_6 Bool (false (not StartBool_3) (and StartBool_7 StartBool_8) (or StartBool_1 StartBool_7) (<= Start_1 Start_2) (= Start_6 Start_1) (>= Start_12 Start_11) (> Start_6 Start_10)))
   (Start_16 Int (4 (- Start_16) (+ Start_12 Start_2) (div Start_10 Start_12) (ite StartBool_7 Start_6 Start_17)))
   (Start_12 Int (1 0 (- Start_9) (+ Start_12 Start_6) (div Start_1 Start_1)))
   (Start_10 Int (y (* Start_4 Start_11) (div Start_7 Start_3)))
   (StartBool_5 Bool (true false (not StartBool) (and StartBool_9 StartBool_6) (or StartBool StartBool_6) (< Start_11 Start_9) (>= Start_6 Start_15)))
   (Start_17 Int (2 (abs Start_3) (ite StartBool_6 Start_6 Start_5)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_8 StartBool_6) (or StartBool_4 StartBool_10) (< Start_8 Start_18) (> Start_13 Start_11)))
   (StartBool_11 Bool (true false (<= Start_6 Start_15) (= Start_8 Start_9) (>= Start_6 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ x (div x 3))))

(check-synth)
