(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_1 Int) (Start_2 Int) (Start_12 Int) (Start_7 Int) (Start_6 Int) (Start_4 Int) (Start_9 Int) (Start_5 Int) (Start_3 Int) (Start_10 Int) (StartBool_1 Bool) (StartBool_3 Bool) (StartBool_2 Bool) (Start_11 Int) (Start_8 Int))
  ((Start Int (x 2 (- Start_1 Start_1) (* Start Start_1) (abs Start_2)))
   (StartBool Bool (false true (not StartBool) (and StartBool_1 StartBool_1) (or StartBool_2 StartBool_4) (= Start_8 Start_1) (>= Start_11 Start_1)))
   (StartBool_4 Bool (false (not StartBool_4) (>= Start_11 Start_12)))
   (Start_1 Int (2 1 (* Start Start_10)))
   (Start_2 Int (0 y 1 (- Start_1) (* Start_3 Start_4) (div Start_1 Start_3) (mod Start_1 Start_1) (abs Start_5)))
   (Start_12 Int (3 (- Start_11 Start_11) (ite StartBool_3 Start_8 Start_7)))
   (Start_7 Int (3 (- Start_3) (* Start_6 Start_2) (div Start_5 Start_3) (mod Start Start_7)))
   (Start_6 Int (0 5 (+ Start_4 Start) (* Start_4 Start_4) (div Start_8 Start) (abs Start_1) (ite StartBool_3 Start_8 Start_9)))
   (Start_4 Int (1 (- Start_11) (- Start_2 Start_2) (div Start_6 Start_6) (abs Start_4)))
   (Start_9 Int (4 (- Start_7) (* Start_9 Start_1) (mod Start Start_8) (abs Start_5) (ite StartBool Start_5 Start_10)))
   (Start_5 Int (3 (+ Start_5 Start_5) (div Start_6 Start_1) (ite StartBool_1 Start_4 Start_3)))
   (Start_3 Int (3 (- Start_9) (* Start Start_8) (div Start_12 Start_3) (ite StartBool Start_5 Start_2)))
   (Start_10 Int (0 2 y 5 1 (- Start_6) (- Start_7 Start_8) (+ Start_5 Start_11) (* Start Start_10) (div Start_1 Start_10)))
   (StartBool_1 Bool (false (not StartBool_2) (< Start Start_5) (> Start_6 Start_4)))
   (StartBool_3 Bool (false (and StartBool_3 StartBool_1) (or StartBool_2 StartBool)))
   (StartBool_2 Bool (true (or StartBool_3 StartBool_1) (<= Start_2 Start_6) (>= Start Start) (> Start Start_7)))
   (Start_11 Int (y 2 (- Start) (- Start_11 Start_9) (+ Start_5 Start_10) (ite StartBool Start_7 Start_10)))
   (Start_8 Int (y x 3 1 (- Start_1 Start_8) (+ Start_2 Start_10) (* Start_1 Start) (div Start_11 Start_5) (abs Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* 5 (abs (* 2 y))))))

(check-synth)
