(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_1 Bool) (Start_11 Int) (StartBool_6 Bool) (StartBool_5 Bool) (Start_16 Int) (Start_14 Int) (Start_15 Int) (Start_13 Int) (Start_8 Int) (StartBool_7 Bool) (Start_10 Int) (Start_17 Int) (Start_12 Int) (Start_4 Int) (Start_5 Int) (Start_6 Int) (Start_7 Int) (StartBool_2 Bool) (Start_9 Int) (StartBool_4 Bool) (StartBool_3 Bool) (Start_3 Int))
  ((Start Int (3 1 (- Start Start) (div Start Start_1) (mod Start Start_2) (ite StartBool_1 Start_3 Start_4)))
   (StartBool Bool (true (and StartBool_7 StartBool_2) (< Start Start_10) (<= Start_17 Start_11) (> Start_5 Start_4)))
   (Start_1 Int (y 4 (- Start_17 Start_11) (+ Start_2 Start) (* Start_16 Start_13) (div Start_15 Start_7) (abs Start_14) (ite StartBool_3 Start_11 Start_17)))
   (Start_2 Int (3 (- Start_1) (+ Start_11 Start_16) (div Start_17 Start_4)))
   (StartBool_1 Bool (true (< Start_11 Start_9) (<= Start_17 Start_15) (= Start_3 Start_3) (>= Start_10 Start_4)))
   (Start_11 Int (x (* Start_4 Start_4) (abs Start_7) (ite StartBool_3 Start_9 Start_10)))
   (StartBool_6 Bool (false true))
   (StartBool_5 Bool (true false (and StartBool_5 StartBool_6) (or StartBool_5 StartBool_5) (<= Start_3 Start_7) (>= Start_3 Start_5)))
   (Start_16 Int (0 (+ Start_1 Start_3) (mod Start_6 Start_16) (ite StartBool Start_8 Start_1)))
   (Start_14 Int (2 (- Start_5) (- Start Start_9) (+ Start_1 Start_16) (div Start_14 Start_5)))
   (Start_15 Int (1 (- Start_5) (+ Start_2 Start_9) (* Start_14 Start_2) (div Start_9 Start) (abs Start_11)))
   (Start_13 Int (3 (+ Start_13 Start) (* Start_14 Start_13) (div Start_15 Start_9)))
   (Start_8 Int (2 0 y x 1 5 4 3 (- Start_1) (div Start_2 Start_4) (abs Start_4) (ite StartBool_3 Start_5 Start_5)))
   (StartBool_7 Bool (false (or StartBool StartBool_4) (<= Start_12 Start_9) (= Start_16 Start_15)))
   (Start_10 Int (1 0 (- Start_6) (- Start_6 Start_7) (+ Start_11 Start_9) (* Start_10 Start_3) (div Start_4 Start_6) (mod Start_12 Start_12)))
   (Start_17 Int (0 4 1 (- Start_11) (+ Start_4 Start_10) (mod Start_16 Start_12) (ite StartBool Start_14 Start_1)))
   (Start_12 Int (x (- Start_1) (- Start_12 Start_12) (abs Start_8) (ite StartBool_4 Start_2 Start_4)))
   (Start_4 Int (4 (- Start_4 Start_2) (div Start_3 Start_4) (abs Start_5)))
   (Start_5 Int (x 1 5 (- Start_3) (+ Start_2 Start_3) (div Start_5 Start_6)))
   (Start_6 Int (4 (- Start_1) (* Start_7 Start_6)))
   (Start_7 Int (5 (- Start_5 Start_8) (abs Start_1) (ite StartBool_2 Start_1 Start_2)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_2 StartBool) (< Start_6 Start_6) (<= Start_4 Start) (>= Start_3 Start_4) (> Start_9 Start)))
   (Start_9 Int (y (- Start_1) (- Start Start_8) (* Start_7 Start_6) (mod Start_8 Start_2)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool_5 StartBool_3) (< Start Start_9) (<= Start_8 Start_3) (= Start_13 Start_2) (>= Start_2 Start_5) (> Start_9 Start_13)))
   (StartBool_3 Bool (false (not StartBool_2) (< Start_2 Start_9) (<= Start_7 Start_3) (> Start_6 Start_1)))
   (Start_3 Int (2 1 (- Start_4) (- Start_9 Start_7) (+ Start_6 Start_8) (div Start_1 Start_10) (mod Start_3 Start_8) (abs Start_8) (ite StartBool_2 Start Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 0 (div 3 0))))

(check-synth)
