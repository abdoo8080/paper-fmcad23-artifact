(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_14 Int) (Start_15 Int) (Start_4 Int) (Start_3 Int) (Start_6 Int) (StartBool_4 Bool) (Start_11 Int) (Start_2 Int) (StartBool_5 Bool) (StartBool_1 Bool) (StartBool_2 Bool) (Start_5 Int) (Start_7 Int) (Start_8 Int) (StartBool_3 Bool) (Start_13 Int) (Start_9 Int) (StartBool_6 Bool) (Start_12 Int) (Start_10 Int))
  ((Start Int (0 (* Start Start)))
   (StartBool Bool (true (< Start Start_1) (<= Start_1 Start_2) (> Start_1 Start)))
   (Start_1 Int (5 4 (- Start_12) (- Start_12 Start_10) (+ Start_1 Start_12) (* Start_6 Start_8) (mod Start_4 Start_7) (abs Start_5)))
   (Start_14 Int (5 y 3 1 (- Start_13 Start_10) (* Start_4 Start_10) (mod Start Start_8) (abs Start_3)))
   (Start_15 Int (x 1 (- Start_1) (* Start_12 Start_14) (div Start_4 Start_6) (mod Start_5 Start_2) (abs Start_10)))
   (Start_4 Int (y (- Start_10 Start) (div Start_5 Start_11) (ite StartBool_5 Start_10 Start_11)))
   (Start_3 Int (3 (- Start_4) (+ Start_13 Start_14) (* Start_15 Start) (mod Start_7 Start_13) (ite StartBool_3 Start_12 Start_13)))
   (Start_6 Int (5 4 1 x (* Start_12 Start_9)))
   (StartBool_4 Bool (true (not StartBool_5) (and StartBool_4 StartBool_4) (< Start_4 Start_3)))
   (Start_11 Int (x 4 (- Start_11 Start) (+ Start_10 Start) (div Start_5 Start_12) (abs Start_4)))
   (Start_2 Int (4 0 y 5 (div Start_3 Start) (mod Start_4 Start_4) (ite StartBool_1 Start_4 Start_3)))
   (StartBool_5 Bool (true false (and StartBool_3 StartBool_6) (or StartBool_3 StartBool_4) (<= Start Start_11) (= Start Start_6) (> Start_8 Start_10)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool_2 StartBool_2) (< Start Start_1) (<= Start_2 Start_3) (= Start_4 Start) (> Start_5 Start)))
   (StartBool_2 Bool (false (not StartBool_6) (< Start_13 Start_1) (= Start_6 Start_9)))
   (Start_5 Int (4 2 y (- Start_6 Start) (* Start_2 Start_1) (abs Start_2) (ite StartBool_2 Start_7 Start_3)))
   (Start_7 Int (y (- Start_3 Start_3) (+ Start_4 Start_4) (* Start_7 Start_4) (div Start Start_7) (ite StartBool_1 Start Start_8)))
   (Start_8 Int (y (- Start_3) (- Start_3 Start_4) (+ Start Start_4) (* Start Start_9) (div Start_4 Start_4) (ite StartBool_3 Start_9 Start_8)))
   (StartBool_3 Bool (true (< Start_6 Start_9) (<= Start_9 Start_8) (>= Start_5 Start_2)))
   (Start_13 Int (5 3 (- Start_6) (- Start_1 Start_6) (+ Start_7 Start_11) (* Start_4 Start_2) (div Start_1 Start_6) (mod Start_10 Start_9) (ite StartBool_3 Start Start_6)))
   (Start_9 Int (3 (- Start_3) (+ Start_1 Start_4) (div Start_10 Start_4) (abs Start_2) (ite StartBool Start_3 Start_1)))
   (StartBool_6 Bool (false))
   (Start_12 Int (2 (- Start_1) (- Start_13 Start_6) (ite StartBool_1 Start Start_5)))
   (Start_10 Int (5 y 2 (* Start_4 Start_8) (mod Start_8 Start) (abs Start_2) (ite StartBool_4 Start_11 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod (+ y 3) 3))))

(check-synth)
