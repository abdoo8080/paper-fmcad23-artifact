(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_2 Int) (StartBool_1 Bool) (Start_12 Int) (Start_9 Int) (Start_1 Int) (Start_3 Int) (Start_5 Int) (Start_13 Int) (Start_4 Int) (Start_6 Int) (Start_11 Int) (StartBool_4 Bool) (StartBool_3 Bool) (StartBool_2 Bool) (Start_7 Int) (Start_8 Int) (Start_10 Int))
  ((Start Int (5 (- Start_1) (* Start Start_1) (mod Start_2 Start_2) (abs Start_1) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false (= Start_1 Start_12) (>= Start_13 Start_11) (> Start_4 Start_10)))
   (Start_14 Int (x 4 (- Start_14) (mod Start_12 Start_5) (ite StartBool_1 Start_12 Start)))
   (Start_2 Int (5 x 0 2 (- Start Start_12) (ite StartBool_4 Start Start_11)))
   (StartBool_1 Bool (true (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_2) (<= Start Start_2) (= Start_1 Start_2) (>= Start_3 Start_3) (> Start_2 Start)))
   (Start_12 Int (y 1 (div Start_5 Start_3) (ite StartBool_2 Start_6 Start_7)))
   (Start_9 Int (5 (+ Start_9 Start_6) (* Start_11 Start) (abs Start_10) (ite StartBool_1 Start_5 Start_11)))
   (Start_1 Int (0 5 4 1 x (- Start_6) (div Start_5 Start_6) (mod Start_5 Start) (ite StartBool_1 Start_3 Start_3)))
   (Start_3 Int (1 y (- Start) (+ Start_4 Start_2) (mod Start_4 Start)))
   (Start_5 Int (4 (- Start Start_5) (div Start_6 Start_6)))
   (Start_13 Int (4 0 2 5 (- Start_13) (- Start_14 Start_1) (div Start_5 Start_12) (abs Start_5)))
   (Start_4 Int (0 (- Start_5) (- Start_2 Start_4) (+ Start_4 Start_1) (div Start_3 Start_6) (mod Start_6 Start_2) (abs Start_6) (ite StartBool_3 Start_3 Start_2)))
   (Start_6 Int (0 (+ Start_4 Start_6) (* Start_5 Start_1) (abs Start_1) (ite StartBool_4 Start Start_1)))
   (Start_11 Int (0 (- Start_11 Start_4) (+ Start_1 Start_2) (abs Start_4) (ite StartBool Start_6 Start_9)))
   (StartBool_4 Bool (true false (not StartBool_3) (and StartBool_1 StartBool_2) (= Start_5 Start)))
   (StartBool_3 Bool (false (not StartBool_3) (or StartBool_3 StartBool_2) (<= Start_3 Start_6)))
   (StartBool_2 Bool (false true (not StartBool_4) (and StartBool StartBool_4) (< Start Start_4) (<= Start_4 Start_3) (= Start_7 Start_4)))
   (Start_7 Int (2 (- Start_5) (+ Start_6 Start_2) (mod Start_8 Start_3) (abs Start) (ite StartBool_2 Start_1 Start_5)))
   (Start_8 Int (2 0 (+ Start_6 Start_9) (* Start_5 Start_10) (mod Start_5 Start_7) (abs Start_5)))
   (Start_10 Int (3 (* Start_6 Start_5) (div Start_7 Start_4) (abs Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod x 5))))

(check-synth)
