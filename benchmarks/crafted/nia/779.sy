(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_15 Int) (StartBool_1 Bool) (Start_13 Int) (Start_2 Int) (Start_4 Int) (Start_1 Int) (StartBool_4 Bool) (Start_9 Int) (Start_12 Int) (Start_3 Int) (Start_5 Int) (Start_6 Int) (Start_8 Int) (Start_7 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_10 Int) (Start_16 Int) (Start_11 Int))
  ((Start Int (x (* Start Start) (div Start Start) (mod Start Start) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false (and StartBool_2 StartBool_4) (or StartBool_2 StartBool_2) (< Start_12 Start_7) (<= Start_16 Start_7)))
   (Start_14 Int (y 5 (- Start_6 Start_5) (div Start_10 Start_10) (mod Start_5 Start_13)))
   (Start_15 Int (x 1 2 0 3 5 (- Start_5) (+ Start_15 Start_3) (* Start_7 Start_14) (div Start_7 Start_15)))
   (StartBool_1 Bool (false true (and StartBool_2 StartBool_3) (or StartBool_3 StartBool_4) (<= Start_14 Start) (= Start_1 Start) (> Start Start_14)))
   (Start_13 Int (0 (- Start_12) (- Start_12 Start_14) (+ Start_14 Start_15) (mod Start_12 Start_6) (ite StartBool_2 Start_2 Start_11)))
   (Start_2 Int (3 (- Start_2) (* Start_8 Start_10) (mod Start_2 Start_3)))
   (Start_4 Int (x 2 (- Start_3) (+ Start_4 Start_9) (mod Start Start_2) (abs Start_2) (ite StartBool_2 Start Start_1)))
   (Start_1 Int (y x (- Start_1) (* Start_1 Start) (mod Start_2 Start_1) (abs Start_3)))
   (StartBool_4 Bool (false true (not StartBool_3) (or StartBool StartBool) (< Start_8 Start_13) (<= Start_16 Start_9) (= Start_7 Start_1) (>= Start_10 Start_9)))
   (Start_9 Int (x y (- Start_5) (+ Start_7 Start_2) (* Start_2 Start)))
   (Start_12 Int (3 (- Start_13 Start_8) (+ Start_6 Start_2) (mod Start_5 Start_4) (abs Start_12)))
   (Start_3 Int (5 (- Start) (div Start_4 Start_3) (mod Start_2 Start_2) (ite StartBool_2 Start_2 Start_5)))
   (Start_5 Int (0 (- Start_4 Start_1) (+ Start Start_5) (* Start_4 Start_3) (div Start_4 Start_6) (mod Start_1 Start_3)))
   (Start_6 Int (0 (- Start_7 Start_4) (+ Start Start_8) (* Start_4 Start_7) (div Start_4 Start) (mod Start_8 Start)))
   (Start_8 Int (3 (- Start_8) (* Start_6 Start_6) (abs Start_2)))
   (Start_7 Int (2 (- Start_2 Start_4) (* Start_3 Start_6) (abs Start_7)))
   (StartBool_2 Bool (true false (and StartBool StartBool_1) (or StartBool_2 StartBool_1) (< Start_2 Start_9)))
   (StartBool_3 Bool (true (or StartBool StartBool_3) (< Start_13 Start_10) (<= Start_16 Start_13) (> Start_7 Start_8)))
   (Start_10 Int (4 (- Start_7) (- Start_1 Start_11) (+ Start_9 Start_11) (abs Start_6)))
   (Start_16 Int (x (- Start_11 Start_12) (div Start_10 Start_13) (abs Start_7)))
   (Start_11 Int (1 (- Start_1) (+ Start_2 Start_3) (* Start_7 Start_9) (mod Start_7 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (< y x) 4 5)))

(check-synth)
