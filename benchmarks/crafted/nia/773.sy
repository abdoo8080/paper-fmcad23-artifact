(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_16 Int) (Start_15 Int) (Start_13 Int) (Start_14 Int) (Start_4 Int) (Start_6 Int) (Start_11 Int) (Start_9 Int) (Start_5 Int) (StartBool_2 Bool) (Start_12 Int) (Start_1 Int) (Start_3 Int) (Start_10 Int) (StartBool_1 Bool) (Start_7 Int) (StartBool_3 Bool) (Start_8 Int) (Start_2 Int))
  ((Start Int (x 5 2 4 (- Start_1) (- Start_1 Start_1) (+ Start_2 Start_3) (* Start Start_4) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_2) (< Start_1 Start_14) (<= Start_12 Start_10) (= Start Start_10) (>= Start_8 Start_13) (> Start_3 Start_6)))
   (Start_17 Int (2 (+ Start_8 Start_10) (* Start_6 Start_16) (div Start_4 Start_14) (mod Start_6 Start_9)))
   (Start_16 Int (3 (- Start_15) (- Start_12 Start_17) (+ Start_13 Start) (div Start_7 Start_4) (mod Start_1 Start_6) (ite StartBool_2 Start_6 Start_15)))
   (Start_15 Int (3 x 2 4 (- Start_16) (- Start_15 Start_3) (+ Start_9 Start_8) (* Start_7 Start_2) (div Start_11 Start_5) (mod Start_6 Start_6)))
   (Start_13 Int (x 2 (div Start_3 Start_7) (mod Start_9 Start_14) (ite StartBool_2 Start_5 Start_1)))
   (Start_14 Int (1 (- Start_4) (+ Start_12 Start_11) (mod Start_7 Start_15)))
   (Start_4 Int (3 0 1 5 y x 2 (+ Start_5 Start_4) (div Start_3 Start_6)))
   (Start_6 Int (5 (+ Start_4 Start) (* Start_6 Start_3) (ite StartBool Start_6 Start_5)))
   (Start_11 Int (y (- Start_8) (- Start_5 Start_6) (* Start_2 Start_9) (ite StartBool_1 Start_1 Start_2)))
   (Start_9 Int (y (- Start_9) (* Start_10 Start_6) (div Start_1 Start_3) (mod Start_7 Start_3) (abs Start_11)))
   (Start_5 Int (3 2 (+ Start_5 Start_6) (* Start Start_3) (div Start_1 Start_6) (ite StartBool_1 Start_4 Start)))
   (StartBool_2 Bool (false true (not StartBool_2) (and StartBool_1 StartBool_3) (<= Start_3 Start_8)))
   (Start_12 Int (5 x (- Start_4) (+ Start_12 Start_6) (* Start_3 Start_1) (div Start_11 Start_13) (mod Start_8 Start_13) (ite StartBool Start_2 Start_11)))
   (Start_1 Int (3 x 4 (- Start_11) (- Start_4 Start_10) (div Start_2 Start_12)))
   (Start_3 Int (x 5 2 (- Start_3) (+ Start_2 Start_2) (* Start_7 Start_5) (div Start_5 Start_8) (mod Start_4 Start_9) (abs Start_4)))
   (Start_10 Int (x 0 5 (- Start_10) (+ Start_3 Start_7) (div Start_3 Start_10) (mod Start_1 Start_9) (abs Start_4) (ite StartBool Start_5 Start_11)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_1) (< Start_2 Start_6)))
   (Start_7 Int (x 2 (- Start Start_9) (+ Start_6 Start_9)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_3 StartBool) (or StartBool_2 StartBool) (< Start_14 Start_1) (<= Start_14 Start_8) (= Start_3 Start_10) (>= Start_8 Start_11) (> Start_13 Start_13)))
   (Start_8 Int (5 (- Start_1 Start_7) (abs Start_9)))
   (Start_2 Int (5 (- Start_11) (abs Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (+ y 2) 0)))

(check-synth)
