(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (Start_24 Int) (Start_1 Int) (Start_15 Int) (StartBool_4 Bool) (Start_12 Int) (Start_3 Int) (Start_13 Int) (Start_11 Int) (Start_14 Int) (Start_9 Int) (Start_10 Int) (Start_17 Int) (Start_5 Int) (StartBool_3 Bool) (Start_8 Int) (Start_22 Int) (StartBool_5 Bool) (StartBool_6 Bool) (Start_4 Int) (Start_18 Int) (StartBool_2 Bool) (Start_19 Int) (Start_6 Int) (Start_16 Int) (Start_20 Int) (Start_7 Int) (Start_21 Int) (Start_2 Int) (StartBool_1 Bool) (Start_23 Int))
  ((Start Int (4 1 (- Start_1) (+ Start_2 Start_3) (* Start_1 Start_1) (mod Start_1 Start)))
   (StartBool Bool (true (not StartBool) (< Start_20 Start_24)))
   (StartBool_7 Bool (true (or StartBool StartBool) (<= Start_21 Start_22) (= Start_24 Start_6) (> Start_22 Start_19)))
   (Start_24 Int (3 (- Start_20 Start_24) (div Start_6 Start_5) (mod Start_20 Start_17) (ite StartBool_7 Start_21 Start_16)))
   (Start_1 Int (x y (+ Start_21 Start_10) (abs Start_24)))
   (Start_15 Int (x 4 y (+ Start_10 Start_5) (div Start_8 Start_9) (mod Start Start_9) (ite StartBool_1 Start_7 Start_5)))
   (StartBool_4 Bool (true false (< Start_17 Start_9) (<= Start_11 Start_17) (= Start Start_19) (>= Start_4 Start_20) (> Start_5 Start_19)))
   (Start_12 Int (y 0 (* Start_13 Start_16) (mod Start_8 Start_8) (ite StartBool_2 Start_13 Start_10)))
   (Start_3 Int (5 (- Start) (- Start_1 Start_1) (* Start_4 Start_5) (div Start_5 Start_4) (mod Start_6 Start_5)))
   (Start_13 Int (2 (- Start_10) (- Start_1 Start_7) (* Start_12 Start_4) (div Start_3 Start_11) (mod Start Start_14) (abs Start_12)))
   (Start_11 Int (2 y 5 (- Start_4) (mod Start_12 Start_5) (abs Start_13) (ite StartBool_1 Start_8 Start_12)))
   (Start_14 Int (3 2 (- Start_4) (+ Start_4 Start_1) (* Start_14 Start_1) (div Start Start_4) (abs Start_15)))
   (Start_9 Int (2 1 (- Start_4) (+ Start_4 Start_9) (* Start_1 Start_5) (div Start_3 Start_6) (mod Start_4 Start_5) (abs Start_4) (ite StartBool Start_10 Start_4)))
   (Start_10 Int (4 y (+ Start_1 Start_5) (mod Start_9 Start_11)))
   (Start_17 Int (5 (- Start_2 Start_9) (div Start_8 Start_11) (abs Start) (ite StartBool_2 Start_17 Start_5)))
   (Start_5 Int (2 (- Start_7 Start_4) (+ Start Start_5) (* Start_1 Start) (div Start_8 Start_9) (ite StartBool Start_1 Start_7)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_4 StartBool_5) (<= Start_4 Start_11) (= Start_14 Start_5)))
   (Start_8 Int (x (- Start_10) (mod Start Start_9) (abs Start_17) (ite StartBool_3 Start_1 Start_3)))
   (Start_22 Int (4 (* Start_7 Start_17) (mod Start_10 Start_20) (abs Start_23)))
   (StartBool_5 Bool (false true (and StartBool_2 StartBool_6) (> Start_17 Start_5)))
   (StartBool_6 Bool (false true (and StartBool_1 StartBool_5) (< Start Start_13) (<= Start_5 Start_18) (= Start_10 Start_7) (> Start_11 Start_18)))
   (Start_4 Int (y (- Start_23) (- Start_10 Start_3) (+ Start_15 Start_8) (* Start_12 Start_16) (ite StartBool_3 Start_4 Start_20)))
   (Start_18 Int (4 (- Start_8) (- Start_1 Start_15) (+ Start_15 Start_19) (abs Start_5)))
   (StartBool_2 Bool (true (or StartBool StartBool_1) (<= Start Start_13) (>= Start_17 Start_15)))
   (Start_19 Int (0 (- Start_2) (- Start_17 Start_4) (* Start_16 Start_16) (abs Start_17)))
   (Start_6 Int (0 (+ Start_1 Start_4) (abs Start_4) (ite StartBool Start_3 Start_4)))
   (Start_16 Int (y (- Start_7 Start_14) (+ Start_10 Start_11) (mod Start_12 Start_16) (abs Start_3) (ite StartBool Start_11 Start_2)))
   (Start_20 Int (1 4 (- Start_12 Start_5) (+ Start_11 Start_9) (* Start_6 Start_15)))
   (Start_7 Int (2 4 0 (+ Start_17 Start_4) (mod Start_1 Start_21) (abs Start_6)))
   (Start_21 Int (y (- Start_22) (- Start_12 Start_17) (+ Start_17 Start_16) (* Start_13 Start) (mod Start_13 Start_23) (ite StartBool_4 Start_7 Start_7)))
   (Start_2 Int (x 0 4 3 y (- Start_19 Start_6) (+ Start_2 Start_7) (mod Start_22 Start_16) (abs Start_21)))
   (StartBool_1 Bool (false true (or StartBool_1 StartBool_1) (< Start_13 Start_3) (>= Start_11 Start)))
   (Start_23 Int (0 (- Start Start_20) (* Start_14 Start) (div Start_9 Start_23) (ite StartBool_2 Start_8 Start_19)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (div 0 y) 4)))

(check-synth)
