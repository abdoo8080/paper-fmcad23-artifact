(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_3 Int) (Start_2 Int) (StartBool_1 Bool) (Start_6 Int) (Start_7 Int) (Start_9 Int) (Start_4 Int) (StartBool_4 Bool) (Start_8 Int) (StartBool_5 Bool) (Start_11 Int) (StartBool_2 Bool) (Start_1 Int) (Start_10 Int) (StartBool_3 Bool) (Start_5 Int))
  ((Start Int (1 x (- Start_1) (div Start_1 Start) (mod Start Start_1) (abs Start_2) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true (and StartBool_5 StartBool_4) (or StartBool StartBool_3) (< Start_8 Start_1)))
   (Start_12 Int (y (- Start_11 Start_11) (+ Start_4 Start_4) (* Start_8 Start_12) (div Start_12 Start_10) (abs Start_4)))
   (Start_3 Int (y 4 (- Start_8 Start_6) (+ Start Start_5) (* Start_4 Start_3) (mod Start_7 Start_10) (ite StartBool_1 Start_4 Start_5)))
   (Start_2 Int (4 1 (- Start) (+ Start_1 Start_3) (* Start_1 Start_1) (abs Start_4)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_2) (= Start_5 Start_6)))
   (Start_6 Int (3 (- Start_4 Start_3) (* Start_5 Start_7) (ite StartBool_2 Start_7 Start_6)))
   (Start_7 Int (1 4 3 (- Start) (- Start_1 Start_8) (* Start_9 Start_9)))
   (Start_9 Int (2 (+ Start_5 Start_5) (* Start_7 Start_5) (mod Start_8 Start_2) (ite StartBool_1 Start_2 Start_4)))
   (Start_4 Int (y 2 (+ Start_3 Start_4) (* Start_5 Start_2) (abs Start_3) (ite StartBool_1 Start_4 Start)))
   (StartBool_4 Bool (false true (and StartBool_1 StartBool_2) (< Start_9 Start) (<= Start_1 Start_10) (>= Start_2 Start_8) (> Start_7 Start_4)))
   (Start_8 Int (0 4 (- Start_1) (mod Start_7 Start_4)))
   (StartBool_5 Bool (true (not StartBool_5) (and StartBool_4 StartBool_2) (or StartBool_3 StartBool_1) (<= Start_12 Start_10) (= Start_11 Start_7) (> Start_11 Start_11)))
   (Start_11 Int (5 (- Start_6) (+ Start_8 Start) (mod Start Start_2) (abs Start_1)))
   (StartBool_2 Bool (true (and StartBool StartBool_2) (or StartBool_1 StartBool) (< Start_5 Start_10) (= Start_9 Start_7) (>= Start Start_3)))
   (Start_1 Int (0 4 y (* Start_4 Start_1) (div Start_8 Start_4) (mod Start_2 Start_12)))
   (Start_10 Int (x y 0 1 2 (+ Start_2 Start) (* Start_9 Start_1) (div Start_5 Start) (mod Start_2 Start_2) (ite StartBool_4 Start_2 Start_6)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool) (<= Start_7 Start_1) (> Start_8 Start_5)))
   (Start_5 Int (x 3 0 4 (- Start_11) (div Start Start_9) (mod Start_3 Start_5) (abs Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (+ 3 (div 1 0)))))

(check-synth)
