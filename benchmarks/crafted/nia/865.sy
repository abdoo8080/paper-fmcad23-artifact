(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_2 Bool) (StartBool_8 Bool) (StartBool_7 Bool) (Start_4 Int) (Start_7 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_3 Int) (StartBool_1 Bool) (StartBool_6 Bool) (StartBool_9 Bool) (Start_1 Int) (Start_6 Int) (Start_9 Int) (Start_5 Int) (Start_2 Int) (Start_8 Int) (StartBool_3 Bool) (Start_10 Int))
  ((Start Int (y (- Start) (- Start Start_1) (* Start_2 Start_3) (div Start Start_4) (mod Start_4 Start_3) (abs Start_3)))
   (StartBool Bool (true (and StartBool_8 StartBool_3) (or StartBool_2 StartBool_2) (< Start_8 Start_9)))
   (StartBool_2 Bool (true (not StartBool_8) (or StartBool_2 StartBool_6) (< Start_10 Start_3) (<= Start_10 Start) (= Start Start_4) (>= Start_6 Start_6)))
   (StartBool_8 Bool (true (not StartBool_2) (< Start_1 Start_4) (<= Start_1 Start_7) (>= Start_4 Start_4)))
   (StartBool_7 Bool (false (not StartBool_5) (or StartBool_3 StartBool_5) (>= Start_10 Start_2)))
   (Start_4 Int (5 4 1 2 (- Start_2) (* Start Start_3) (div Start_2 Start_1) (mod Start_1 Start_2) (abs Start_4)))
   (Start_7 Int (1 (- Start_7) (- Start Start_8) (+ Start_9 Start) (div Start_6 Start_1) (mod Start Start_7) (abs Start_9)))
   (StartBool_4 Bool (true (and StartBool_5 StartBool_6) (or StartBool_1 StartBool_2) (< Start_3 Start_7) (<= Start_1 Start_2)))
   (StartBool_5 Bool (false true (and StartBool_2 StartBool_7) (< Start_9 Start_1) (>= Start_7 Start_2) (> Start_6 Start_10)))
   (Start_3 Int (2 (- Start_4 Start_1) (mod Start_1 Start_1) (abs Start)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_1 StartBool_3) (or StartBool_2 StartBool_4) (< Start_1 Start_6)))
   (StartBool_6 Bool (false true (not StartBool_6) (= Start_4 Start_10) (>= Start_1 Start)))
   (StartBool_9 Bool (true (not StartBool_2) (and StartBool_1 StartBool_9) (or StartBool_9 StartBool_4) (<= Start_6 Start_8) (= Start_8 Start_7) (>= Start_9 Start_8) (> Start_9 Start_9)))
   (Start_1 Int (0 y (- Start_5) (- Start Start) (* Start_5 Start_2) (ite StartBool_1 Start Start)))
   (Start_6 Int (1 2 4 (- Start_6 Start_5) (+ Start_1 Start) (mod Start_3 Start_7) (abs Start_2) (ite StartBool_1 Start_3 Start_6)))
   (Start_9 Int (5 0 2 4 1 (- Start) (mod Start_6 Start_8) (ite StartBool_3 Start_8 Start_3)))
   (Start_5 Int (3 (* Start_6 Start_3) (div Start_4 Start_10) (abs Start_9) (ite StartBool_9 Start_4 Start_3)))
   (Start_2 Int (3 (- Start_4 Start_4) (* Start_2 Start_2) (mod Start Start_2) (ite StartBool Start_4 Start_3)))
   (Start_8 Int (4 (div Start_3 Start_3) (ite StartBool_3 Start_8 Start_6)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool_1) (or StartBool_8 StartBool_9) (<= Start_6 Start_10)))
   (Start_10 Int (y (+ Start_1 Start_8) (div Start_7 Start_1) (mod Start_6 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (* (- 5 (mod y 0)) x))))

(check-synth)
