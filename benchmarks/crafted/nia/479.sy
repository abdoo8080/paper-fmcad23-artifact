(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_3 Int) (StartBool_5 Bool) (Start_2 Int) (Start_4 Int) (StartBool_7 Bool) (Start_11 Int) (StartBool_2 Bool) (Start_5 Int) (Start_8 Int) (StartBool_6 Bool) (Start_10 Int) (Start_12 Int) (Start_6 Int) (Start_7 Int) (StartBool_1 Bool) (Start_1 Int) (StartBool_3 Bool) (Start_9 Int))
  ((Start Int (1 (* Start Start_1) (div Start Start) (mod Start Start_1) (abs Start_2)))
   (StartBool Bool (false (and StartBool_5 StartBool_2) (= Start_12 Start_10) (> Start_11 Start_10)))
   (StartBool_4 Bool (true false (not StartBool_1) (or StartBool_2 StartBool_3) (< Start_8 Start_11) (> Start_2 Start_9)))
   (Start_3 Int (3 5 4 (- Start_2 Start_1) (+ Start_3 Start_3) (mod Start Start_1) (ite StartBool_1 Start_4 Start)))
   (StartBool_5 Bool (true false (not StartBool_3) (<= Start_6 Start_8) (= Start_6 Start_5)))
   (Start_2 Int (1 2 (+ Start_3 Start) (div Start_2 Start_1) (ite StartBool Start_2 Start_3)))
   (Start_4 Int (2 3 (div Start_4 Start_5) (mod Start_4 Start_4) (abs Start)))
   (StartBool_7 Bool (true false (or StartBool_6 StartBool_7) (= Start_4 Start_5) (>= Start_6 Start_6)))
   (Start_11 Int (0 (- Start_5) (- Start_1 Start) (* Start_8 Start_6) (div Start_6 Start_9) (abs Start_4)))
   (StartBool_2 Bool (false (not StartBool_3) (and StartBool_3 StartBool_3) (>= Start_10 Start_3)))
   (Start_5 Int (0 (- Start_3) (+ Start_3 Start) (* Start_6 Start_5) (div Start_5 Start_2) (mod Start_6 Start_1)))
   (Start_8 Int (1 (- Start_3 Start_5) (div Start_6 Start_3) (abs Start_3)))
   (StartBool_6 Bool (true (not StartBool_2) (and StartBool_7 StartBool_3) (or StartBool StartBool) (= Start_3 Start_8)))
   (Start_10 Int (0 (+ Start_5 Start_1) (mod Start Start_6) (abs Start_9)))
   (Start_12 Int (1 (- Start_9 Start_1) (+ Start_7 Start_4) (* Start Start_5) (mod Start_7 Start_11) (abs Start_10)))
   (Start_6 Int (4 (- Start_7 Start_5) (ite StartBool Start_4 Start_8)))
   (Start_7 Int (1 0 5 (- Start_2) (- Start_5 Start_3) (+ Start_4 Start_5) (div Start_4 Start_5)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_1 StartBool_2) (>= Start_9 Start_2)))
   (Start_1 Int (y (- Start_6) (* Start_6 Start_11) (ite StartBool_6 Start_5 Start_8)))
   (StartBool_3 Bool (false (not StartBool_4) (and StartBool_4 StartBool_1) (or StartBool_5 StartBool_3) (<= Start_9 Start_4)))
   (Start_9 Int (1 4 (- Start_5 Start_4) (* Start_5 Start_4) (div Start_9 Start_6) (mod Start_5 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- x (mod 0 0))))

(check-synth)
