(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_2 Int) (StartBool_2 Bool) (Start_11 Int) (StartBool_1 Bool) (Start_14 Int) (Start_5 Int) (Start_1 Int) (Start_6 Int) (StartBool_4 Bool) (Start_4 Int) (Start_9 Int) (StartBool_5 Bool) (StartBool_3 Bool) (Start_10 Int) (Start_8 Int) (Start_7 Int) (Start_3 Int) (Start_13 Int) (Start_12 Int))
  ((Start Int (x 2 (- Start_1) (- Start Start) (+ Start Start_1) (* Start_1 Start_1) (div Start Start_2) (abs Start_1) (ite StartBool_1 Start Start)))
   (StartBool Bool (false (= Start_5 Start_2) (>= Start_11 Start_15)))
   (Start_15 Int (3 (- Start_1 Start_5) (+ Start_7 Start_13) (mod Start_3 Start_4) (ite StartBool_3 Start_9 Start_14)))
   (Start_2 Int (x 4 (- Start_12) (- Start_3 Start) (mod Start_7 Start_7) (ite StartBool_1 Start_8 Start_4)))
   (StartBool_2 Bool (true (not StartBool_2) (or StartBool_5 StartBool_3) (= Start_1 Start_13)))
   (Start_11 Int (4 1 0 (- Start_4) (- Start_8 Start_11) (+ Start_9 Start) (* Start_7 Start) (div Start_13 Start_1)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_2 StartBool_1) (or StartBool StartBool_1) (<= Start_2 Start) (= Start_3 Start_4)))
   (Start_14 Int (y (- Start_4) (+ Start_4 Start_4) (* Start_3 Start_3)))
   (Start_5 Int (x (- Start_4 Start_3) (* Start_2 Start_6) (mod Start_1 Start_7) (abs Start_8) (ite StartBool_1 Start_1 Start_9)))
   (Start_1 Int (0 (- Start_7) (+ Start_3 Start_13) (* Start_5 Start) (div Start_14 Start_5)))
   (Start_6 Int (0 1 (- Start_9) (+ Start_4 Start_5) (mod Start_2 Start_8) (abs Start_9)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool_3 StartBool_5) (< Start_8 Start_8) (<= Start_2 Start_4) (>= Start_3 Start)))
   (Start_4 Int (4 1 (- Start_3) (abs Start_5)))
   (Start_9 Int (0 3 x (- Start_10 Start) (+ Start_3 Start_10) (* Start_8 Start_8)))
   (StartBool_5 Bool (false (or StartBool_2 StartBool_5) (= Start_6 Start_1) (>= Start Start_11) (> Start_7 Start_8)))
   (StartBool_3 Bool (false true (not StartBool_1) (and StartBool_1 StartBool_4) (or StartBool StartBool_4) (< Start_3 Start_13)))
   (Start_10 Int (2 (- Start_1 Start_6) (* Start_2 Start_10) (div Start_1 Start) (mod Start_4 Start_3) (ite StartBool Start_3 Start_7)))
   (Start_8 Int (1 0 (- Start_4) (- Start_7 Start_3) (* Start_3 Start_5) (ite StartBool_2 Start_4 Start_3)))
   (Start_7 Int (x (- Start_9) (- Start_8 Start_5) (* Start_8 Start_4) (div Start_2 Start_3) (abs Start_10)))
   (Start_3 Int (x (- Start_2) (+ Start_11 Start_7) (* Start_5 Start_12) (div Start_5 Start_10) (mod Start_3 Start_2) (abs Start_9)))
   (Start_13 Int (0 (- Start_13) (- Start_11 Start_12) (+ Start_3 Start_4) (* Start_3 Start_3) (ite StartBool Start_9 Start_2)))
   (Start_12 Int (5 4 x (- Start_6) (- Start_3 Start_6) (+ Start_2 Start_3) (div Start_2 Start_11) (abs Start_4) (ite StartBool_3 Start_4 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 4 (div x 0))))

(check-synth)
