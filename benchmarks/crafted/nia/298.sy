(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_6 Bool) (StartBool_1 Bool) (Start_19 Int) (Start_16 Int) (Start_17 Int) (Start_15 Int) (Start_14 Int) (StartBool_8 Bool) (Start_1 Int) (Start_18 Int) (Start_13 Int) (Start_3 Int) (Start_5 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_6 Int) (Start_2 Int) (Start_8 Int) (Start_10 Int) (StartBool_4 Bool) (Start_7 Int) (Start_12 Int) (StartBool_5 Bool) (Start_9 Int) (Start_4 Int) (Start_11 Int))
  ((Start Int (1 3 0 5 (- Start_1 Start) (* Start Start) (mod Start_1 Start)))
   (StartBool Bool (true (not StartBool_6) (and StartBool_2 StartBool_5) (< Start_10 Start_19) (= Start_16 Start_1)))
   (StartBool_7 Bool (true (and StartBool_3 StartBool_5) (or StartBool_8 StartBool_3) (<= Start_6 Start_6) (>= Start_17 Start_12)))
   (StartBool_6 Bool (false (not StartBool_7) (< Start_4 Start_17) (= Start_8 Start_9) (>= Start_7 Start_3) (> Start_16 Start_8)))
   (StartBool_1 Bool (true false (not StartBool_5) (<= Start_6 Start_1) (= Start_15 Start_7) (>= Start_2 Start_16) (> Start_17 Start_16)))
   (Start_19 Int (5 y (- Start_10 Start_13) (* Start Start_9) (mod Start_5 Start_17) (abs Start_9)))
   (Start_16 Int (1 (+ Start_7 Start_1) (* Start_12 Start_13) (abs Start_6)))
   (Start_17 Int (x (- Start_1) (div Start_18 Start_13) (mod Start Start_13) (abs Start_17)))
   (Start_15 Int (3 5 2 0 y (- Start_1 Start_6) (mod Start_6 Start_8) (abs Start_16)))
   (Start_14 Int (1 (- Start_14 Start_12) (+ Start_15 Start_9) (abs Start_7) (ite StartBool_1 Start Start_4)))
   (StartBool_8 Bool (true false (not StartBool_8) (<= Start_18 Start_1) (= Start Start_16) (> Start_7 Start_14)))
   (Start_1 Int (3 x 5 1 2 (+ Start_1 Start) (mod Start_1 Start_1) (abs Start_2) (ite StartBool_1 Start Start_3)))
   (Start_18 Int (x (- Start_14) (- Start_9 Start_3) (div Start_15 Start_13) (ite StartBool_3 Start_13 Start_8)))
   (Start_13 Int (y 0 2 (- Start_5) (- Start_16 Start_11) (+ Start_1 Start_17) (* Start_5 Start_14) (abs Start_1) (ite StartBool Start_12 Start_6)))
   (Start_3 Int (2 x (- Start_3 Start_4) (+ Start_4 Start) (* Start_1 Start_4) (mod Start_5 Start_4)))
   (Start_5 Int (0 y (- Start_6) (+ Start_5 Start) (* Start_3 Start_6) (div Start_6 Start_6) (mod Start_3 Start_6) (ite StartBool_2 Start_5 Start)))
   (StartBool_3 Bool (true false (not StartBool_4) (< Start_19 Start_6) (<= Start_4 Start_17) (= Start_4 Start_4) (>= Start_9 Start_10) (> Start_9 Start)))
   (StartBool_2 Bool (false (<= Start_5 Start) (= Start_1 Start_5) (>= Start_4 Start_6) (> Start_1 Start)))
   (Start_6 Int (5 (- Start_4) (* Start_7 Start_2) (div Start Start_8) (mod Start_3 Start_7)))
   (Start_2 Int (4 (+ Start_1 Start_1) (* Start_1 Start_10) (mod Start_17 Start_10) (abs Start_11)))
   (Start_8 Int (4 5 (- Start_7 Start) (* Start_5 Start_6) (mod Start_8 Start_3)))
   (Start_10 Int (3 y 5 (- Start_12) (- Start_9 Start_5) (* Start_9 Start_11) (mod Start_1 Start_8) (ite StartBool_2 Start_6 Start_5)))
   (StartBool_4 Bool (false (not StartBool_2) (and StartBool_3 StartBool) (< Start_18 Start_18) (<= Start_4 Start_12) (>= Start_19 Start_6)))
   (Start_7 Int (3 y x (- Start_1) (- Start Start_1) (mod Start_4 Start) (abs Start_3)))
   (Start_12 Int (3 2 (- Start_9) (+ Start_6 Start) (* Start Start_3) (div Start_13 Start_7) (mod Start Start_8) (abs Start_11) (ite StartBool_2 Start_7 Start_14)))
   (StartBool_5 Bool (true false (and StartBool_1 StartBool_6)))
   (Start_9 Int (5 1 (- Start_3) (- Start_1 Start_6) (* Start_10 Start) (abs Start_6) (ite StartBool Start_9 Start_11)))
   (Start_4 Int (5 x 3 (- Start_9) (- Start_6 Start_6) (+ Start_9 Start_9) (div Start_2 Start_8) (abs Start_8) (ite StartBool_2 Start_4 Start_6)))
   (Start_11 Int (1 y 0 x 5))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 0 (- (* (+ y 3) 4)))))

(check-synth)
