(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_18 Int) (Start_11 Int) (Start_14 Int) (Start_13 Int) (Start_19 Int) (Start_16 Int) (Start_17 Int) (Start_5 Int) (Start_1 Int) (StartBool_1 Bool) (Start_8 Int) (Start_7 Int) (Start_2 Int) (Start_3 Int) (Start_4 Int) (Start_9 Int) (Start_6 Int) (Start_10 Int) (StartBool_2 Bool) (Start_12 Int))
  ((Start Int (0 (div Start Start) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (false (not StartBool) (or StartBool StartBool_2) (< Start_1 Start_7) (<= Start_4 Start_17) (> Start_4 Start_19)))
   (Start_15 Int (5 (* Start_17 Start_11) (div Start_1 Start) (ite StartBool_1 Start_4 Start_16)))
   (Start_18 Int (0 (+ Start_1 Start_9) (abs Start_14)))
   (Start_11 Int (3 (+ Start_15 Start_7) (* Start_6 Start_10) (div Start_15 Start_12) (mod Start_9 Start) (abs Start_16) (ite StartBool Start_6 Start_11)))
   (Start_14 Int (x (- Start_4) (- Start Start_8) (* Start_6 Start_9) (div Start_5 Start) (ite StartBool Start_14 Start_11)))
   (Start_13 Int (3 0 5 4 (+ Start_14 Start_10) (* Start_11 Start_12) (div Start_2 Start_8)))
   (Start_19 Int (x (- Start_2 Start_8) (div Start_9 Start_6)))
   (Start_16 Int (x 1 (- Start_2) (+ Start_17 Start_3) (* Start_2 Start_3) (div Start_9 Start_18) (mod Start_15 Start)))
   (Start_17 Int (x 4 (+ Start_11 Start_7) (* Start_1 Start_19) (ite StartBool_1 Start_7 Start_15)))
   (Start_5 Int (0 5 x (- Start_2) (div Start_1 Start) (abs Start_2) (ite StartBool_1 Start_4 Start_2)))
   (Start_1 Int (2 1 4 x (- Start) (* Start Start) (div Start Start_2) (mod Start_1 Start_1) (abs Start_1)))
   (StartBool_1 Bool (false (< Start Start) (<= Start_3 Start_3) (= Start_2 Start_4) (>= Start_1 Start_2) (> Start_3 Start_5)))
   (Start_8 Int (4 0 (- Start_6) (div Start_7 Start_4) (mod Start_6 Start_4)))
   (Start_7 Int (y (- Start_3) (- Start_9 Start_8) (ite StartBool Start_3 Start_6)))
   (Start_2 Int (y 1 (ite StartBool Start_2 Start_2)))
   (Start_3 Int (x (- Start_11 Start_8) (+ Start_3 Start_11) (div Start_5 Start_4) (mod Start_12 Start_3) (ite StartBool_1 Start_10 Start_9)))
   (Start_4 Int (2 (- Start_6) (- Start_7 Start) (+ Start_8 Start_6) (* Start_4 Start_2) (mod Start_1 Start_6)))
   (Start_9 Int (y 3 (- Start_7) (div Start_3 Start_8) (mod Start_2 Start_7)))
   (Start_6 Int (y (+ Start_1 Start_9) (* Start_9 Start_10) (div Start_6 Start_8)))
   (Start_10 Int (2 (div Start_5 Start_10)))
   (StartBool_2 Bool (true false (not StartBool) (< Start_13 Start_12) (= Start_7 Start_13) (>= Start_15 Start_18) (> Start_17 Start_3)))
   (Start_12 Int (3 4 y 2 5 0 (- Start_3 Start_12) (+ Start Start_11) (* Start_5 Start_8) (mod Start_10 Start_5) (abs Start_1) (ite StartBool_1 Start_5 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* x 2)))

(check-synth)
