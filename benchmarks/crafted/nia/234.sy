(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (Start_6 Int) (Start_3 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_12 Int) (Start_15 Int) (Start_7 Int) (Start_9 Int) (Start_14 Int) (Start_8 Int) (Start_11 Int) (Start_4 Int) (Start_10 Int) (Start_13 Int) (Start_5 Int) (StartBool_2 Bool))
  ((Start Int (0 x (+ Start Start_1) (* Start_2 Start_2) (div Start_1 Start_3) (mod Start_2 Start_4) (abs Start_1)))
   (StartBool Bool (true (and StartBool_3 StartBool_1) (>= Start_14 Start_12)))
   (Start_1 Int (4 (- Start_4) (+ Start Start_6) (mod Start_12 Start_13) (abs Start_1)))
   (Start_2 Int (x (- Start) (+ Start_6 Start_7) (* Start_5 Start_5) (div Start_1 Start_3) (ite StartBool_1 Start_9 Start_5)))
   (Start_6 Int (2 (+ Start_7 Start_1) (* Start_6 Start_4) (mod Start_3 Start) (ite StartBool_1 Start Start_4)))
   (Start_3 Int (1 (- Start_10 Start_8) (+ Start_9 Start_2) (div Start_11 Start_9) (mod Start_7 Start_8) (abs Start_8)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_1 StartBool_1) (<= Start_5 Start) (>= Start Start_1) (> Start_5 Start_1)))
   (StartBool_3 Bool (true false (<= Start_15 Start_15)))
   (Start_12 Int (2 4 0 x 3 1 (div Start_4 Start_11) (mod Start_9 Start_11) (abs Start_7)))
   (Start_15 Int (3 (* Start_9 Start_4) (div Start_6 Start_9) (mod Start_4 Start_3) (ite StartBool_1 Start_12 Start_13)))
   (Start_7 Int (4 (- Start) (+ Start_1 Start_8) (div Start_6 Start_7) (mod Start Start_3) (abs Start_7)))
   (Start_9 Int (y (- Start_7) (- Start_8 Start_7) (div Start_2 Start_3) (mod Start_6 Start_2) (abs Start_6)))
   (Start_14 Int (y 4 (* Start_5 Start_13) (abs Start_13)))
   (Start_8 Int (4 (+ Start_5 Start_9) (* Start_9 Start_1) (abs Start)))
   (Start_11 Int (2 y (- Start_5 Start_1) (* Start_5 Start_3) (div Start_6 Start_3) (mod Start_1 Start_3) (ite StartBool_2 Start_12 Start_9)))
   (Start_4 Int (2 4 (- Start_1) (- Start_1 Start) (+ Start_4 Start) (div Start_2 Start_3) (mod Start_5 Start_6) (abs Start_4)))
   (Start_10 Int (0 (- Start_11) (- Start_8 Start_3) (+ Start_4 Start_11) (* Start_7 Start_11) (mod Start_7 Start_7) (ite StartBool Start_11 Start_10)))
   (Start_13 Int (1 (- Start_8) (+ Start Start_9) (* Start_1 Start_6) (div Start_3 Start_1) (mod Start Start_7) (abs Start_4) (ite StartBool Start_4 Start_14)))
   (Start_5 Int (y x 3 4 5 (* Start_5 Start) (mod Start_5 Start_7) (abs Start_2)))
   (StartBool_2 Bool (true (and StartBool_1 StartBool_1) (< Start Start_12) (<= Start_1 Start_8) (> Start_11 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 (+ 5 5))))

(check-synth)
