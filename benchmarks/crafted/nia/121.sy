(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_5 Int) (Start_9 Int) (Start_10 Int) (Start_8 Int) (StartBool_3 Bool) (Start_13 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_6 Int) (Start_12 Int) (Start_3 Int) (StartBool_4 Bool) (Start_7 Int) (Start_2 Int) (Start_15 Int) (Start_11 Int) (Start_4 Int) (Start_14 Int))
  ((Start Int (y 5 (- Start) (- Start_1 Start) (+ Start Start_2) (* Start_2 Start_3) (abs Start) (ite StartBool_1 Start_4 Start_4)))
   (StartBool Bool (true (not StartBool_4) (= Start_13 Start_5) (>= Start_8 Start_7)))
   (Start_1 Int (1 y 0 (* Start_12 Start_2) (div Start_13 Start_13) (mod Start_13 Start) (abs Start_12)))
   (Start_5 Int (4 (- Start_6 Start_3) (* Start_4 Start_5) (div Start_10 Start_12) (ite StartBool_4 Start_3 Start_12)))
   (Start_9 Int (2 3 1 4 (+ Start_6 Start_14) (* Start_1 Start_8) (abs Start)))
   (Start_10 Int (5 4 (- Start Start_8) (+ Start_5 Start_14) (* Start_10 Start_13) (div Start_1 Start_8) (ite StartBool Start_3 Start_12)))
   (Start_8 Int (1 y 0 2 (- Start_1) (- Start_7 Start_15) (+ Start_6 Start_8) (mod Start_15 Start_1)))
   (StartBool_3 Bool (true (not StartBool_1) (<= Start Start_8) (= Start_1 Start_9) (> Start_4 Start_7)))
   (Start_13 Int (5 0 1 x 3 4 y (- Start) (- Start_8 Start_2) (+ Start_15 Start_3) (mod Start_11 Start_10) (ite StartBool_2 Start Start_10)))
   (StartBool_1 Bool (false true (or StartBool StartBool_2) (< Start_1 Start_3)))
   (StartBool_2 Bool (true (not StartBool) (or StartBool StartBool_1) (<= Start Start) (> Start Start_3)))
   (Start_6 Int (1 5 (- Start_7) (- Start_5 Start) (* Start_3 Start_7) (div Start_1 Start_6) (mod Start_5 Start_6) (abs Start)))
   (Start_12 Int (4 (- Start_1) (- Start_13 Start_14) (+ Start Start_7) (abs Start_15) (ite StartBool_3 Start_13 Start_8)))
   (Start_3 Int (3 (- Start_3 Start_3) (+ Start_5 Start) (* Start_3 Start_1) (div Start_2 Start_1) (mod Start_6 Start_2)))
   (StartBool_4 Bool (true false (< Start_7 Start_12) (= Start_7 Start_13) (>= Start_5 Start_8)))
   (Start_7 Int (2 (- Start_1) (- Start_7 Start_3) (* Start_5 Start_2) (div Start_6 Start_8) (mod Start_9 Start_10) (abs Start_1) (ite StartBool Start_11 Start_10)))
   (Start_2 Int (y (- Start_6 Start_10) (+ Start_13 Start) (* Start_3 Start_5) (div Start_2 Start_4)))
   (Start_15 Int (y x 2 5 (- Start_9 Start_7)))
   (Start_11 Int (5 0 (- Start_8 Start_8) (+ Start_6 Start_12) (div Start Start_7) (ite StartBool Start_7 Start_10)))
   (Start_4 Int (5 (- Start_3) (- Start_1 Start_2) (mod Start_2 Start) (abs Start_2) (ite StartBool_1 Start_4 Start)))
   (Start_14 Int (4 (- Start_2) (- Start_1 Start_2) (div Start_9 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (= (+ 4 x) 3) 5 2)))

(check-synth)
