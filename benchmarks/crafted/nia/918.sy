(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_21 Int) (StartBool_2 Bool) (Start_8 Int) (StartBool_3 Bool) (Start_10 Int) (StartBool_7 Bool) (StartBool_5 Bool) (Start_9 Int) (Start_4 Int) (Start_5 Int) (Start_2 Int) (Start_16 Int) (Start_12 Int) (Start_11 Int) (Start_13 Int) (Start_7 Int) (Start_20 Int) (Start_17 Int) (Start_14 Int) (Start_18 Int) (StartBool_6 Bool) (StartBool_1 Bool) (Start_19 Int) (Start_15 Int) (StartBool_4 Bool) (Start_3 Int) (StartBool_8 Bool) (Start_6 Int))
  ((Start Int (5 (- Start Start_1) (+ Start_2 Start_1) (mod Start Start)))
   (StartBool Bool (true false (or StartBool_2 StartBool_8) (< Start_16 Start_7) (= Start_17 Start_1)))
   (Start_1 Int (3 x 5 (+ Start_18 Start_19) (div Start Start_11) (mod Start_2 Start_20) (ite StartBool_3 Start_3 Start_6)))
   (Start_21 Int (2 5 (- Start_13 Start_16) (* Start_20 Start_14) (mod Start_20 Start_8)))
   (StartBool_2 Bool (true (not StartBool_3) (and StartBool_2 StartBool_4) (or StartBool StartBool_5) (< Start_9 Start_10) (<= Start_8 Start_6) (> Start_5 Start_1)))
   (Start_8 Int (2 (- Start_6) (- Start_8 Start_4) (+ Start_3 Start_2) (* Start_8 Start_8) (div Start_6 Start_8) (mod Start_5 Start) (abs Start_9)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_4 StartBool_5) (or StartBool StartBool_6) (< Start_7 Start) (<= Start_7 Start_4) (> Start_8 Start_9)))
   (Start_10 Int (4 (- Start_8 Start)))
   (StartBool_7 Bool (false (not StartBool) (or StartBool StartBool_5) (< Start_11 Start_2) (<= Start_5 Start_2) (>= Start_5 Start_11)))
   (StartBool_5 Bool (false (not StartBool) (and StartBool_1 StartBool) (< Start_10 Start_10) (<= Start_8 Start_11) (= Start_9 Start_11) (>= Start_5 Start_6) (> Start Start_1)))
   (Start_9 Int (0 4 5 (- Start_10) (- Start_5 Start_2) (+ Start Start_3) (div Start_9 Start_8) (mod Start_4 Start_3) (abs Start_4) (ite StartBool Start_7 Start_1)))
   (Start_4 Int (x 2 y (+ Start_2 Start_1) (* Start Start_3) (mod Start_2 Start_2)))
   (Start_5 Int (x y 5 3 1 (div Start_1 Start_6) (abs Start_2) (ite StartBool_1 Start_7 Start_5)))
   (Start_2 Int (1 x 2 (- Start) (+ Start_3 Start_4) (* Start_2 Start) (div Start Start_1)))
   (Start_16 Int (3 0 (- Start_14) (* Start_1 Start_17) (div Start_12 Start_18) (mod Start_19 Start_1) (abs Start_19)))
   (Start_12 Int (5 (- Start_10) (- Start_6 Start_10) (div Start_13 Start_1) (abs Start_12)))
   (Start_11 Int (4 5 2 x (- Start_1) (* Start_2 Start_10) (div Start_9 Start_10) (mod Start_8 Start_4)))
   (Start_13 Int (x 0 (+ Start_4 Start_14) (* Start_4 Start) (mod Start_5 Start_4)))
   (Start_7 Int (5 (ite StartBool_2 Start_8 Start_8)))
   (Start_20 Int (2 1 (- Start_9) (- Start_4 Start_6) (+ Start_4 Start_3) (mod Start_5 Start_1) (ite StartBool_8 Start_6 Start_8)))
   (Start_17 Int (4 5 (- Start_9) (- Start_17 Start_6) (+ Start_4 Start_9) (div Start_16 Start_17) (mod Start_9 Start_1)))
   (Start_14 Int (5 x 0 2 3 (div Start_6 Start) (abs Start_13)))
   (Start_18 Int (5 3 (* Start_13 Start_4) (abs Start_10) (ite StartBool_8 Start_16 Start_10)))
   (StartBool_6 Bool (false true (not StartBool_6) (and StartBool_6 StartBool_3) (or StartBool_2 StartBool_7) (< Start_10 Start_10)))
   (StartBool_1 Bool (true false (and StartBool_8 StartBool_3) (< Start_13 Start_13) (<= Start_14 Start_14) (= Start Start_15) (>= Start_6 Start_11) (> Start_16 Start_14)))
   (Start_19 Int (2 0 (- Start Start_3) (+ Start_20 Start_17) (div Start_19 Start_10) (mod Start_12 Start) (abs Start_8) (ite StartBool_8 Start_3 Start_13)))
   (Start_15 Int (x (* Start_6 Start_13) (mod Start_5 Start_2)))
   (StartBool_4 Bool (true false (< Start_12 Start_9) (= Start_5 Start_5) (> Start_10 Start_13)))
   (Start_3 Int (4 y (- Start) (- Start_3 Start_4) (div Start Start_2) (mod Start_5 Start)))
   (StartBool_8 Bool (true (not StartBool_5) (< Start_18 Start_12) (<= Start_20 Start_21)))
   (Start_6 Int (y 4 (+ Start Start_10) (div Start_10 Start_21) (abs Start) (ite StartBool Start_20 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 5 (mod y 0)))))

(check-synth)
