(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_21 Int) (Start_20 Int) (StartBool_2 Bool) (Start_14 Int) (Start_19 Int) (StartBool_6 Bool) (StartBool_4 Bool) (StartBool_5 Bool) (Start_3 Int) (Start_5 Int) (StartBool_1 Bool) (Start_7 Int) (Start_15 Int) (Start_8 Int) (Start_1 Int) (Start_18 Int) (Start_6 Int) (Start_17 Int) (Start_9 Int) (Start_4 Int) (StartBool_3 Bool) (Start_11 Int) (Start_12 Int) (Start_16 Int) (Start_10 Int) (Start_13 Int))
  ((Start Int (3 (+ Start_1 Start_2) (mod Start_3 Start_3)))
   (StartBool Bool (true false (and StartBool_4 StartBool_2) (or StartBool_4 StartBool_6) (< Start_15 Start_21) (<= Start_20 Start_19) (= Start_16 Start_19)))
   (Start_2 Int (1 (- Start_20 Start_21) (+ Start_16 Start_13) (mod Start_4 Start_6)))
   (Start_21 Int (3 (+ Start Start_14) (div Start_5 Start_2) (mod Start_16 Start_18) (ite StartBool_6 Start_1 Start_8)))
   (Start_20 Int (x (- Start_9) (- Start_1 Start_5) (* Start_21 Start_2) (abs Start_3) (ite StartBool_2 Start_20 Start_1)))
   (StartBool_2 Bool (true false (or StartBool StartBool_2) (>= Start_20 Start_5)))
   (Start_14 Int (x (- Start_11 Start_14) (* Start_2 Start_19) (div Start_11 Start_15)))
   (Start_19 Int (0 (- Start_11) (+ Start_2 Start_7) (mod Start_12 Start_18) (ite StartBool_3 Start_11 Start_16)))
   (StartBool_6 Bool (false (not StartBool_2) (and StartBool_3 StartBool_2) (or StartBool_2 StartBool_4) (< Start_7 Start_5) (<= Start_18 Start_9) (= Start_7 Start_9) (>= Start_3 Start_5)))
   (StartBool_4 Bool (false (= Start_16 Start_2) (>= Start_10 Start_15)))
   (StartBool_5 Bool (false true (not StartBool) (or StartBool_2 StartBool_6) (< Start_9 Start_2) (>= Start_7 Start_3)))
   (Start_3 Int (x 3 (- Start) (mod Start_2 Start_3) (ite StartBool_1 Start Start)))
   (Start_5 Int (x 0 4 (- Start_5) (- Start Start_6) (* Start_7 Start_6) (div Start_8 Start_4) (abs Start)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_2) (<= Start_2 Start_4) (> Start_5 Start_4)))
   (Start_7 Int (x 4 (- Start_7) (mod Start Start_2) (abs Start_6) (ite StartBool_1 Start Start_9)))
   (Start_15 Int (y (- Start_11) (- Start_9 Start_17) (* Start_15 Start_2) (div Start_11 Start_12)))
   (Start_8 Int (y (- Start_7) (+ Start_2 Start_8) (* Start_4 Start_6) (mod Start_3 Start_1) (abs Start_5) (ite StartBool Start Start_9)))
   (Start_1 Int (2 1 (- Start_11 Start_1) (+ Start_5 Start_19) (mod Start_11 Start_4)))
   (Start_18 Int (4 (- Start_4 Start_2) (+ Start Start_13) (* Start_17 Start_18) (abs Start_14) (ite StartBool_4 Start_18 Start_19)))
   (Start_6 Int (3 y 2 1 (- Start_8 Start_8) (+ Start_8 Start_6) (* Start Start_1) (div Start_9 Start) (ite StartBool Start_3 Start_7)))
   (Start_17 Int (5 1 (- Start_1 Start_12) (+ Start_8 Start_15) (* Start_6 Start_4) (mod Start_9 Start_18) (ite StartBool_5 Start_12 Start_15)))
   (Start_9 Int (5 3 (- Start_7) (- Start_1 Start_1) (abs Start) (ite StartBool_3 Start_1 Start_4)))
   (Start_4 Int (1 2 (- Start_1 Start_6) (* Start Start_10) (mod Start Start_11) (abs Start_11) (ite StartBool_3 Start Start_9)))
   (StartBool_3 Bool (true (or StartBool_2 StartBool_3) (= Start_3 Start_5)))
   (Start_11 Int (2 (- Start_5 Start_11) (+ Start_6 Start_11) (div Start_5 Start_1) (mod Start_9 Start_2) (abs Start) (ite StartBool_2 Start_6 Start_4)))
   (Start_12 Int (x y 0 4 2 (- Start_6) (- Start_5 Start_11) (* Start_4 Start_6) (div Start_6 Start_5) (mod Start_18 Start_9) (abs Start_4) (ite StartBool_1 Start_3 Start_11)))
   (Start_16 Int (1 (- Start_16) (- Start_10 Start) (* Start_10 Start_2) (div Start_14 Start_7) (ite StartBool_2 Start_11 Start_11)))
   (Start_10 Int (3 5 (- Start_12) (- Start_6 Start) (* Start_13 Start_3)))
   (Start_13 Int (4 1 (- Start_9 Start_14) (+ Start_13 Start_11) (div Start_12 Start_6) (mod Start_10 Start_15) (abs Start_7) (ite StartBool_4 Start_7 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (= 3 x) 4 1)))

(check-synth)
