(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_6 Int) (Start_12 Int) (Start_14 Int) (StartBool_5 Bool) (Start_11 Int) (StartBool_6 Bool) (Start_13 Int) (Start_10 Int) (StartBool_2 Bool) (Start_2 Int) (Start_8 Int) (Start_1 Int) (Start_4 Int) (StartBool_1 Bool) (Start_9 Int) (StartBool_4 Bool) (Start_5 Int) (Start_3 Int) (Start_7 Int) (StartBool_3 Bool))
  ((Start Int (x (- Start_1 Start) (* Start Start) (abs Start) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (false true (not StartBool_5) (or StartBool_2 StartBool_3) (<= Start_13 Start_2) (> Start_15 Start_3)))
   (Start_15 Int (y 4 (+ Start_7 Start_6) (div Start_6 Start_9) (mod Start_14 Start_13) (abs Start_8)))
   (Start_6 Int (x 4 y (- Start_7) (- Start_10 Start_6) (+ Start_6 Start_10) (div Start_1 Start_11) (ite StartBool_4 Start Start_12)))
   (Start_12 Int (1 (- Start_11) (* Start_10 Start_3) (div Start_13 Start_7) (ite StartBool Start_8 Start_13)))
   (Start_14 Int (4 (- Start_2 Start_3) (+ Start_6 Start_8) (div Start_11 Start_9)))
   (StartBool_5 Bool (false (not StartBool_6) (and StartBool StartBool_4) (or StartBool_4 StartBool) (< Start_8 Start_5) (<= Start_12 Start_1) (= Start_5 Start_4)))
   (Start_11 Int (y 5 (- Start_1 Start_4) (* Start_9 Start_7) (div Start_4 Start_10)))
   (StartBool_6 Bool (true false (not StartBool_5) (and StartBool_5 StartBool_1) (or StartBool_4 StartBool_5) (< Start_10 Start_3)))
   (Start_13 Int (5 y 2 (* Start_9 Start_13) (div Start_4 Start_8) (abs Start_12) (ite StartBool_4 Start_2 Start_2)))
   (Start_10 Int (2 0 (* Start_8 Start_5) (div Start_1 Start_1) (mod Start_11 Start_9)))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool) (< Start_6 Start_4) (<= Start_7 Start_2) (= Start_7 Start_2) (>= Start_9 Start_5)))
   (Start_2 Int (2 (- Start_3) (- Start_3 Start_5) (* Start_1 Start) (div Start_4 Start_2) (mod Start_3 Start_5)))
   (Start_8 Int (3 0 y 5 x (- Start_4) (+ Start_8 Start_4) (* Start_1 Start_3) (div Start_3 Start_1) (abs Start_7) (ite StartBool_1 Start_4 Start_2)))
   (Start_1 Int (1 (* Start_4 Start_12) (div Start_1 Start_8) (ite StartBool_2 Start_5 Start_11)))
   (Start_4 Int (5 (- Start_4 Start) (abs Start_1)))
   (StartBool_1 Bool (false true (not StartBool_1) (or StartBool_1 StartBool_1) (= Start_1 Start_9)))
   (Start_9 Int (5 (- Start_3 Start_5) (+ Start_9 Start_8) (abs Start_8) (ite StartBool_2 Start_5 Start_2)))
   (StartBool_4 Bool (false true (or StartBool_2 StartBool_1) (= Start_14 Start_3) (> Start_6 Start_9)))
   (Start_5 Int (y (* Start_6 Start_2) (abs Start_7) (ite StartBool Start_2 Start_2)))
   (Start_3 Int (2 (ite StartBool Start Start_4)))
   (Start_7 Int (3 0 (- Start_8) (- Start_2 Start_4) (mod Start_7 Start_6) (abs Start_2) (ite StartBool Start_8 Start_8)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_5 StartBool_6) (or StartBool_5 StartBool_5) (< Start_7 Start_8) (>= Start_8 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 3 0) x)))

(check-synth)
