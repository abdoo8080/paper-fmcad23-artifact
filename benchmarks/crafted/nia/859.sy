(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_13 Int) (Start_14 Int) (StartBool_3 Bool) (Start_1 Int) (Start_5 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_4 Int) (Start_8 Int) (Start_10 Int) (Start_7 Int) (Start_3 Int) (Start_6 Int) (Start_2 Int) (Start_11 Int) (Start_12 Int) (Start_9 Int))
  ((Start Int (3 (* Start_1 Start) (div Start_1 Start_2) (abs Start_3) (ite StartBool_1 Start_2 Start_2)))
   (StartBool Bool (true (not StartBool_2) (and StartBool StartBool_1) (or StartBool_3 StartBool_3) (<= Start_11 Start_6)))
   (StartBool_4 Bool (false (and StartBool StartBool_3) (= Start_10 Start) (>= Start_13 Start_12)))
   (Start_13 Int (2 4 1 (- Start_8) (* Start_3 Start_4) (abs Start_5) (ite StartBool_4 Start_8 Start_4)))
   (Start_14 Int (0 y (- Start_7) (div Start Start_1) (mod Start_9 Start_7) (abs Start_9)))
   (StartBool_3 Bool (false (not StartBool_2) (or StartBool_4 StartBool_3) (< Start_7 Start_9) (<= Start_11 Start_8) (= Start_12 Start_13) (>= Start_7 Start_14)))
   (Start_1 Int (3 1 4 y 5 (- Start_2) (* Start_11 Start_8) (mod Start_5 Start_5)))
   (Start_5 Int (1 (- Start_6 Start_2) (+ Start_5 Start_3) (div Start_1 Start_2)))
   (StartBool_1 Bool (false true (not StartBool_1) (<= Start_4 Start_1) (= Start Start_2)))
   (StartBool_2 Bool (false true (or StartBool_1 StartBool) (= Start_2 Start_3) (> Start_1 Start_3)))
   (Start_4 Int (1 3 5 y 4 0 (- Start_1) (mod Start Start_5) (abs Start_5) (ite StartBool Start_1 Start_2)))
   (Start_8 Int (4 5 (- Start_3) (+ Start_7 Start_8) (* Start_4 Start_7) (div Start Start_7) (abs Start_8) (ite StartBool_2 Start Start_7)))
   (Start_10 Int (2 (- Start_11) (+ Start_6 Start_6) (* Start_4 Start_4) (div Start_2 Start_9) (mod Start_10 Start_6)))
   (Start_7 Int (x (* Start Start_1) (div Start_3 Start_5) (abs Start_8) (ite StartBool_1 Start_5 Start_2)))
   (Start_3 Int (x (- Start_6) (ite StartBool_2 Start_8 Start)))
   (Start_6 Int (3 5 2 4 y (- Start_7) (+ Start_3 Start_8) (mod Start_1 Start_2)))
   (Start_2 Int (y (- Start_5) (- Start_6 Start_6) (+ Start_9 Start_4) (div Start_5 Start_10) (mod Start_7 Start_3) (ite StartBool_2 Start_6 Start_1)))
   (Start_11 Int (0 y (- Start_7) (abs Start_1)))
   (Start_12 Int (0 (mod Start_7 Start_6) (abs Start_1)))
   (Start_9 Int (y (- Start Start_7) (+ Start_7 Start_8) (* Start_2 Start_9) (mod Start_3 Start_3) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* (- x 2) (div x 2)))))

(check-synth)
