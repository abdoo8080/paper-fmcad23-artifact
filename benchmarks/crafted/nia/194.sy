(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_17 Int) (Start_14 Int) (Start_12 Int) (Start_18 Int) (Start_13 Int) (Start_2 Int) (Start_10 Int) (Start_4 Int) (Start_6 Int) (Start_5 Int) (Start_16 Int) (Start_11 Int) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_1 Int) (Start_3 Int) (Start_8 Int) (StartBool_3 Bool) (Start_9 Int) (Start_7 Int))
  ((Start Int (1 3 (- Start) (- Start_1 Start) (+ Start Start) (* Start Start_1) (div Start_1 Start_1) (mod Start_1 Start_2) (abs Start)))
   (StartBool Bool (true false (not StartBool_1) (< Start_4 Start_9) (= Start_16 Start_12) (>= Start_12 Start_6)))
   (Start_15 Int (0 1 (- Start_14 Start_11) (* Start_13 Start_15) (mod Start_2 Start_16) (ite StartBool Start_13 Start_10)))
   (Start_17 Int (5 (- Start_1 Start_9) (div Start_10 Start_6) (abs Start)))
   (Start_14 Int (4 0 5 (- Start_13) (+ Start_6 Start_15) (mod Start_6 Start_16) (abs Start_1)))
   (Start_12 Int (3 (- Start_3) (+ Start_10 Start_6) (* Start_3 Start_2) (div Start_6 Start_8) (mod Start_3 Start_14) (abs Start)))
   (Start_18 Int (x 0 (+ Start_15 Start_17) (div Start_8 Start_1)))
   (Start_13 Int (4 2 x 0 3 1 y (- Start_8 Start_8) (+ Start Start_9) (* Start Start_4) (mod Start_12 Start_2) (abs Start_3)))
   (Start_2 Int (4 x 0 3 1 (- Start_1) (+ Start Start_1) (div Start_1 Start_1) (mod Start_2 Start_1) (ite StartBool_1 Start_1 Start_3)))
   (Start_10 Int (y 1 (+ Start_8 Start_7) (* Start_6 Start_10) (div Start_3 Start_9) (mod Start_8 Start_5)))
   (Start_4 Int (y 3 (+ Start Start_1) (* Start_5 Start_6) (mod Start_5 Start_4) (abs Start_2)))
   (Start_6 Int (1 4 x (* Start_4 Start_5) (abs Start_6)))
   (Start_5 Int (5 (- Start_5) (ite StartBool_1 Start_6 Start_3)))
   (Start_16 Int (5 3 (+ Start_12 Start_17) (div Start_16 Start_13) (mod Start_4 Start_4) (ite StartBool_1 Start_10 Start_13)))
   (Start_11 Int (1 (- Start_4) (* Start_10 Start_12) (abs Start_2) (ite StartBool_4 Start_7 Start_7)))
   (StartBool_4 Bool (false true (and StartBool StartBool_2) (or StartBool_3 StartBool) (< Start_6 Start_12) (<= Start_5 Start_2) (>= Start_13 Start) (> Start_9 Start_9)))
   (StartBool_2 Bool (false (not StartBool_2) (and StartBool StartBool_2) (<= Start_5 Start_5)))
   (StartBool_1 Bool (false true (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_3) (< Start_7 Start_5) (<= Start_7 Start_8)))
   (Start_1 Int (3 (* Start_15 Start_8) (div Start_5 Start_12)))
   (Start_3 Int (x (- Start) (+ Start_1 Start_1) (* Start Start_2) (mod Start_2 Start_2) (ite StartBool_2 Start Start_4)))
   (Start_8 Int (3 (- Start) (+ Start_8 Start_9) (* Start Start_9) (div Start_4 Start_5) (mod Start_10 Start)))
   (StartBool_3 Bool (true false (not StartBool_2) (and StartBool_2 StartBool) (<= Start_1 Start_1) (= Start_5 Start_18) (>= Start_1 Start_2)))
   (Start_9 Int (0 4 (div Start_9 Start_1) (abs Start_8)))
   (Start_7 Int (3 1 (- Start_9) (+ Start_3 Start_5) (* Start_3 Start_4) (div Start_11 Start_10) (abs Start_7) (ite StartBool_3 Start_8 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 4 y)))

(check-synth)
