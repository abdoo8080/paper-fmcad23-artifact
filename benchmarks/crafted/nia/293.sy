(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (StartBool_3 Bool) (Start_8 Int) (StartBool_1 Bool) (Start_20 Int) (Start_5 Int) (Start_12 Int) (StartBool_5 Bool) (Start_1 Int) (Start_9 Int) (Start_13 Int) (Start_6 Int) (StartBool_2 Bool) (Start_3 Int) (Start_14 Int) (Start_4 Int) (Start_16 Int) (Start_15 Int) (StartBool_7 Bool) (StartBool_4 Bool) (StartBool_6 Bool) (Start_19 Int) (Start_18 Int) (Start_7 Int) (Start_10 Int) (StartBool_8 Bool) (Start_11 Int) (Start_2 Int))
  ((Start Int (x (- Start) (+ Start_1 Start_2) (* Start_3 Start) (mod Start_1 Start) (abs Start_2)))
   (StartBool Bool (false (or StartBool_6 StartBool_5) (< Start_2 Start_5) (>= Start_1 Start_13)))
   (Start_17 Int (1 4 3 y (- Start_2) (- Start_13 Start_13) (* Start_8 Start_3) (div Start_7 Start_16) (mod Start_8 Start_9)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool_2) (or StartBool_4 StartBool_4) (< Start_9 Start_1) (<= Start_2 Start_12) (= Start_8 Start_12) (>= Start_12 Start_6)))
   (Start_8 Int (0 3 (- Start_1) (+ Start_7 Start_4) (* Start_2 Start_8) (abs Start)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool_2 StartBool) (= Start_6 Start_3) (>= Start_2 Start_5)))
   (Start_20 Int (4 (div Start_13 Start_13) (mod Start_4 Start_2) (ite StartBool_8 Start_20 Start_20)))
   (Start_5 Int (0 (- Start Start_5) (* Start Start_7) (div Start_7 Start_2) (abs Start_3)))
   (Start_12 Int (5 1 (- Start_1 Start_13) (+ Start_8 Start_12) (mod Start_2 Start_18) (ite StartBool_2 Start_14 Start_2)))
   (StartBool_5 Bool (true false (not StartBool_6) (and StartBool_2 StartBool_7) (< Start_1 Start_7) (<= Start_8 Start_6) (>= Start_9 Start_2) (> Start_7 Start_15)))
   (Start_1 Int (5 0 (* Start_15 Start_4) (abs Start_11)))
   (Start_9 Int (3 1 (- Start_10) (- Start_11 Start_9) (+ Start_8 Start_12) (div Start_11 Start_4) (mod Start_5 Start_3) (ite StartBool_3 Start_1 Start_8)))
   (Start_13 Int (3 (+ Start_10 Start_9) (* Start_8 Start_14) (mod Start_3 Start_7) (abs Start_5) (ite StartBool_4 Start_13 Start_2)))
   (Start_6 Int (0 (- Start_5) (- Start_1 Start_6) (* Start_3 Start_2) (mod Start_4 Start_1) (abs Start_4)))
   (StartBool_2 Bool (true false (= Start_8 Start_2) (> Start_6 Start_2)))
   (Start_3 Int (5 (- Start_3) (- Start_4 Start_5) (mod Start_6 Start_6)))
   (Start_14 Int (4 (- Start_1 Start_13) (+ Start_11 Start_9) (* Start_2 Start_9) (div Start_5 Start_10) (abs Start_2) (ite StartBool Start_5 Start_1)))
   (Start_4 Int (x (- Start_5) (- Start_1 Start_7) (+ Start_7 Start_2) (div Start_6 Start_3) (mod Start_6 Start_6) (ite StartBool Start_9 Start_10)))
   (Start_16 Int (4 5 3 (ite StartBool_5 Start_4 Start_11)))
   (Start_15 Int (2 y 4 1 (- Start Start_7) (+ Start_2 Start_9) (* Start Start_13) (abs Start_6) (ite StartBool_7 Start_13 Start_10)))
   (StartBool_7 Bool (false true (not StartBool_7) (and StartBool_6 StartBool_6) (= Start_16 Start_11) (> Start_1 Start_14)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_4 StartBool_1) (< Start_13 Start_3) (>= Start_9 Start_4)))
   (StartBool_6 Bool (false (not StartBool_5) (and StartBool_4 StartBool_8) (< Start_10 Start_10) (<= Start_17 Start_1) (= Start_18 Start_4)))
   (Start_19 Int (y 0 (- Start_3) (+ Start_11 Start_19) (div Start Start_14) (mod Start_20 Start_5) (ite StartBool_5 Start Start_9)))
   (Start_18 Int (3 1 (- Start_10) (+ Start_17 Start_2) (div Start_12 Start_17)))
   (Start_7 Int (5 (+ Start_2 Start) (div Start Start_2) (ite StartBool_1 Start_1 Start_1)))
   (Start_10 Int (1 3 y 0 2 (- Start_7) (- Start_6 Start_10) (div Start_5 Start_6) (ite StartBool_1 Start_1 Start_2)))
   (StartBool_8 Bool (false (< Start_17 Start_4) (<= Start_8 Start_3) (>= Start Start_3)))
   (Start_11 Int (4 2 5 (+ Start_5 Start_9) (* Start_10 Start_13) (div Start_9 Start_4) (mod Start_4 Start_5)))
   (Start_2 Int (y (- Start_13) (* Start_19 Start) (mod Start_9 Start_16) (abs Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 0 x)))

(check-synth)
