(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_13 Int) (Start_4 Int) (Start_19 Int) (Start_10 Int) (Start_9 Int) (Start_18 Int) (Start_11 Int) (Start_3 Int) (Start_6 Int) (Start_2 Int) (Start_8 Int) (StartBool_4 Bool) (StartBool_3 Bool) (StartBool_1 Bool) (Start_17 Int) (Start_7 Int) (Start_5 Int) (Start_15 Int) (Start_1 Int) (Start_16 Int) (Start_20 Int) (StartBool_6 Bool) (StartBool_2 Bool) (Start_14 Int) (Start_21 Int) (StartBool_5 Bool) (Start_22 Int))
  ((Start Int (1 (- Start) (- Start Start) (* Start Start) (mod Start Start) (ite StartBool_1 Start Start)))
   (StartBool Bool (true (not StartBool_2) (and StartBool_5 StartBool_5) (< Start_4 Start_7) (= Start_3 Start_1)))
   (Start_12 Int (2 y (- Start_6) (* Start_7 Start_9) (mod Start_9 Start_8)))
   (Start_13 Int (4 x (- Start_9) (+ Start_11 Start) (ite StartBool_1 Start_3 Start_6)))
   (Start_4 Int (y (- Start_1) (+ Start_5 Start_3) (* Start Start_4) (div Start_3 Start_6) (abs Start_6)))
   (Start_19 Int (3 (* Start_9 Start_20) (div Start_2 Start_6) (abs Start_17)))
   (Start_10 Int (1 3 (- Start_3) (+ Start_11 Start_11) (* Start_12 Start_8) (div Start_7 Start_6)))
   (Start_9 Int (x (- Start_9) (- Start_10 Start_10) (* Start_10 Start_3) (div Start_6 Start_3) (abs Start_5)))
   (Start_18 Int (5 (+ Start_4 Start_17) (mod Start_19 Start_12) (abs Start_2) (ite StartBool_2 Start_15 Start_20)))
   (Start_11 Int (4 (- Start_2 Start_10) (* Start_13 Start_1) (abs Start_4)))
   (Start_3 Int (3 (- Start_3) (abs Start_4) (ite StartBool Start Start_4)))
   (Start_6 Int (2 (- Start_7 Start) (+ Start_8 Start_6) (* Start_4 Start_2) (mod Start Start_9) (ite StartBool_2 Start_9 Start_8)))
   (Start_2 Int (3 4 2 1 (abs Start_1) (ite StartBool_1 Start_3 Start_1)))
   (Start_8 Int (5 1 4 2 (- Start_4) (+ Start_14 Start_8) (abs Start_5) (ite StartBool_2 Start_7 Start)))
   (StartBool_4 Bool (true (not StartBool_5) (and StartBool_4 StartBool_1) (< Start_5 Start_1) (= Start_12 Start_17) (>= Start_14 Start)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_2 StartBool_1) (<= Start Start)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_2) (or StartBool_1 StartBool_2) (= Start_1 Start_2)))
   (Start_17 Int (1 0 (- Start_2) (- Start_18 Start_14) (+ Start_10 Start_18) (* Start_5 Start_1)))
   (Start_7 Int (y (- Start_2 Start_14) (div Start_9 Start_5) (mod Start_2 Start_9)))
   (Start_5 Int (y (- Start_8 Start_14) (+ Start_6 Start_7) (* Start_1 Start_15) (abs Start_9) (ite StartBool_1 Start_8 Start_13)))
   (Start_15 Int (5 1 x (- Start_4) (+ Start_13 Start_6) (* Start_1 Start_2) (div Start_9 Start_14) (mod Start_10 Start_1) (abs Start_12) (ite StartBool_3 Start_7 Start_15)))
   (Start_1 Int (y 5 1 (+ Start_4 Start_16) (mod Start_15 Start_12) (ite StartBool_1 Start_10 Start_7)))
   (Start_16 Int (3 (- Start_12 Start_6) (+ Start_10 Start) (div Start_7 Start_7)))
   (Start_20 Int (3 x (- Start_11) (- Start_13 Start_2) (+ Start Start_9) (* Start_21 Start_15) (mod Start_9 Start_21) (abs Start_15) (ite StartBool_5 Start_17 Start_20)))
   (StartBool_6 Bool (false (not StartBool_1) (and StartBool_5 StartBool_2) (= Start_9 Start_5)))
   (StartBool_2 Bool (false (not StartBool_4) (and StartBool_5 StartBool_6) (= Start_7 Start_12) (>= Start_14 Start)))
   (Start_14 Int (2 x 3 y (- Start_6 Start_6) (+ Start_5 Start_13) (* Start_3 Start_6) (div Start_13 Start_14) (mod Start_3 Start_4) (ite StartBool_1 Start_4 Start_7)))
   (Start_21 Int (0 (- Start_22 Start_14) (+ Start_13 Start_18) (* Start_5 Start_12) (div Start_22 Start_5) (abs Start_5) (ite StartBool Start Start_15)))
   (StartBool_5 Bool (false true (not StartBool_3) (and StartBool_6 StartBool_6) (<= Start_16 Start_8) (>= Start_12 Start_6) (> Start Start_9)))
   (Start_22 Int (2 5 (- Start_1) (+ Start_16 Start_18) (* Start_14 Start_7) (abs Start_2) (ite StartBool_2 Start_2 Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (* x (- 3)) 0)))

(check-synth)
