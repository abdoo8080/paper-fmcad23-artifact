(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_19 Int) (Start_9 Int) (Start_10 Int) (StartBool_2 Bool) (Start_17 Int) (Start_15 Int) (StartBool_5 Bool) (Start_14 Int) (Start_13 Int) (Start_16 Int) (StartBool_1 Bool) (Start_5 Int) (Start_18 Int) (Start_2 Int) (Start_6 Int) (Start_7 Int) (StartBool_6 Bool) (Start_8 Int) (Start_3 Int) (StartBool_3 Bool) (Start_11 Int) (Start_4 Int) (StartBool_4 Bool) (Start_12 Int))
  ((Start Int (y (- Start_1 Start_2) (+ Start Start_1) (* Start Start_1) (div Start_3 Start) (mod Start_1 Start_4) (abs Start_2)))
   (StartBool Bool (true (not StartBool_6) (and StartBool_4 StartBool_6) (< Start_1 Start_12) (<= Start_4 Start_18) (= Start_12 Start_7)))
   (Start_1 Int (3 y 4 2 (- Start Start_12) (div Start_9 Start_15)))
   (Start_19 Int (2 (- Start_14) (mod Start_18 Start) (abs Start_9)))
   (Start_9 Int (5 (- Start_8) (- Start_17 Start_15) (mod Start_2 Start_16) (ite StartBool_6 Start_19 Start_15)))
   (Start_10 Int (3 (+ Start_3 Start_15) (div Start_16 Start_14) (mod Start_4 Start_3) (abs Start_2) (ite StartBool_4 Start_11 Start_14)))
   (StartBool_2 Bool (false (not StartBool_4) (and StartBool_2 StartBool_5)))
   (Start_17 Int (0 (+ Start_16 Start_9) (div Start_13 Start_13) (mod Start_18 Start_12) (ite StartBool Start_3 Start_18)))
   (Start_15 Int (2 (- Start_14) (+ Start_16 Start_15) (div Start_11 Start_7) (mod Start_2 Start_17) (abs Start_3) (ite StartBool Start_17 Start_10)))
   (StartBool_5 Bool (true (and StartBool_3 StartBool_4) (= Start_8 Start_15) (> Start_12 Start_14)))
   (Start_14 Int (1 4 0 (- Start_8 Start_7) (mod Start_13 Start)))
   (Start_13 Int (4 2 1 3 (- Start) (- Start_8 Start_10) (+ Start_10 Start_10) (* Start_14 Start_9) (div Start_8 Start_7) (mod Start_4 Start_2) (abs Start_11) (ite StartBool Start_3 Start)))
   (Start_16 Int (1 (- Start_15) (- Start_3 Start_16) (+ Start_6 Start_18) (mod Start_18 Start_14) (ite StartBool_6 Start_17 Start_18)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool StartBool_1) (< Start_7 Start_5) (>= Start_5 Start_1)))
   (Start_5 Int (x 4 (- Start_2) (+ Start_3 Start_3) (mod Start_3 Start_4) (ite StartBool_1 Start_6 Start_5)))
   (Start_18 Int (1 (- Start_16 Start_3) (div Start_3 Start_1) (mod Start_15 Start_15) (abs Start_13) (ite StartBool_5 Start_13 Start_3)))
   (Start_2 Int (1 (+ Start_3 Start_8)))
   (Start_6 Int (x (- Start_1) (* Start_2 Start_6) (abs Start_5) (ite StartBool_1 Start_4 Start)))
   (Start_7 Int (2 (- Start) (- Start_4 Start_2) (* Start_7 Start_6) (mod Start_2 Start_3)))
   (StartBool_6 Bool (true (not StartBool_2) (and StartBool_1 StartBool_4) (<= Start_5 Start_7) (>= Start_9 Start)))
   (Start_8 Int (1 4 3 2 (- Start_4) (- Start_9 Start_4) (+ Start_7 Start_2) (* Start_4 Start_3) (div Start_10 Start_6) (ite StartBool_2 Start_7 Start_11)))
   (Start_3 Int (5 (- Start_1 Start_4) (+ Start_4 Start_3) (* Start Start_6) (div Start_4 Start_4) (mod Start_2 Start_5) (ite StartBool Start_3 Start_7)))
   (StartBool_3 Bool (false (or StartBool_4 StartBool_3) (= Start_10 Start_11) (>= Start_4 Start_11)))
   (Start_11 Int (1 (- Start_4) (* Start_11 Start_7) (div Start_7 Start) (abs Start_10) (ite StartBool_3 Start_10 Start_11)))
   (Start_4 Int (2 1 5 (- Start_5) (- Start_3 Start_3) (div Start_6 Start_5) (mod Start_2 Start_1)))
   (StartBool_4 Bool (true (or StartBool_4 StartBool_5) (= Start_12 Start)))
   (Start_12 Int (x (+ Start_9 Start_13) (* Start_11 Start_5) (div Start_12 Start_12) (abs Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 0 (* x 5))))

(check-synth)
