(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_12 Int) (Start_13 Int) (Start_3 Int) (Start_2 Int) (Start_5 Int) (Start_7 Int) (Start_8 Int) (Start_6 Int) (Start_11 Int) (Start_4 Int) (Start_9 Int) (Start_10 Int) (StartBool_2 Bool) (StartBool_1 Bool) (StartBool_3 Bool))
  ((Start Int (y 0 (- Start Start_1) (+ Start_2 Start_3) (mod Start_4 Start_2) (abs Start)))
   (StartBool Bool (true false (and StartBool_3 StartBool_2) (< Start_9 Start_7)))
   (Start_1 Int (1 (- Start_9) (- Start_13 Start_6) (* Start_10 Start_7) (div Start_12 Start_4) (abs Start_7)))
   (Start_12 Int (5 (+ Start_13 Start_10) (mod Start_7 Start_9) (abs Start_13)))
   (Start_13 Int (y (- Start_11) (* Start_1 Start_9) (ite StartBool_1 Start_7 Start_13)))
   (Start_3 Int (2 (- Start_4 Start_3) (+ Start_3 Start_2) (div Start_2 Start_2) (mod Start_4 Start_4)))
   (Start_2 Int (y 4 0 (mod Start_4 Start_3) (ite StartBool_1 Start_5 Start)))
   (Start_5 Int (x 5 (- Start_3) (- Start_1 Start_6) (* Start_6 Start) (div Start_4 Start) (mod Start_3 Start_7)))
   (Start_7 Int (0 3 4 5 (- Start_7) (- Start_2 Start) (+ Start_2 Start_6) (* Start_5 Start_7) (mod Start_8 Start_6) (abs Start_8)))
   (Start_8 Int (2 y 4 (- Start_8 Start_2) (+ Start_2 Start_5) (* Start_6 Start_4)))
   (Start_6 Int (1 (- Start_8) (* Start_7 Start_9) (ite StartBool_1 Start_5 Start_2)))
   (Start_11 Int (0 1 y 2 x 5 3 4 (- Start) (* Start_12 Start_9) (abs Start_13)))
   (Start_4 Int (x 3 (- Start) (- Start Start_1) (mod Start_2 Start_4)))
   (Start_9 Int (3 1 (- Start) (- Start_3 Start_2) (+ Start_3 Start_9) (div Start_9 Start_9) (abs Start) (ite StartBool_2 Start_7 Start_2)))
   (Start_10 Int (1 2 4 x 0 (- Start_2 Start_4)))
   (StartBool_2 Bool (false (not StartBool_1) (<= Start_1 Start_2) (= Start_3 Start_8) (>= Start_2 Start_9)))
   (StartBool_1 Bool (true false (not StartBool_3) (or StartBool_1 StartBool_3) (< Start_4 Start_9) (<= Start_7 Start) (= Start_1 Start) (>= Start_2 Start_10) (> Start_2 Start_6)))
   (StartBool_3 Bool (true false (<= Start_2 Start_11) (= Start_9 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 4 (mod y 4))))

(check-synth)
