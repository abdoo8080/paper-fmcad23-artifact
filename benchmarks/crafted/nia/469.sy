(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_11 Bool) (Start_1 Int) (Start_3 Int) (Start_10 Int) (Start_9 Int) (StartBool_9 Bool) (Start_2 Int) (Start_5 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_6 Int) (Start_20 Int) (StartBool_5 Bool) (Start_7 Int) (StartBool_3 Bool) (Start_21 Int) (Start_4 Int) (Start_17 Int) (Start_16 Int) (Start_19 Int) (StartBool_4 Bool) (StartBool_8 Bool) (Start_8 Int) (Start_11 Int) (StartBool_7 Bool) (Start_12 Int) (Start_15 Int) (Start_14 Int) (Start_13 Int) (Start_18 Int) (StartBool_10 Bool) (StartBool_2 Bool))
  ((Start Int (x 5 1 (- Start_1) (+ Start Start_2)))
   (StartBool Bool (true false (not StartBool_5) (or StartBool_10 StartBool_11) (<= Start_13 Start_9) (= Start_11 Start_6) (>= Start_14 Start_12) (> Start_14 Start_4)))
   (StartBool_11 Bool (false (not StartBool_6) (and StartBool_9 StartBool_7) (or StartBool_11 StartBool_6) (< Start_7 Start_15) (<= Start_1 Start_3)))
   (Start_1 Int (x 3 (- Start_15) (* Start_19 Start_12) (div Start_14 Start_3) (mod Start_19 Start_8) (ite StartBool_5 Start_10 Start_21)))
   (Start_3 Int (y (abs Start_4)))
   (Start_10 Int (5 4 x 0 2 y 3 (+ Start_3 Start_9) (div Start_2 Start_6) (mod Start_4 Start_7) (ite StartBool_3 Start_8 Start_10)))
   (Start_9 Int (4 (- Start_7 Start_8) (* Start_2 Start_4) (div Start_7 Start_1) (mod Start_7 Start_5) (abs Start_10)))
   (StartBool_9 Bool (true false (or StartBool_1 StartBool_3) (= Start_15 Start_6) (>= Start_5 Start_11) (> Start_4 Start_9)))
   (Start_2 Int (2 1 0 (- Start_3 Start) (+ Start_2 Start_2) (* Start_3 Start_1) (abs Start_2) (ite StartBool_1 Start Start_3)))
   (Start_5 Int (1 (- Start) (+ Start_1 Start_7) (div Start_5 Start_6) (mod Start_5 Start_1) (abs Start_4) (ite StartBool_3 Start_3 Start_1)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool_3) (<= Start Start_2) (>= Start_3 Start_4)))
   (StartBool_6 Bool (true (and StartBool_3 StartBool_1) (or StartBool_7 StartBool_8) (< Start_3 Start_9) (>= Start_6 Start_2)))
   (Start_6 Int (1 (- Start_3 Start_5) (* Start_2 Start_3) (div Start_1 Start) (mod Start_2 Start_4)))
   (Start_20 Int (2 (- Start_3) (- Start_10 Start_4) (div Start_1 Start_19) (mod Start_20 Start_19)))
   (StartBool_5 Bool (true false (not StartBool_3) (or StartBool_5 StartBool_6) (<= Start_6 Start_4) (= Start_3 Start_9) (> Start_7 Start_4)))
   (Start_7 Int (5 x y 3 (+ Start_3 Start_6) (* Start Start_4) (mod Start_4 Start_1) (abs Start_6) (ite StartBool_3 Start_2 Start_6)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_5) (< Start_8 Start_3) (<= Start_9 Start_8)))
   (Start_21 Int (5 x (- Start_11) (div Start_4 Start) (ite StartBool_3 Start_21 Start)))
   (Start_4 Int (5 y 1 4 (- Start_5 Start_6) (+ Start_2 Start) (* Start_3 Start_5) (div Start_1 Start_7) (abs Start_4) (ite StartBool_4 Start Start_4)))
   (Start_17 Int (4 (- Start_1) (- Start_3 Start_7) (ite StartBool_10 Start_18 Start)))
   (Start_16 Int (2 1 (mod Start_13 Start_9) (ite StartBool_4 Start_5 Start_3)))
   (Start_19 Int (y (- Start_2) (- Start_18 Start_7) (mod Start_18 Start_13) (ite StartBool_3 Start_8 Start_17)))
   (StartBool_4 Bool (false true (and StartBool StartBool_1) (<= Start_3 Start_3)))
   (StartBool_8 Bool (true false (and StartBool_1 StartBool_5) (<= Start_6 Start) (= Start_5 Start_9) (>= Start_4 Start_4)))
   (Start_8 Int (2 (- Start_10) (+ Start Start_10) (div Start_8 Start_7)))
   (Start_11 Int (5 (div Start_12 Start) (abs Start_11)))
   (StartBool_7 Bool (false (not StartBool_2) (and StartBool StartBool_1) (or StartBool_6 StartBool_7) (<= Start Start_11) (>= Start_3 Start_10) (> Start_7 Start_3)))
   (Start_12 Int (4 (- Start_5) (- Start_10 Start_2) (+ Start_1 Start_1) (div Start_13 Start_14)))
   (Start_15 Int (y 0 4 (- Start_5) (- Start_15 Start_12) (div Start_14 Start_6) (abs Start_16)))
   (Start_14 Int (x (- Start_13) (+ Start_9 Start_14) (ite StartBool_9 Start_12 Start_8)))
   (Start_13 Int (1 x 5 2 y 0 (- Start_16) (* Start_12 Start_16) (div Start_17 Start_15) (abs Start_16)))
   (Start_18 Int (4 (- Start_17 Start_19) (mod Start_14 Start_2) (ite StartBool_3 Start_11 Start_2)))
   (StartBool_10 Bool (false true (or StartBool_10 StartBool_8) (< Start_14 Start_14) (= Start_4 Start_9) (> Start_19 Start_20)))
   (StartBool_2 Bool (false (<= Start_15 Start_8) (= Start_21 Start_13) (>= Start_3 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div y (+ 4 x))))

(check-synth)
