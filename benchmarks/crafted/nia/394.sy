(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_1 Int) (Start_18 Int) (Start_19 Int) (StartBool_6 Bool) (Start_17 Int) (Start_3 Int) (StartBool_5 Bool) (Start_16 Int) (Start_15 Int) (Start_5 Int) (Start_13 Int) (Start_14 Int) (Start_12 Int) (Start_2 Int) (Start_4 Int) (StartBool_1 Bool) (Start_9 Int) (Start_11 Int) (Start_6 Int) (Start_10 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_7 Int) (Start_8 Int) (StartBool_4 Bool))
  ((Start Int (4 (+ Start Start_1) (* Start Start_2) (abs Start_2)))
   (StartBool Bool (true false (not StartBool_5) (and StartBool StartBool_6) (or StartBool_3 StartBool_4) (<= Start_12 Start_14) (>= Start_14 Start) (> Start_8 Start_9)))
   (Start_20 Int (1 (+ Start_1 Start) (* Start_11 Start_15) (div Start_15 Start_11) (mod Start_8 Start_18) (ite StartBool_4 Start_12 Start_4)))
   (Start_1 Int (4 0 2 y (- Start_20) (+ Start_15 Start_14) (div Start_19 Start_2) (abs Start_6)))
   (Start_18 Int (3 (- Start_5) (+ Start_1 Start_1) (* Start_17 Start_6) (div Start_10 Start_5) (mod Start_7 Start_19) (abs Start_19)))
   (Start_19 Int (y 1 (- Start_2 Start_15) (ite StartBool_4 Start_14 Start_15)))
   (StartBool_6 Bool (false (not StartBool_2) (and StartBool_1 StartBool_3) (= Start_18 Start) (>= Start_12 Start_2) (> Start_9 Start_19)))
   (Start_17 Int (2 (- Start) (- Start_10 Start_9) (+ Start_15 Start_6) (div Start_5 Start_5) (mod Start_9 Start) (ite StartBool_6 Start_1 Start_9)))
   (Start_3 Int (0 3 y 1 4 (+ Start_6 Start) (* Start_1 Start_14) (mod Start_17 Start_11) (ite StartBool_5 Start_16 Start_6)))
   (StartBool_5 Bool (true false (not StartBool_5) (and StartBool_5 StartBool_3) (<= Start_1 Start_12) (> Start_10 Start_15)))
   (Start_16 Int (3 (- Start_7 Start_1) (+ Start_16 Start_1) (div Start Start_3) (mod Start_6 Start_2) (abs Start_10) (ite StartBool Start_8 Start_11)))
   (Start_15 Int (1 y (- Start_15) (- Start_14 Start_16) (+ Start_2 Start_14) (ite StartBool Start_8 Start_16)))
   (Start_5 Int (5 (- Start_11) (- Start_14 Start_12) (* Start_13 Start_1) (div Start_15 Start_1) (ite StartBool_1 Start_5 Start_13)))
   (Start_13 Int (y (- Start_1) (mod Start_13 Start_2)))
   (Start_14 Int (3 2 (- Start_6 Start) (abs Start_5)))
   (Start_12 Int (4 2 x (- Start_1) (- Start_5 Start_13) (div Start_7 Start_5) (mod Start_8 Start_3) (ite StartBool_4 Start_1 Start_13)))
   (Start_2 Int (5 (- Start_2) (* Start_3 Start_3) (mod Start Start_4) (abs Start) (ite StartBool Start_4 Start_4)))
   (Start_4 Int (1 y (- Start_5 Start_2) (+ Start_1 Start_6) (* Start_1 Start_6) (div Start_6 Start_1) (abs Start) (ite StartBool_1 Start_1 Start)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool StartBool_1) (or StartBool_1 StartBool_2) (< Start_6 Start_7)))
   (Start_9 Int (5 (- Start_8) (- Start_3 Start_4) (* Start_1 Start_2) (div Start_4 Start_6) (mod Start Start_10) (abs Start_2) (ite StartBool Start Start_7)))
   (Start_11 Int (x 1 3 (- Start_7) (- Start_4 Start_7) (* Start_2 Start) (mod Start_12 Start_12) (ite StartBool_4 Start_1 Start_1)))
   (Start_6 Int (5 (+ Start_9 Start_5) (* Start_11 Start_10) (mod Start Start_9)))
   (Start_10 Int (5 4 (* Start Start_7) (div Start Start) (mod Start_7 Start_1) (abs Start_6)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_3) (<= Start Start_8) (= Start_1 Start_9) (> Start_8 Start_1)))
   (StartBool_3 Bool (false (not StartBool_2) (or StartBool StartBool_2) (<= Start_10 Start_7) (= Start_6 Start) (>= Start_2 Start_5) (> Start_4 Start_4)))
   (Start_7 Int (y (* Start_7 Start_7) (div Start_6 Start_4) (abs Start_6)))
   (Start_8 Int (y (- Start_1) (- Start_7 Start_10) (* Start_8 Start_6) (div Start_5 Start_6)))
   (StartBool_4 Bool (true (and StartBool_1 StartBool_3) (or StartBool_2 StartBool_1) (< Start Start_11) (<= Start_4 Start_2) (> Start_4 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 5 (* (abs x) 2))))

(check-synth)
