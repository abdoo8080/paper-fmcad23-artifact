(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_26 Int) (Start_24 Int) (Start_23 Int) (Start_16 Int) (Start_18 Int) (Start_19 Int) (Start_22 Int) (Start_15 Int) (Start_10 Int) (Start_14 Int) (StartBool_4 Bool) (Start_8 Int) (Start_13 Int) (Start_21 Int) (Start_5 Int) (StartBool_2 Bool) (Start_12 Int) (Start_11 Int) (StartBool_1 Bool) (Start_25 Int) (Start_6 Int) (Start_7 Int) (Start_4 Int) (StartBool_3 Bool) (Start_9 Int) (StartBool_5 Bool) (Start_3 Int) (StartBool_6 Bool) (Start_2 Int) (Start_17 Int) (Start_20 Int) (Start_1 Int))
  ((Start Int (3 (+ Start_1 Start_2) (* Start_3 Start_4) (div Start_2 Start_1) (abs Start) (ite StartBool_1 Start_1 Start_3)))
   (StartBool Bool (false (and StartBool_1 StartBool_4) (or StartBool_4 StartBool_4) (<= Start_23 Start_11) (= Start_10 Start_1) (>= Start_23 Start_19)))
   (Start_26 Int (4 2 (- Start_7) (mod Start_2 Start_5)))
   (Start_24 Int (2 (- Start_25) (- Start_15 Start_6) (+ Start_8 Start_4) (div Start_7 Start_22) (mod Start_13 Start_19) (abs Start_26) (ite StartBool_6 Start_2 Start_25)))
   (Start_23 Int (x (- Start_24) (- Start_2 Start_6) (* Start_4 Start_1) (abs Start_11)))
   (Start_16 Int (0 5 3 2 (- Start) (- Start_13 Start_1) (+ Start_5 Start_8) (div Start_7 Start_18)))
   (Start_18 Int (4 (* Start_1 Start) (div Start_18 Start) (mod Start_14 Start_17) (ite StartBool_2 Start_1 Start_19)))
   (Start_19 Int (x 3 (- Start_18) (* Start_4 Start_9) (mod Start Start_5) (ite StartBool Start_10 Start_8)))
   (Start_22 Int (3 5 (- Start_22) (* Start_21 Start_1) (div Start_20 Start_16) (ite StartBool_5 Start_7 Start_21)))
   (Start_15 Int (5 (- Start_9 Start_14) (* Start_3 Start_16) (ite StartBool Start_17 Start_6)))
   (Start_10 Int (x (- Start_8) (+ Start_14 Start_4) (* Start_15 Start) (abs Start_11)))
   (Start_14 Int (y 4 (- Start_12) (- Start_8 Start_10) (mod Start_5 Start_1) (abs Start_6) (ite StartBool_1 Start_5 Start_3)))
   (StartBool_4 Bool (false (and StartBool_6 StartBool)))
   (Start_8 Int (4 0 (- Start_2 Start_9) (abs Start_2) (ite StartBool Start_8 Start_8)))
   (Start_13 Int (3 5 (- Start_9) (- Start_11 Start_9) (+ Start_5 Start_5) (* Start_7 Start_14)))
   (Start_21 Int (2 (- Start_10) (- Start_15 Start_4) (+ Start_21 Start_21) (mod Start_7 Start_13)))
   (Start_5 Int (4 1 (- Start_2 Start_4) (+ Start_2 Start_6) (* Start_7 Start_1) (div Start_1 Start_5) (abs Start_8) (ite StartBool_1 Start_7 Start_6)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_2) (or StartBool_2 StartBool_1) (<= Start_4 Start_4)))
   (Start_12 Int (x 2 (- Start_3) (- Start_12 Start_2) (+ Start_13 Start_14) (* Start_4 Start_5) (mod Start_7 Start_1) (abs Start_8)))
   (Start_11 Int (1 y 4 x (- Start_11) (+ Start_10 Start_11) (* Start_7 Start_12) (ite StartBool Start_10 Start_4)))
   (StartBool_1 Bool (false true (not StartBool_1) (or StartBool_1 StartBool_1) (= Start_2 Start_1) (>= Start Start_5)))
   (Start_25 Int (x (+ Start_20 Start_24) (div Start_25 Start_26) (mod Start_20 Start_24) (abs Start_22)))
   (Start_6 Int (0 (+ Start_3 Start_18) (div Start_13 Start_11) (abs Start_13)))
   (Start_7 Int (x 1 4 (- Start_13) (- Start_14 Start_15) (+ Start_14 Start_13) (div Start_3 Start_9) (mod Start_8 Start_15) (abs Start_18)))
   (Start_4 Int (5 0 (+ Start_19 Start_15) (* Start_10 Start_13) (div Start_5 Start_9) (abs Start_11)))
   (StartBool_3 Bool (true false (not StartBool_4) (or StartBool_1 StartBool_5) (<= Start_4 Start_19) (> Start_6 Start_13)))
   (Start_9 Int (x (- Start_1) (+ Start_6 Start_4) (div Start_9 Start_10) (mod Start_11 Start_2) (ite StartBool Start_7 Start_1)))
   (StartBool_5 Bool (true (< Start_9 Start_6) (<= Start_1 Start_13)))
   (Start_3 Int (5 (div Start_1 Start_4) (abs Start_1) (ite StartBool_3 Start_14 Start_2)))
   (StartBool_6 Bool (false (and StartBool StartBool_4) (or StartBool_6 StartBool_5) (< Start_12 Start_18) (>= Start_12 Start_2) (> Start_11 Start_2)))
   (Start_2 Int (1 y 0 3 (- Start_19) (- Start_6 Start_20) (div Start_21 Start_17) (abs Start_4)))
   (Start_17 Int (0 4 1 (- Start_2) (+ Start_8 Start_2) (* Start_2 Start_10) (div Start_7 Start_8) (mod Start_11 Start_10) (ite StartBool Start Start_4)))
   (Start_20 Int (y (- Start_16) (+ Start_12 Start_1) (* Start_15 Start_4) (mod Start_16 Start_22) (abs Start_22)))
   (Start_1 Int (3 x y 1 2 0 (- Start_5) (* Start_16 Start_15) (mod Start_14 Start_4) (ite StartBool_3 Start Start_16)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (- 2 (- (- y) 5)) y)))

(check-synth)
