(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_1 Int) (Start_11 Int) (Start_2 Int) (Start_4 Int) (Start_6 Int) (StartBool_1 Bool) (Start_7 Int) (StartBool_3 Bool) (Start_5 Int) (Start_8 Int) (Start_9 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_3 Int) (Start_10 Int) (StartBool_2 Bool))
  ((Start Int (1 (- Start Start) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (true (and StartBool_4 StartBool_5) (< Start_2 Start_1) (= Start_2 Start_9) (>= Start_2 Start_4)))
   (Start_12 Int (4 (- Start_7) (- Start_4 Start_12) (abs Start_7) (ite StartBool_1 Start_7 Start_9)))
   (Start_1 Int (y 1 0 4 (- Start_6 Start_6) (+ Start_7 Start_10) (div Start_4 Start_5) (abs Start_4) (ite StartBool_2 Start_12 Start_9)))
   (Start_11 Int (0 (- Start_9) (- Start_4 Start_6) (+ Start_10 Start_2) (* Start_6 Start_11) (mod Start_7 Start_6) (abs Start_8)))
   (Start_2 Int (2 (+ Start_3 Start) (* Start_4 Start) (mod Start Start_2) (ite StartBool Start_4 Start)))
   (Start_4 Int (3 4 (- Start) (+ Start_5 Start_6) (* Start_5 Start_5) (div Start_4 Start_3) (abs Start_4) (ite StartBool_1 Start_6 Start)))
   (Start_6 Int (y (- Start_7) (* Start_1 Start_10) (div Start_9 Start_1) (mod Start_1 Start_11) (ite StartBool_3 Start_6 Start_9)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_2 StartBool_3) (or StartBool_4 StartBool_4) (<= Start_7 Start) (= Start_8 Start_4)))
   (Start_7 Int (x (- Start Start_3) (div Start_5 Start_9) (mod Start Start)))
   (StartBool_3 Bool (false (not StartBool_3) (and StartBool_3 StartBool_5) (or StartBool_5 StartBool_1) (= Start_6 Start_4) (>= Start_9 Start_1)))
   (Start_5 Int (3 0 5 1 4 y (+ Start_6 Start_9) (div Start_10 Start_4) (ite StartBool_2 Start_4 Start_8)))
   (Start_8 Int (3 (- Start_2) (- Start_1 Start_6) (+ Start_1 Start_3)))
   (Start_9 Int (3 2 y (- Start_7) (- Start_3 Start_2) (+ Start_8 Start) (* Start Start_4) (mod Start_9 Start_6) (abs Start_4) (ite StartBool_4 Start_4 Start_8)))
   (StartBool_4 Bool (true (not StartBool_3) (< Start_8 Start)))
   (StartBool_5 Bool (true false (<= Start_10 Start_4) (>= Start_7 Start_8) (> Start_1 Start_3)))
   (Start_3 Int (x 4 5 2 0 (- Start_10) (* Start Start_8) (abs Start_4)))
   (Start_10 Int (4 (- Start_8) (+ Start_1 Start_7) (abs Start_10)))
   (StartBool_2 Bool (false (and StartBool_3 StartBool) (or StartBool StartBool_3) (< Start_7 Start_7) (> Start_7 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (* (mod y 0) x) 2)))

(check-synth)
