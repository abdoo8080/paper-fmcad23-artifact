(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_16 Int) (StartBool_7 Bool) (Start_15 Int) (Start_1 Int) (Start_2 Int) (Start_14 Int) (StartBool_9 Bool) (Start_13 Int) (Start_5 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_12 Int) (Start_10 Int) (StartBool_3 Bool) (StartBool_6 Bool) (Start_9 Int) (Start_6 Int) (Start_3 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_7 Int) (Start_8 Int) (StartBool_8 Bool) (Start_4 Int) (Start_11 Int))
  ((Start Int (1 (- Start) (- Start Start) (+ Start_1 Start_2) (div Start Start_3) (mod Start_3 Start) (ite StartBool Start_4 Start_2)))
   (StartBool Bool (false (not StartBool_6) (and StartBool_7 StartBool_3) (< Start_6 Start_9) (= Start_6 Start_15) (>= Start_10 Start_10) (> Start_14 Start_13)))
   (Start_17 Int (y 1 (* Start_4 Start_1) (div Start_4 Start_9) (mod Start_1 Start_6) (abs Start_15) (ite StartBool_8 Start_2 Start)))
   (Start_16 Int (5 x (- Start_9 Start_13) (+ Start Start_1) (div Start_14 Start_4)))
   (StartBool_7 Bool (false true (not StartBool_8) (< Start_11 Start_5) (>= Start_16 Start_11)))
   (Start_15 Int (3 (* Start_7 Start_11) (div Start_7 Start_11) (mod Start Start_10) (abs Start_8) (ite StartBool_8 Start_6 Start_5)))
   (Start_1 Int (1 (- Start_5) (- Start_5 Start_9) (mod Start_6 Start_10)))
   (Start_2 Int (1 3 0 x (- Start_8 Start_7) (* Start_11 Start_8) (ite StartBool Start_5 Start_14)))
   (Start_14 Int (2 x 0 5 y (- Start_12) (* Start_4 Start_13) (div Start Start_10) (mod Start_6 Start_14) (abs Start_6)))
   (StartBool_9 Bool (true (not StartBool_2) (> Start_7 Start_5)))
   (Start_13 Int (3 5 x (- Start_13) (- Start_4 Start_7) (+ Start_4 Start_11) (div Start_4 Start_12) (mod Start_8 Start) (abs Start_2) (ite StartBool_5 Start_10 Start_7)))
   (Start_5 Int (1 2 3 (- Start_3 Start_9) (+ Start_2 Start_3) (* Start_5 Start_2) (abs Start_13)))
   (StartBool_2 Bool (true false (and StartBool_4 StartBool_2) (< Start_9 Start_5) (= Start_8 Start_11)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool_3) (or StartBool_3 StartBool_1) (= Start Start_3) (>= Start Start_3) (> Start_5 Start_3)))
   (Start_12 Int (y (- Start Start_2) (+ Start_8 Start_10) (div Start_3 Start_8) (abs Start_11) (ite StartBool_5 Start_9 Start_6)))
   (Start_10 Int (3 (- Start_2) (- Start_6 Start_8) (div Start Start_9) (abs Start_1) (ite StartBool Start_5 Start_8)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_4) (or StartBool_3 StartBool_5) (< Start_6 Start_2)))
   (StartBool_6 Bool (true false (not StartBool_9) (and StartBool_4 StartBool) (< Start_6 Start_1) (<= Start_17 Start_2) (= Start Start_14) (>= Start_2 Start_14)))
   (Start_9 Int (x (- Start_2) (div Start Start_9)))
   (Start_6 Int (1 (- Start_3 Start) (+ Start_1 Start_5) (div Start_6 Start_5) (mod Start_3 Start_5) (abs Start_4)))
   (Start_3 Int (4 1 (- Start_11) (+ Start_3 Start_3) (div Start_3 Start_4) (mod Start_8 Start) (abs Start_1) (ite StartBool Start_14 Start_10)))
   (StartBool_4 Bool (false true (= Start_7 Start_8) (> Start_9 Start_7)))
   (StartBool_5 Bool (true (not StartBool) (or StartBool_4 StartBool_4) (<= Start_6 Start_3) (= Start_4 Start_2) (>= Start_4 Start_1) (> Start_3 Start_7)))
   (Start_7 Int (1 2 (* Start_4 Start_5) (mod Start_5 Start_2)))
   (Start_8 Int (0 x (mod Start_10 Start_10)))
   (StartBool_8 Bool (true (or StartBool_9 StartBool_6) (< Start_8 Start_13) (= Start_2 Start_7) (>= Start_15 Start_12)))
   (Start_4 Int (5 (- Start_1 Start_5) (+ Start_2 Start_3) (div Start_5 Start_1) (abs Start_2) (ite StartBool_1 Start_4 Start)))
   (Start_11 Int (5 2 3 1 (div Start_7 Start_3) (mod Start_10 Start_12) (abs Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 2 (* 4 5))))

(check-synth)
