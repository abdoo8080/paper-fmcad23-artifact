(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_5 Int) (Start_7 Int) (Start_4 Int) (StartBool_5 Bool) (Start_22 Int) (Start_9 Int) (StartBool_3 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (Start_16 Int) (Start_10 Int) (Start_17 Int) (Start_8 Int) (Start_19 Int) (Start_1 Int) (StartBool_2 Bool) (StartBool_7 Bool) (Start_21 Int) (Start_2 Int) (Start_12 Int) (Start_14 Int) (Start_15 Int) (StartBool_6 Bool) (Start_18 Int) (Start_3 Int) (Start_13 Int) (Start_6 Int) (Start_20 Int))
  ((Start Int (3 0 4 1 5 2 (- Start) (+ Start_1 Start_2) (div Start_1 Start_3) (mod Start_4 Start_5) (abs Start_1) (ite StartBool_1 Start_2 Start_6)))
   (StartBool Bool (true false (< Start_3 Start_21) (<= Start_12 Start_11) (>= Start_16 Start_4) (> Start_16 Start_11)))
   (Start_11 Int (x y 0 (+ Start_8 Start) (* Start_6 Start_9) (div Start_12 Start_1) (abs Start_7) (ite StartBool_3 Start_7 Start_8)))
   (Start_5 Int (4 2 (div Start Start_1) (abs Start_5) (ite StartBool_1 Start_5 Start_10)))
   (Start_7 Int (1 5 y 2 (- Start_5 Start) (* Start_2 Start_4) (div Start_6 Start_9) (mod Start_8 Start_9) (ite StartBool_4 Start_1 Start_6)))
   (Start_4 Int (3 2 (- Start_4) (- Start_8 Start_3) (+ Start Start) (mod Start Start_9) (ite StartBool_3 Start_11 Start_11)))
   (StartBool_5 Bool (true (and StartBool_6 StartBool_1) (or StartBool_5 StartBool_7) (<= Start_3 Start_10) (= Start_10 Start_6) (> Start_6 Start_4)))
   (Start_22 Int (2 4 (* Start_13 Start_21) (div Start_20 Start_3) (abs Start_17)))
   (Start_9 Int (3 4 (- Start_2) (- Start_4 Start) (+ Start_3 Start_4) (* Start_7 Start_2) (div Start_7 Start_9)))
   (StartBool_3 Bool (true (not StartBool_2) (and StartBool_1 StartBool_1) (or StartBool_2 StartBool_1) (<= Start_4 Start_3)))
   (StartBool_1 Bool (true (and StartBool_3 StartBool_4) (>= Start_6 Start_8)))
   (StartBool_4 Bool (true false (or StartBool_3 StartBool) (< Start Start_1) (= Start_2 Start_5) (>= Start_6 Start_3)))
   (Start_16 Int (0 (- Start_12) (+ Start_3 Start_10) (div Start_13 Start_11) (mod Start_12 Start_15)))
   (Start_10 Int (5 1 (- Start_6) (+ Start_1 Start_1) (div Start_8 Start_2) (ite StartBool_3 Start_10 Start_6)))
   (Start_17 Int (0 (- Start_5) (- Start_17 Start) (+ Start_12 Start) (* Start_2 Start_9) (div Start_9 Start) (abs Start_14)))
   (Start_8 Int (3 (- Start_4) (- Start_5 Start_4) (mod Start Start_5)))
   (Start_19 Int (3 (- Start_15) (+ Start_9 Start_10) (abs Start_8)))
   (Start_1 Int (2 1 (- Start_20) (- Start_9 Start_12) (+ Start Start_9) (mod Start_4 Start_2)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_3) (or StartBool_2 StartBool) (= Start_6 Start_2)))
   (StartBool_7 Bool (true false (and StartBool_1 StartBool_2) (<= Start_9 Start_1) (= Start_8 Start_14) (> Start_6 Start_4)))
   (Start_21 Int (4 y x 0 1 3 (- Start_1) (abs Start_15)))
   (Start_2 Int (2 4 (- Start_6 Start_12) (+ Start_11 Start_13) (* Start_19 Start_3) (div Start Start_16)))
   (Start_12 Int (4 (- Start_13) (- Start_1 Start_1) (abs Start_13) (ite StartBool_5 Start_5 Start_12)))
   (Start_14 Int (3 (- Start Start_10) (+ Start_5 Start_14) (* Start_9 Start_13)))
   (Start_15 Int (0 (- Start_4) (- Start_17 Start_16) (div Start_12 Start_18) (mod Start_12 Start_8)))
   (StartBool_6 Bool (true false (< Start_15 Start_7) (<= Start_6 Start_13) (>= Start Start_13) (> Start_14 Start_16)))
   (Start_18 Int (x (- Start_10) (* Start_6 Start_6) (div Start_5 Start_14) (ite StartBool_5 Start_9 Start_11)))
   (Start_3 Int (x 4 (- Start_14) (* Start_7 Start_3) (mod Start_17 Start_4) (abs Start_5) (ite StartBool Start_19 Start_11)))
   (Start_13 Int (2 (- Start_11 Start_17) (* Start_12 Start_15) (div Start_12 Start_6) (abs Start_17)))
   (Start_6 Int (2 4 1 y 5 0 (* Start_7 Start) (div Start_5 Start) (abs Start_5) (ite StartBool_2 Start_6 Start_8)))
   (Start_20 Int (y (- Start_11 Start_7) (* Start_21 Start_22) (mod Start_17 Start_16) (abs Start_9) (ite StartBool_5 Start_16 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 5 (mod (- x) 4))))

(check-synth)
