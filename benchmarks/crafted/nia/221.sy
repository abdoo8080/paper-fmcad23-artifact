(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_4 Int) (Start_3 Int) (Start_8 Int) (Start_6 Int) (Start_1 Int) (Start_9 Int) (Start_2 Int) (StartBool_1 Bool) (Start_11 Int) (StartBool_3 Bool) (Start_7 Int) (StartBool_4 Bool) (Start_5 Int) (StartBool_2 Bool))
  ((Start Int (3 (- Start_1) (- Start Start_1) (+ Start_2 Start_3) (* Start Start_4) (div Start Start_1) (mod Start_2 Start_4) (abs Start_1)))
   (StartBool Bool (true (and StartBool_3 StartBool_1) (= Start_11 Start_1) (> Start_7 Start_2)))
   (Start_10 Int (y (- Start_9) (- Start_6 Start_8) (+ Start_10 Start_11) (mod Start_5 Start_8)))
   (Start_4 Int (4 (- Start Start_4) (+ Start_3 Start_2) (div Start_3 Start_1) (abs Start)))
   (Start_3 Int (2 x 3 (- Start_4) (- Start_1 Start_1) (+ Start_3 Start_3) (* Start Start_2)))
   (Start_8 Int (x (- Start_8) (* Start_4 Start_4) (div Start Start) (mod Start_3 Start_3) (ite StartBool Start_8 Start_8)))
   (Start_6 Int (5 (- Start_8) (+ Start_7 Start) (mod Start_7 Start_8) (abs Start_4) (ite StartBool_2 Start Start_7)))
   (Start_1 Int (1 (* Start_6 Start_8) (abs Start_8)))
   (Start_9 Int (5 (- Start_5) (div Start_5 Start_1)))
   (Start_2 Int (0 (- Start_1) (+ Start_5 Start_4) (* Start_6 Start_1) (mod Start_6 Start_5) (abs Start_3) (ite StartBool_1 Start_3 Start_2)))
   (StartBool_1 Bool (true (< Start_6 Start) (<= Start_7 Start_1) (= Start_5 Start)))
   (Start_11 Int (x y (* Start_11 Start_3) (div Start_1 Start_5) (mod Start_7 Start_11) (abs Start_4)))
   (StartBool_3 Bool (true (not StartBool_1) (and StartBool_3 StartBool_3) (or StartBool_4 StartBool_1) (= Start_9 Start_1)))
   (Start_7 Int (5 x 3 y (- Start_3 Start_3) (* Start_6 Start_8) (div Start_8 Start_1) (mod Start_2 Start_5)))
   (StartBool_4 Bool (false true (not StartBool) (and StartBool StartBool_3) (< Start_8 Start) (<= Start Start_7) (= Start_4 Start_9)))
   (Start_5 Int (0 2 y (- Start_2) (- Start_10 Start_6) (* Start_10 Start_11) (div Start_3 Start_11) (mod Start_9 Start_9) (abs Start_3)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool_2 StartBool_2) (or StartBool_3 StartBool_1) (= Start_6 Start_6) (> Start_8 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- y) 2)))

(check-synth)
