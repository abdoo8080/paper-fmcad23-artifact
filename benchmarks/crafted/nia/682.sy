(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_13 Int) (Start_1 Int) (StartBool_6 Bool) (Start_16 Int) (Start_15 Int) (StartBool_4 Bool) (Start_3 Int) (StartBool_7 Bool) (Start_2 Int) (StartBool_1 Bool) (Start_9 Int) (Start_5 Int) (StartBool_8 Bool) (Start_4 Int) (Start_7 Int) (StartBool_2 Bool) (StartBool_5 Bool) (Start_6 Int) (Start_10 Int) (StartBool_3 Bool) (Start_14 Int) (Start_12 Int) (Start_8 Int) (Start_11 Int))
  ((Start Int (x (mod Start Start_1) (abs Start) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true (and StartBool_8 StartBool_3) (> Start_4 Start_7)))
   (Start_17 Int (y 1 (- Start_14) (- Start_10 Start) (+ Start_7 Start_3)))
   (Start_13 Int (y (+ Start_16 Start_15) (mod Start_15 Start_14) (abs Start_9) (ite StartBool_4 Start_15 Start_11)))
   (Start_1 Int (2 x (- Start_4) (- Start_2 Start_1) (* Start_15 Start_17)))
   (StartBool_6 Bool (false (not StartBool_6) (and StartBool_7 StartBool_6) (< Start_7 Start_4) (<= Start_9 Start_10) (= Start_4 Start_11) (> Start Start_7)))
   (Start_16 Int (2 (- Start_10 Start_12) (div Start_3 Start_2) (mod Start_8 Start_2) (abs Start_10) (ite StartBool_3 Start_8 Start_7)))
   (Start_15 Int (1 3 0 5 (* Start_10 Start_1) (ite StartBool_4 Start_10 Start_16)))
   (StartBool_4 Bool (true false (and StartBool_2 StartBool_1) (or StartBool_2 StartBool_5) (< Start_1 Start_1) (<= Start_11 Start_3) (= Start_12 Start_9) (>= Start_5 Start_13)))
   (Start_3 Int (5 (- Start_2 Start_2) (mod Start_2 Start_13) (abs Start_1) (ite StartBool_4 Start_6 Start_13)))
   (StartBool_7 Bool (false (not StartBool_4) (and StartBool_7 StartBool_3) (or StartBool_3 StartBool_1)))
   (Start_2 Int (2 (- Start_3) (- Start Start_2) (+ Start_3 Start_1) (* Start_4 Start_3) (mod Start Start_2)))
   (StartBool_1 Bool (true false (or StartBool_5 StartBool_7) (= Start_6 Start_8) (>= Start_5 Start_16) (> Start_14 Start_16)))
   (Start_9 Int (y (- Start_4 Start) (+ Start_9 Start_3) (div Start_4 Start_9) (mod Start_9 Start_7)))
   (Start_5 Int (1 (- Start_6) (- Start_8 Start_8) (+ Start_7 Start_2) (* Start_4 Start_3) (div Start_10 Start_3) (ite StartBool Start_8 Start_6)))
   (StartBool_8 Bool (false (and StartBool StartBool_4) (or StartBool_7 StartBool) (< Start_2 Start_14) (>= Start_7 Start_14) (> Start_2 Start_10)))
   (Start_4 Int (1 (- Start_2) (- Start_5 Start_2) (* Start_1 Start_6) (div Start_7 Start_1) (mod Start_4 Start_6) (abs Start_4)))
   (Start_7 Int (1 3 (+ Start_4 Start_5) (mod Start_3 Start_1) (abs Start_5) (ite StartBool_2 Start_8 Start_5)))
   (StartBool_2 Bool (true false (not StartBool_2) (< Start_4 Start_2) (= Start_7 Start_1) (> Start_8 Start_1)))
   (StartBool_5 Bool (false true (not StartBool_6) (and StartBool_4 StartBool_1) (or StartBool_7 StartBool_5) (< Start_9 Start_8) (= Start_11 Start_14) (>= Start_6 Start_1) (> Start_6 Start_1)))
   (Start_6 Int (x (+ Start_9 Start) (* Start_9 Start_9) (mod Start_2 Start) (ite StartBool Start_3 Start_3)))
   (Start_10 Int (1 4 (- Start_3) (- Start_11 Start_1) (* Start_3 Start_6) (div Start_2 Start_8) (ite StartBool_3 Start_7 Start_8)))
   (StartBool_3 Bool (false (and StartBool_3 StartBool) (< Start_10 Start_8) (<= Start_2 Start_12) (= Start_7 Start_4) (>= Start Start_5)))
   (Start_14 Int (1 (- Start_9) (+ Start_7 Start_13) (div Start_6 Start_15) (mod Start_7 Start_8)))
   (Start_12 Int (5 x y 2 (- Start_1) (+ Start_2 Start_4) (div Start_10 Start_12) (abs Start_12) (ite StartBool Start_9 Start_4)))
   (Start_8 Int (y x 1 3 4 0 (+ Start_8 Start_3) (div Start_7 Start_2) (mod Start_1 Start_6) (ite StartBool_1 Start_7 Start_1)))
   (Start_11 Int (y (- Start_1) (+ Start_10 Start_11) (* Start_4 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (+ y 4))))

(check-synth)
