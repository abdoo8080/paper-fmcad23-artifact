(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (StartBool_7 Bool) (Start_17 Int) (StartBool_6 Bool) (Start_14 Int) (Start_15 Int) (Start_3 Int) (Start_18 Int) (StartBool_4 Bool) (Start_2 Int) (Start_4 Int) (StartBool_3 Bool) (StartBool_5 Bool) (Start_1 Int) (Start_7 Int) (Start_9 Int) (StartBool_2 Bool) (Start_10 Int) (Start_8 Int) (StartBool_1 Bool) (Start_5 Int) (Start_6 Int) (Start_11 Int) (Start_19 Int) (Start_16 Int) (Start_12 Int))
  ((Start Int (3 (* Start Start) (div Start_1 Start_2)))
   (StartBool Bool (true (not StartBool_4) (or StartBool_5 StartBool_7) (< Start_13 Start_14) (<= Start_19 Start_17) (>= Start_2 Start_5) (> Start_5 Start_13)))
   (Start_13 Int (3 (+ Start_5 Start_18) (* Start_18 Start_14) (div Start_10 Start_11) (ite StartBool_1 Start_12 Start_19)))
   (StartBool_7 Bool (true (and StartBool_3 StartBool) (>= Start_15 Start_8) (> Start Start_16)))
   (Start_17 Int (y (- Start_5) (- Start_11 Start_8) (div Start_4 Start_11) (ite StartBool_7 Start_14 Start_1)))
   (StartBool_6 Bool (false (not StartBool_1) (and StartBool_5 StartBool_5) (< Start_5 Start_5) (<= Start_15 Start_11) (= Start_13 Start_13) (>= Start_14 Start_17) (> Start_6 Start_12)))
   (Start_14 Int (2 (- Start_9) (+ Start_3 Start_2) (div Start_15 Start_9)))
   (Start_15 Int (2 1 x 3 y (div Start_13 Start_1) (mod Start_14 Start_15)))
   (Start_3 Int (2 4 (* Start_1 Start_4) (div Start Start_2) (mod Start_1 Start_2) (ite StartBool Start_4 Start_3)))
   (Start_18 Int (3 y (- Start_16 Start_19) (* Start_11 Start_17) (mod Start_5 Start_19) (ite StartBool_3 Start Start_17)))
   (StartBool_4 Bool (false true (not StartBool_5) (or StartBool_3 StartBool) (< Start_15 Start_11) (>= Start_1 Start_14)))
   (Start_2 Int (0 (* Start_1 Start_3) (div Start Start_2) (ite StartBool Start_3 Start_1)))
   (Start_4 Int (x 2 (- Start Start_3) (+ Start_1 Start_1) (div Start_4 Start_4) (mod Start_5 Start_1) (ite StartBool Start_2 Start_4)))
   (StartBool_3 Bool (true (not StartBool) (or StartBool_4 StartBool_5) (= Start_16 Start_8) (>= Start_16 Start_16) (> Start_10 Start_2)))
   (StartBool_5 Bool (false true (not StartBool_4) (or StartBool_5 StartBool_5) (<= Start_3 Start_15) (> Start_2 Start)))
   (Start_1 Int (2 (- Start_9 Start_10) (+ Start_3 Start_6) (mod Start_8 Start_13) (abs Start_10) (ite StartBool_2 Start_2 Start_5)))
   (Start_7 Int (x 0 3 (- Start) (* Start_1 Start_5) (mod Start_2 Start_8) (abs Start_2) (ite StartBool Start_4 Start_9)))
   (Start_9 Int (x 1 (+ Start_1 Start_6) (* Start_9 Start_10) (mod Start_8 Start_9)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool_1 StartBool) (or StartBool_3 StartBool_4) (< Start_10 Start_2) (<= Start_3 Start_11) (= Start_2 Start_14) (> Start_5 Start_15)))
   (Start_10 Int (2 (- Start_9) (- Start_5 Start_8) (div Start_8 Start_6) (ite StartBool Start_2 Start_1)))
   (Start_8 Int (0 1 (- Start_11) (+ Start_7 Start_7) (* Start_10 Start_8) (div Start_9 Start_7) (abs Start) (ite StartBool_1 Start_2 Start_7)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool) (< Start_1 Start_5) (<= Start_8 Start_4)))
   (Start_5 Int (1 (- Start Start_6) (* Start_2 Start_3) (ite StartBool Start_1 Start_1)))
   (Start_6 Int (4 x 1 (- Start_3) (+ Start_2 Start_6) (* Start_4 Start_6) (div Start_6 Start) (mod Start_5 Start_4) (abs Start) (ite StartBool Start_7 Start_2)))
   (Start_11 Int (x (- Start_7) (- Start_8 Start) (div Start_6 Start_12)))
   (Start_19 Int (1 4 3 2 (- Start_13) (- Start_4 Start_15) (* Start_13 Start_3) (mod Start_13 Start_17) (ite StartBool_4 Start_4 Start_18)))
   (Start_16 Int (0 (- Start_8) (mod Start_14 Start_13) (abs Start) (ite StartBool_6 Start_2 Start_8)))
   (Start_12 Int (3 (+ Start_7 Start) (abs Start_10) (ite StartBool Start_6 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 1 (+ 4 x))))

(check-synth)
