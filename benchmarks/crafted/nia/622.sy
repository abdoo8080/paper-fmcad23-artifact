(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_2 Bool) (Start_1 Int) (StartBool_1 Bool) (Start_10 Int) (Start_5 Int) (Start_8 Int) (StartBool_3 Bool) (StartBool_7 Bool) (Start_7 Int) (StartBool_5 Bool) (Start_4 Int) (Start_9 Int) (Start_6 Int) (StartBool_4 Bool) (Start_3 Int) (Start_2 Int) (StartBool_6 Bool))
  ((Start Int (0 (mod Start Start_1) (ite StartBool Start Start_1)))
   (StartBool Bool (false (not StartBool_2) (and StartBool_3 StartBool_3) (<= Start_3 Start_8) (> Start_4 Start_4)))
   (StartBool_2 Bool (true false (and StartBool_4 StartBool_3) (or StartBool_5 StartBool_6) (= Start Start_7) (>= Start_3 Start_2)))
   (Start_1 Int (5 (- Start) (* Start_2 Start_3) (div Start_2 Start_4) (mod Start_3 Start_1) (abs Start_2) (ite StartBool Start_3 Start)))
   (StartBool_1 Bool (true false (or StartBool StartBool) (< Start_5 Start_7) (<= Start_1 Start) (= Start_1 Start_2) (> Start_6 Start_6)))
   (Start_10 Int (y (div Start_2 Start_6) (mod Start_10 Start_7)))
   (Start_5 Int (5 (- Start_1) (- Start_6 Start_7) (+ Start_2 Start_2) (* Start_5 Start_7) (div Start_8 Start) (mod Start_8 Start_6)))
   (Start_8 Int (x (+ Start_7 Start_8) (mod Start_3 Start_4) (ite StartBool_1 Start_6 Start)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool_1) (< Start_4 Start_1) (>= Start_4 Start_4)))
   (StartBool_7 Bool (false (or StartBool_1 StartBool_3)))
   (Start_7 Int (1 (- Start_3 Start_8) (+ Start Start_8) (* Start_8 Start) (div Start_2 Start_1) (mod Start_4 Start_8) (ite StartBool Start_9 Start)))
   (StartBool_5 Bool (true (and StartBool_1 StartBool) (or StartBool_6 StartBool) (= Start_7 Start_6) (>= Start_7 Start) (> Start_2 Start_10)))
   (Start_4 Int (y (- Start_3) (+ Start_5 Start_1) (* Start Start_2) (div Start_2 Start_4) (ite StartBool Start Start_4)))
   (Start_9 Int (1 5 4 y (+ Start_8 Start_1) (div Start_7 Start) (mod Start_5 Start_1) (abs Start_9)))
   (Start_6 Int (3 (- Start_9) (* Start_8 Start) (div Start_1 Start_6) (abs Start_5)))
   (StartBool_4 Bool (false (not StartBool_7) (< Start_8 Start_5) (<= Start_9 Start_1) (> Start_4 Start_4)))
   (Start_3 Int (2 (- Start_2) (+ Start_7 Start_8) (abs Start_2) (ite StartBool_1 Start_5 Start_9)))
   (Start_2 Int (4 (- Start_1) (abs Start_9)))
   (StartBool_6 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_5) (or StartBool_6 StartBool_7) (<= Start_2 Start_2) (= Start_6 Start_1) (>= Start_2 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (- (div 4 0)) (+ 5 2))))

(check-synth)
