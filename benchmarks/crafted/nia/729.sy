(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_6 Bool) (Start_15 Int) (StartBool_4 Bool) (Start_14 Int) (Start_2 Int) (StartBool_5 Bool) (Start_12 Int) (Start_16 Int) (Start_13 Int) (Start_9 Int) (Start_5 Int) (StartBool_2 Bool) (Start_4 Int) (Start_3 Int) (Start_7 Int) (StartBool_3 Bool) (Start_11 Int) (Start_8 Int) (StartBool_1 Bool) (Start_10 Int) (Start_6 Int))
  ((Start Int (x (- Start_1) (- Start_2 Start_1) (abs Start_3)))
   (StartBool Bool (false (< Start Start_6)))
   (Start_1 Int (2 y (- Start_10) (- Start_5 Start_10)))
   (StartBool_6 Bool (false true (or StartBool_2 StartBool_2) (< Start_1 Start_12) (>= Start_4 Start_13)))
   (Start_15 Int (3 y (- Start_6) (+ Start_8 Start_11) (div Start_12 Start) (mod Start_3 Start_8) (ite StartBool_6 Start_2 Start_4)))
   (StartBool_4 Bool (false (not StartBool_2) (and StartBool StartBool_5) (or StartBool_3 StartBool_4) (<= Start_13 Start_14) (= Start_8 Start_9) (> Start_2 Start_12)))
   (Start_14 Int (1 (- Start_12) (- Start_8 Start_3) (ite StartBool_4 Start_9 Start)))
   (Start_2 Int (0 (- Start_6) (- Start_10 Start_5) (+ Start_16 Start_5) (abs Start_4)))
   (StartBool_5 Bool (true false (<= Start_6 Start_3) (= Start_10 Start) (>= Start_15 Start_10) (> Start_12 Start_13)))
   (Start_12 Int (4 (- Start_12) (* Start_8 Start_7) (div Start_3 Start_9) (ite StartBool_2 Start_13 Start_1)))
   (Start_16 Int (4 (- Start_11) (+ Start_13 Start_12) (mod Start_13 Start_13) (abs Start_3)))
   (Start_13 Int (y 0 4 5 x 3 (- Start_11) (- Start_7 Start_5) (* Start_11 Start_2) (mod Start_13 Start_14) (abs Start_13) (ite StartBool_2 Start_4 Start_8)))
   (Start_9 Int (4 2 3 (- Start_6) (+ Start_1 Start_9) (abs Start_10)))
   (Start_5 Int (3 4 (- Start_4 Start_5) (div Start_1 Start) (abs Start) (ite StartBool_1 Start_4 Start)))
   (StartBool_2 Bool (true (<= Start_3 Start_3) (= Start_1 Start_4)))
   (Start_4 Int (1 x (- Start_4 Start_4) (+ Start_2 Start_1) (* Start_1 Start_6) (abs Start_7)))
   (Start_3 Int (y (- Start_4) (- Start_5 Start_3) (div Start_1 Start_3) (mod Start_5 Start_3) (ite StartBool Start Start_4)))
   (Start_7 Int (3 1 (- Start_4) (- Start_1 Start_5) (+ Start Start_5) (* Start_7 Start_1) (div Start_7 Start_6) (abs Start_8) (ite StartBool_3 Start_9 Start_4)))
   (StartBool_3 Bool (false true (<= Start_11 Start)))
   (Start_11 Int (3 (- Start_1) (- Start_11 Start_4) (+ Start_2 Start_5) (abs Start) (ite StartBool_1 Start_6 Start_2)))
   (Start_8 Int (3 4 (- Start_3 Start_11) (+ Start Start) (* Start_4 Start_11) (div Start_5 Start_9) (mod Start_4 Start_10) (abs Start_6)))
   (StartBool_1 Bool (true (or StartBool_2 StartBool_1) (< Start_4 Start_4) (>= Start_3 Start_4) (> Start_3 Start_2)))
   (Start_10 Int (2 (- Start_10) (+ Start_1 Start) (mod Start_4 Start_6)))
   (Start_6 Int (5 (+ Start_6 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (abs x) 5)))

(check-synth)
