(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_14 Int) (Start_6 Int) (StartBool_1 Bool) (Start_13 Int) (Start_9 Int) (Start_2 Int) (Start_4 Int) (Start_5 Int) (StartBool_2 Bool) (Start_8 Int) (Start_3 Int) (Start_7 Int) (Start_1 Int) (Start_10 Int) (Start_12 Int))
  ((Start Int (x (- Start_1 Start_2) (* Start Start_1)))
   (StartBool Bool (false true (not StartBool_1) (<= Start_10 Start_9) (= Start_1 Start_3)))
   (Start_11 Int (5 x (div Start_9 Start_12) (mod Start_14 Start_13)))
   (Start_14 Int (5 2 4 (mod Start_3 Start_9) (abs Start_1) (ite StartBool_1 Start_1 Start_1)))
   (Start_6 Int (3 x (ite StartBool Start Start_6)))
   (StartBool_1 Bool (false true (not StartBool_2) (< Start_7 Start_4) (= Start_2 Start) (>= Start_6 Start_7) (> Start_3 Start_2)))
   (Start_13 Int (2 3 (* Start_1 Start_2) (abs Start_14)))
   (Start_9 Int (0 3 x (- Start_10 Start_11) (+ Start_9 Start_7) (abs Start_5) (ite StartBool_2 Start Start_10)))
   (Start_2 Int (5 3 0 y (+ Start Start_1) (* Start_1 Start_2) (ite StartBool Start_3 Start_4)))
   (Start_4 Int (2 (- Start_5 Start_4) (+ Start Start_1) (* Start_3 Start_2) (div Start_1 Start_2) (abs Start)))
   (Start_5 Int (0 4 (- Start_6) (+ Start Start_5) (mod Start_1 Start_6) (abs Start)))
   (StartBool_2 Bool (false true (not StartBool_2) (<= Start_5 Start_7) (> Start_5 Start_2)))
   (Start_8 Int (0 4 x (- Start_10 Start_4) (+ Start_10 Start_13) (* Start Start_13) (abs Start_9) (ite StartBool_1 Start_11 Start_2)))
   (Start_3 Int (y 1 (- Start Start_3) (* Start Start_3) (div Start_1 Start_3) (abs Start_5) (ite StartBool_1 Start_6 Start_7)))
   (Start_7 Int (y (- Start_1 Start_7) (+ Start_2 Start_6) (div Start_7 Start) (mod Start Start_1) (ite StartBool_1 Start_2 Start_3)))
   (Start_1 Int (4 (- Start_1 Start_3) (+ Start_8 Start_9) (div Start_9 Start_10) (mod Start Start_5)))
   (Start_10 Int (3 4 1 y 2 0 (* Start_4 Start_3) (mod Start_11 Start_7) (ite StartBool Start_5 Start_12)))
   (Start_12 Int (y (- Start_1) (+ Start_4 Start_9) (* Start_8 Start_3) (mod Start_9 Start_3) (abs Start_11) (ite StartBool Start_9 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 2 x) (- 5 (div 0 (abs x))))))

(check-synth)
