(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_5 Bool) (Start_19 Int) (Start_17 Int) (Start_16 Int) (Start_18 Int) (Start_3 Int) (Start_15 Int) (Start_7 Int) (Start_6 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_4 Int) (Start_8 Int) (Start_11 Int) (Start_9 Int) (Start_13 Int) (Start_10 Int) (Start_5 Int) (StartBool_4 Bool) (Start_12 Int) (StartBool_1 Bool) (Start_14 Int))
  ((Start Int (y 0 x (- Start) (div Start_1 Start) (mod Start_2 Start) (abs Start) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true false (not StartBool_1) (or StartBool_3 StartBool) (< Start_6 Start) (> Start_3 Start_12)))
   (Start_1 Int (5 0 1 (+ Start_6 Start_6) (div Start_16 Start_17)))
   (Start_2 Int (0 (- Start_7) (- Start_17 Start_16) (+ Start_4 Start_4) (abs Start_8) (ite StartBool_4 Start_16 Start_15)))
   (StartBool_5 Bool (false (not StartBool_5) (and StartBool_2 StartBool_2) (< Start_16 Start_17) (<= Start_13 Start_6) (= Start_6 Start_15) (>= Start_6 Start_1)))
   (Start_19 Int (2 (- Start_11) (* Start_18 Start_3) (div Start_4 Start_12) (mod Start_17 Start_7) (abs Start_4)))
   (Start_17 Int (2 (- Start_7 Start_3) (+ Start_15 Start_14) (* Start_9 Start_18) (abs Start_5)))
   (Start_16 Int (y (- Start_6) (+ Start_5 Start_13) (div Start_2 Start_16) (ite StartBool_4 Start_5 Start_12)))
   (Start_18 Int (x y (- Start_3) (- Start_13 Start_2) (div Start_19 Start_12) (abs Start_6) (ite StartBool Start_15 Start_2)))
   (Start_3 Int (0 y (- Start_4) (- Start_8 Start) (+ Start_9 Start_16)))
   (Start_15 Int (5 3 (- Start_2) (- Start_11 Start_1) (* Start_3 Start_6) (div Start_9 Start_2) (mod Start_12 Start_5) (abs Start_9) (ite StartBool_3 Start_6 Start_12)))
   (Start_7 Int (3 (* Start_6 Start_2) (div Start_1 Start_2) (abs Start) (ite StartBool Start_6 Start)))
   (Start_6 Int (0 4 3 y (- Start_7) (- Start_6 Start) (* Start_4 Start_11) (div Start_7 Start_5) (mod Start_7 Start_11) (abs Start_2)))
   (StartBool_3 Bool (true false (not StartBool_2) (or StartBool_2 StartBool) (<= Start_3 Start_10) (= Start Start_1)))
   (StartBool_2 Bool (true (not StartBool_3) (= Start_10 Start_4) (> Start_1 Start_5)))
   (Start_4 Int (y 3 (- Start_1) (- Start_5 Start_6) (+ Start Start_4) (* Start Start_7) (mod Start_1 Start_8) (abs Start_6) (ite StartBool_1 Start_4 Start_5)))
   (Start_8 Int (3 0 x 2 4 1 (- Start_6) (+ Start_8 Start_7) (* Start_4 Start_5) (div Start_3 Start_5) (mod Start_3 Start_2) (ite StartBool Start_9 Start_2)))
   (Start_11 Int (1 (- Start_9 Start_1) (* Start Start_10) (div Start_6 Start_1) (mod Start_10 Start_5)))
   (Start_9 Int (2 (- Start_1) (+ Start_9 Start_9) (* Start_5 Start_10) (mod Start_7 Start_5)))
   (Start_13 Int (3 y 2 (- Start_8 Start_11) (+ Start Start_11) (* Start_12 Start_5) (div Start_10 Start) (mod Start_9 Start_15) (abs Start_3)))
   (Start_10 Int (0 (- Start_3) (mod Start Start_1) (abs Start_8) (ite StartBool Start_10 Start_4)))
   (Start_5 Int (1 (- Start_2) (+ Start_9 Start_3) (* Start_9 Start_6) (div Start_2 Start_7) (mod Start_3 Start_12) (abs Start_11)))
   (StartBool_4 Bool (false true (not StartBool_2) (or StartBool_5 StartBool_2) (< Start_12 Start_17) (= Start_14 Start_5)))
   (Start_12 Int (5 x (- Start) (- Start_8 Start_13) (+ Start_2 Start) (* Start_2 Start_7) (ite StartBool_2 Start_14 Start_11)))
   (StartBool_1 Bool (false (<= Start_1 Start_3) (= Start Start_1) (>= Start Start_3) (> Start_4 Start_2)))
   (Start_14 Int (1 3 5 4 (- Start_6) (- Start_7 Start_12) (* Start_1 Start_6) (mod Start_4 Start_13) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 4 (- x y))))

(check-synth)
