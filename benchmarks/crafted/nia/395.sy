(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_8 Bool) (Start_13 Int) (Start_14 Int) (StartBool_3 Bool) (Start_17 Int) (StartBool_5 Bool) (Start_4 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_16 Int) (Start_15 Int) (Start_1 Int) (Start_2 Int) (Start_3 Int) (StartBool_1 Bool) (StartBool_9 Bool) (Start_7 Int) (Start_18 Int) (Start_11 Int) (Start_6 Int) (Start_5 Int) (Start_8 Int) (StartBool_6 Bool) (Start_10 Int) (Start_12 Int) (Start_9 Int))
  ((Start Int (2 4 3 (- Start Start_1) (+ Start Start) (div Start Start) (mod Start_1 Start_1) (abs Start)))
   (StartBool Bool (true false (not StartBool) (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_4) (= Start_13 Start_4) (>= Start_9 Start_8) (> Start_14 Start_5)))
   (StartBool_7 Bool (true false (< Start_6 Start_11) (= Start_17 Start)))
   (StartBool_8 Bool (true false (not StartBool_9) (and StartBool_4 StartBool_9) (or StartBool_9 StartBool_3) (< Start_14 Start_13) (<= Start_16 Start_8)))
   (Start_13 Int (5 0 4 (* Start_4 Start_12) (mod Start_4 Start_3) (ite StartBool_2 Start_15 Start_8)))
   (Start_14 Int (4 (- Start_9) (div Start_14 Start_9) (mod Start_11 Start_11) (abs Start_8)))
   (StartBool_3 Bool (false true (or StartBool_5 StartBool_1) (<= Start_6 Start_10) (= Start_1 Start_9) (>= Start_3 Start_8)))
   (Start_17 Int (1 (- Start_14 Start_18) (+ Start_17 Start_1) (abs Start_4) (ite StartBool Start_18 Start_5)))
   (StartBool_5 Bool (true (not StartBool_6) (and StartBool_4 StartBool_7) (or StartBool_1 StartBool_8) (< Start_3 Start_11) (>= Start_11 Start_4)))
   (Start_4 Int (0 x 3 2 1 4 (- Start_6 Start_7) (+ Start_9 Start_8) (* Start_7 Start_6) (div Start_3 Start_8) (abs Start_9) (ite StartBool_2 Start_3 Start_12)))
   (StartBool_2 Bool (true false (< Start_1 Start_4) (<= Start_1 Start_5) (= Start_5 Start_4) (>= Start Start_3) (> Start_7 Start_4)))
   (StartBool_4 Bool (true (< Start_5 Start_1) (= Start_10 Start)))
   (Start_16 Int (4 (abs Start_1) (ite StartBool_3 Start_2 Start_2)))
   (Start_15 Int (y 3 1 x (- Start_7) (div Start_11 Start_3) (mod Start_7 Start_5) (abs Start_13) (ite StartBool_5 Start_12 Start_2)))
   (Start_1 Int (4 3 (div Start_2 Start_2)))
   (Start_2 Int (0 (- Start_2 Start_1) (+ Start Start_3) (* Start_4 Start_5) (div Start_2 Start_5) (mod Start Start_6) (ite StartBool_1 Start_6 Start_2)))
   (Start_3 Int (3 1 4 (- Start_3 Start) (mod Start_8 Start_4)))
   (StartBool_1 Bool (true (not StartBool_2) (or StartBool_2 StartBool) (< Start_2 Start_1) (= Start Start_5)))
   (StartBool_9 Bool (false true (not StartBool_2) (<= Start_6 Start_6) (>= Start_17 Start_3) (> Start_7 Start_5)))
   (Start_7 Int (4 (- Start_3) (+ Start Start_2) (mod Start_4 Start_3) (ite StartBool Start_3 Start_4)))
   (Start_18 Int (x (- Start_6 Start_5) (div Start_4 Start_7)))
   (Start_11 Int (0 (- Start_3) (+ Start_10 Start_6) (* Start_2 Start_12) (mod Start_6 Start_3)))
   (Start_6 Int (3 1 2 (div Start_1 Start_1) (mod Start_4 Start_8) (abs Start_3)))
   (Start_5 Int (2 x (- Start_12 Start_4) (div Start_8 Start_11) (abs Start_9)))
   (Start_8 Int (1 y 2 (mod Start_9 Start) (ite StartBool Start_10 Start_4)))
   (StartBool_6 Bool (false (and StartBool_4 StartBool_1) (or StartBool_8 StartBool) (> Start_15 Start_5)))
   (Start_10 Int (5 (- Start_8 Start_11) (+ Start_6 Start_8)))
   (Start_12 Int (x (- Start_5) (- Start_10 Start_6) (abs Start)))
   (Start_9 Int (y (mod Start_9 Start_12) (abs Start_9) (ite StartBool_2 Start_12 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (abs (mod x 3)))))

(check-synth)
