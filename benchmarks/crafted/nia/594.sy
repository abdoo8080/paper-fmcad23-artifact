(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (Start_24 Int) (Start_22 Int) (StartBool_6 Bool) (Start_1 Int) (Start_23 Int) (Start_12 Int) (Start_25 Int) (Start_6 Int) (Start_4 Int) (StartBool_3 Bool) (Start_2 Int) (StartBool_4 Bool) (Start_3 Int) (Start_8 Int) (StartBool_5 Bool) (Start_17 Int) (Start_7 Int) (Start_9 Int) (Start_10 Int) (StartBool_1 Bool) (Start_11 Int) (Start_19 Int) (Start_15 Int) (StartBool_2 Bool) (Start_5 Int) (Start_13 Int) (Start_14 Int) (Start_16 Int) (Start_18 Int) (Start_20 Int) (Start_21 Int) (StartBool_7 Bool))
  ((Start Int (3 0 2 (- Start) (+ Start_1 Start_2) (div Start_1 Start_2) (mod Start Start_1) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (false (not StartBool) (and StartBool StartBool_6) (or StartBool_3 StartBool_7) (< Start_1 Start_18) (<= Start_18 Start_19) (= Start_20 Start_8) (>= Start_7 Start_11)))
   (StartBool_8 Bool (false true (or StartBool_4 StartBool_1) (= Start_7 Start_7) (> Start_22 Start_18)))
   (Start_24 Int (x (* Start_3 Start_23)))
   (Start_22 Int (3 y 2 1 4 (+ Start_19 Start_10) (div Start_8 Start) (mod Start_23 Start_8) (abs Start_7) (ite StartBool_3 Start_24 Start_15)))
   (StartBool_6 Bool (true false (and StartBool_1 StartBool_8) (or StartBool_5 StartBool_1) (> Start_9 Start_11)))
   (Start_1 Int (3 x (- Start_2 Start_4) (+ Start_1 Start_8) (* Start_2 Start_7) (mod Start_4 Start_5) (ite StartBool_5 Start_2 Start_4)))
   (Start_23 Int (4 (- Start_20) (- Start_25 Start_4) (* Start_7 Start) (mod Start_13 Start_8) (abs Start_9)))
   (Start_12 Int (4 x (- Start_11 Start_6)))
   (Start_25 Int (3 5 2 (+ Start_10 Start_4) (div Start_14 Start_6) (mod Start_11 Start_15) (abs Start_22)))
   (Start_6 Int (0 x (- Start) (- Start_7 Start_5) (+ Start_1 Start_1) (* Start_2 Start) (div Start_7 Start_7) (ite StartBool_1 Start_6 Start_7)))
   (Start_4 Int (3 x 4 (- Start_5) (+ Start_1 Start_2) (div Start_5 Start_2) (mod Start_5 Start_4) (ite StartBool_2 Start_4 Start)))
   (StartBool_3 Bool (false (or StartBool_2 StartBool_4)))
   (Start_2 Int (y x 5 1 4 (- Start_1) (- Start_6 Start_1) (+ Start_3 Start_1) (* Start_2 Start_2) (div Start_3 Start_1)))
   (StartBool_4 Bool (false true (not StartBool_2) (or StartBool StartBool_2) (< Start_4 Start_2) (>= Start_1 Start_3)))
   (Start_3 Int (3 y (- Start) (+ Start_4 Start)))
   (Start_8 Int (1 (- Start_13) (- Start_5 Start_13) (+ Start_6 Start_12) (mod Start_11 Start_1) (ite StartBool_1 Start_4 Start_5)))
   (StartBool_5 Bool (true (not StartBool_1) (< Start_9 Start) (>= Start_5 Start_4) (> Start_5 Start_2)))
   (Start_17 Int (1 (- Start_14) (- Start Start_7) (+ Start_16 Start_18) (mod Start_9 Start_18) (abs Start_4)))
   (Start_7 Int (0 y (- Start_7) (mod Start_4 Start_1)))
   (Start_9 Int (x 2 (- Start_5) (+ Start_2 Start_3) (div Start_1 Start_4) (mod Start_9 Start_4) (abs Start_4) (ite StartBool_1 Start_2 Start_10)))
   (Start_10 Int (1 x y 0 3 (div Start_11 Start_12) (mod Start_8 Start_11)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool StartBool_1) (or StartBool_1 StartBool)))
   (Start_11 Int (x (- Start_9) (- Start_12 Start_5) (* Start_5 Start_10) (div Start_9 Start_10) (mod Start_12 Start_10) (ite StartBool_4 Start_11 Start_12)))
   (Start_19 Int (x 0 (- Start_2 Start_21) (div Start_20 Start_4) (mod Start_15 Start_9)))
   (Start_15 Int (5 0 2 1 x y 4 3 (- Start_7) (* Start_15 Start_5) (div Start Start_4) (mod Start_16 Start_4) (abs Start_3)))
   (StartBool_2 Bool (true (not StartBool_3) (and StartBool_2 StartBool) (<= Start_2 Start_3) (= Start_2 Start_2)))
   (Start_5 Int (2 (- Start_1) (- Start_1 Start_6) (abs Start) (ite StartBool Start_3 Start_7)))
   (Start_13 Int (2 3 (- Start Start_10) (+ Start_1 Start_7) (mod Start_7 Start_14) (abs Start_3)))
   (Start_14 Int (x (- Start_1 Start_1) (+ Start_3 Start_15) (* Start Start_7)))
   (Start_16 Int (4 3 (- Start_14 Start) (mod Start_6 Start_8) (abs Start) (ite StartBool_4 Start_2 Start_17)))
   (Start_18 Int (0 4 1 x 3 y 5 2 (* Start_5 Start_5) (div Start Start_7)))
   (Start_20 Int (1 y (- Start_7 Start_2) (div Start_12 Start_4) (abs Start_2)))
   (Start_21 Int (4 (- Start_5) (- Start_5 Start_7) (+ Start_14 Start_6) (* Start_7 Start_9) (ite StartBool_4 Start_12 Start)))
   (StartBool_7 Bool (true false (not StartBool_7) (and StartBool StartBool_7) (<= Start_7 Start_16) (>= Start_19 Start_16) (> Start_22 Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (abs (abs (* 2 (- 3 (div 2 x))))) y)))

(check-synth)
