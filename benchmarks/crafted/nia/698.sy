(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (StartBool_7 Bool) (Start_12 Int) (Start_17 Int) (Start_2 Int) (Start_16 Int) (Start_14 Int) (StartBool_4 Bool) (Start_13 Int) (StartBool_5 Bool) (Start_9 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_10 Int) (Start_11 Int) (Start_5 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_7 Int) (Start_3 Int) (Start_1 Int) (Start_8 Int) (Start_15 Int) (Start_6 Int) (Start_4 Int))
  ((Start Int (5 x 1 (- Start Start_1) (+ Start Start_2) (* Start Start) (div Start_3 Start_3) (abs Start_3) (ite StartBool_1 Start_3 Start)))
   (StartBool Bool (false true (and StartBool_7 StartBool) (>= Start_11 Start_1)))
   (Start_18 Int (4 0 3 (- Start_9) (- Start_4 Start_6) (* Start_2 Start_1) (div Start_15 Start_9) (ite StartBool_3 Start_15 Start_11)))
   (StartBool_7 Bool (true false (not StartBool_6) (and StartBool StartBool_4) (or StartBool_6 StartBool_2) (< Start_18 Start) (<= Start_18 Start_8) (= Start_10 Start_8)))
   (Start_12 Int (x (- Start_9) (- Start_9 Start_2) (+ Start_6 Start_17) (abs Start_1) (ite StartBool Start_3 Start_3)))
   (Start_17 Int (1 (- Start_17) (- Start_5 Start_15) (+ Start_8 Start_11) (abs Start_2) (ite StartBool_6 Start_6 Start_14)))
   (Start_2 Int (3 (- Start_7) (- Start_12 Start_3) (mod Start_13 Start_8) (ite StartBool_1 Start_3 Start_3)))
   (Start_16 Int (0 3 1 5 (+ Start_1 Start_11) (* Start_3 Start_12) (mod Start_2 Start_14) (abs Start_12)))
   (Start_14 Int (x 0 4 (- Start_10) (+ Start_15 Start_16) (mod Start Start_9)))
   (StartBool_4 Bool (true (or StartBool_1 StartBool_5) (<= Start_2 Start_12) (= Start_3 Start_14) (> Start_10 Start_11)))
   (Start_13 Int (5 x (+ Start_9 Start_3) (mod Start_8 Start_7)))
   (StartBool_5 Bool (false true (not StartBool) (or StartBool_4 StartBool_6) (<= Start Start_13) (> Start_3 Start_1)))
   (Start_9 Int (4 (- Start_9) (+ Start_2 Start_4) (div Start_1 Start_10) (mod Start_9 Start_2) (abs Start_7) (ite StartBool_1 Start_6 Start_3)))
   (StartBool_1 Bool (false (and StartBool StartBool) (< Start_2 Start_2) (= Start_4 Start_5)))
   (StartBool_6 Bool (true (not StartBool_4) (and StartBool_6 StartBool_3) (< Start_15 Start_16) (<= Start_11 Start_17)))
   (Start_10 Int (3 y (- Start_4) (- Start_9 Start_7) (+ Start_9 Start_1) (div Start_7 Start_8) (abs Start_9)))
   (Start_11 Int (x (- Start_4) (+ Start_5 Start) (mod Start_4 Start_11) (abs Start_6) (ite StartBool Start_2 Start)))
   (Start_5 Int (3 (- Start_3 Start_5) (+ Start_6 Start_1) (* Start_7 Start_1) (div Start_7 Start_5) (mod Start_7 Start_5) (ite StartBool_2 Start_3 Start_6)))
   (StartBool_3 Bool (true (not StartBool) (and StartBool_2 StartBool_1) (or StartBool_2 StartBool) (< Start_9 Start_9) (<= Start Start) (= Start_8 Start_7) (> Start_1 Start_8)))
   (StartBool_2 Bool (false (not StartBool) (< Start_6 Start_1) (<= Start Start_1) (>= Start_1 Start_3) (> Start_5 Start_1)))
   (Start_7 Int (x y (- Start_6) (+ Start_1 Start_2) (div Start_7 Start_7) (ite StartBool_3 Start_1 Start_8)))
   (Start_3 Int (y (- Start_12 Start_9) (* Start_3 Start_11) (abs Start_10) (ite StartBool_4 Start_13 Start_2)))
   (Start_1 Int (1 (- Start_13 Start_13) (+ Start_15 Start_2) (* Start_13 Start_14) (div Start_5 Start_10) (abs Start_4) (ite StartBool_6 Start_1 Start_1)))
   (Start_8 Int (5 3 (- Start_9 Start_7) (* Start_7 Start_8) (abs Start_1)))
   (Start_15 Int (0 (+ Start_6 Start_7) (abs Start_13) (ite StartBool_1 Start_11 Start_9)))
   (Start_6 Int (0 y x (- Start_8) (- Start_11 Start_2) (+ Start_9 Start_9) (mod Start_5 Start_8) (abs Start_1) (ite StartBool_2 Start_10 Start_6)))
   (Start_4 Int (x (- Start_11) (+ Start_2 Start_8) (div Start_1 Start) (mod Start_5 Start) (abs Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (- (div 4 0) 1))))

(check-synth)
