(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_9 Int) (StartBool_2 Bool) (Start_6 Int) (Start_5 Int) (Start_7 Int) (Start_16 Int) (StartBool_1 Bool) (Start_8 Int) (StartBool_6 Bool) (Start_22 Int) (Start_3 Int) (Start_1 Int) (Start_17 Int) (Start_10 Int) (Start_4 Int) (Start_2 Int) (StartBool_4 Bool) (StartBool_7 Bool) (Start_12 Int) (StartBool_5 Bool) (StartBool_3 Bool) (Start_18 Int) (Start_15 Int) (Start_14 Int) (Start_11 Int) (Start_20 Int) (Start_19 Int) (Start_13 Int) (Start_21 Int))
  ((Start Int (4 (- Start_1 Start) (abs Start_2)))
   (StartBool Bool (true false (not StartBool_6) (and StartBool_3 StartBool_1) (<= Start_15 Start_2)))
   (Start_9 Int (1 (- Start_9) (mod Start_2 Start_9)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_3) (<= Start_2 Start) (> Start_5 Start_6)))
   (Start_6 Int (y x (+ Start Start_3) (* Start Start_6) (ite StartBool_3 Start_1 Start_1)))
   (Start_5 Int (3 (- Start) (- Start_5 Start_5) (+ Start_6 Start_5) (mod Start_4 Start_7) (abs Start_6)))
   (Start_7 Int (5 x (- Start_1 Start_4) (div Start_1 Start_8) (mod Start_1 Start_8) (abs Start_6) (ite StartBool Start_1 Start_9)))
   (Start_16 Int (5 4 0 (* Start_2 Start_7) (div Start_17 Start_11) (mod Start_9 Start_4)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool StartBool_2) (< Start_4 Start_6) (= Start_3 Start_3) (>= Start_1 Start_4)))
   (Start_8 Int (1 0 (- Start_10 Start_3) (div Start_10 Start_8) (mod Start Start_8)))
   (StartBool_6 Bool (true false (not StartBool_4) (and StartBool_1 StartBool_6) (< Start_4 Start_7) (<= Start_7 Start_16) (>= Start_7 Start_3)))
   (Start_22 Int (x (* Start_8 Start_5) (mod Start_15 Start_4) (abs Start_16)))
   (Start_3 Int (5 4 2 (- Start_1) (+ Start_4 Start_4) (div Start_4 Start_5) (mod Start_3 Start) (ite StartBool_1 Start_2 Start_5)))
   (Start_1 Int (4 (- Start_2) (- Start_3 Start_3) (* Start_3 Start_3) (abs Start_2) (ite StartBool Start Start_1)))
   (Start_17 Int (4 (- Start_11) (+ Start_11 Start_4) (* Start_17 Start_12) (div Start_5 Start_11) (mod Start_8 Start_3)))
   (Start_10 Int (4 2 0 (- Start_3 Start_3) (div Start_4 Start_4) (ite StartBool_4 Start_3 Start_4)))
   (Start_4 Int (3 5 (- Start_16 Start_20) (+ Start_1 Start_8) (mod Start_18 Start_8) (abs Start_15)))
   (Start_2 Int (x (- Start_1 Start) (+ Start_1 Start_2) (* Start_1 Start_1) (div Start_2 Start_2)))
   (StartBool_4 Bool (true (<= Start_7 Start_11) (= Start_6 Start_12) (> Start_10 Start_7)))
   (StartBool_7 Bool (false true (not StartBool_1) (and StartBool_7 StartBool_5) (< Start_3 Start_3) (<= Start_4 Start_18)))
   (Start_12 Int (3 x 5 (- Start) (* Start_3 Start_7) (mod Start_13 Start_14) (abs Start_8)))
   (StartBool_5 Bool (true (not StartBool_6) (and StartBool_3 StartBool_7) (> Start_16 Start_14)))
   (StartBool_3 Bool (true (or StartBool_3 StartBool_3) (>= Start_5 Start_3)))
   (Start_18 Int (1 0 4 5 3 (- Start_14 Start_12) (div Start_1 Start_14) (mod Start_13 Start_12) (ite StartBool_6 Start_11 Start_12)))
   (Start_15 Int (5 x 4 3 y (- Start_13 Start_8) (+ Start_17 Start_12) (* Start_7 Start_5) (mod Start_19 Start_17) (abs Start_20) (ite StartBool_7 Start_16 Start_12)))
   (Start_14 Int (5 (- Start_15) (- Start_2 Start_9) (+ Start_8 Start) (* Start_13 Start_10) (abs Start_10) (ite StartBool_5 Start_14 Start_11)))
   (Start_11 Int (3 (- Start_3) (- Start_17 Start_5) (+ Start_22 Start_16) (* Start_18 Start_19) (div Start_11 Start_14)))
   (Start_20 Int (4 x 3 (- Start_3) (+ Start_10 Start) (* Start_9 Start_14) (abs Start_20)))
   (Start_19 Int (1 2 (div Start_16 Start_9) (ite StartBool_4 Start_2 Start_10)))
   (Start_13 Int (x (- Start_2) (+ Start_21 Start_8) (* Start_18 Start_18) (div Start_15 Start_21) (ite StartBool_1 Start Start_11)))
   (Start_21 Int (y (+ Start_16 Start_17) (* Start_1 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (div 1 (abs y)) y)))

(check-synth)
