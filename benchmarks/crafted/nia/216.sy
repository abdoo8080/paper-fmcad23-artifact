(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (StartBool_5 Bool) (Start_2 Int) (Start_4 Int) (StartBool_4 Bool) (Start_13 Int) (StartBool_1 Bool) (StartBool_3 Bool) (Start_1 Int) (Start_8 Int) (Start_7 Int) (Start_10 Int) (Start_14 Int) (Start_5 Int) (Start_11 Int) (Start_6 Int) (Start_9 Int) (Start_12 Int) (Start_3 Int) (StartBool_2 Bool))
  ((Start Int (3 (- Start) (* Start Start) (mod Start_1 Start_1) (abs Start)))
   (StartBool Bool (true false (and StartBool_4 StartBool_4) (or StartBool_5 StartBool_1)))
   (Start_15 Int (1 (- Start_1 Start_5) (+ Start_12 Start) (div Start_8 Start) (mod Start_10 Start_4) (abs Start_6)))
   (StartBool_5 Bool (false (not StartBool_5) (< Start_3 Start_14) (<= Start_7 Start_15) (> Start_13 Start_5)))
   (Start_2 Int (2 (- Start_13) (+ Start_8 Start_9) (div Start Start_14) (mod Start_6 Start_10)))
   (Start_4 Int (2 y 5 (- Start_2) (- Start_9 Start_4) (+ Start_11 Start_7) (mod Start_13 Start_10) (abs Start_12) (ite StartBool Start_10 Start_11)))
   (StartBool_4 Bool (false (or StartBool StartBool_1) (>= Start_12 Start)))
   (Start_13 Int (4 0 (- Start_3) (- Start Start_6) (+ Start_4 Start_11) (* Start_9 Start_13) (mod Start_3 Start_2) (abs Start_7) (ite StartBool_4 Start_3 Start_6)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_1 StartBool) (or StartBool StartBool) (< Start_3 Start_2) (<= Start_1 Start_3) (= Start_1 Start_3) (>= Start_3 Start_3)))
   (StartBool_3 Bool (false (or StartBool_2 StartBool_2) (<= Start_1 Start_11) (= Start_5 Start_7) (>= Start_2 Start_4)))
   (Start_1 Int (y 1 0 (- Start_2) (* Start_1 Start) (div Start_2 Start_3) (ite StartBool_1 Start_2 Start_1)))
   (Start_8 Int (4 2 x (+ Start Start_6) (* Start_1 Start_5) (div Start_5 Start) (mod Start_2 Start_4) (ite StartBool_1 Start_1 Start_3)))
   (Start_7 Int (2 4 5 1 y (- Start) (+ Start_3 Start_4) (div Start_9 Start_10) (abs Start_8)))
   (Start_10 Int (5 3 2 0 x y (- Start_10) (- Start_2 Start) (* Start_9 Start_6) (div Start_11 Start_9) (mod Start_7 Start_8) (abs Start_1)))
   (Start_14 Int (0 (- Start_9) (- Start_8 Start_13) (mod Start_2 Start_14) (abs Start_10)))
   (Start_5 Int (5 3 (- Start_11) (* Start Start_7) (mod Start_10 Start_8) (ite StartBool_2 Start_2 Start_8)))
   (Start_11 Int (5 (- Start_3 Start_6) (abs Start)))
   (Start_6 Int (2 y 1 (- Start_3) (- Start_7 Start_6) (+ Start_3 Start_6) (div Start_6 Start_2) (mod Start_8 Start_6)))
   (Start_9 Int (4 (- Start_12) (ite StartBool Start_2 Start_12)))
   (Start_12 Int (4 (* Start_11 Start_1) (mod Start_6 Start_3) (abs Start) (ite StartBool Start_5 Start_11)))
   (Start_3 Int (5 (- Start) (+ Start_4 Start_4) (* Start_2 Start_3) (div Start_5 Start_6) (abs Start) (ite StartBool Start_4 Start_3)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_3) (or StartBool StartBool) (< Start_13 Start_10) (= Start_3 Start_12) (>= Start_11 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (< 5 y) 5 1)))

(check-synth)
