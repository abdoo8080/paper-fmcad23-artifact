(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (StartBool_5 Bool) (Start_12 Int) (Start_1 Int) (Start_2 Int) (Start_5 Int) (Start_11 Int) (StartBool_2 Bool) (Start_7 Int) (Start_13 Int) (Start_3 Int) (StartBool_3 Bool) (Start_10 Int) (Start_6 Int) (Start_8 Int) (StartBool_6 Bool) (Start_15 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_4 Int) (Start_9 Int))
  ((Start Int (5 x (- Start_1) (- Start_2 Start_1) (+ Start_2 Start_3) (* Start_3 Start) (div Start_3 Start_2) (ite StartBool_1 Start Start)))
   (StartBool Bool (true (and StartBool_4 StartBool_2) (or StartBool_1 StartBool_5) (<= Start_11 Start_14) (= Start_9 Start_10)))
   (Start_14 Int (x (- Start_7 Start_5) (+ Start_2 Start_9) (div Start_5 Start_1) (abs Start_6) (ite StartBool Start Start_13)))
   (StartBool_5 Bool (false (not StartBool_6) (and StartBool_6 StartBool_4)))
   (Start_12 Int (3 (- Start_10 Start) (mod Start_13 Start_7)))
   (Start_1 Int (x 0 2 3 (+ Start_12 Start_10) (* Start_6 Start_11) (div Start_1 Start_6)))
   (Start_2 Int (4 (* Start_2 Start_10)))
   (Start_5 Int (4 (- Start_3) (- Start_7 Start_2) (div Start_7 Start_8) (ite StartBool_3 Start Start)))
   (Start_11 Int (0 y (- Start_6) (+ Start_10 Start_5) (* Start_3 Start_9) (mod Start_5 Start_6) (ite StartBool_2 Start_7 Start_2)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool_3) (< Start_2 Start_3) (<= Start Start_3)))
   (Start_7 Int (x 1 (* Start_2 Start_4) (abs Start_5) (ite StartBool_4 Start_6 Start_5)))
   (Start_13 Int (3 (- Start Start_14) (+ Start_6 Start_11) (div Start_15 Start_9) (mod Start_7 Start_9) (abs Start_7) (ite StartBool_3 Start Start)))
   (Start_3 Int (5 1 3 (- Start) (+ Start_1 Start_10) (div Start_2 Start_3) (mod Start_7 Start_2) (abs Start_7) (ite StartBool_3 Start_2 Start_10)))
   (StartBool_3 Bool (false true (not StartBool_1) (and StartBool_1 StartBool_3) (< Start_4 Start_1) (= Start_1 Start_5) (>= Start_1 Start_6) (> Start_5 Start_1)))
   (Start_10 Int (y (- Start_1) (- Start_11 Start_7) (+ Start_10 Start_10) (mod Start_11 Start_2) (abs Start) (ite StartBool Start_3 Start_5)))
   (Start_6 Int (x 3 2 (- Start_6) (- Start_6 Start_4) (+ Start_2 Start_1) (div Start_1 Start_3) (abs Start)))
   (Start_8 Int (2 (- Start_6) (+ Start_3 Start_5) (ite StartBool_2 Start_1 Start_2)))
   (StartBool_6 Bool (true (not StartBool_3) (<= Start_12 Start_3) (= Start_9 Start_10) (>= Start_14 Start_11)))
   (Start_15 Int (0 5 1 (- Start_6) (- Start_5 Start_2) (abs Start_2)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_2 StartBool_2) (<= Start_2 Start_2) (= Start_2 Start_1) (>= Start Start_2) (> Start_3 Start)))
   (StartBool_4 Bool (true (not StartBool) (and StartBool StartBool_1) (or StartBool_4 StartBool_1) (< Start_8 Start_2) (<= Start_4 Start_4) (> Start Start_6)))
   (Start_4 Int (3 (- Start) (- Start_4 Start_3) (div Start_5 Start_5) (abs Start_9)))
   (Start_9 Int (5 (- Start_9) (- Start_8 Start_7) (+ Start_2 Start_3) (div Start_3 Start_1) (mod Start_2 Start) (abs Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (mod 3 y) 4)))

(check-synth)
