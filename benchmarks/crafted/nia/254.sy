(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_6 Int) (StartBool_3 Bool) (Start_2 Int) (Start_10 Int) (Start_9 Int) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_20 Int) (Start_14 Int) (Start_22 Int) (Start_7 Int) (Start_8 Int) (Start_24 Int) (Start_21 Int) (Start_3 Int) (Start_16 Int) (StartBool_6 Bool) (Start_12 Int) (Start_17 Int) (Start_18 Int) (Start_11 Int) (Start_4 Int) (Start_15 Int) (Start_19 Int) (StartBool_7 Bool) (StartBool_5 Bool) (Start_23 Int) (Start_5 Int) (Start_13 Int))
  ((Start Int (y x (+ Start_1 Start_2) (div Start_2 Start_2) (abs Start_2)))
   (StartBool Bool (false true (not StartBool_3) (< Start_10 Start_12) (<= Start_16 Start_24)))
   (Start_1 Int (0 (- Start_9 Start_21) (mod Start_8 Start_1) (abs Start_3)))
   (Start_6 Int (2 x (- Start_11 Start_9) (+ Start_10 Start_10) (* Start_10 Start_3) (div Start_8 Start_7) (abs Start_10) (ite StartBool_2 Start_5 Start_8)))
   (StartBool_3 Bool (true (< Start Start_1) (<= Start Start) (>= Start_9 Start_6)))
   (Start_2 Int (3 2 x 5 1 0 (- Start_3) (* Start_3 Start_3) (div Start_3 Start_4) (abs Start_4)))
   (Start_10 Int (0 (* Start Start_6) (div Start_3 Start_5) (abs Start_2)))
   (Start_9 Int (y 3 (- Start) (- Start_5 Start_10) (abs Start)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool StartBool_2) (< Start_14 Start_9) (= Start_1 Start_8)))
   (StartBool_2 Bool (true (or StartBool StartBool_3) (< Start_7 Start) (= Start_8 Start_8)))
   (StartBool_1 Bool (false true (or StartBool_2 StartBool_1) (< Start_7 Start_1) (= Start_2 Start_6)))
   (Start_20 Int (0 x (- Start_7) (- Start Start) (mod Start_9 Start_6) (ite StartBool_7 Start_5 Start_8)))
   (Start_14 Int (1 2 (- Start_3) (- Start_4 Start_15) (mod Start_14 Start_3) (ite StartBool_4 Start_21 Start_6)))
   (Start_22 Int (4 3 0 (- Start_20) (- Start_18 Start_15) (abs Start_19) (ite StartBool Start_11 Start_23)))
   (Start_7 Int (3 0 (- Start_7) (+ Start_5 Start_4) (* Start_6 Start_6) (div Start_4 Start_3)))
   (Start_8 Int (1 3 (- Start_8 Start) (+ Start_7 Start_8) (div Start_2 Start) (abs Start_6) (ite StartBool Start_9 Start_1)))
   (Start_24 Int (4 (mod Start_24 Start) (abs Start_16) (ite StartBool_3 Start_10 Start_10)))
   (Start_21 Int (x (- Start_13) (+ Start_20 Start_21) (* Start_20 Start_5) (mod Start_20 Start_13) (ite StartBool_5 Start_16 Start_9)))
   (Start_3 Int (0 (- Start_20) (abs Start_11)))
   (Start_16 Int (x 4 (- Start_15) (- Start_5 Start_3) (+ Start_5 Start_11) (* Start_4 Start_7) (div Start_12 Start_3) (ite StartBool_5 Start_13 Start_1)))
   (StartBool_6 Bool (false true (< Start_16 Start_1) (>= Start_17 Start_1) (> Start_5 Start_15)))
   (Start_12 Int (5 2 1 (* Start_10 Start_16) (div Start_6 Start_6) (mod Start_18 Start_4) (abs Start_2) (ite StartBool_2 Start_3 Start_17)))
   (Start_17 Int (y (- Start_11) (- Start Start_2) (+ Start_15 Start_14) (mod Start_6 Start_18) (abs Start_15) (ite StartBool_1 Start_7 Start_15)))
   (Start_18 Int (5 (- Start_9) (div Start_6 Start_2) (abs Start_14) (ite StartBool_5 Start_16 Start_4)))
   (Start_11 Int (x (- Start_8) (+ Start_3 Start_4) (div Start_8 Start_12) (mod Start_13 Start_14) (abs Start_15) (ite StartBool_4 Start_6 Start_7)))
   (Start_4 Int (y 4 5 (- Start_1) (- Start_1 Start_1) (+ Start_1 Start_2) (mod Start_2 Start_5) (abs Start_6) (ite StartBool_1 Start_6 Start_7)))
   (Start_15 Int (5 1 (- Start_10) (- Start_16 Start_15) (+ Start_7 Start_3) (abs Start_11) (ite StartBool_4 Start_9 Start_19)))
   (Start_19 Int (2 (- Start_20) (- Start_8 Start_12) (+ Start_20 Start_16) (* Start_4 Start_7) (mod Start_7 Start_6) (ite StartBool_6 Start_17 Start_9)))
   (StartBool_7 Bool (false true (not StartBool) (and StartBool_2 StartBool_7) (< Start_20 Start_15) (> Start_4 Start_7)))
   (StartBool_5 Bool (true (or StartBool_6 StartBool_4) (< Start_14 Start_16) (<= Start_1 Start_3) (>= Start_5 Start_14)))
   (Start_23 Int (x (div Start_20 Start_14) (mod Start_21 Start_6)))
   (Start_5 Int (5 y (- Start_18) (- Start_22 Start_15) (+ Start_23 Start) (* Start_7 Start_4) (ite StartBool_5 Start_16 Start_11)))
   (Start_13 Int (5 (- Start_12) (+ Start_14 Start_7) (div Start_17 Start_22) (abs Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 0 (* 2 y))))

(check-synth)
