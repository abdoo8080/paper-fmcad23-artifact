(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_3 Int) (StartBool_2 Bool) (Start_4 Int) (Start_8 Int) (Start_19 Int) (Start_10 Int) (Start_13 Int) (Start_20 Int) (StartBool_3 Bool) (Start_21 Int) (Start_2 Int) (Start_17 Int) (Start_11 Int) (Start_7 Int) (StartBool_1 Bool) (Start_15 Int) (Start_18 Int) (Start_16 Int) (Start_5 Int) (Start_9 Int) (Start_6 Int) (Start_14 Int) (Start_12 Int))
  ((Start Int (x 4 (- Start) (- Start_1 Start_1) (+ Start Start_2) (* Start_2 Start_2)))
   (StartBool Bool (true false (= Start_10 Start_2) (>= Start_20 Start_8) (> Start_6 Start)))
   (Start_1 Int (0 (- Start_11) (- Start_20 Start_1) (div Start_9 Start_15) (mod Start_19 Start_13) (abs Start_5)))
   (Start_3 Int (5 (+ Start_5 Start_9) (div Start_19 Start_6) (mod Start_8 Start_12) (abs Start_9) (ite StartBool_3 Start_2 Start_12)))
   (StartBool_2 Bool (true false (not StartBool_3) (or StartBool_1 StartBool_2) (= Start_1 Start_17) (> Start_12 Start_14)))
   (Start_4 Int (y (mod Start_9 Start_3) (abs Start_4)))
   (Start_8 Int (1 0 (- Start_18 Start_7) (+ Start_5 Start_10) (div Start_8 Start_13) (abs Start_2) (ite StartBool_1 Start_10 Start_1)))
   (Start_19 Int (5 (- Start_9) (- Start_3 Start_15) (* Start_9 Start_7) (abs Start_6)))
   (Start_10 Int (4 5 3 2 0 (- Start_11) (- Start Start_4) (+ Start_5 Start_5) (mod Start_12 Start_4) (abs Start_10) (ite StartBool_2 Start_12 Start_13)))
   (Start_13 Int (2 0 5 (- Start Start_1) (mod Start_14 Start_5)))
   (Start_20 Int (0 y 5 (- Start_17) (+ Start_21 Start_7) (* Start_14 Start_18)))
   (StartBool_3 Bool (false true (< Start Start_7) (<= Start_2 Start_2) (> Start_15 Start_12)))
   (Start_21 Int (0 1 (* Start_7 Start_10) (div Start_15 Start_4) (mod Start_2 Start_5) (abs Start_7)))
   (Start_2 Int (2 4 5 y 1 x 3 (- Start_1) (* Start_2 Start_3) (mod Start_1 Start_3) (abs Start) (ite StartBool_1 Start_3 Start)))
   (Start_17 Int (0 (+ Start Start_3) (mod Start_11 Start_15)))
   (Start_11 Int (2 3 (+ Start_17 Start_5) (* Start_4 Start_12) (div Start_14 Start_3) (mod Start_11 Start_11)))
   (Start_7 Int (x 1 4 y))
   (StartBool_1 Bool (false true (not StartBool_1) (or StartBool_2 StartBool) (>= Start_1 Start_4) (> Start_5 Start)))
   (Start_15 Int (5 2 (- Start_6 Start_5) (+ Start_14 Start_12) (* Start_3 Start_13)))
   (Start_18 Int (5 (- Start_16 Start) (+ Start_1 Start_11) (* Start Start_2) (div Start_14 Start_11) (mod Start_3 Start_16) (ite StartBool_2 Start_1 Start_11)))
   (Start_16 Int (0 (- Start) (- Start_5 Start) (div Start_15 Start_16)))
   (Start_5 Int (0 (- Start_6 Start_5) (+ Start_4 Start) (div Start_5 Start_7) (mod Start_4 Start_4)))
   (Start_9 Int (5 (- Start_9) (- Start_9 Start_5) (div Start_4 Start) (mod Start_3 Start_10) (abs Start_7)))
   (Start_6 Int (y 3 (- Start_7) (+ Start_5 Start_8) (* Start_2 Start_5) (div Start_9 Start_2)))
   (Start_14 Int (1 (+ Start_3 Start_9) (* Start_10 Start_6) (div Start_9 Start_3) (ite StartBool_3 Start_11 Start_7)))
   (Start_12 Int (5 2 (- Start_5) (+ Start_7 Start_1) (* Start_16 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- 0 (* 3 5))))

(check-synth)
