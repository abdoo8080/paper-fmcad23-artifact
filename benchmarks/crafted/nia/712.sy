(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_23 Int) (Start_22 Int) (Start_19 Int) (Start_11 Int) (Start_2 Int) (StartBool_2 Bool) (Start_13 Int) (Start_7 Int) (Start_24 Int) (Start_10 Int) (Start_18 Int) (Start_12 Int) (Start_8 Int) (Start_21 Int) (StartBool_8 Bool) (Start_9 Int) (StartBool_1 Bool) (Start_5 Int) (Start_3 Int) (Start_4 Int) (Start_17 Int) (Start_14 Int) (Start_20 Int) (Start_15 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_6 Int) (Start_16 Int) (StartBool_6 Bool) (StartBool_3 Bool) (Start_1 Int) (StartBool_7 Bool) (StartBool_9 Bool))
  ((Start Int (2 1 y x 0 5 (- Start_1 Start_2) (* Start_2 Start_1) (mod Start_3 Start_1) (abs Start_3)))
   (StartBool Bool (true false (not StartBool_9) (or StartBool_4 StartBool) (< Start_21 Start_14) (<= Start_3 Start_2) (>= Start_23 Start) (> Start_4 Start_14)))
   (Start_23 Int (x (- Start_13 Start_17) (+ Start_15 Start_2) (* Start_24 Start_23) (div Start_3 Start_8) (abs Start)))
   (Start_22 Int (5 0 (- Start_23 Start_19) (+ Start_5 Start_8) (abs Start_5)))
   (Start_19 Int (2 4 5 y x 0 1 3 (- Start_17) (+ Start_2 Start_21) (mod Start_18 Start_13) (ite StartBool_5 Start_2 Start_15)))
   (Start_11 Int (1 (- Start_11) (* Start_7 Start_2) (div Start_5 Start_8) (ite StartBool Start_11 Start_12)))
   (Start_2 Int (4 (mod Start_14 Start_8) (abs Start_17)))
   (StartBool_2 Bool (false true (not StartBool) (and StartBool_3 StartBool_4) (> Start_3 Start_10)))
   (Start_13 Int (3 (- Start_1) (+ Start_5 Start_11) (* Start_7 Start_6) (div Start_6 Start_11) (mod Start_11 Start_14) (ite StartBool_2 Start_2 Start_1)))
   (Start_7 Int (x 0 4 2 5 y (- Start_5 Start_4) (div Start_1 Start_1) (abs Start) (ite StartBool_1 Start_8 Start_5)))
   (Start_24 Int (0 (- Start_2 Start_14) (+ Start_6 Start_9) (div Start_4 Start_18) (mod Start_6 Start_14) (abs Start_24) (ite StartBool_3 Start_20 Start_18)))
   (Start_10 Int (2 (- Start_11) (- Start_10 Start_5) (+ Start_5 Start_6) (div Start_9 Start_5)))
   (Start_18 Int (1 0 y (- Start_14) (- Start Start_16) (+ Start_10 Start_7) (div Start_12 Start_9) (mod Start_7 Start_15) (abs Start_5)))
   (Start_12 Int (4 (- Start) (- Start_6 Start_5) (* Start_3 Start_4) (div Start_13 Start_5) (mod Start_4 Start_13) (abs Start_2) (ite StartBool Start_13 Start_9)))
   (Start_8 Int (5 2 1 0 (- Start_3) (+ Start Start_3) (mod Start_2 Start_6) (abs Start_9)))
   (Start_21 Int (4 2 x (- Start_9) (* Start_9 Start_4) (div Start_10 Start_15) (mod Start_13 Start_10)))
   (StartBool_8 Bool (true (< Start_8 Start_10) (> Start_10 Start_22)))
   (Start_9 Int (3 4 (div Start_3 Start_7) (mod Start_4 Start_6) (abs Start_9)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_1) (<= Start_3 Start_4) (= Start Start_7) (>= Start_8 Start_6) (> Start_9 Start_3)))
   (Start_5 Int (3 4 (- Start_3) (+ Start_4 Start_6) (* Start_3 Start) (abs Start_3)))
   (Start_3 Int (0 (- Start_1) (+ Start_2 Start_3) (div Start_2 Start) (mod Start Start_1) (abs Start_4) (ite StartBool_1 Start_5 Start_1)))
   (Start_4 Int (1 2 4 (- Start_4) (- Start_1 Start_13) (* Start_14 Start) (div Start_14 Start_18) (mod Start_16 Start_2) (abs Start)))
   (Start_17 Int (y 4 x (- Start_12 Start_17) (abs Start_3) (ite StartBool_6 Start Start_2)))
   (Start_14 Int (2 (- Start_2 Start_10) (+ Start_10 Start) (* Start_1 Start_14) (div Start_9 Start_3) (mod Start_2 Start_10) (ite StartBool_1 Start_15 Start_4)))
   (Start_20 Int (0 y 3 x (* Start_19 Start_20) (abs Start_11) (ite StartBool_9 Start_19 Start_13)))
   (Start_15 Int (2 1 (- Start_13 Start_1) (div Start_9 Start_8) (mod Start_14 Start_13)))
   (StartBool_4 Bool (true (and StartBool StartBool_5) (<= Start Start_14) (>= Start_10 Start_5)))
   (StartBool_5 Bool (false true (and StartBool_3 StartBool_5) (= Start_3 Start_2) (> Start_12 Start_16)))
   (Start_6 Int (4 (- Start_1 Start_4) (+ Start_2 Start_7) (mod Start_8 Start_7)))
   (Start_16 Int (y 2 (- Start_9) (- Start_10 Start_6) (* Start_14 Start_17) (abs Start_13)))
   (StartBool_6 Bool (false true (= Start_6 Start_18) (>= Start Start_2)))
   (StartBool_3 Bool (false true (and StartBool_4 StartBool_4) (> Start_10 Start_8)))
   (Start_1 Int (x 3 (- Start_16 Start_9) (div Start_18 Start) (abs Start_9) (ite StartBool_7 Start_11 Start_15)))
   (StartBool_7 Bool (true false (not StartBool_2) (and StartBool_5 StartBool_8) (< Start_5 Start_6) (= Start_19 Start_6) (>= Start_13 Start_3) (> Start_4 Start_20)))
   (StartBool_9 Bool (true false (not StartBool) (>= Start_12 Start_11) (> Start_11 Start_21)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (div 0 y) 1)))

(check-synth)
