(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (Start_10 Int) (Start_8 Int) (Start_3 Int) (StartBool_1 Bool) (Start_4 Int) (StartBool_3 Bool) (Start_15 Int) (Start_7 Int) (Start_1 Int) (Start_2 Int) (StartBool_5 Bool) (Start_9 Int) (Start_6 Int) (Start_21 Int) (StartBool_2 Bool) (Start_14 Int) (StartBool_6 Bool) (Start_5 Int) (Start_11 Int) (Start_12 Int) (StartBool_4 Bool) (Start_16 Int) (Start_17 Int) (Start_22 Int) (Start_13 Int) (Start_19 Int) (Start_18 Int) (Start_20 Int))
  ((Start Int (3 0 y (- Start_1) (div Start Start_2) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true false (not StartBool_4) (and StartBool_6 StartBool_6) (or StartBool_6 StartBool_7) (< Start_19 Start_12) (<= Start_9 Start_18) (>= Start_7 Start_5)))
   (StartBool_7 Bool (true false (not StartBool_4) (or StartBool_7 StartBool_2) (< Start_22 Start) (> Start_4 Start_7)))
   (Start_10 Int (1 (+ Start_3 Start_11) (* Start Start_6) (mod Start_2 Start_7)))
   (Start_8 Int (4 2 (- Start_3) (- Start_3 Start_3) (+ Start_6 Start_5) (* Start_1 Start_13) (mod Start Start_1) (abs Start) (ite StartBool_3 Start_2 Start_7)))
   (Start_3 Int (5 (- Start_1) (- Start_5 Start_5) (+ Start_6 Start_5) (div Start_4 Start) (mod Start_3 Start_6) (abs Start)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool_1 StartBool) (> Start_2 Start_1)))
   (Start_4 Int (5 y 2 (- Start_4) (- Start Start_1) (* Start_3 Start_2) (div Start_3 Start_3) (mod Start_2 Start_4)))
   (StartBool_3 Bool (false (not StartBool_1) (and StartBool_3 StartBool) (or StartBool_2 StartBool_3) (< Start_4 Start_2) (<= Start_10 Start_6) (> Start_1 Start_14)))
   (Start_15 Int (y (- Start_8) (- Start_17 Start_8) (+ Start_18 Start_5) (mod Start_14 Start_10) (ite StartBool_3 Start_19 Start_19)))
   (Start_7 Int (y 5 0 (+ Start_7 Start_6) (* Start_7 Start_1) (div Start_3 Start_3) (mod Start_3 Start_8) (abs Start_1) (ite StartBool_2 Start Start_9)))
   (Start_1 Int (4 x 2 y 1 0 5 3 (div Start_2 Start_3) (abs Start_4)))
   (Start_2 Int (1 x (+ Start_1 Start_2)))
   (StartBool_5 Bool (true false (not StartBool_6) (and StartBool_1 StartBool_5) (or StartBool_6 StartBool_5) (<= Start_5 Start_14) (> Start_15 Start_7)))
   (Start_9 Int (5 4 1 0 3 2 (- Start_1) (- Start_2 Start_2) (+ Start_2 Start_10) (* Start_8 Start_10) (mod Start_11 Start_4) (abs Start)))
   (Start_6 Int (y (- Start_2 Start_5) (+ Start_3 Start_3) (* Start_4 Start_4) (mod Start_2 Start_7) (abs Start_6)))
   (Start_21 Int (1 4 x y 3 (- Start_12) (- Start_2 Start_16) (+ Start Start_16) (* Start_5 Start) (div Start_6 Start_16) (mod Start_9 Start_11)))
   (StartBool_2 Bool (true (not StartBool_1) (< Start_12 Start_6) (<= Start_1 Start_8) (>= Start_3 Start_11) (> Start_1 Start_13)))
   (Start_14 Int (5 (- Start_6) (div Start_12 Start_13) (mod Start_10 Start_4)))
   (StartBool_6 Bool (true (not StartBool) (or StartBool_4 StartBool) (< Start_13 Start_12) (>= Start_13 Start_4)))
   (Start_5 Int (y (+ Start_1 Start_1) (* Start_11 Start_4) (div Start_10 Start_13) (mod Start_15 Start_12) (ite StartBool_4 Start_4 Start_11)))
   (Start_11 Int (y 4 (- Start_10 Start_11) (div Start_6 Start_6) (mod Start Start_5) (abs Start_2) (ite StartBool_1 Start_2 Start_7)))
   (Start_12 Int (0 y (- Start_6) (* Start_9 Start_9) (mod Start_2 Start_9) (ite StartBool Start Start_12)))
   (StartBool_4 Bool (false (and StartBool_5 StartBool_3) (< Start_8 Start_7) (<= Start_1 Start_15) (>= Start_8 Start_16)))
   (Start_16 Int (x y (- Start_11) (+ Start_11 Start_1) (* Start_13 Start) (mod Start_9 Start_7) (ite StartBool_5 Start_15 Start_2)))
   (Start_17 Int (3 (- Start_2 Start_14) (+ Start_18 Start_21) (div Start_2 Start_13) (mod Start_16 Start_13) (abs Start_1)))
   (Start_22 Int (x 3 2 (- Start_6) (abs Start_3)))
   (Start_13 Int (2 (- Start_6) (- Start_14 Start_7) (mod Start_10 Start_4) (abs Start_4)))
   (Start_19 Int (4 (- Start_3) (+ Start_18 Start_18) (abs Start_17)))
   (Start_18 Int (4 1 2 (- Start_14 Start_20) (* Start_17 Start_8) (div Start_17 Start_7)))
   (Start_20 Int (1 (- Start_14 Start_21) (+ Start_2 Start_20) (* Start_15 Start_17) (div Start_17 Start_7) (mod Start_13 Start_8) (ite StartBool_3 Start_20 Start_21)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- (- (+ 4 4)) 5))))

(check-synth)
