(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (StartBool_7 Bool) (Start_9 Int) (Start_7 Int) (Start_13 Int) (StartBool_10 Bool) (StartBool_5 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_18 Int) (Start_11 Int) (Start_8 Int) (Start_5 Int) (StartBool_6 Bool) (Start_6 Int) (Start_3 Int) (StartBool_4 Bool) (Start_4 Int) (Start_12 Int) (Start_2 Int) (Start_10 Int) (Start_1 Int) (StartBool_8 Bool) (StartBool_9 Bool) (Start_14 Int) (Start_15 Int) (Start_16 Int) (Start_17 Int))
  ((Start Int (2 (- Start Start_1) (div Start Start) (mod Start Start) (abs Start_1) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (true false (and StartBool_9 StartBool_7) (or StartBool_10 StartBool_1) (<= Start Start_8) (> Start_13 Start_2)))
   (StartBool_3 Bool (false (or StartBool_3 StartBool_3) (= Start_1 Start_1) (>= Start_4 Start_8)))
   (StartBool_7 Bool (true false (or StartBool_1 StartBool_6) (< Start_4 Start_7) (<= Start_2 Start_2) (= Start_3 Start_5) (> Start_7 Start_4)))
   (Start_9 Int (0 (- Start_9) (- Start_5 Start_5) (* Start_6 Start_3) (ite StartBool_2 Start_8 Start)))
   (Start_7 Int (1 (- Start) (- Start_3 Start_4) (+ Start_2 Start_1) (* Start_8 Start_6) (abs Start_6)))
   (Start_13 Int (2 1 0 (+ Start_4 Start_12)))
   (StartBool_10 Bool (false true (or StartBool_4 StartBool_7) (< Start_8 Start_12) (<= Start_9 Start_4)))
   (StartBool_5 Bool (true false (and StartBool_1 StartBool_6) (or StartBool_7 StartBool_2) (< Start_8 Start_4)))
   (StartBool_2 Bool (true (and StartBool_3 StartBool_4) (or StartBool_3 StartBool_2) (> Start_4 Start_8)))
   (StartBool_1 Bool (false (not StartBool_7) (< Start_5 Start_5) (<= Start_5 Start_7) (= Start_9 Start_8) (>= Start_6 Start_4)))
   (Start_18 Int (x (- Start_1) (+ Start_4 Start_6) (mod Start_12 Start_13) (abs Start_2) (ite StartBool_3 Start_6 Start_8)))
   (Start_11 Int (2 (- Start_3) (div Start_3 Start_12) (mod Start_3 Start_5) (ite StartBool_5 Start_11 Start_8)))
   (Start_8 Int (2 (- Start_2) (abs Start_1)))
   (Start_5 Int (0 4 5 (* Start_6 Start_7) (abs Start)))
   (StartBool_6 Bool (false (or StartBool_5 StartBool_7) (>= Start_3 Start_8)))
   (Start_6 Int (2 1 x (- Start_7) (- Start_2 Start_5) (div Start_5 Start_8) (abs Start_5) (ite StartBool_2 Start_5 Start_8)))
   (Start_3 Int (y (- Start) (- Start_1 Start) (div Start Start) (ite StartBool_1 Start_4 Start_4)))
   (StartBool_4 Bool (false (or StartBool StartBool_5) (<= Start_3 Start_8) (= Start_5 Start_8) (>= Start_3 Start_5) (> Start_7 Start_4)))
   (Start_4 Int (2 (- Start_3) (+ Start_4 Start_3) (div Start_2 Start_4) (abs Start_3) (ite StartBool_2 Start_2 Start_5)))
   (Start_12 Int (2 (+ Start_4 Start_5) (div Start_10 Start) (abs Start_5) (ite StartBool Start_5 Start_2)))
   (Start_2 Int (3 1 5 0 4 (- Start_10) (* Start_11 Start_12) (div Start_3 Start_3) (ite StartBool_2 Start_5 Start_9)))
   (Start_10 Int (4 (mod Start_13 Start_3) (ite StartBool_7 Start Start_10)))
   (Start_1 Int (5 (- Start_13 Start_2) (+ Start_9 Start_1) (mod Start_12 Start_9) (abs Start_7) (ite StartBool_8 Start_6 Start_8)))
   (StartBool_8 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_5) (or StartBool_2 StartBool_8) (< Start_9 Start_8) (> Start_13 Start_6)))
   (StartBool_9 Bool (false true (not StartBool_5) (and StartBool_7 StartBool_4) (or StartBool_8 StartBool_2) (>= Start_14 Start_14)))
   (Start_14 Int (x (- Start_8) (- Start_3 Start_1) (+ Start Start_9) (* Start_14 Start_4) (div Start_9 Start_15) (ite StartBool_6 Start_5 Start_1)))
   (Start_15 Int (2 5 (- Start_16) (+ Start_2 Start_7) (abs Start_3)))
   (Start_16 Int (3 (+ Start_11 Start_12) (* Start_1 Start_12) (mod Start_15 Start_15) (abs Start_1) (ite StartBool Start_17 Start_12)))
   (Start_17 Int (x 4 (- Start_8 Start_18) (* Start_3 Start_13) (div Start_10 Start_9) (mod Start Start_17)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 5)))

(check-synth)
