(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_2 Bool) (Start_13 Int) (Start_17 Int) (Start_14 Int) (Start_23 Int) (Start_9 Int) (Start_22 Int) (Start_7 Int) (StartBool_1 Bool) (StartBool_6 Bool) (Start_8 Int) (Start_11 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_3 Int) (Start_19 Int) (Start_21 Int) (Start_10 Int) (Start_1 Int) (StartBool_9 Bool) (Start_2 Int) (Start_4 Int) (Start_16 Int) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_3 Bool) (Start_15 Int) (Start_12 Int) (Start_6 Int) (Start_5 Int) (Start_18 Int) (Start_20 Int))
  ((Start Int (3 (- Start_1) (+ Start_2 Start) (* Start_2 Start_1) (div Start_2 Start_1) (mod Start_2 Start_1)))
   (StartBool Bool (false true (and StartBool_2 StartBool_6) (<= Start_7 Start_5)))
   (StartBool_2 Bool (true (< Start_1 Start_6)))
   (Start_13 Int (2 3 (- Start_9) (+ Start_2 Start_2) (* Start_15 Start_13) (mod Start_4 Start_6)))
   (Start_17 Int (y 5 1 0 (- Start_2) (div Start_5 Start_18) (abs Start_12) (ite StartBool Start_10 Start)))
   (Start_14 Int (y 3 4 5 1 0 (- Start_7) (* Start_3 Start_2) (div Start_10 Start_5)))
   (Start_23 Int (1 (- Start_1 Start_16) (+ Start_9 Start_4) (div Start_21 Start_22) (mod Start_2 Start_2) (abs Start_20)))
   (Start_9 Int (3 (- Start_6 Start_9) (+ Start_3 Start_8) (* Start_10 Start_2) (mod Start_1 Start_3) (ite StartBool Start_9 Start_3)))
   (Start_22 Int (3 0 4 (- Start_21) (- Start_14 Start_4) (+ Start_3 Start_20) (div Start Start_21) (abs Start_7) (ite StartBool_8 Start_11 Start_12)))
   (Start_7 Int (2 3 0 x (- Start_12) (- Start_3 Start_12) (+ Start_13 Start_1) (div Start_4 Start_2) (mod Start_11 Start_14) (abs Start_6)))
   (StartBool_1 Bool (true (and StartBool StartBool_2) (or StartBool StartBool_3) (< Start_5 Start_3) (<= Start_4 Start_2) (>= Start_4 Start_3)))
   (StartBool_6 Bool (false true (not StartBool_1) (or StartBool_1 StartBool_4) (< Start_5 Start_21) (<= Start_9 Start_15) (= Start_2 Start_12) (>= Start_20 Start_7)))
   (Start_8 Int (1 2 5 x (* Start_5 Start_7) (div Start_1 Start) (mod Start_1 Start_7) (abs Start_2) (ite StartBool_4 Start_9 Start_2)))
   (Start_11 Int (3 5 4 y 2 0 x))
   (StartBool_4 Bool (false true (not StartBool_3) (< Start_5 Start_4) (<= Start_5 Start) (= Start_3 Start_8) (>= Start_3 Start_5)))
   (StartBool_5 Bool (false (and StartBool_3 StartBool_1) (or StartBool_5 StartBool_6) (= Start_8 Start_19)))
   (Start_3 Int (0 (- Start_19 Start_4) (+ Start_23 Start_9) (mod Start_16 Start_18) (abs Start_12)))
   (Start_19 Int (4 (- Start_19) (+ Start_15 Start_10) (* Start_7 Start_16) (div Start_4 Start_11) (mod Start_7 Start_6) (ite StartBool_1 Start_14 Start_1)))
   (Start_21 Int (x (+ Start_17 Start_15) (div Start_5 Start_19)))
   (Start_10 Int (5 0 (+ Start_1 Start_2) (* Start_6 Start_7) (div Start_10 Start_8) (abs Start_11)))
   (Start_1 Int (x (- Start_2) (- Start Start_3) (* Start_1 Start_3) (div Start_4 Start_1) (ite StartBool_1 Start_3 Start_1)))
   (StartBool_9 Bool (true false (not StartBool_7) (or StartBool_3 StartBool_4) (<= Start_15 Start_3) (= Start_10 Start) (>= Start_10 Start_19) (> Start_16 Start_12)))
   (Start_2 Int (x (- Start_1) (div Start Start)))
   (Start_4 Int (0 (- Start_9) (- Start_6 Start) (ite StartBool_2 Start_22 Start_12)))
   (Start_16 Int (4 (* Start_16 Start_15) (div Start_5 Start_19) (abs Start) (ite StartBool_3 Start_11 Start_20)))
   (StartBool_8 Bool (false true (and StartBool_4 StartBool_7) (or StartBool StartBool_9) (< Start_14 Start_13) (<= Start_16 Start) (= Start_15 Start_14)))
   (StartBool_7 Bool (true false (not StartBool_7) (and StartBool_6 StartBool_5) (< Start_13 Start_19) (<= Start_16 Start_11) (>= Start_23 Start_14) (> Start_11 Start_14)))
   (StartBool_3 Bool (true (and StartBool StartBool_3) (or StartBool_7 StartBool_5) (< Start Start_10) (<= Start Start_12) (>= Start_3 Start_8) (> Start_22 Start_9)))
   (Start_15 Int (4 2 3 (- Start_3) (+ Start_13 Start_15)))
   (Start_12 Int (4 0 3 1 5 y (div Start_5 Start_1) (mod Start_8 Start_1) (abs Start_11)))
   (Start_6 Int (0 5 3 1 2 (- Start_16) (- Start_17 Start_10) (div Start_7 Start_14) (mod Start_3 Start_14) (abs Start_4)))
   (Start_5 Int (y (- Start_6) (+ Start_4 Start_4) (* Start_1 Start_4) (div Start_1 Start_7) (mod Start_5 Start_6) (ite StartBool_4 Start_3 Start_5)))
   (Start_18 Int (0 (- Start_19) (+ Start_4 Start_9) (div Start_18 Start_18) (mod Start_2 Start_20) (abs Start_4) (ite StartBool_5 Start_11 Start_3)))
   (Start_20 Int (3 2 y (* Start_15 Start_11) (ite StartBool_5 Start_3 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod 0 (- x 3)))))

(check-synth)
