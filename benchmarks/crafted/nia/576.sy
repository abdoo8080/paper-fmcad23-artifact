(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_2 Int) (Start_11 Int) (Start_10 Int) (Start_6 Int) (Start_9 Int) (Start_5 Int) (Start_3 Int) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_3 Bool) (Start_4 Int) (Start_12 Int) (Start_7 Int) (Start_8 Int) (Start_1 Int))
  ((Start Int (1 (+ Start_1 Start) (mod Start Start_1) (ite StartBool Start Start_2)))
   (StartBool Bool (true (or StartBool_2 StartBool_4) (<= Start Start_6) (= Start_4 Start_6) (>= Start_8 Start_8) (> Start_6 Start_8)))
   (Start_13 Int (0 (- Start_2) (- Start_4 Start_1) (mod Start Start_4) (abs Start_1)))
   (Start_2 Int (0 x (- Start) (- Start_1 Start) (* Start Start_1) (div Start_1 Start_2) (mod Start_1 Start_3) (abs Start_1) (ite StartBool Start_2 Start)))
   (Start_11 Int (2 (- Start_8) (div Start_10 Start_12) (ite StartBool_1 Start_2 Start_13)))
   (Start_10 Int (0 y (- Start_3 Start_3) (* Start_11 Start_4) (abs Start_10) (ite StartBool_4 Start_4 Start_5)))
   (Start_6 Int (0 y 1 (* Start_5 Start_2) (div Start_1 Start_3) (mod Start_3 Start_5) (ite StartBool_1 Start_4 Start_6)))
   (Start_9 Int (y (* Start_4 Start_10) (mod Start_1 Start_9) (abs Start) (ite StartBool_4 Start_9 Start_10)))
   (Start_5 Int (4 (* Start_6 Start_6) (abs Start_6)))
   (Start_3 Int (2 (+ Start Start_4) (div Start_5 Start_2) (abs Start_1) (ite StartBool_1 Start_6 Start_4)))
   (StartBool_1 Bool (true false (not StartBool_2) (<= Start_5 Start)))
   (StartBool_4 Bool (true false (and StartBool StartBool) (< Start_1 Start_5) (= Start_2 Start_9) (>= Start_5 Start_4)))
   (StartBool_2 Bool (false true (and StartBool_2 StartBool_1) (= Start_4 Start_3) (> Start_6 Start_1)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool_3)))
   (Start_4 Int (5 1 (- Start_3) (* Start_2 Start) (mod Start_2 Start_7) (ite StartBool_2 Start_4 Start)))
   (Start_12 Int (5 (- Start_9) (+ Start_2 Start_13) (ite StartBool_3 Start_11 Start_13)))
   (Start_7 Int (2 (- Start_5) (+ Start_6 Start_8) (div Start_7 Start_7) (ite StartBool_2 Start_5 Start_4)))
   (Start_8 Int (y (+ Start_1 Start_2) (* Start_1 Start_3) (mod Start_4 Start_4) (abs Start_7)))
   (Start_1 Int (1 4 (* Start_6 Start_3) (div Start_6 Start_3) (mod Start_8 Start_6) (ite StartBool_3 Start_5 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 5 (- y 4))))

(check-synth)
