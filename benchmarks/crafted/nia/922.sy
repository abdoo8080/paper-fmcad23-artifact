(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (Start_2 Int) (Start_1 Int) (StartBool_1 Bool) (Start_5 Int) (Start_11 Int) (Start_7 Int) (Start_3 Int) (Start_8 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_9 Int) (Start_6 Int) (StartBool_4 Bool) (Start_10 Int) (Start_4 Int))
  ((Start Int (3 0 (div Start Start) (abs Start_1)))
   (StartBool Bool (false (not StartBool) (<= Start_6 Start_10) (>= Start_3 Start_1)))
   (Start_12 Int (3 (- Start_6 Start_11) (* Start_6 Start_9) (div Start Start) (mod Start_6 Start_10)))
   (Start_2 Int (x 4 1 0 5 3 (+ Start_11 Start_6) (mod Start_6 Start_5) (ite StartBool Start_9 Start_4)))
   (Start_1 Int (4 (- Start_2 Start_1) (* Start_1 Start) (div Start_2 Start_1) (mod Start_2 Start) (abs Start_2) (ite StartBool_1 Start_3 Start_1)))
   (StartBool_1 Bool (false (= Start_10 Start_3) (> Start_10 Start_7)))
   (Start_5 Int (y (+ Start_4 Start_1) (div Start_1 Start) (mod Start_4 Start_6) (abs Start) (ite StartBool Start_5 Start_5)))
   (Start_11 Int (x (- Start_12) (- Start_9 Start_2) (+ Start_6 Start_1) (abs Start_5)))
   (Start_7 Int (0 (mod Start_7 Start_6) (abs Start_3) (ite StartBool_3 Start_3 Start_6)))
   (Start_3 Int (0 (- Start_4) (- Start_4 Start_2) (div Start_3 Start_3) (ite StartBool_2 Start_5 Start_1)))
   (Start_8 Int (4 (- Start_9 Start_7)))
   (StartBool_2 Bool (false (not StartBool_3) (and StartBool_4 StartBool) (< Start_3 Start_5) (<= Start_6 Start_4) (> Start_4 Start_8)))
   (StartBool_3 Bool (true false (not StartBool_1) (and StartBool_1 StartBool_3) (<= Start_5 Start_5) (>= Start_6 Start)))
   (Start_9 Int (x (- Start_7 Start_3) (+ Start_9 Start_6) (* Start_9 Start_6) (abs Start_1)))
   (Start_6 Int (x (- Start_4) (- Start_7 Start_7) (+ Start_5 Start_4) (* Start_3 Start_7) (mod Start_4 Start_3)))
   (StartBool_4 Bool (true (<= Start_10 Start_5) (>= Start_6 Start_3)))
   (Start_10 Int (0 (- Start_4) (- Start_10 Start_9) (div Start_1 Start_2) (mod Start_3 Start) (abs Start_6)))
   (Start_4 Int (x (- Start_2 Start_3) (+ Start_1 Start_8) (* Start_9 Start_6) (div Start_5 Start) (abs Start) (ite StartBool_4 Start_8 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ 5 (div x 0))))

(check-synth)
