(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (StartBool_3 Bool) (Start_12 Int) (Start_13 Int) (StartBool_2 Bool) (Start_15 Int) (Start_11 Int) (Start_2 Int) (Start_6 Int) (Start_3 Int) (Start_4 Int) (Start_5 Int) (Start_8 Int) (Start_1 Int) (Start_10 Int) (StartBool_5 Bool) (Start_14 Int) (StartBool_1 Bool) (Start_9 Int) (Start_7 Int))
  ((Start Int (y x 5 4 (- Start_1 Start_1) (+ Start Start_1) (* Start_2 Start_1) (div Start_1 Start) (abs Start_2) (ite StartBool Start_1 Start)))
   (StartBool Bool (false (not StartBool_2) (= Start_5 Start_10) (> Start_1 Start)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_1 StartBool) (< Start_8 Start) (<= Start_6 Start_10) (= Start_12 Start_12) (> Start_4 Start)))
   (StartBool_3 Bool (false true (not StartBool_4) (or StartBool_2 StartBool_5) (<= Start_12 Start_7) (= Start Start_2) (>= Start Start_8)))
   (Start_12 Int (0 3 2 5 (- Start) (* Start_14 Start_10) (ite StartBool_1 Start_1 Start_12)))
   (Start_13 Int (5 4 (+ Start_14 Start_9) (* Start_12 Start_9) (div Start_10 Start) (mod Start_2 Start_4)))
   (StartBool_2 Bool (true (not StartBool_2) (or StartBool_3 StartBool_2) (<= Start_12 Start_10) (>= Start_7 Start_13)))
   (Start_15 Int (5 2 0 (ite StartBool_4 Start Start_1)))
   (Start_11 Int (2 5 3 (- Start_6) (- Start_7 Start_11) (+ Start_10 Start_7) (* Start_8 Start_4) (abs Start_6) (ite StartBool_2 Start_7 Start_9)))
   (Start_2 Int (0 (+ Start Start) (mod Start_3 Start_3)))
   (Start_6 Int (5 y 1 3 4 2 (- Start_4 Start) (div Start_3 Start_3) (mod Start_5 Start_3) (ite StartBool_1 Start_6 Start_1)))
   (Start_3 Int (x (- Start_1) (* Start_2 Start_2) (div Start Start_3) (mod Start_2 Start_4)))
   (Start_4 Int (5 (- Start_1) (- Start_3 Start_5) (+ Start Start_5) (* Start_2 Start_3) (abs Start_6)))
   (Start_5 Int (y 5 4 2 0 (* Start_7 Start) (div Start_5 Start_7) (abs Start_8) (ite StartBool_1 Start_9 Start_1)))
   (Start_8 Int (1 (+ Start_1 Start_6) (div Start_3 Start_6) (abs Start_9)))
   (Start_1 Int (5 1 4 (* Start_6 Start_2) (div Start_7 Start_1) (mod Start Start_1) (ite StartBool_1 Start_5 Start)))
   (Start_10 Int (0 (- Start_11) (- Start_10 Start_10) (+ Start_8 Start_3) (div Start_8 Start_11) (abs Start_10)))
   (StartBool_5 Bool (false true (not StartBool_5) (or StartBool_2 StartBool_1) (<= Start_10 Start_15) (> Start Start_3)))
   (Start_14 Int (5 (* Start_13 Start_2) (div Start_7 Start_6)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (or StartBool_1 StartBool_1) (< Start_6 Start_1) (<= Start_6 Start_5) (>= Start_3 Start_3)))
   (Start_9 Int (x (- Start_5 Start_3) (mod Start Start_1) (abs Start_9)))
   (Start_7 Int (3 (+ Start_3 Start) (* Start Start_9) (abs Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (mod x 2) x)))

(check-synth)
