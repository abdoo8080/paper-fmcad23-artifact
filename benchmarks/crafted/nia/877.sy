(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_12 Int) (StartBool_6 Bool) (Start_15 Int) (Start_16 Int) (Start_8 Int) (StartBool_3 Bool) (StartBool_7 Bool) (Start_20 Int) (Start_11 Int) (StartBool_2 Bool) (Start_4 Int) (Start_13 Int) (Start_9 Int) (Start_6 Int) (Start_3 Int) (StartBool_1 Bool) (Start_10 Int) (StartBool_8 Bool) (StartBool_5 Bool) (Start_7 Int) (Start_17 Int) (StartBool_4 Bool) (Start_18 Int) (Start_5 Int) (Start_14 Int) (Start_19 Int) (Start_2 Int) (Start_1 Int))
  ((Start Int (2 4 (- Start) (- Start_1 Start_1) (+ Start_2 Start) (mod Start_2 Start_3)))
   (StartBool Bool (true false (or StartBool_2 StartBool) (= Start_5 Start_2) (>= Start_7 Start_9)))
   (Start_12 Int (4 0 3 1 (- Start_13) (+ Start_7 Start_3) (* Start Start_6) (div Start_9 Start_11) (mod Start_4 Start_13) (abs Start_14)))
   (StartBool_6 Bool (false (and StartBool_5 StartBool_4) (< Start_1 Start) (<= Start_10 Start_7) (>= Start_8 Start_6) (> Start Start_10)))
   (Start_15 Int (y (- Start_13 Start_2) (* Start_5 Start_4) (div Start_6 Start_11) (abs Start_1)))
   (Start_16 Int (2 0 (- Start_7) (- Start_3 Start_17) (+ Start_7 Start) (* Start_15 Start_8) (div Start_1 Start_15)))
   (Start_8 Int (5 (- Start_3) (+ Start_6 Start_1) (* Start_9 Start_4) (div Start_6 Start_9) (mod Start_2 Start_6) (abs Start_2) (ite StartBool_1 Start_9 Start_7)))
   (StartBool_3 Bool (true false (not StartBool) (< Start_10 Start_9) (<= Start_8 Start_11) (>= Start_2 Start_9) (> Start_5 Start_3)))
   (StartBool_7 Bool (false (or StartBool_1 StartBool_2) (<= Start_15 Start_2) (= Start_4 Start_12) (>= Start_9 Start_3) (> Start_13 Start_11)))
   (Start_20 Int (y (- Start_12)))
   (Start_11 Int (3 x (- Start_5) (* Start_7 Start_9) (div Start_5 Start_11) (abs Start_6)))
   (StartBool_2 Bool (true false (not StartBool_3) (and StartBool StartBool_2) (< Start_2 Start_8) (<= Start_5 Start_1) (= Start_4 Start_4)))
   (Start_4 Int (x 3 y 2 0 (- Start) (mod Start_1 Start_5) (ite StartBool_1 Start_1 Start_6)))
   (Start_13 Int (5 (+ Start_10 Start_1) (mod Start_3 Start_5) (abs Start_3)))
   (Start_9 Int (2 (- Start_2) (- Start_6 Start_3)))
   (Start_6 Int (5 (+ Start_4 Start_7) (* Start_6 Start_5) (mod Start_6 Start_3) (ite StartBool_2 Start_4 Start_8)))
   (Start_3 Int (0 (- Start) (- Start_3 Start_2) (+ Start_2 Start_2) (* Start_3 Start_2) (div Start_2 Start_4) (abs Start_1) (ite StartBool Start_2 Start_4)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool_4 StartBool_5) (= Start Start_8) (> Start Start_15)))
   (Start_10 Int (5 1 (- Start_10) (- Start_5 Start_7) (* Start_4 Start_11) (div Start Start_11) (ite StartBool_3 Start_3 Start_8)))
   (StartBool_8 Bool (false (or StartBool StartBool) (<= Start_6 Start_2) (= Start_11 Start_19)))
   (StartBool_5 Bool (false true (not StartBool_6) (and StartBool_3 StartBool_7) (or StartBool_7 StartBool_2) (< Start_12 Start_8)))
   (Start_7 Int (0 5 3 (* Start_8 Start_10) (mod Start_8 Start_12)))
   (Start_17 Int (3 y 4 (- Start_17) (div Start_9 Start_5) (abs Start_3) (ite StartBool_3 Start_13 Start_18)))
   (StartBool_4 Bool (false true (or StartBool_6 StartBool) (>= Start_4 Start_16) (> Start_16 Start_12)))
   (Start_18 Int (5 4 2 (- Start_6) (+ Start_17 Start_1) (div Start_16 Start_7) (mod Start_16 Start_18)))
   (Start_5 Int (0 (- Start_8) (- Start_1 Start_4) (* Start_14 Start_9) (ite StartBool_8 Start_9 Start_14)))
   (Start_14 Int (0 (- Start_14 Start) (+ Start_3 Start_10) (ite StartBool Start_12 Start_7)))
   (Start_19 Int (4 y x 3 0 1 (+ Start_2 Start_13) (div Start_18 Start_7) (ite StartBool_2 Start_16 Start_12)))
   (Start_2 Int (1 2 (+ Start_10 Start_20) (* Start_14 Start_15) (mod Start_17 Start_20)))
   (Start_1 Int (5 2 (- Start_19) (- Start Start_3) (div Start_13 Start_1) (abs Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (= x 1) (mod 1 x) 5)))

(check-synth)
