(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_2 Bool) (Start_4 Int) (Start_16 Int) (Start_6 Int) (Start_2 Int) (Start_13 Int) (Start_15 Int) (StartBool_7 Bool) (StartBool_8 Bool) (StartBool_1 Bool) (Start_3 Int) (Start_8 Int) (StartBool_9 Bool) (Start_5 Int) (Start_7 Int) (StartBool_5 Bool) (Start_17 Int) (Start_9 Int) (StartBool_4 Bool) (Start_14 Int) (Start_10 Int) (Start_11 Int) (Start_12 Int) (StartBool_6 Bool) (StartBool_3 Bool))
  ((Start Int (x (- Start Start_1) (+ Start_2 Start) (* Start_1 Start_3) (div Start Start_2) (abs Start_1) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true false (or StartBool_9 StartBool_1) (< Start_11 Start_4) (= Start_1 Start_13) (> Start_10 Start_8)))
   (Start_1 Int (5 y 1 2 (- Start_4 Start_1) (* Start_3 Start_17) (div Start_8 Start_7)))
   (StartBool_2 Bool (true false (not StartBool_6) (or StartBool_3 StartBool_7) (< Start_7 Start_10) (<= Start_7 Start_10) (> Start_17 Start_6)))
   (Start_4 Int (1 3 (- Start_16) (* Start_6 Start_2) (div Start_15 Start_7) (ite StartBool_1 Start_7 Start_5)))
   (Start_16 Int (1 5 (- Start_10) (- Start_16 Start_11) (+ Start Start_6) (* Start_9 Start_12)))
   (Start_6 Int (3 (- Start_9 Start_1) (* Start_2 Start_10) (mod Start_9 Start) (ite StartBool_6 Start_1 Start_10)))
   (Start_2 Int (y 3 0 1 5 2 (- Start_6) (* Start Start_5) (div Start_17 Start_6)))
   (Start_13 Int (y (- Start_10 Start_7) (* Start_6 Start_7) (div Start_3 Start_2)))
   (Start_15 Int (3 5 1 (- Start_15 Start_12) (+ Start_12 Start_6) (div Start_4 Start_12) (mod Start_2 Start_8) (ite StartBool_9 Start_7 Start_8)))
   (StartBool_7 Bool (true false (not StartBool_3) (and StartBool_7 StartBool_4) (or StartBool_8 StartBool_9) (>= Start_4 Start_12) (> Start_13 Start_7)))
   (StartBool_8 Bool (true (not StartBool_9) (and StartBool_6 StartBool_4) (or StartBool_6 StartBool_3) (< Start_3 Start_14) (<= Start_12 Start_10) (= Start_12 Start_2) (> Start_9 Start_7)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool_2 StartBool_1) (or StartBool StartBool) (<= Start_3 Start_4) (= Start_4 Start_5) (>= Start_1 Start_4) (> Start Start_4)))
   (Start_3 Int (0 (+ Start_16 Start_2) (* Start_17 Start_2) (abs Start_3)))
   (Start_8 Int (2 (- Start_10) (- Start_6 Start_1) (div Start_13 Start_2) (ite StartBool_7 Start_9 Start_3)))
   (StartBool_9 Bool (true false (not StartBool_6) (< Start_6 Start_2)))
   (Start_5 Int (1 (+ Start_4 Start_4) (mod Start_6 Start_1) (abs Start_7)))
   (Start_7 Int (2 5 4 (- Start_2) (- Start_2 Start_8) (+ Start Start_7) (* Start_7 Start_1) (ite StartBool_3 Start_4 Start_9)))
   (StartBool_5 Bool (true false (not StartBool_2) (and StartBool_1 StartBool_4) (or StartBool_1 StartBool_5) (<= Start_1 Start_7) (= Start_7 Start_7)))
   (Start_17 Int (y (mod Start_3 Start_1) (abs Start_11)))
   (Start_9 Int (5 (- Start_1) (+ Start_10 Start) (div Start_9 Start)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_1 StartBool_1) (< Start_5 Start_2) (<= Start Start_7) (= Start_11 Start_2)))
   (Start_14 Int (0 5 4 (- Start_10) (- Start Start_5) (+ Start_11 Start) (abs Start_9) (ite StartBool_3 Start_15 Start_15)))
   (Start_10 Int (y 5 (- Start_6) (+ Start_6 Start_1) (mod Start_7 Start_7) (ite StartBool_4 Start_1 Start_6)))
   (Start_11 Int (2 y 4 3 (- Start_11) (- Start_8 Start_3) (+ Start_6 Start_1) (div Start Start_2) (mod Start_12 Start_3) (abs Start_3)))
   (Start_12 Int (3 0 (- Start_7 Start_2) (+ Start_7 Start_3) (ite StartBool_6 Start_6 Start_9)))
   (StartBool_6 Bool (true (and StartBool StartBool_6) (>= Start_1 Start_2)))
   (StartBool_3 Bool (false (not StartBool_3) (and StartBool_1 StartBool_4) (or StartBool_6 StartBool_3) (= Start_4 Start_10) (>= Start_8 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 5 0) (+ 5 4))))

(check-synth)
