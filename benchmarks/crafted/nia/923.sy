(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_6 Bool) (Start_29 Int) (Start_25 Int) (Start_14 Int) (Start_11 Int) (Start_12 Int) (StartBool_1 Bool) (Start_8 Int) (Start_1 Int) (StartBool_3 Bool) (Start_9 Int) (Start_3 Int) (Start_18 Int) (Start_7 Int) (Start_13 Int) (Start_27 Int) (Start_4 Int) (Start_15 Int) (Start_26 Int) (Start_24 Int) (Start_19 Int) (Start_28 Int) (Start_5 Int) (Start_17 Int) (Start_20 Int) (Start_6 Int) (StartBool_5 Bool) (Start_21 Int) (Start_2 Int) (StartBool_2 Bool) (Start_16 Int) (Start_22 Int) (Start_23 Int) (Start_10 Int) (StartBool_4 Bool))
  ((Start Int (4 x 2 0 1 3 5 y (- Start_1) (- Start Start_1) (+ Start Start_2) (div Start Start_1) (mod Start_3 Start_3) (abs Start)))
   (StartBool Bool (false (not StartBool_1) (and StartBool_1 StartBool_4) (or StartBool_1 StartBool_6) (< Start_26 Start_26) (<= Start_27 Start_16) (= Start_28 Start_5) (> Start_14 Start_13)))
   (StartBool_7 Bool (true (not StartBool_7) (or StartBool_6 StartBool_5) (< Start_21 Start) (= Start_8 Start_18)))
   (StartBool_6 Bool (true (or StartBool_1 StartBool_7) (< Start_17 Start_25) (<= Start_12 Start_23) (> Start_23 Start_3)))
   (Start_29 Int (2 4 3 y (- Start) (+ Start_26 Start_2) (mod Start_6 Start_20) (ite StartBool_5 Start_4 Start_11)))
   (Start_25 Int (0 y (- Start_15 Start_22) (* Start_25 Start_7) (mod Start_14 Start_2) (abs Start_21) (ite StartBool_5 Start_6 Start_16)))
   (Start_14 Int (y (- Start_6 Start_10) (* Start_9 Start_11) (mod Start_3 Start_6) (abs Start_3)))
   (Start_11 Int (2 (- Start_1 Start_13) (+ Start_14 Start_10) (mod Start_14 Start_5)))
   (Start_12 Int (x 1 (- Start_1) (- Start Start) (+ Start_9 Start_1) (* Start_6 Start_7) (div Start_12 Start_11) (abs Start_6)))
   (StartBool_1 Bool (false true (not StartBool_2) (<= Start_5 Start_2) (>= Start_4 Start_2)))
   (Start_8 Int (3 (- Start_3) (- Start_8 Start_3) (div Start_7 Start_2) (mod Start_4 Start_1) (abs Start_8)))
   (Start_1 Int (2 (+ Start_5 Start_10) (* Start_4 Start_19) (abs Start_22)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool StartBool_1) (or StartBool_2 StartBool) (<= Start_1 Start_9)))
   (Start_9 Int (3 1 (- Start_3) (- Start_10 Start_5) (+ Start_6 Start_6) (* Start_11 Start_9) (div Start_2 Start_5) (mod Start_11 Start_12)))
   (Start_3 Int (2 y 4 (+ Start_4 Start) (div Start_5 Start_3)))
   (Start_18 Int (0 (- Start_19) (- Start_11 Start_11) (* Start_1 Start_9) (div Start_8 Start) (ite StartBool Start_12 Start_10)))
   (Start_7 Int (y 3 2 5 1 (- Start_1) (+ Start_8 Start) (div Start_6 Start_1) (mod Start Start_5) (ite StartBool Start_3 Start_6)))
   (Start_13 Int (4 (- Start) (- Start_1 Start_4) (abs Start_8)))
   (Start_27 Int (3 (+ Start_3 Start_17) (* Start_13 Start_26) (div Start_3 Start_14) (mod Start_6 Start_9) (ite StartBool_6 Start_24 Start_15)))
   (Start_4 Int (1 2 (- Start_2) (- Start_12 Start_14) (div Start_12 Start_15) (mod Start_13 Start_5)))
   (Start_15 Int (5 (- Start_10 Start_12) (+ Start_1 Start_6) (* Start_8 Start_3) (div Start_12 Start_9) (ite StartBool_4 Start_16 Start_17)))
   (Start_26 Int (1 y (- Start_13 Start_8) (+ Start_9 Start_1) (* Start_27 Start_19) (mod Start_29 Start_8)))
   (Start_24 Int (2 5 4 1 x (- Start_14 Start_19) (* Start_17 Start_13) (abs Start_17)))
   (Start_19 Int (y (- Start_12) (* Start_9 Start_12) (mod Start_20 Start_3)))
   (Start_28 Int (4 2 x 5 y (- Start_18) (- Start_13 Start_10) (+ Start_17 Start_26) (div Start_22 Start_28) (abs Start_22) (ite StartBool_3 Start_10 Start_29)))
   (Start_5 Int (5 (- Start_5 Start_2) (div Start_2 Start_3) (ite StartBool_1 Start_1 Start_6)))
   (Start_17 Int (y 4 (* Start_12 Start_3) (mod Start_18 Start_5) (abs Start_9) (ite StartBool_5 Start_5 Start_1)))
   (Start_20 Int (1 (- Start_18 Start_20) (+ Start_7 Start_6) (* Start Start_7) (div Start_9 Start_4) (mod Start_14 Start_15) (abs Start_2)))
   (Start_6 Int (x (- Start_1 Start_4) (+ Start_3 Start_5) (* Start_2 Start) (div Start_6 Start_2) (mod Start_5 Start_3) (abs Start_7)))
   (StartBool_5 Bool (true (not StartBool_1) (and StartBool_3 StartBool_1) (<= Start_13 Start_9)))
   (Start_21 Int (0 (- Start_9 Start_23) (+ Start Start_4) (* Start_10 Start_5) (div Start_10 Start_23) (mod Start_4 Start_5) (abs Start_4)))
   (Start_2 Int (5 (- Start_24 Start_12) (+ Start Start_8) (div Start_25 Start_8) (mod Start_9 Start_22)))
   (StartBool_2 Bool (true false (not StartBool) (and StartBool_3 StartBool_3) (< Start Start_8)))
   (Start_16 Int (y (- Start_20 Start_7) (+ Start_17 Start_11) (div Start_9 Start_21) (abs Start_22) (ite StartBool_5 Start_15 Start_8)))
   (Start_22 Int (1 5 x (- Start_17) (- Start_3 Start_12) (+ Start_10 Start_22) (* Start_7 Start_16) (div Start_13 Start_1) (mod Start_16 Start_8)))
   (Start_23 Int (1 5 (+ Start_14 Start_6) (* Start_16 Start_13) (div Start_3 Start_2) (mod Start_9 Start_7) (abs Start_8) (ite StartBool_1 Start_13 Start_9)))
   (Start_10 Int (x 2 (- Start_12 Start_3) (+ Start_13 Start_4) (* Start_1 Start_5)))
   (StartBool_4 Bool (true (not StartBool_2) (or StartBool_1 StartBool) (< Start_11 Start_21) (<= Start_4 Start_17) (= Start_24 Start_4) (>= Start_23 Start_20) (> Start_1 Start_14)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 4 (* x 2)))))

(check-synth)
