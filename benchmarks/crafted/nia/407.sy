(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_6 Bool) (Start_19 Int) (Start_18 Int) (StartBool_8 Bool) (StartBool_5 Bool) (Start_15 Int) (Start_17 Int) (StartBool_4 Bool) (Start_14 Int) (Start_12 Int) (StartBool_1 Bool) (Start_13 Int) (Start_7 Int) (StartBool_7 Bool) (Start_8 Int) (Start_3 Int) (Start_11 Int) (Start_1 Int) (Start_4 Int) (Start_6 Int) (Start_16 Int) (Start_9 Int) (StartBool_2 Bool) (Start_5 Int) (Start_2 Int) (StartBool_3 Bool) (Start_10 Int))
  ((Start Int (5 y (- Start) (* Start Start) (div Start_1 Start) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (false true (or StartBool_6 StartBool_3) (< Start_5 Start_11)))
   (StartBool_6 Bool (false true (not StartBool_2) (and StartBool StartBool_6) (or StartBool_2 StartBool_1) (> Start_16 Start_13)))
   (Start_19 Int (4 (- Start_14) (- Start_4 Start_9) (mod Start_4 Start_5) (ite StartBool_7 Start_10 Start_5)))
   (Start_18 Int (0 x (- Start_7) (div Start_6 Start_3) (ite StartBool_2 Start_17 Start_18)))
   (StartBool_8 Bool (false true (and StartBool_3 StartBool_2) (= Start_5 Start_16) (>= Start_1 Start_6) (> Start_16 Start_12)))
   (StartBool_5 Bool (false true (and StartBool_4 StartBool_3) (< Start_13 Start_9) (<= Start_11 Start_12) (>= Start_13 Start_5)))
   (Start_15 Int (4 0 (- Start Start) (+ Start_3 Start_14) (mod Start_10 Start_3) (ite StartBool_5 Start_8 Start_12)))
   (Start_17 Int (5 0 x 3 4 (- Start_19) (- Start_19 Start_19) (+ Start_7 Start_5) (* Start_15 Start_9) (div Start_6 Start_5) (mod Start_16 Start_19)))
   (StartBool_4 Bool (false (not StartBool_3) (and StartBool_6 StartBool_7) (<= Start_2 Start_8) (= Start_15 Start_7)))
   (Start_14 Int (1 (- Start_9) (+ Start_6 Start_6) (* Start_10 Start_15) (mod Start_14 Start_6)))
   (Start_12 Int (x (- Start_7) (- Start_13 Start_10) (* Start_4 Start_13) (div Start_2 Start_12)))
   (StartBool_1 Bool (true (not StartBool_4) (or StartBool_4 StartBool_5) (= Start_9 Start_2) (>= Start_11 Start_9) (> Start_12 Start_7)))
   (Start_13 Int (5 (mod Start_4 Start_5) (abs Start_14) (ite StartBool_2 Start_8 Start_13)))
   (Start_7 Int (3 2 5 1 (* Start Start_5) (abs Start_5) (ite StartBool_2 Start_7 Start_8)))
   (StartBool_7 Bool (false true (and StartBool_8 StartBool_3) (or StartBool_1 StartBool_4) (< Start_13 Start_14) (<= Start_4 Start_13) (= Start_15 Start_6) (>= Start_11 Start_4)))
   (Start_8 Int (2 (- Start_9) (- Start_7 Start_1) (+ Start_7 Start_8) (* Start_7 Start) (div Start_5 Start_1) (mod Start_9 Start_6) (abs Start_6)))
   (Start_3 Int (y 2 (- Start_8) (+ Start_4 Start_3) (div Start_8 Start_9) (mod Start_4 Start_10)))
   (Start_11 Int (2 (div Start_11 Start_4) (mod Start_10 Start_10) (abs Start_9) (ite StartBool_3 Start_3 Start)))
   (Start_1 Int (3 (- Start_10 Start_4) (+ Start_1 Start_7) (* Start_13 Start_15) (div Start_6 Start_13) (mod Start_4 Start_19) (abs Start_12)))
   (Start_4 Int (5 (- Start_4 Start_1) (+ Start_5 Start_3) (* Start_4 Start_1) (div Start Start_1) (mod Start_6 Start_6) (ite StartBool_1 Start_2 Start_5)))
   (Start_6 Int (1 x 0 y 5 2 (- Start_5) (div Start_7 Start_2) (mod Start_6 Start_2)))
   (Start_16 Int (x (- Start_16) (+ Start_17 Start_9) (* Start_11 Start_13) (div Start_16 Start_7) (ite StartBool_8 Start_18 Start_6)))
   (Start_9 Int (3 x (* Start_8 Start_6) (abs Start_3)))
   (StartBool_2 Bool (true false (not StartBool) (or StartBool StartBool) (< Start_5 Start_6) (<= Start_8 Start_4) (>= Start Start_8)))
   (Start_5 Int (2 (- Start_1) (- Start_2 Start_5)))
   (Start_2 Int (5 (- Start_3) (- Start_2 Start_1) (+ Start Start_4) (* Start_2 Start) (div Start_5 Start) (mod Start_5 Start_5)))
   (StartBool_3 Bool (false true (or StartBool_2 StartBool_2) (< Start_2 Start) (= Start Start_11) (> Start_4 Start)))
   (Start_10 Int (y 1 x 0 5 (+ Start_1 Start_7) (* Start_8 Start_7) (abs Start) (ite StartBool Start_2 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (<= y 0) x 4)))

(check-synth)
