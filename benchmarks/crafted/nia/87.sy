(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_8 Bool) (Start_10 Int) (Start_9 Int) (StartBool_1 Bool) (Start_8 Int) (StartBool_7 Bool) (Start_17 Int) (StartBool_6 Bool) (Start_4 Int) (StartBool_5 Bool) (StartBool_3 Bool) (Start_7 Int) (StartBool_4 Bool) (Start_5 Int) (Start_20 Int) (Start_12 Int) (Start_14 Int) (Start_11 Int) (Start_13 Int) (Start_1 Int) (Start_15 Int) (Start_19 Int) (Start_6 Int) (Start_3 Int) (Start_18 Int) (Start_16 Int) (Start_21 Int) (Start_2 Int) (StartBool_2 Bool))
  ((Start Int (5 4 2 0 y x (abs Start_1) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false (and StartBool_7 StartBool_8) (> Start_18 Start_16)))
   (StartBool_8 Bool (true false (<= Start_14 Start_15) (= Start_3 Start_13) (>= Start_20 Start) (> Start_15 Start_20)))
   (Start_10 Int (0 1 (* Start_10 Start_10) (abs Start_9)))
   (Start_9 Int (x (- Start_4) (div Start_2 Start_4) (mod Start_7 Start_1) (ite StartBool_1 Start_10 Start_4)))
   (StartBool_1 Bool (true false (not StartBool_1) (or StartBool_2 StartBool_1) (< Start_2 Start_1) (<= Start_3 Start_2) (>= Start_2 Start_2) (> Start_3 Start_4)))
   (Start_8 Int (3 (- Start_7) (* Start_2 Start_2) (mod Start Start_8) (ite StartBool_4 Start_1 Start_2)))
   (StartBool_7 Bool (false (not StartBool) (or StartBool_4 StartBool_4) (<= Start_10 Start_11) (> Start_12 Start_7)))
   (Start_17 Int (5 (- Start_14) (- Start_18 Start_11) (+ Start_9 Start_10) (* Start_13 Start_18) (div Start_13 Start_12) (mod Start_10 Start_17) (abs Start_3)))
   (StartBool_6 Bool (false (and StartBool_1 StartBool_7) (<= Start_10 Start_3) (= Start_1 Start)))
   (Start_4 Int (2 (- Start Start_2) (* Start_1 Start_4) (div Start_5 Start_2) (abs Start_3)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_6) (> Start_9 Start_6)))
   (StartBool_3 Bool (true (and StartBool_2 StartBool_1) (= Start_8 Start) (>= Start_8 Start_7)))
   (Start_7 Int (5 (- Start) (mod Start_2 Start_5) (abs Start_3)))
   (StartBool_4 Bool (false (not StartBool) (and StartBool_5 StartBool_2) (= Start_5 Start_5) (>= Start_2 Start_8) (> Start_2 Start_5)))
   (Start_5 Int (3 0 1 (- Start_3) (+ Start_4 Start_2) (* Start_4 Start_5) (div Start_3 Start_6) (abs Start_1) (ite StartBool_3 Start_7 Start_3)))
   (Start_20 Int (3 (* Start_19 Start_8) (div Start_11 Start_9) (abs Start_2) (ite StartBool_5 Start_12 Start_10)))
   (Start_12 Int (y 0 4 x 3 1 (- Start_1) (- Start_1 Start_6) (+ Start_1 Start_13) (* Start_14 Start_1) (abs Start_8)))
   (Start_14 Int (0 4 y 3 1 x (+ Start_7 Start_1) (abs Start_9)))
   (Start_11 Int (4 (- Start_15 Start_4) (+ Start_8 Start_10) (div Start_11 Start_10) (mod Start_1 Start_13)))
   (Start_13 Int (x 2 3 (* Start_5 Start_13) (abs Start_4)))
   (Start_1 Int (4 (- Start_8 Start_8) (+ Start_11 Start_14) (div Start_6 Start_4) (mod Start_20 Start_6) (ite StartBool Start_7 Start_1)))
   (Start_15 Int (y (- Start) (* Start_16 Start_5) (mod Start_13 Start_17) (ite StartBool_6 Start_3 Start_15)))
   (Start_19 Int (y (* Start_16 Start_15)))
   (Start_6 Int (0 (mod Start Start_1) (abs Start_14)))
   (Start_3 Int (2 (- Start_20) (- Start_20 Start_5) (div Start_7 Start_14) (mod Start_5 Start_15)))
   (Start_18 Int (0 4 2 3 x 5 y (- Start_18 Start_19) (+ Start_16 Start_7) (* Start_12 Start) (div Start_6 Start_1) (abs Start_2) (ite StartBool_2 Start_19 Start_18)))
   (Start_16 Int (x 4 3 (+ Start_10 Start_12) (div Start_5 Start_11)))
   (Start_21 Int (2 1 (- Start_1 Start_5) (+ Start_21 Start_1) (* Start_3 Start_11) (mod Start_10 Start_12) (abs Start_13)))
   (Start_2 Int (x (* Start_13 Start_9) (mod Start_21 Start_1) (abs Start_10) (ite StartBool_4 Start_16 Start_14)))
   (StartBool_2 Bool (false true (not StartBool_2) (or StartBool_4 StartBool_6) (> Start_12 Start_14)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- y) 3)))

(check-synth)
