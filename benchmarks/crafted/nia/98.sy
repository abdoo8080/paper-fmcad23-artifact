(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_10 Int) (StartBool_1 Bool) (Start_7 Int) (Start_4 Int) (StartBool_2 Bool) (Start_11 Int) (Start_3 Int) (Start_6 Int) (StartBool_3 Bool) (Start_1 Int) (StartBool_4 Bool) (Start_5 Int) (Start_8 Int) (Start_9 Int))
  ((Start Int (4 (- Start_1) (- Start Start) (* Start_1 Start_1) (div Start Start_2) (mod Start Start_2) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (true false (not StartBool_3) (< Start_9 Start_1) (= Start Start_11) (>= Start_9 Start_4)))
   (Start_2 Int (2 1 y 4 (- Start_1 Start_7) (+ Start_11 Start_7) (* Start_11 Start_11) (div Start_2 Start_6) (abs Start_2) (ite StartBool Start Start_1)))
   (Start_10 Int (4 (- Start_8) (- Start_9 Start_4) (+ Start_7 Start_7) (div Start_10 Start_10) (mod Start_1 Start_7) (abs Start_8)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool_2) (= Start_1 Start_2) (>= Start_4 Start_2)))
   (Start_7 Int (5 (div Start_6 Start_4) (mod Start_2 Start_1) (abs Start_4)))
   (Start_4 Int (3 y 5 (- Start_3) (- Start_2 Start) (+ Start_3 Start) (* Start_3 Start_4) (div Start Start_2) (ite StartBool_3 Start_2 Start)))
   (StartBool_2 Bool (true false (and StartBool StartBool_3) (or StartBool_3 StartBool_4) (<= Start Start_5) (= Start_5 Start_3) (>= Start_1 Start_4) (> Start_6 Start_6)))
   (Start_11 Int (2 (* Start Start_11) (div Start_11 Start_10) (mod Start_8 Start_8)))
   (Start_3 Int (0 5 x 1 (- Start Start_1) (div Start_3 Start_2) (ite StartBool_1 Start_1 Start_3)))
   (Start_6 Int (y (+ Start_2 Start_4) (* Start_4 Start_4)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_1 StartBool_1) (<= Start Start_3) (>= Start_3 Start_2)))
   (Start_1 Int (4 y 0 5 (- Start_2) (div Start_9 Start_5) (mod Start_7 Start) (abs Start_7)))
   (StartBool_4 Bool (true (not StartBool_4) (< Start Start_1)))
   (Start_5 Int (1 y (+ Start_5 Start_1) (* Start_1 Start_5) (mod Start_7 Start_8) (abs Start_5)))
   (Start_8 Int (3 (- Start) (- Start_3 Start_9) (* Start_1 Start_9) (div Start_1 Start_6) (ite StartBool Start_10 Start)))
   (Start_9 Int (0 (* Start_2 Start_5) (div Start_1 Start_5) (mod Start_2 Start_4) (abs Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 2 0)))

(check-synth)
