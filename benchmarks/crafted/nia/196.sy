(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_15 Int) (Start_6 Int) (Start_8 Int) (Start_12 Int) (StartBool_5 Bool) (Start_13 Int) (Start_1 Int) (Start_3 Int) (StartBool_1 Bool) (Start_14 Int) (StartBool_4 Bool) (Start_9 Int) (StartBool_2 Bool) (Start_10 Int) (Start_2 Int) (Start_4 Int) (StartBool_3 Bool) (Start_11 Int) (Start_5 Int) (Start_7 Int))
  ((Start Int (1 4 2 y (* Start Start) (div Start Start_1) (abs Start) (ite StartBool Start Start)))
   (StartBool Bool (true false (not StartBool_2) (or StartBool_2 StartBool_2) (< Start_1 Start_11) (<= Start_12 Start_10) (= Start_2 Start_2) (>= Start_9 Start_2)))
   (Start_15 Int (1 0 (- Start_14 Start_7) (div Start_10 Start_4) (mod Start_6 Start_9) (abs Start_6) (ite StartBool_3 Start_2 Start_3)))
   (Start_6 Int (4 2 (- Start_12) (div Start_11 Start_2) (abs Start_13)))
   (Start_8 Int (5 (- Start_8) (+ Start_8 Start_3) (div Start_7 Start_12) (ite StartBool_3 Start_7 Start_2)))
   (Start_12 Int (2 (- Start_1) (* Start_3 Start_6) (abs Start_6)))
   (StartBool_5 Bool (true (and StartBool_4 StartBool_2) (or StartBool_4 StartBool) (= Start_7 Start_8) (> Start_6 Start_5)))
   (Start_13 Int (1 (- Start_9) (* Start_2 Start_8) (div Start Start_10) (ite StartBool_4 Start_1 Start_11)))
   (Start_1 Int (x (- Start_1) (- Start_2 Start_1) (+ Start_1 Start_2) (mod Start_3 Start_2) (ite StartBool Start_1 Start_3)))
   (Start_3 Int (3 2 0 x 1 y 4 5 (* Start_4 Start_1) (abs Start_5) (ite StartBool_1 Start_2 Start_4)))
   (StartBool_1 Bool (true (and StartBool_2 StartBool) (or StartBool_1 StartBool_3) (< Start_1 Start_1) (= Start_5 Start_2) (>= Start_4 Start_3) (> Start_2 Start)))
   (Start_14 Int (2 (- Start_15 Start_4) (div Start_4 Start_9) (mod Start_3 Start_9) (ite StartBool_1 Start_8 Start_10)))
   (StartBool_4 Bool (true false (>= Start_3 Start_3)))
   (Start_9 Int (0 (- Start_8) (- Start_4 Start_1) (div Start_10 Start_3)))
   (StartBool_2 Bool (true false (not StartBool) (and StartBool_3 StartBool_3) (< Start Start_1) (<= Start_4 Start_1) (> Start_5 Start)))
   (Start_10 Int (3 (- Start Start_3) (* Start_11 Start_1) (mod Start_3 Start_8) (abs Start_10) (ite StartBool_4 Start_5 Start_5)))
   (Start_2 Int (2 1 y (- Start_4 Start_2) (* Start_9 Start_14) (div Start_3 Start_13) (mod Start_13 Start_15)))
   (Start_4 Int (1 (* Start_2 Start_6) (mod Start_7 Start_6) (ite StartBool Start_4 Start)))
   (StartBool_3 Bool (false true (not StartBool_1)))
   (Start_11 Int (2 5 (- Start_3) (* Start_12 Start_8) (div Start_12 Start_2) (abs Start_7) (ite StartBool_5 Start Start_8)))
   (Start_5 Int (3 (- Start_4) (+ Start Start_5) (* Start_3 Start) (div Start_5 Start_5) (abs Start_1)))
   (Start_7 Int (y (- Start_8) (- Start_7 Start_7) (+ Start_7 Start_9) (* Start Start_2) (div Start_7 Start_8) (mod Start_1 Start_7) (abs Start_4) (ite StartBool Start_4 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod x x)))

(check-synth)
