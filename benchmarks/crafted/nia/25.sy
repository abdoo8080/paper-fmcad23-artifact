(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_15 Int) (Start_19 Int) (Start_18 Int) (Start_16 Int) (Start_1 Int) (Start_2 Int) (Start_17 Int) (Start_5 Int) (Start_7 Int) (Start_8 Int) (Start_4 Int) (Start_9 Int) (Start_6 Int) (Start_14 Int) (Start_12 Int) (Start_3 Int) (Start_10 Int) (StartBool_1 Bool) (Start_11 Int) (Start_13 Int))
  ((Start Int (3 4 (- Start_1) (- Start_2 Start_3) (* Start Start_4)))
   (StartBool Bool (true (<= Start_8 Start_19) (= Start_7 Start_16) (>= Start Start_12) (> Start_10 Start_8)))
   (Start_20 Int (3 (- Start_16 Start_2) (+ Start_4 Start_12) (* Start_5 Start_15) (abs Start_17) (ite StartBool Start_2 Start_12)))
   (Start_15 Int (2 5 3))
   (Start_19 Int (5 1 (div Start_20 Start_12) (mod Start_4 Start_9) (ite StartBool Start_3 Start_4)))
   (Start_18 Int (y (- Start_7) (* Start_3 Start_16) (abs Start_6)))
   (Start_16 Int (5 (- Start_10) (- Start_15 Start_7) (+ Start_3 Start_14) (* Start_17 Start) (div Start_15 Start_3) (mod Start_13 Start_6) (abs Start)))
   (Start_1 Int (2 (- Start_15) (div Start_9 Start_16) (mod Start_6 Start_1) (abs Start_14) (ite StartBool Start_5 Start_3)))
   (Start_2 Int (2 x 0 y (- Start_8) (- Start_7 Start_14) (div Start_8 Start_11) (mod Start_12 Start_1) (abs Start_12)))
   (Start_17 Int (x (- Start_9 Start_16) (+ Start_18 Start_17) (ite StartBool Start_14 Start_1)))
   (Start_5 Int (5 4 x 0 y 3 (- Start_4) (- Start_3 Start_9) (div Start_10 Start_1) (abs Start_11)))
   (Start_7 Int (x (- Start_8 Start_6) (* Start_2 Start_5) (div Start_3 Start_5) (mod Start_3 Start_2) (abs Start_3)))
   (Start_8 Int (y 2 4 (- Start_6) (- Start_9 Start_1) (div Start_8 Start_10)))
   (Start_4 Int (1 (- Start_1 Start) (+ Start_1 Start_5) (* Start_6 Start_7)))
   (Start_9 Int (4 0 5 2 1 (* Start_1 Start_7) (ite StartBool_1 Start_8 Start)))
   (Start_6 Int (4 (- Start Start_2) (+ Start_10 Start_6) (div Start_6 Start_4) (mod Start_12 Start) (abs Start_9)))
   (Start_14 Int (y 2 4 (- Start_2) (* Start_2 Start_3) (mod Start_4 Start_12)))
   (Start_12 Int (4 (- Start_4) (- Start_9 Start_11) (abs Start_12)))
   (Start_3 Int (2 1 4 (- Start_4) (+ Start_13 Start_13) (* Start_7 Start_6) (ite StartBool Start_7 Start_10)))
   (Start_10 Int (5 (- Start_10) (* Start_2 Start_9) (div Start_10 Start_1)))
   (StartBool_1 Bool (true false (not StartBool) (<= Start_6 Start_8) (= Start_11 Start_11)))
   (Start_11 Int (0 (- Start_6) (- Start_10 Start_11) (+ Start_7 Start_2) (div Start_9 Start_5) (mod Start_12 Start_3) (abs Start) (ite StartBool_1 Start_10 Start_6)))
   (Start_13 Int (4 (- Start_9) (div Start_3 Start_12) (mod Start_2 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* (mod y 4) 2))))

(check-synth)
