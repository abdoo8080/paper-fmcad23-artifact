(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_10 Bool) (Start_1 Int) (Start_4 Int) (Start_12 Int) (Start_7 Int) (Start_13 Int) (StartBool_11 Bool) (Start_10 Int) (StartBool_6 Bool) (StartBool_8 Bool) (StartBool_5 Bool) (Start_22 Int) (StartBool_3 Bool) (Start_2 Int) (Start_6 Int) (StartBool_4 Bool) (StartBool_1 Bool) (Start_11 Int) (Start_3 Int) (StartBool_2 Bool) (Start_9 Int) (Start_18 Int) (Start_8 Int) (StartBool_7 Bool) (Start_14 Int) (Start_19 Int) (StartBool_9 Bool) (Start_5 Int) (Start_17 Int) (Start_21 Int) (Start_16 Int) (Start_15 Int) (Start_20 Int))
  ((Start Int (4 (- Start_1 Start_2) (div Start_2 Start_3) (mod Start_3 Start) (ite StartBool_1 Start Start)))
   (StartBool Bool (true false (not StartBool_6) (and StartBool_10 StartBool_11) (< Start_1 Start_6) (<= Start_10 Start_1)))
   (StartBool_10 Bool (true (or StartBool_4 StartBool_7) (> Start_22 Start_7)))
   (Start_1 Int (y 1 (+ Start_20 Start_19) (* Start_22 Start_10) (abs Start_7)))
   (Start_4 Int (0 (- Start_8) (mod Start_8 Start_22) (abs Start_9) (ite StartBool_2 Start_3 Start_15)))
   (Start_12 Int (2 x (- Start_11) (+ Start_7 Start_12) (div Start_12 Start_7) (mod Start_6 Start_3) (abs Start_1) (ite StartBool_8 Start_9 Start_5)))
   (Start_7 Int (1 4 (- Start Start_1) (* Start Start_8) (div Start_8 Start_9) (mod Start_8 Start_1) (ite StartBool_4 Start Start_10)))
   (Start_13 Int (x 0 (- Start_10) (- Start_4 Start) (mod Start_2 Start_7)))
   (StartBool_11 Bool (false (not StartBool) (or StartBool_1 StartBool_5) (< Start_17 Start_15) (<= Start_14 Start_15) (> Start_8 Start_16)))
   (Start_10 Int (1 (- Start_5 Start_11) (div Start_1 Start_12) (abs Start_1) (ite StartBool_2 Start_7 Start_13)))
   (StartBool_6 Bool (false true (not StartBool_2) (and StartBool_7 StartBool) (or StartBool_2 StartBool_5) (= Start_2 Start_6) (>= Start_7 Start_2)))
   (StartBool_8 Bool (false true (< Start_2 Start_1) (> Start_6 Start_5)))
   (StartBool_5 Bool (true (not StartBool_2) (and StartBool_6 StartBool_1) (< Start_4 Start_2) (<= Start_5 Start_5)))
   (Start_22 Int (1 4 5 (- Start_12 Start_16) (* Start_4 Start_16) (mod Start_6 Start_14) (abs Start_12) (ite StartBool_9 Start_16 Start_16)))
   (StartBool_3 Bool (false true (and StartBool_4 StartBool_5) (or StartBool_1 StartBool_3) (< Start_2 Start_2) (= Start_1 Start_3)))
   (Start_2 Int (3 (- Start_2) (- Start_4 Start_3) (+ Start_3 Start_4) (* Start_3 Start_4) (mod Start_5 Start_2) (abs Start_1) (ite StartBool_2 Start_3 Start_5)))
   (Start_6 Int (y 4 (- Start_8 Start_8) (div Start_6 Start_11) (mod Start_10 Start_10) (abs Start_7)))
   (StartBool_4 Bool (false (not StartBool) (and StartBool StartBool_9) (or StartBool_1 StartBool_9) (< Start_1 Start_5)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool_1) (or StartBool_1 StartBool) (< Start_2 Start) (<= Start_3 Start_2) (>= Start_3 Start_2) (> Start Start)))
   (Start_11 Int (x (- Start) (mod Start_3 Start_13) (ite StartBool_2 Start Start_5)))
   (Start_3 Int (3 x 4 2 (* Start Start) (div Start_3 Start) (abs Start_2)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_3) (= Start_4 Start_4) (>= Start Start_2)))
   (Start_9 Int (3 4 y 2 5 (- Start_8) (- Start Start_14) (+ Start_4 Start_2) (div Start_2 Start_14)))
   (Start_18 Int (2 (- Start_9) (* Start_3 Start_9) (div Start_6 Start_13) (abs Start_8) (ite StartBool_9 Start_21 Start_10)))
   (Start_8 Int (2 0 (mod Start_4 Start_14) (abs Start_2)))
   (StartBool_7 Bool (false (not StartBool_3) (and StartBool StartBool_3) (< Start_8 Start_11) (<= Start_11 Start_12)))
   (Start_14 Int (0 3 (- Start_7 Start_11) (* Start_7 Start_13) (mod Start_10 Start_4) (abs Start_9)))
   (Start_19 Int (4 (- Start_20) (* Start_10 Start_7) (mod Start_2 Start_1) (abs Start_19) (ite StartBool_2 Start_19 Start_12)))
   (StartBool_9 Bool (false (and StartBool StartBool) (or StartBool StartBool_2) (< Start_8 Start_15) (<= Start_3 Start_13) (>= Start_11 Start_15)))
   (Start_5 Int (4 x (- Start_16 Start_4) (* Start_11 Start_4) (abs Start_7)))
   (Start_17 Int (0 (div Start_18 Start_14) (mod Start_9 Start_18) (ite StartBool_1 Start_7 Start_19)))
   (Start_21 Int (x 5 (- Start_19) (- Start_1 Start_9) (+ Start_16 Start_15) (div Start_10 Start_21)))
   (Start_16 Int (0 y (- Start_3) (- Start_6 Start_13) (+ Start_15 Start_3) (* Start_17 Start_17) (div Start_3 Start_17) (abs Start_17)))
   (Start_15 Int (4 3 (- Start_1) (+ Start_11 Start_4) (* Start Start_14) (div Start_10 Start_12) (abs Start_13) (ite StartBool_4 Start_4 Start_10)))
   (Start_20 Int (5 (+ Start_4 Start_16) (* Start_3 Start_14) (div Start_17 Start_8) (abs Start_18) (ite StartBool_8 Start_2 Start_16)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div (abs (div y 5)) 3))))

(check-synth)
