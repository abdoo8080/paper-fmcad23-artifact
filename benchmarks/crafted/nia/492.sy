(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (StartBool_5 Bool) (Start_18 Int) (Start_17 Int) (Start_15 Int) (StartBool_2 Bool) (Start_4 Int) (Start_13 Int) (StartBool_1 Bool) (Start_11 Int) (Start_3 Int) (Start_6 Int) (Start_16 Int) (Start_7 Int) (Start_20 Int) (Start_9 Int) (Start_19 Int) (StartBool_4 Bool) (Start_2 Int) (Start_12 Int) (Start_21 Int) (Start_8 Int) (Start_10 Int) (StartBool_3 Bool) (Start_5 Int) (Start_14 Int))
  ((Start Int (4 y 2 1 (- Start_1) (* Start_1 Start_1) (div Start_1 Start_2) (abs Start_2) (ite StartBool_1 Start_3 Start_1)))
   (StartBool Bool (false true (not StartBool_1) (<= Start_7 Start_2) (= Start_17 Start) (>= Start_4 Start_12) (> Start_4 Start)))
   (Start_1 Int (x y (- Start_8) (- Start_9 Start_12) (* Start_4 Start_18) (div Start_5 Start_2) (mod Start_20 Start_9)))
   (StartBool_5 Bool (false (and StartBool_5 StartBool_4) (> Start_20 Start_3)))
   (Start_18 Int (x (- Start_3) (- Start_15 Start_19) (+ Start_20 Start) (div Start_15 Start_14) (abs Start_4) (ite StartBool_3 Start_19 Start_17)))
   (Start_17 Int (x 0 2 (- Start_15) (+ Start_7 Start_10) (* Start_1 Start_20) (div Start_8 Start_18)))
   (Start_15 Int (3 1 (* Start_10 Start_2) (mod Start_3 Start_1) (ite StartBool_2 Start_11 Start_16)))
   (StartBool_2 Bool (true false (not StartBool) (or StartBool StartBool_2) (< Start_5 Start_2) (= Start_12 Start_8) (>= Start_11 Start_15) (> Start_9 Start_5)))
   (Start_4 Int (x (- Start) (+ Start_2 Start_13) (div Start Start_8) (mod Start_5 Start_7) (ite StartBool_1 Start_5 Start_3)))
   (Start_13 Int (4 (- Start) (* Start_6 Start_4) (div Start_4 Start_4) (abs Start_3) (ite StartBool Start_4 Start_9)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool StartBool_2) (or StartBool_2 StartBool) (< Start_4 Start_4) (<= Start_2 Start_5) (= Start_5 Start_5) (> Start_1 Start_3)))
   (Start_11 Int (0 4 (- Start_10 Start_7) (+ Start_4 Start_10) (div Start_12 Start_7) (mod Start_8 Start_7) (abs Start_5) (ite StartBool Start_13 Start_3)))
   (Start_3 Int (y 5 0 x 2 3 (mod Start_1 Start) (abs Start_2)))
   (Start_6 Int (4 (+ Start_3 Start_4) (mod Start_4 Start_7) (abs Start_4)))
   (Start_16 Int (5 x (+ Start_13 Start_10) (abs Start_14) (ite StartBool_1 Start_13 Start_16)))
   (Start_7 Int (4 (- Start_3) (- Start Start_5) (* Start_8 Start_2) (mod Start Start_9)))
   (Start_20 Int (2 3 4 (- Start_8) (- Start_14 Start_18) (+ Start_15 Start_18) (* Start_3 Start_5) (abs Start_6) (ite StartBool Start_14 Start_18)))
   (Start_9 Int (y 5 (+ Start_1 Start_3) (div Start Start_3) (abs Start)))
   (Start_19 Int (x y 2 (+ Start_20 Start_4) (* Start_12 Start_1) (abs Start_15)))
   (StartBool_4 Bool (true (and StartBool_3 StartBool) (or StartBool_5 StartBool) (< Start_9 Start_10) (= Start_6 Start_18) (> Start_12 Start_21)))
   (Start_2 Int (2 3 (- Start_14 Start_9) (* Start_17 Start_18) (div Start_10 Start_13) (abs Start_2)))
   (Start_12 Int (4 x 3 (+ Start_2 Start_4) (mod Start_8 Start_12) (abs Start_2) (ite StartBool_1 Start_6 Start_7)))
   (Start_21 Int (4 3 0 (- Start_15) (- Start_11 Start_21) (+ Start_15 Start_13) (* Start_19 Start_10) (div Start_15 Start_2) (mod Start_5 Start_9) (abs Start_13) (ite StartBool_2 Start_9 Start_20)))
   (Start_8 Int (2 4 y (- Start_10) (- Start_7 Start_5) (ite StartBool_1 Start_9 Start_11)))
   (Start_10 Int (3 x 1 0 5 (- Start_2 Start) (+ Start_11 Start_14) (div Start_14 Start_10)))
   (StartBool_3 Bool (false (not StartBool_4) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_3) (= Start_14 Start_11) (>= Start_18 Start_20)))
   (Start_5 Int (3 y (mod Start_2 Start_6) (abs Start_3) (ite StartBool_2 Start Start_5)))
   (Start_14 Int (5 (- Start Start_4) (div Start_12 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (div 1 0) 4)))

(check-synth)
