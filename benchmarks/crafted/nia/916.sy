(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_7 Int) (Start_19 Int) (Start_12 Int) (StartBool_6 Bool) (StartBool_5 Bool) (StartBool_1 Bool) (StartBool_2 Bool) (Start_6 Int) (Start_9 Int) (Start_3 Int) (Start_14 Int) (Start_17 Int) (Start_8 Int) (Start_21 Int) (Start_18 Int) (Start_15 Int) (Start_10 Int) (Start_11 Int) (Start_5 Int) (Start_1 Int) (StartBool_4 Bool) (StartBool_8 Bool) (StartBool_3 Bool) (Start_4 Int) (Start_16 Int) (Start_2 Int) (Start_20 Int) (StartBool_7 Bool))
  ((Start Int (0 5 (- Start) (- Start_1 Start) (div Start_2 Start) (mod Start_1 Start_3)))
   (StartBool Bool (false true (<= Start_10 Start_21) (= Start_2 Start_20) (>= Start_1 Start_5)))
   (Start_13 Int (y (- Start_6) (* Start_14 Start_15) (mod Start_8 Start_11) (ite StartBool_2 Start Start_10)))
   (Start_7 Int (5 1 x (- Start_2) (+ Start_2 Start_6) (* Start_10 Start_11) (abs Start_4)))
   (Start_19 Int (2 5 (- Start_4) (+ Start_14 Start_4) (* Start_3 Start_11) (ite StartBool_6 Start_5 Start_10)))
   (Start_12 Int (2 (- Start_11 Start_6) (+ Start_6 Start) (div Start Start_7) (abs Start_8)))
   (StartBool_6 Bool (false true (and StartBool_5 StartBool_6) (<= Start Start_12) (= Start_3 Start_9)))
   (StartBool_5 Bool (false true (not StartBool_5) (and StartBool_5 StartBool_6) (or StartBool StartBool) (< Start_4 Start_13) (<= Start_1 Start_9) (= Start_8 Start_13) (> Start_1 Start_14)))
   (StartBool_1 Bool (true (and StartBool StartBool) (<= Start_5 Start_6) (= Start_1 Start)))
   (StartBool_2 Bool (false true (and StartBool_2 StartBool_3) (or StartBool_4 StartBool_5) (<= Start_2 Start) (>= Start_4 Start_11)))
   (Start_6 Int (3 (- Start_3 Start_5) (+ Start_2 Start_7) (div Start_8 Start_2) (ite StartBool Start_2 Start)))
   (Start_9 Int (y (- Start_1) (- Start_4 Start) (+ Start_1 Start_4) (* Start_4 Start_7) (div Start_2 Start_5) (abs Start_2) (ite StartBool_1 Start_2 Start_5)))
   (Start_3 Int (4 3 (- Start_4) (- Start_4 Start_2) (* Start Start_4) (div Start_1 Start_3) (ite StartBool_1 Start Start_3)))
   (Start_14 Int (0 (- Start_9 Start_12) (abs Start_4)))
   (Start_17 Int (y 3 0 5 (- Start_19) (* Start_2 Start_17) (div Start_4 Start_9)))
   (Start_8 Int (x (+ Start_5 Start_4) (* Start_2 Start_6) (div Start_8 Start_3) (mod Start_9 Start_4)))
   (Start_21 Int (4 (div Start_16 Start_20) (mod Start_20 Start_20) (abs Start_18) (ite StartBool_7 Start_9 Start_13)))
   (Start_18 Int (5 4 2 (- Start_15) (div Start_12 Start_4) (mod Start_11 Start_19) (ite StartBool_3 Start_5 Start_5)))
   (Start_15 Int (3 (* Start_12 Start_13) (div Start_2 Start_12) (mod Start_3 Start_5) (abs Start_1) (ite StartBool_2 Start_2 Start)))
   (Start_10 Int (5 (- Start_13) (- Start_7 Start_11) (+ Start_3 Start_10) (* Start_1 Start_11) (div Start_12 Start_5) (mod Start_15 Start_3) (abs Start_12)))
   (Start_11 Int (x (- Start_2) (+ Start_11 Start_8) (div Start_2 Start_11) (mod Start_1 Start_8) (abs Start) (ite StartBool_2 Start_4 Start_12)))
   (Start_5 Int (x (- Start_10) (- Start_10 Start_5) (+ Start_4 Start_5) (* Start_8 Start_11) (div Start_13 Start_6) (ite StartBool_6 Start_2 Start_11)))
   (Start_1 Int (2 5 y (- Start_3 Start_17) (+ Start_13 Start_20) (abs Start_7) (ite StartBool_3 Start_15 Start_15)))
   (StartBool_4 Bool (true (not StartBool_5) (> Start_14 Start_10)))
   (StartBool_8 Bool (false (and StartBool StartBool_7) (or StartBool_7 StartBool_5) (< Start_8 Start_5) (<= Start_3 Start_16) (= Start_19 Start_16)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_6) (or StartBool_4 StartBool_2) (= Start_8 Start_9) (>= Start_13 Start_1) (> Start_8 Start_5)))
   (Start_4 Int (y 2 4 (- Start_16 Start_13) (ite StartBool_5 Start_6 Start)))
   (Start_16 Int (1 0 (- Start_15) (* Start Start_3) (ite StartBool_5 Start_6 Start_3)))
   (Start_2 Int (0 3 y 5 4 1 (+ Start_4 Start_10) (div Start_17 Start_3) (mod Start_6 Start_17) (abs Start_18) (ite StartBool_3 Start_10 Start_17)))
   (Start_20 Int (2 1 (- Start_3) (+ Start_19 Start_18) (* Start_19 Start_2) (div Start_21 Start_15) (mod Start_2 Start_5) (abs Start_16) (ite StartBool_6 Start_19 Start_10)))
   (StartBool_7 Bool (false true (not StartBool_8) (>= Start_21 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod 5 x))))

(check-synth)
