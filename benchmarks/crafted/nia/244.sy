(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_21 Int) (StartBool_1 Bool) (Start_6 Int) (Start_17 Int) (Start_10 Int) (Start_4 Int) (StartBool_4 Bool) (StartBool_8 Bool) (Start_14 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_9 Int) (Start_5 Int) (Start_3 Int) (Start_7 Int) (Start_2 Int) (Start_8 Int) (StartBool_6 Bool) (Start_20 Int) (Start_18 Int) (Start_1 Int) (Start_19 Int) (Start_11 Int) (Start_12 Int) (Start_16 Int) (StartBool_7 Bool) (Start_15 Int) (StartBool_5 Bool) (Start_13 Int))
  ((Start Int (4 y (- Start Start_1) (* Start_1 Start) (div Start Start_1) (mod Start_1 Start_2) (abs Start_1) (ite StartBool_1 Start_3 Start)))
   (StartBool Bool (true (not StartBool_1) (>= Start_21 Start_2)))
   (Start_21 Int (5 1 (- Start_4 Start_20) (mod Start_17 Start_18) (abs Start_13)))
   (StartBool_1 Bool (false true (not StartBool_1) (or StartBool_1 StartBool) (= Start_1 Start_5) (>= Start_2 Start_4)))
   (Start_6 Int (x (- Start_1 Start) (+ Start_4 Start_6) (ite StartBool_4 Start_5 Start_7)))
   (Start_17 Int (5 1 (- Start_5 Start_6) (div Start_20 Start_3)))
   (Start_10 Int (2 (div Start_10 Start_3)))
   (Start_4 Int (0 1 x (- Start_10 Start_1) (div Start_6 Start)))
   (StartBool_4 Bool (false true (not StartBool_4) (and StartBool_1 StartBool_4) (or StartBool_2 StartBool) (< Start Start_3) (<= Start_1 Start_6) (= Start_7 Start_5) (>= Start_6 Start)))
   (StartBool_8 Bool (false (or StartBool_3 StartBool_4) (< Start_20 Start_7) (<= Start_18 Start_18) (> Start_19 Start_1)))
   (Start_14 Int (0 5 4 2 (- Start_15 Start_15) (+ Start_4 Start_11) (div Start_5 Start_4) (ite StartBool_4 Start_16 Start_2)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool_4) (= Start_7 Start_8) (>= Start Start_6) (> Start_1 Start_8)))
   (StartBool_2 Bool (false true (or StartBool_3 StartBool) (< Start_1 Start_3) (>= Start_6 Start)))
   (Start_9 Int (x (+ Start_8 Start_2) (* Start_1 Start_8) (div Start_2 Start_6) (abs Start_6)))
   (Start_5 Int (5 (- Start_2) (ite StartBool_2 Start Start_1)))
   (Start_3 Int (1 (- Start_4 Start_4) (mod Start_1 Start_4) (ite StartBool_1 Start_5 Start_1)))
   (Start_7 Int (1 (- Start_4) (- Start_6 Start_5) (* Start_1 Start_6) (abs Start_1) (ite StartBool_1 Start_6 Start_2)))
   (Start_2 Int (5 (- Start) (- Start_1 Start_6) (+ Start_9 Start_10) (* Start Start) (div Start_10 Start_4) (ite StartBool_5 Start_5 Start_3)))
   (Start_8 Int (4 (div Start_8 Start_6) (abs Start_9)))
   (StartBool_6 Bool (true (not StartBool_5) (and StartBool_6 StartBool_7) (>= Start_5 Start_4) (> Start_4 Start_7)))
   (Start_20 Int (0 (- Start_19 Start_8) (div Start_4 Start_12) (ite StartBool_5 Start_9 Start_9)))
   (Start_18 Int (1 x 4 (- Start_9) (- Start_9 Start_6) (+ Start_19 Start_8) (* Start_19 Start_11) (abs Start_5)))
   (Start_1 Int (y (div Start_5 Start_11) (mod Start_3 Start) (abs Start_12) (ite StartBool_3 Start_2 Start_10)))
   (Start_19 Int (2 (- Start_14) (- Start_8 Start_8) (div Start_1 Start_20) (mod Start_8 Start_6) (abs Start_14)))
   (Start_11 Int (0 y (+ Start Start_13) (* Start_14 Start_1) (abs Start_9)))
   (Start_12 Int (0 2 (div Start_1 Start)))
   (Start_16 Int (y 4 3 (- Start_14) (* Start_4 Start_3) (mod Start_11 Start_11) (ite StartBool_6 Start_3 Start)))
   (StartBool_7 Bool (true false (not StartBool_1) (or StartBool_8 StartBool_7) (< Start_13 Start_17) (>= Start_6 Start_18)))
   (Start_15 Int (5 0 (- Start_9 Start_17) (+ Start_14 Start_19) (mod Start_13 Start_20) (abs Start_15)))
   (StartBool_5 Bool (true (< Start_6 Start_7) (<= Start_6 Start) (>= Start_1 Start_7)))
   (Start_13 Int (4 1 (- Start_3) (- Start_20 Start) (+ Start_12 Start_9) (* Start_6 Start_19) (div Start_21 Start_21) (mod Start_17 Start_2)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 1 (mod (- x 3) x))))

(check-synth)
