(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_9 Int) (Start_11 Int) (Start_12 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_13 Int) (StartBool_5 Bool) (Start_1 Int) (Start_2 Int) (Start_4 Int) (Start_6 Int) (Start_7 Int) (Start_3 Int) (Start_8 Int) (StartBool_1 Bool) (Start_5 Int) (Start_10 Int) (StartBool_3 Bool))
  ((Start Int (y (- Start_1) (- Start_2 Start_1) (* Start Start_1) (mod Start_2 Start_1) (ite StartBool Start Start_2)))
   (StartBool Bool (true (or StartBool StartBool) (< Start_3 Start_6) (<= Start_5 Start_4) (>= Start_5 Start_7)))
   (Start_9 Int (1 3 (- Start_8) (+ Start_5 Start_13) (* Start_3 Start_7) (abs Start_12) (ite StartBool_5 Start_5 Start_8)))
   (Start_11 Int (2 (+ Start_3 Start_4) (ite StartBool_4 Start_10 Start_9)))
   (Start_12 Int (4 5 y 3 1 x (- Start_11 Start_8) (* Start_10 Start) (mod Start_2 Start_5) (ite StartBool Start Start_12)))
   (StartBool_2 Bool (true (< Start_4 Start_8) (<= Start_8 Start_10) (>= Start_12 Start_1)))
   (StartBool_4 Bool (true false (and StartBool StartBool_4) (> Start_4 Start_4)))
   (Start_13 Int (1 x 3 (- Start_5) (* Start_3 Start_13) (mod Start_1 Start_6)))
   (StartBool_5 Bool (false (or StartBool_2 StartBool_1)))
   (Start_1 Int (x 1 (- Start_2 Start_2) (+ Start_3 Start_4)))
   (Start_2 Int (4 (- Start_1) (+ Start_1 Start) (mod Start_2 Start_2) (ite StartBool Start Start)))
   (Start_4 Int (4 (- Start_1 Start_3) (+ Start Start_5) (* Start_1 Start_4) (abs Start_4)))
   (Start_6 Int (1 2 (- Start_3 Start_5) (+ Start_2 Start_4) (* Start Start_1) (mod Start_4 Start_2) (abs Start_3)))
   (Start_7 Int (3 (- Start_1) (- Start_5 Start_8) (+ Start Start_2) (* Start_5 Start_5) (div Start_7 Start_8) (abs Start)))
   (Start_3 Int (2 (- Start_4) (* Start_5 Start_6) (div Start_6 Start_4) (abs Start)))
   (Start_8 Int (4 (- Start_7) (+ Start_3 Start_4) (* Start_8 Start_9) (mod Start_9 Start_8) (abs Start_10) (ite StartBool Start_1 Start_9)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_2 StartBool_3) (or StartBool StartBool_1) (<= Start_12 Start_4) (> Start_3 Start_3)))
   (Start_5 Int (5 (- Start_3 Start_3) (* Start_2 Start_5) (abs Start_4)))
   (Start_10 Int (0 (- Start_9 Start_1) (* Start_11 Start) (div Start_12 Start_9) (mod Start_7 Start_7) (abs Start_6) (ite StartBool_1 Start_6 Start_5)))
   (StartBool_3 Bool (false true (or StartBool_4 StartBool_4) (<= Start_8 Start_7) (= Start_12 Start_13) (>= Start_3 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod 4 (mod x 2))))

(check-synth)
