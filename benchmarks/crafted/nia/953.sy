(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_6 Bool) (Start_13 Int) (Start_7 Int) (Start_10 Int) (Start_6 Int) (Start_9 Int) (Start_14 Int) (Start_17 Int) (Start_16 Int) (Start_8 Int) (StartBool_12 Bool) (Start_12 Int) (StartBool_10 Bool) (StartBool_3 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_3 Int) (StartBool_11 Bool) (StartBool_4 Bool) (StartBool_7 Bool) (Start_4 Int) (StartBool_5 Bool) (StartBool_9 Bool) (Start_11 Int) (Start_5 Int) (Start_15 Int) (StartBool_8 Bool) (StartBool_13 Bool))
  ((Start Int (4 (- Start_1) (mod Start_2 Start_1) (ite StartBool_1 Start_1 Start_3)))
   (StartBool Bool (true false (and StartBool_12 StartBool_8) (or StartBool_6 StartBool_8) (< Start_6 Start) (<= Start_17 Start_4) (= Start_1 Start_5) (>= Start_11 Start_15) (> Start_8 Start_3)))
   (Start_1 Int (5 y (- Start_7 Start_9) (* Start_6 Start_3) (div Start_9 Start_2) (ite StartBool_5 Start_10 Start_9)))
   (Start_2 Int (y 0 1 (- Start_10 Start_13) (+ Start_15 Start_2) (div Start_6 Start_16) (abs Start_17)))
   (StartBool_6 Bool (false true (not StartBool_3) (or StartBool_7 StartBool_3) (< Start_5 Start_3) (<= Start Start_7) (> Start_9 Start_12)))
   (Start_13 Int (0 (* Start_7 Start) (ite StartBool_6 Start_3 Start_13)))
   (Start_7 Int (x 1 2 0 (- Start_4 Start_1) (+ Start_3 Start_4) (* Start_3 Start_6) (div Start_7 Start_3) (abs Start_5) (ite StartBool_3 Start_2 Start_3)))
   (Start_10 Int (3 y 0 4 (+ Start_7 Start_6) (* Start_5 Start_11) (div Start_10 Start_12) (ite StartBool_4 Start_3 Start)))
   (Start_6 Int (5 4 y (- Start_10) (+ Start_7 Start_2) (* Start_7 Start_2) (mod Start Start_5) (ite StartBool_3 Start_5 Start_8)))
   (Start_9 Int (0 y (div Start_1 Start_7) (mod Start Start_6) (abs Start_8) (ite StartBool_2 Start_4 Start_3)))
   (Start_14 Int (5 (- Start_5 Start_10) (+ Start_2 Start_10) (div Start_14 Start_12) (abs Start_12)))
   (Start_17 Int (4 2 (- Start_10 Start_5) (* Start_12 Start_1) (abs Start_7)))
   (Start_16 Int (2 1 4 (- Start_2) (- Start_13 Start_4) (div Start_8 Start_4)))
   (Start_8 Int (3 (- Start_2) (+ Start_6 Start_2) (div Start Start_4) (abs Start_5) (ite StartBool_4 Start_8 Start_9)))
   (StartBool_12 Bool (false (and StartBool_13 StartBool_9) (< Start_13 Start_15) (>= Start_9 Start_2)))
   (Start_12 Int (0 (- Start_2) (mod Start_2 Start_2) (ite StartBool_5 Start_9 Start_13)))
   (StartBool_10 Bool (true false (or StartBool_2 StartBool_11) (<= Start_1 Start_15) (> Start_7 Start_12)))
   (StartBool_3 Bool (false (< Start_1 Start_8) (<= Start_3 Start_3) (= Start_4 Start)))
   (StartBool_2 Bool (true false (not StartBool_1) (or StartBool_2 StartBool_1) (<= Start_3 Start_7) (>= Start_4 Start)))
   (StartBool_1 Bool (true (not StartBool_9) (and StartBool_11 StartBool_4) (< Start_5 Start_3) (= Start_6 Start_15)))
   (Start_3 Int (4 (- Start_4) (+ Start_5 Start_5) (* Start_6 Start) (ite StartBool_2 Start_5 Start_3)))
   (StartBool_11 Bool (false (not StartBool_10) (or StartBool_11 StartBool_11) (<= Start_7 Start_7) (>= Start_2 Start_12) (> Start_2 Start_10)))
   (StartBool_4 Bool (true (not StartBool) (or StartBool_2 StartBool_4) (< Start_7 Start_2) (<= Start_2 Start_4) (= Start_8 Start_3) (> Start_1 Start_3)))
   (StartBool_7 Bool (false (or StartBool_7 StartBool_6) (< Start_6 Start_12) (<= Start_9 Start_4) (= Start_14 Start_10) (>= Start_13 Start_8) (> Start_6 Start_11)))
   (Start_4 Int (5 (- Start_1 Start_16) (* Start_13 Start_6) (div Start_8 Start_14) (mod Start_6 Start_13) (ite StartBool_12 Start_9 Start_17)))
   (StartBool_5 Bool (true (and StartBool_4 StartBool_7) (or StartBool_8 StartBool_1) (< Start_10 Start_10) (>= Start_9 Start_3)))
   (StartBool_9 Bool (false (and StartBool_5 StartBool_4) (< Start_6 Start_2) (<= Start_9 Start_5) (> Start Start_12)))
   (Start_11 Int (2 (* Start_8 Start_15) (div Start_7 Start_9) (mod Start_8 Start_13) (abs Start_3)))
   (Start_5 Int (2 (- Start_13 Start_14) (ite StartBool Start_1 Start_12)))
   (Start_15 Int (2 0 x y (- Start_3) (+ Start Start_15) (mod Start_7 Start_11) (abs Start_13) (ite StartBool_9 Start_6 Start_8)))
   (StartBool_8 Bool (false (or StartBool_9 StartBool_10) (< Start_8 Start_5) (<= Start_14 Start_13) (= Start_2 Start_6) (> Start_3 Start_5)))
   (StartBool_13 Bool (true (and StartBool StartBool_8) (< Start_4 Start_16) (>= Start_17 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div 0 (- x)))))

(check-synth)
