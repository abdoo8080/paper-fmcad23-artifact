(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_16 Int) (Start_17 Int) (StartBool_9 Bool) (StartBool_2 Bool) (StartBool_8 Bool) (Start_14 Int) (Start_13 Int) (StartBool_4 Bool) (StartBool_6 Bool) (StartBool_7 Bool) (Start_12 Int) (Start_7 Int) (Start_4 Int) (StartBool_1 Bool) (Start_3 Int) (Start_15 Int) (Start_2 Int) (Start_5 Int) (Start_11 Int) (Start_10 Int) (Start_9 Int) (Start_1 Int) (StartBool_3 Bool) (Start_6 Int) (Start_8 Int) (StartBool_5 Bool))
  ((Start Int (2 x (- Start_1) (- Start_1 Start_2) (abs Start)))
   (StartBool Bool (false true (not StartBool_2) (and StartBool_1 StartBool) (or StartBool_5 StartBool_3) (< Start_3 Start_2) (<= Start_3 Start_17) (= Start_15 Start_16) (>= Start_16 Start_14) (> Start_13 Start)))
   (Start_16 Int (y (- Start_10 Start_11) (+ Start_5 Start_17) (abs Start_5) (ite StartBool_7 Start_9 Start_6)))
   (Start_17 Int (x 0 3 5 (- Start_14 Start) (+ Start Start_7) (ite StartBool_8 Start_6 Start_7)))
   (StartBool_9 Bool (true false (or StartBool_9 StartBool_6) (= Start_6 Start_7)))
   (StartBool_2 Bool (false true (or StartBool_9 StartBool_2) (>= Start_8 Start_5)))
   (StartBool_8 Bool (true (and StartBool_7 StartBool_7) (or StartBool_5 StartBool_3) (< Start_2 Start_2) (>= Start_5 Start_3) (> Start_12 Start_5)))
   (Start_14 Int (5 (+ Start_14 Start_13) (* Start_15 Start_10) (div Start_5 Start_7)))
   (Start_13 Int (4 (- Start Start_14) (+ Start_4 Start_9) (mod Start Start) (abs Start_11)))
   (StartBool_4 Bool (true false (not StartBool_4) (and StartBool StartBool_8) (or StartBool_8 StartBool_6) (= Start_12 Start_9) (>= Start_4 Start_6)))
   (StartBool_6 Bool (false true (not StartBool_2) (and StartBool_7 StartBool_7)))
   (StartBool_7 Bool (true false (and StartBool_6 StartBool_6) (or StartBool_4 StartBool_5) (< Start_1 Start_8) (<= Start_6 Start) (>= Start_11 Start) (> Start_8 Start_10)))
   (Start_12 Int (1 (- Start_1) (* Start_11 Start_2) (div Start Start_2) (mod Start_10 Start_12) (abs Start_13)))
   (Start_7 Int (5 (- Start_2) (* Start_15 Start_11) (div Start_5 Start_16) (abs Start_4) (ite StartBool_7 Start_11 Start_8)))
   (Start_4 Int (4 5 y (- Start_4) (* Start_3 Start_2) (div Start_3 Start) (ite StartBool_1 Start_1 Start_2)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool) (or StartBool StartBool) (< Start_4 Start) (>= Start_3 Start_2) (> Start_3 Start_3)))
   (Start_3 Int (4 (* Start_4 Start) (mod Start Start_3)))
   (Start_15 Int (4 (- Start_7) (- Start_2 Start_3) (+ Start_3 Start_2) (* Start_1 Start_3)))
   (Start_2 Int (y (- Start_2) (- Start_1 Start_3) (div Start_1 Start_3) (mod Start_2 Start_1) (abs Start_4) (ite StartBool Start_4 Start_1)))
   (Start_5 Int (1 (- Start_5) (+ Start_2 Start_6) (* Start_1 Start_6) (div Start_7 Start_1) (mod Start_7 Start_4) (ite StartBool_2 Start_8 Start_9)))
   (Start_11 Int (2 x (- Start_11 Start_2) (div Start Start_9) (mod Start_1 Start_3) (abs Start_10) (ite StartBool_5 Start_6 Start_11)))
   (Start_10 Int (y (- Start_8 Start_2) (+ Start_4 Start_1) (* Start_4 Start_6) (div Start_9 Start_1) (mod Start_7 Start_3) (abs Start_2) (ite StartBool_3 Start_3 Start_4)))
   (Start_9 Int (4 x 5 (- Start_7 Start_8) (* Start_4 Start_4) (mod Start_4 Start_6)))
   (Start_1 Int (5 (- Start_2 Start_1) (* Start Start_5) (div Start_4 Start_1)))
   (StartBool_3 Bool (false true (and StartBool StartBool_2) (or StartBool_4 StartBool_2) (<= Start_4 Start_4) (= Start_1 Start_6) (>= Start_7 Start_11) (> Start_7 Start_8)))
   (Start_6 Int (4 2 y (- Start_4) (- Start_11 Start_9) (* Start_17 Start_14) (div Start_12 Start) (abs Start_16) (ite StartBool_4 Start Start_16)))
   (Start_8 Int (0 (- Start_5) (- Start Start_1) (+ Start_7 Start_8) (mod Start_10 Start_2) (abs Start) (ite StartBool Start_2 Start_3)))
   (StartBool_5 Bool (false (and StartBool StartBool_2) (or StartBool_6 StartBool_7) (< Start_3 Start_6) (= Start_7 Start_7) (>= Start_6 Start_6) (> Start_2 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (+ (mod 4 y) 3) y)))

(check-synth)
