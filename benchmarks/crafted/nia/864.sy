(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_20 Int) (Start_14 Int) (Start_16 Int) (StartBool_1 Bool) (Start_21 Int) (Start_13 Int) (Start_1 Int) (StartBool_3 Bool) (Start_15 Int) (Start_9 Int) (Start_2 Int) (Start_3 Int) (Start_19 Int) (Start_4 Int) (Start_8 Int) (StartBool_2 Bool) (StartBool_5 Bool) (Start_5 Int) (StartBool_4 Bool) (StartBool_6 Bool) (Start_10 Int) (Start_7 Int) (Start_11 Int) (Start_17 Int) (Start_6 Int) (Start_12 Int))
  ((Start Int (3 (- Start_1) (- Start_1 Start_1) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (false true (not StartBool_3) (or StartBool_4 StartBool_3) (< Start Start_9) (<= Start_6 Start_14) (= Start_10 Start) (>= Start_2 Start) (> Start_15 Start_15)))
   (Start_18 Int (x 3 4 (abs Start)))
   (Start_20 Int (1 0 (- Start_5) (- Start_13 Start_5) (+ Start_7 Start_4) (mod Start_6 Start)))
   (Start_14 Int (x 1 3 2 (+ Start_4 Start_18) (mod Start_19 Start_6) (abs Start) (ite StartBool_6 Start_16 Start_13)))
   (Start_16 Int (1 4 0 3 5 (- Start_2 Start_9) (+ Start_17 Start_6) (div Start_17 Start_8) (ite StartBool_1 Start_1 Start_15)))
   (StartBool_1 Bool (true (not StartBool_3) (< Start_12 Start_9)))
   (Start_21 Int (1 (- Start_2) (- Start_3 Start_16) (+ Start_18 Start_10) (abs Start_14)))
   (Start_13 Int (2 (- Start) (+ Start_11 Start_7) (div Start_9 Start_5) (mod Start Start_11) (abs Start_1) (ite StartBool_2 Start_3 Start_1)))
   (Start_1 Int (3 (- Start_2) (- Start_12 Start_13) (mod Start_7 Start_11) (ite StartBool_2 Start_13 Start_5)))
   (StartBool_3 Bool (false true (not StartBool_2) (or StartBool StartBool_2) (< Start_2 Start_6) (<= Start_10 Start_8) (= Start_9 Start_12) (>= Start_12 Start_1) (> Start_13 Start_10)))
   (Start_15 Int (0 2 (- Start_2 Start_7) (+ Start_12 Start_16) (* Start_2 Start_10) (div Start_12 Start_15) (ite StartBool_5 Start_9 Start_12)))
   (Start_9 Int (4 1 5 (+ Start_11 Start_5) (div Start_1 Start_9) (mod Start_11 Start) (ite StartBool Start_8 Start_7)))
   (Start_2 Int (x 0 (- Start_3) (+ Start_1 Start_3) (div Start_1 Start_3) (mod Start_1 Start)))
   (Start_3 Int (1 (+ Start_4 Start_4) (* Start_2 Start) (div Start_4 Start)))
   (Start_19 Int (0 (- Start_5) (- Start_14 Start_7) (+ Start_13 Start_12) (div Start_12 Start_13) (mod Start Start_18) (ite StartBool Start_19 Start_14)))
   (Start_4 Int (y (* Start_5 Start_2) (div Start Start) (mod Start_6 Start_5) (abs Start_3)))
   (Start_8 Int (y x (- Start_8) (* Start_2 Start_2)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_3) (< Start_1 Start_3) (= Start_1 Start_11) (> Start_12 Start_8)))
   (StartBool_5 Bool (false (not StartBool_1) (and StartBool_3 StartBool) (< Start_6 Start_3) (>= Start_10 Start_6) (> Start_15 Start_10)))
   (Start_5 Int (1 4 (+ Start_5 Start_2) (mod Start_6 Start_4) (abs Start) (ite StartBool_2 Start_9 Start_10)))
   (StartBool_4 Bool (true false (or StartBool_2 StartBool_1) (< Start_17 Start_3) (<= Start_19 Start) (= Start_10 Start_13) (> Start_21 Start_11)))
   (StartBool_6 Bool (false (not StartBool_6) (and StartBool_1 StartBool) (or StartBool_4 StartBool_6) (<= Start_7 Start_20) (= Start_2 Start_14) (>= Start_15 Start) (> Start_20 Start_8)))
   (Start_10 Int (3 (- Start_5 Start_2) (* Start_2 Start_5) (div Start_3 Start_1) (ite StartBool_1 Start_6 Start)))
   (Start_7 Int (4 y x 2 0 3 1 (* Start_4 Start_4) (abs Start)))
   (Start_11 Int (2 (- Start_6) (* Start_4 Start_2) (mod Start_4 Start_4) (abs Start_4) (ite StartBool_1 Start_9 Start_1)))
   (Start_17 Int (2 (* Start_7 Start_11) (div Start_3 Start_16) (mod Start Start_10) (ite StartBool_4 Start_4 Start_6)))
   (Start_6 Int (0 4 (- Start_5) (* Start_7 Start_3) (ite StartBool_1 Start_6 Start_8)))
   (Start_12 Int (5 3 (+ Start_4 Start_4) (mod Start_11 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (* 4 (+ 2 x)))))

(check-synth)
