(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_10 Bool) (Start_17 Int) (Start_16 Int) (StartBool_2 Bool) (Start_15 Int) (StartBool_8 Bool) (Start_14 Int) (StartBool_9 Bool) (StartBool_4 Bool) (StartBool_7 Bool) (Start_11 Int) (Start_3 Int) (StartBool_3 Bool) (Start_1 Int) (Start_6 Int) (Start_13 Int) (Start_4 Int) (Start_8 Int) (Start_5 Int) (Start_2 Int) (StartBool_1 Bool) (Start_10 Int) (Start_7 Int) (Start_12 Int) (Start_9 Int) (StartBool_5 Bool) (StartBool_6 Bool))
  ((Start Int (3 5 (+ Start Start_1) (* Start Start) (mod Start_2 Start_3) (abs Start_2) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (false true (and StartBool StartBool) (or StartBool_2 StartBool_8) (< Start_5 Start_7) (<= Start_8 Start_10) (= Start_5 Start_14) (> Start_12 Start_4)))
   (StartBool_10 Bool (true (not StartBool_3) (and StartBool StartBool_1) (or StartBool_7 StartBool_1) (< Start_3 Start_10) (= Start_17 Start_14) (> Start_2 Start_14)))
   (Start_17 Int (1 2 3 4 (div Start_10 Start_11) (mod Start_6 Start_6) (abs Start_11)))
   (Start_16 Int (1 3 2 (* Start_10 Start_6) (abs Start_7) (ite StartBool_3 Start_1 Start_14)))
   (StartBool_2 Bool (false (and StartBool_3 StartBool_3) (< Start_12 Start_12) (<= Start_15 Start_14) (> Start_17 Start_15)))
   (Start_15 Int (5 (- Start_2) (- Start Start_13) (+ Start_4 Start_6) (div Start_4 Start_6) (mod Start_10 Start_10) (abs Start_16) (ite StartBool_5 Start_1 Start_5)))
   (StartBool_8 Bool (false true (not StartBool) (and StartBool_9 StartBool_8) (= Start_6 Start_2) (>= Start_9 Start_15)))
   (Start_14 Int (4 y (- Start_1 Start_11) (+ Start Start_7) (mod Start_15 Start_5) (abs Start_15) (ite StartBool_5 Start_10 Start_4)))
   (StartBool_9 Bool (false true (and StartBool_5 StartBool_10) (or StartBool_9 StartBool_7) (= Start_9 Start_4)))
   (StartBool_4 Bool (true (not StartBool_5) (< Start_8 Start_3) (<= Start_5 Start_13) (= Start_13 Start_14) (> Start_14 Start_6)))
   (StartBool_7 Bool (true false (not StartBool_3) (and StartBool_1 StartBool) (< Start_6 Start_8) (= Start_1 Start_8) (>= Start_2 Start_10) (> Start Start_4)))
   (Start_11 Int (4 x 0 5 3 2 1 (+ Start_13 Start_5) (div Start_9 Start_2) (mod Start_3 Start_16)))
   (Start_3 Int (3 x (- Start_4) (div Start_1 Start) (mod Start Start_3) (abs Start_1)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool) (or StartBool_4 StartBool_5)))
   (Start_1 Int (x 0 2 1 (* Start_3 Start_4) (div Start_13 Start_5) (abs Start_5)))
   (Start_6 Int (x 1 (- Start_10 Start_10) (+ Start_11 Start_9) (* Start_8 Start_8) (div Start_17 Start_10) (abs Start_4) (ite StartBool_7 Start_1 Start_9)))
   (Start_13 Int (2 x (- Start_13) (+ Start_16 Start_8) (* Start_5 Start_1) (div Start_9 Start_10) (abs Start_14) (ite StartBool Start_10 Start_17)))
   (Start_4 Int (5 2 y 1 4 0 x 3 (* Start_3 Start_4) (mod Start_2 Start_5)))
   (Start_8 Int (3 (+ Start_12 Start_3) (* Start_7 Start_3) (abs Start_4) (ite StartBool Start_15 Start_8)))
   (Start_5 Int (x (- Start_2) (- Start_5 Start_5) (div Start_4 Start_1) (abs Start_2) (ite StartBool Start_1 Start_2)))
   (Start_2 Int (5 4 (- Start_6) (* Start_7 Start_2) (mod Start_7 Start_5)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_1) (<= Start_9 Start_1) (= Start Start_11) (>= Start Start_3)))
   (Start_10 Int (x 4 1 (- Start_15 Start_6) (mod Start_8 Start_12) (ite StartBool_3 Start_9 Start_17)))
   (Start_7 Int (3 (- Start_6) (- Start_1 Start_6) (* Start_5 Start_8) (div Start_8 Start_2) (mod Start_8 Start_9) (abs Start_7) (ite StartBool Start_2 Start)))
   (Start_12 Int (4 (- Start_8 Start) (* Start_10 Start_5) (mod Start_11 Start_7) (abs Start_9) (ite StartBool_2 Start_9 Start_4)))
   (Start_9 Int (y (- Start Start) (div Start_10 Start_3) (mod Start_11 Start_9) (ite StartBool_1 Start_3 Start_7)))
   (StartBool_5 Bool (false (and StartBool_4 StartBool_2) (or StartBool_6 StartBool_7) (<= Start_11 Start_4) (= Start_6 Start_10) (>= Start_10 Start_10)))
   (StartBool_6 Bool (false true (not StartBool_4) (or StartBool_6 StartBool_1) (<= Start_7 Start_8) (> Start_7 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (mod 1 (mod y 5)))))

(check-synth)
