(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (Start_11 Int) (Start_4 Int) (Start_6 Int) (Start_2 Int) (Start_1 Int) (Start_9 Int) (StartBool_1 Bool) (Start_3 Int) (Start_7 Int) (Start_5 Int) (Start_10 Int) (Start_8 Int) (StartBool_2 Bool))
  ((Start Int (3 2 0 (- Start_1 Start_1) (* Start_1 Start) (div Start_2 Start) (abs Start_3)))
   (StartBool Bool (false true (and StartBool_1 StartBool_3) (or StartBool_1 StartBool) (<= Start_6 Start_5) (= Start_8 Start_5) (> Start_11 Start_11)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool StartBool_2) (< Start_3 Start_11) (<= Start_5 Start_2) (>= Start_8 Start_9)))
   (Start_11 Int (5 (- Start) (- Start_8 Start_8) (+ Start Start_6) (div Start_3 Start_2)))
   (Start_4 Int (2 (- Start Start_5) (+ Start_3 Start_5) (* Start_3 Start_2)))
   (Start_6 Int (1 2 x (- Start_6) (+ Start_2 Start_1) (* Start_2 Start_2) (mod Start_7 Start_6) (ite StartBool Start_7 Start_1)))
   (Start_2 Int (3 4 0 5 (+ Start_8 Start_5) (* Start_1 Start_6) (div Start_1 Start_3) (mod Start_7 Start_4) (abs Start_5) (ite StartBool Start_3 Start_9)))
   (Start_1 Int (1 y 3 (- Start_3) (- Start_7 Start_2) (* Start_9 Start_5) (div Start_6 Start_7) (mod Start_2 Start_7) (abs Start_8) (ite StartBool_2 Start_4 Start_10)))
   (Start_9 Int (3 (- Start_8 Start) (mod Start_9 Start_7) (ite StartBool_1 Start_6 Start_5)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool StartBool) (<= Start_9 Start_2) (= Start_3 Start_9) (>= Start_9 Start_5) (> Start_8 Start_7)))
   (Start_3 Int (5 (- Start_3 Start_3) (* Start_3 Start_3) (mod Start_2 Start) (abs Start_4)))
   (Start_7 Int (1 y (- Start Start_2) (* Start_5 Start_1) (abs Start_8)))
   (Start_5 Int (5 (+ Start_4 Start_1) (* Start_1 Start_6) (div Start_2 Start_6) (mod Start_2 Start_3)))
   (Start_10 Int (4 0 3 2 (- Start_10) (+ Start_4 Start_5) (* Start_10 Start_5) (div Start_7 Start_8) (abs Start)))
   (Start_8 Int (2 1 (- Start_6) (div Start_1 Start_5) (abs Start) (ite StartBool Start_5 Start_8)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool StartBool_2) (< Start_6 Start_8) (= Start_4 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 5 (- (- x) x))))

(check-synth)
