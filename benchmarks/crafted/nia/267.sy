(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_10 Int) (Start_4 Int) (StartBool_4 Bool) (Start_8 Int) (Start_2 Int) (Start_3 Int) (StartBool_3 Bool) (StartBool_1 Bool) (Start_1 Int) (Start_6 Int) (StartBool_2 Bool) (StartBool_5 Bool) (Start_5 Int) (Start_7 Int) (Start_9 Int))
  ((Start Int (1 3 4 (- Start_1) (* Start Start) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (false (and StartBool_5 StartBool_2) (< Start_1 Start_2) (<= Start_6 Start_10) (= Start_9 Start_6) (> Start_7 Start)))
   (Start_10 Int (5 3 (+ Start_3 Start_4) (* Start_8 Start_4) (ite StartBool_4 Start Start)))
   (Start_4 Int (y (- Start_9) (- Start_5 Start_7) (abs Start_9)))
   (StartBool_4 Bool (true false (not StartBool_2) (<= Start_4 Start_4) (= Start_2 Start_1)))
   (Start_8 Int (y 4 (+ Start_3 Start_4) (div Start_6 Start) (mod Start_5 Start_1) (abs Start_5)))
   (Start_2 Int (1 (+ Start_3 Start) (div Start Start)))
   (Start_3 Int (3 y 2 (* Start_2 Start) (div Start_1 Start) (abs Start_3)))
   (StartBool_3 Bool (true (or StartBool StartBool_5) (= Start_3 Start_2) (>= Start Start_2)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool StartBool) (<= Start_2 Start_3) (= Start Start) (> Start_3 Start_2)))
   (Start_1 Int (5 2 0 (- Start) (* Start_3 Start) (div Start_3 Start_3) (mod Start_3 Start_4) (abs Start_4) (ite StartBool_2 Start_2 Start_4)))
   (Start_6 Int (5 (- Start_1) (- Start_3 Start_6) (* Start_7 Start) (abs Start_4) (ite StartBool_1 Start_3 Start_3)))
   (StartBool_2 Bool (false (and StartBool_2 StartBool_2) (or StartBool_3 StartBool_4) (< Start_4 Start_1) (= Start_2 Start_3)))
   (StartBool_5 Bool (true (<= Start_2 Start_5) (> Start_5 Start_1)))
   (Start_5 Int (y 2 5 (- Start_3) (- Start Start_1) (div Start_5 Start_1) (mod Start_4 Start_1) (abs Start_2) (ite StartBool_3 Start_5 Start_6)))
   (Start_7 Int (5 (+ Start_5 Start_2) (* Start_4 Start_8) (mod Start_7 Start_2) (abs Start) (ite StartBool Start_9 Start_6)))
   (Start_9 Int (y x (- Start_3) (- Start_5 Start_4) (abs Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (- 3 (div y 5)))))

(check-synth)
