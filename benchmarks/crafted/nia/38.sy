(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_10 Bool) (Start_10 Int) (Start_8 Int) (StartBool_1 Bool) (StartBool_7 Bool) (Start_3 Int) (StartBool_6 Bool) (Start_4 Int) (StartBool_9 Bool) (Start_7 Int) (Start_5 Int) (Start_2 Int) (Start_1 Int) (StartBool_8 Bool) (StartBool_3 Bool) (Start_6 Int) (Start_9 Int) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_5 Bool))
  ((Start Int (2 5 4 x (mod Start Start)))
   (StartBool Bool (false true (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_4) (<= Start Start) (>= Start_1 Start_1) (> Start_2 Start_3)))
   (StartBool_10 Bool (true (not StartBool_8) (< Start_3 Start_3) (<= Start_7 Start_4) (>= Start_4 Start_10)))
   (Start_10 Int (x (- Start_6) (div Start_1 Start_9) (abs Start_6)))
   (Start_8 Int (2 1 0 (- Start_6) (mod Start_3 Start_10) (ite StartBool_3 Start_7 Start_6)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool_9) (or StartBool_1 StartBool_9) (< Start_1 Start) (>= Start_7 Start_6)))
   (StartBool_7 Bool (true false (< Start_4 Start_3) (>= Start_7 Start_6)))
   (Start_3 Int (5 y (- Start_1) (* Start Start) (mod Start_1 Start_4) (abs Start_3)))
   (StartBool_6 Bool (false true (<= Start Start_6) (>= Start_4 Start_3) (> Start_3 Start_7)))
   (Start_4 Int (2 1 (+ Start Start_1) (* Start_4 Start) (abs Start_5) (ite StartBool_3 Start Start_3)))
   (StartBool_9 Bool (false (not StartBool_2) (and StartBool_6 StartBool_10) (or StartBool StartBool_1) (< Start_4 Start_3) (>= Start_7 Start_8) (> Start_9 Start_6)))
   (Start_7 Int (y (+ Start_5 Start_1) (div Start_2 Start_2) (ite StartBool_2 Start Start_3)))
   (Start_5 Int (5 (+ Start_1 Start_1) (div Start Start_4) (abs Start_3)))
   (Start_2 Int (y x 5 (- Start_2 Start_5) (+ Start_1 Start_1) (* Start_2 Start_5)))
   (Start_1 Int (3 (+ Start_3 Start_5) (* Start_3 Start_1) (div Start_5 Start_5) (mod Start_6 Start_2) (ite StartBool_4 Start_4 Start_5)))
   (StartBool_8 Bool (false true (and StartBool_1 StartBool) (<= Start_1 Start)))
   (StartBool_3 Bool (true (and StartBool StartBool_7) (< Start_5 Start) (<= Start_5 Start_1)))
   (Start_6 Int (2 5 (- Start_1 Start) (+ Start_3 Start_1) (* Start_5 Start_4) (div Start_7 Start_6) (mod Start Start_2) (ite StartBool_1 Start_6 Start_1)))
   (Start_9 Int (0 4 3 (- Start_8 Start) (+ Start_4 Start_4) (div Start Start_8) (mod Start_9 Start_2) (abs Start_5) (ite StartBool_2 Start_9 Start_5)))
   (StartBool_4 Bool (false true (and StartBool_5 StartBool_2) (or StartBool_6 StartBool_5) (= Start_7 Start_4) (>= Start_6 Start_1)))
   (StartBool_2 Bool (true (and StartBool_4 StartBool_3) (or StartBool_8 StartBool_1) (< Start_7 Start_6) (= Start_2 Start_6) (> Start_1 Start_5)))
   (StartBool_5 Bool (true (and StartBool_4 StartBool_5) (= Start_5 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (- 2) (* 3 x))))

(check-synth)
