(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (Start_4 Int) (Start_18 Int) (StartBool_7 Bool) (Start_6 Int) (Start_5 Int) (StartBool_4 Bool) (Start_15 Int) (StartBool_5 Bool) (Start_16 Int) (StartBool_2 Bool) (Start_1 Int) (Start_13 Int) (Start_2 Int) (Start_19 Int) (Start_17 Int) (Start_14 Int) (Start_7 Int) (Start_3 Int) (Start_10 Int) (Start_9 Int) (StartBool_6 Bool) (Start_8 Int) (StartBool_3 Bool) (Start_11 Int) (Start_12 Int))
  ((Start Int (0 (- Start_1) (+ Start_1 Start) (div Start_1 Start_2) (ite StartBool_1 Start Start_3)))
   (StartBool Bool (true (not StartBool) (< Start_15 Start_16) (<= Start_12 Start_8) (= Start_8 Start_6) (>= Start_8 Start_3) (> Start_7 Start_19)))
   (StartBool_1 Bool (true false (and StartBool_5 StartBool) (or StartBool_2 StartBool_1) (<= Start_19 Start_11) (>= Start_14 Start_7)))
   (Start_4 Int (5 y 1 (- Start_17) (+ Start_13 Start_9) (* Start_9 Start_19) (mod Start_16 Start_14)))
   (Start_18 Int (1 (- Start_9) (+ Start Start_9) (div Start_4 Start_10) (mod Start_16 Start_12)))
   (StartBool_7 Bool (false true (not StartBool_7) (or StartBool_3 StartBool_4) (<= Start_17 Start_8) (= Start_19 Start_7) (> Start_13 Start_17)))
   (Start_6 Int (4 5 (- Start_2 Start_18) (div Start_1 Start_3) (ite StartBool_7 Start_6 Start_6)))
   (Start_5 Int (x (- Start Start_12) (div Start_8 Start_7) (mod Start_5 Start_13) (abs Start_19)))
   (StartBool_4 Bool (false (and StartBool_6 StartBool_3) (< Start_13 Start_4) (<= Start_9 Start_7) (= Start Start_8) (> Start_11 Start_8)))
   (Start_15 Int (1 (- Start_2) (+ Start_16 Start_7) (div Start_7 Start_6) (mod Start_4 Start_7) (ite StartBool_2 Start_2 Start_8)))
   (StartBool_5 Bool (false true (and StartBool_4 StartBool_3) (or StartBool_3 StartBool_3) (= Start_9 Start_9) (>= Start_10 Start_11) (> Start_11 Start_4)))
   (Start_16 Int (2 3 (- Start_4) (- Start_8 Start_16) (+ Start_1 Start_10) (* Start Start_17) (abs Start_7)))
   (StartBool_2 Bool (true (not StartBool_3) (< Start_1 Start_3) (>= Start_4 Start_3) (> Start_2 Start_7)))
   (Start_1 Int (1 (- Start_12) (- Start_3 Start) (+ Start_12 Start) (ite StartBool_4 Start_14 Start_1)))
   (Start_13 Int (0 2 x (- Start_14 Start_6) (+ Start_11 Start_4) (* Start_4 Start_3) (div Start_11 Start_4) (mod Start_2 Start_14) (abs Start_12) (ite StartBool Start_2 Start_1)))
   (Start_2 Int (x (- Start_15) (- Start_1 Start_8) (+ Start_8 Start_15) (div Start_8 Start) (ite StartBool_1 Start_11 Start)))
   (Start_19 Int (y (- Start_1) (mod Start_11 Start_12) (ite StartBool_6 Start_8 Start_19)))
   (Start_17 Int (5 (- Start) (* Start_8 Start_12)))
   (Start_14 Int (4 5 x 2 (- Start_13) (- Start_11 Start_12) (+ Start_6 Start_9) (div Start_11 Start_8) (mod Start_15 Start_3)))
   (Start_7 Int (4 x (+ Start_4 Start_8) (* Start_1 Start_3) (mod Start_7 Start_1) (abs Start_9)))
   (Start_3 Int (x (+ Start Start_4) (* Start_4 Start) (div Start_2 Start_5) (abs Start_6) (ite StartBool_2 Start_4 Start_3)))
   (Start_10 Int (4 (- Start_2) (- Start_9 Start_11) (+ Start_11 Start_3) (* Start_4 Start_3) (div Start Start_9) (mod Start_8 Start_12) (ite StartBool_3 Start_11 Start_8)))
   (Start_9 Int (4 (- Start_2 Start_7) (+ Start_7 Start_8) (* Start_9 Start_1) (mod Start_4 Start_2) (abs Start_2)))
   (StartBool_6 Bool (true (and StartBool_5 StartBool_1) (<= Start_1 Start_13) (= Start_13 Start_16) (>= Start_13 Start_11) (> Start_5 Start_12)))
   (Start_8 Int (5 (- Start_4 Start_1) (div Start_6 Start_3) (abs Start) (ite StartBool Start_1 Start_7)))
   (StartBool_3 Bool (true false (and StartBool_4 StartBool_4) (or StartBool_5 StartBool_5) (<= Start_8 Start_4)))
   (Start_11 Int (y (+ Start_8 Start_9) (* Start_1 Start_10) (div Start_8 Start) (mod Start_1 Start_7) (abs Start_2) (ite StartBool_4 Start_2 Start_4)))
   (Start_12 Int (1 3 4 x 2 (- Start_13 Start_3) (* Start_8 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 (* x 2))))

(check-synth)
