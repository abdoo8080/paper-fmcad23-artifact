(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_2 Int) (StartBool_3 Bool) (Start_5 Int) (Start_19 Int) (Start_10 Int) (Start_17 Int) (Start_4 Int) (Start_3 Int) (Start_8 Int) (StartBool_2 Bool) (Start_21 Int) (Start_13 Int) (Start_16 Int) (Start_7 Int) (Start_6 Int) (StartBool_1 Bool) (StartBool_4 Bool) (Start_9 Int) (Start_11 Int) (Start_12 Int) (Start_15 Int) (Start_1 Int) (Start_18 Int) (Start_14 Int))
  ((Start Int (y x (+ Start Start_1) (* Start_2 Start_2) (div Start_3 Start_2)))
   (StartBool Bool (true (not StartBool_1) (and StartBool_2 StartBool_2) (or StartBool_2 StartBool_3) (< Start_15 Start_15) (<= Start_14 Start_17) (>= Start_8 Start_19) (> Start_11 Start)))
   (Start_20 Int (0 3 (+ Start_21 Start_14) (* Start_14 Start_17)))
   (Start_2 Int (0 (- Start_15 Start_18) (* Start_1 Start_9) (ite StartBool Start_12 Start_11)))
   (StartBool_3 Bool (true false (not StartBool_1) (and StartBool_1 StartBool) (or StartBool_4 StartBool) (= Start_14 Start_17) (>= Start_21 Start_8)))
   (Start_5 Int (x 2 3 (* Start_15 Start_15) (mod Start_18 Start_11) (abs Start_8) (ite StartBool_1 Start_18 Start_13)))
   (Start_19 Int (0 (- Start_4) (div Start Start_4) (abs Start_10)))
   (Start_10 Int (0 5 x 3 2 (* Start_6 Start_16) (div Start_15 Start_18) (mod Start_17 Start_5) (abs Start_19)))
   (Start_17 Int (y 5 (- Start_9 Start_8) (* Start_9 Start)))
   (Start_4 Int (0 1 x (- Start_5) (- Start_6 Start_2) (* Start_7 Start_4) (mod Start_5 Start_4) (abs Start_2) (ite StartBool Start_2 Start_8)))
   (Start_3 Int (y 3 5 (- Start) (+ Start Start) (* Start_2 Start_1) (div Start_3 Start_4)))
   (Start_8 Int (5 (- Start_1) (- Start_1 Start_4) (+ Start_6 Start_1) (abs Start_3)))
   (StartBool_2 Bool (true false (not StartBool) (and StartBool_1 StartBool_2) (< Start_12 Start_13) (<= Start_7 Start_12) (= Start_9 Start_13) (> Start_6 Start_7)))
   (Start_21 Int (0 (- Start_15) (* Start_10 Start_18) (ite StartBool_1 Start_13 Start_4)))
   (Start_13 Int (5 (- Start_9 Start_1) (+ Start_8 Start_14) (* Start_11 Start_15) (div Start_10 Start_9)))
   (Start_16 Int (0 (- Start_11) (- Start_11 Start_16) (+ Start_11 Start_16) (div Start_13 Start_14) (mod Start_17 Start_1) (abs Start_5) (ite StartBool_1 Start_8 Start)))
   (Start_7 Int (5 y (- Start_2) (- Start_1 Start_3) (+ Start Start_9)))
   (Start_6 Int (x (- Start_11 Start_9) (* Start_11 Start_5) (mod Start Start_4) (abs Start_19)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool_2 StartBool_1) (< Start Start) (= Start_5 Start_2) (>= Start_2 Start)))
   (StartBool_4 Bool (false true (and StartBool_4 StartBool_4) (<= Start_20 Start_5)))
   (Start_9 Int (1 (- Start) (+ Start Start_2) (mod Start_10 Start_7) (abs Start_7) (ite StartBool_1 Start_7 Start_11)))
   (Start_11 Int (y (- Start_3) (- Start_5 Start_1) (* Start_3 Start_8) (ite StartBool Start_2 Start_11)))
   (Start_12 Int (2 (- Start_15) (+ Start_9 Start_7) (* Start_6 Start_3) (div Start_11 Start_11) (abs Start_16)))
   (Start_15 Int (x 3 0 2 5 y 4 (+ Start_6 Start_7) (* Start_6 Start_13)))
   (Start_1 Int (3 (- Start_17 Start_1) (* Start_1 Start_14) (mod Start_19 Start_20) (ite StartBool_1 Start_6 Start_1)))
   (Start_18 Int (1 (- Start_6 Start_8) (+ Start_13 Start_3) (abs Start_10) (ite StartBool_1 Start_10 Start_15)))
   (Start_14 Int (y 3 (- Start_3 Start_9) (div Start_9 Start_8) (mod Start_5 Start_7) (abs Start_8) (ite StartBool_1 Start Start_15)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (abs y) x)))

(check-synth)
