(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_1 Int) (Start_2 Int) (Start_10 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_6 Int) (Start_4 Int) (Start_13 Int) (StartBool_1 Bool) (Start_12 Int) (Start_5 Int) (Start_11 Int) (Start_3 Int) (Start_7 Int) (Start_14 Int) (Start_8 Int) (Start_9 Int) (StartBool_4 Bool))
  ((Start Int (y x (- Start_1 Start_1) (+ Start Start) (* Start_2 Start) (mod Start_1 Start_1) (abs Start_3)))
   (StartBool Bool (false (not StartBool) (and StartBool_4 StartBool_5) (< Start_11 Start_6) (<= Start_12 Start_13) (> Start_10 Start_1)))
   (StartBool_5 Bool (false (not StartBool_5) (or StartBool StartBool_1) (< Start_9 Start_14) (<= Start_12 Start) (>= Start_7 Start) (> Start_14 Start_8)))
   (Start_1 Int (4 x (+ Start_7 Start_10) (abs Start_4) (ite StartBool_1 Start_11 Start_7)))
   (Start_2 Int (y 0 (- Start_11 Start_4) (+ Start_2 Start_10) (div Start_5 Start_1) (abs Start_4)))
   (Start_10 Int (x (- Start_9) (- Start_3 Start_1) (+ Start_3 Start_6) (* Start_2 Start_3) (mod Start_3 Start_9) (abs Start_8)))
   (StartBool_2 Bool (false (not StartBool_3) (and StartBool_1 StartBool_1) (< Start_4 Start_6) (<= Start_7 Start_4) (> Start_7 Start_5)))
   (StartBool_3 Bool (false (or StartBool_2 StartBool_2) (<= Start_1 Start_9) (>= Start_1 Start_8)))
   (Start_6 Int (3 (- Start_4) (div Start_5 Start_6) (abs Start) (ite StartBool Start_4 Start_6)))
   (Start_4 Int (x 0 (- Start_3) (- Start_1 Start) (+ Start Start_5) (div Start_3 Start) (abs Start_5) (ite StartBool_1 Start_3 Start)))
   (Start_13 Int (1 y (- Start_13 Start_7) (* Start_6 Start_2) (abs Start_12) (ite StartBool_3 Start_12 Start_13)))
   (StartBool_1 Bool (true false (and StartBool_2 StartBool) (< Start_1 Start_5) (<= Start_6 Start) (= Start_1 Start_4) (> Start_5 Start_1)))
   (Start_12 Int (3 2 (- Start_3) (- Start_1 Start_3) (div Start Start_4)))
   (Start_5 Int (1 (* Start_3 Start_2) (div Start_4 Start_3) (mod Start_3 Start) (abs Start_5)))
   (Start_11 Int (0 1 (- Start_11) (abs Start_9) (ite StartBool_4 Start_4 Start_9)))
   (Start_3 Int (2 3 (- Start_4) (- Start_5 Start_4) (mod Start_3 Start) (abs Start_3)))
   (Start_7 Int (5 (- Start_6 Start_8) (div Start_1 Start_4) (abs Start_8)))
   (Start_14 Int (4 3 y (mod Start_5 Start_9)))
   (Start_8 Int (3 0 5 (- Start_6 Start_7) (mod Start_3 Start_6)))
   (Start_9 Int (y 5 1 (+ Start_3 Start_10) (* Start_2 Start_11) (div Start_7 Start_4) (mod Start_3 Start_8) (ite StartBool Start_2 Start_10)))
   (StartBool_4 Bool (true false (not StartBool) (or StartBool StartBool_4) (<= Start_7 Start_10) (= Start_8 Start)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (ite (= (- x) y) 2 5)))

(check-synth)
