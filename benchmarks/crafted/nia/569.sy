(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (Start_13 Int) (Start_12 Int) (StartBool_2 Bool) (Start_11 Int) (StartBool_3 Bool) (Start_3 Int) (Start_7 Int) (Start_5 Int) (StartBool_1 Bool) (Start_4 Int) (Start_8 Int) (Start_10 Int) (StartBool_5 Bool) (Start_1 Int) (StartBool_6 Bool) (StartBool_4 Bool) (Start_6 Int) (Start_9 Int))
  ((Start Int (y 1 3 0 (mod Start_1 Start)))
   (StartBool Bool (true false (not StartBool_4) (and StartBool_5 StartBool_3) (< Start Start_11) (<= Start_2 Start_12) (= Start_1 Start_10) (>= Start_5 Start_6) (> Start_8 Start_13)))
   (Start_2 Int (4 2 0 3 y 1 x (- Start_10) (- Start_7 Start) (+ Start_11 Start_9) (div Start_3 Start_6)))
   (Start_13 Int (1 x (- Start_7) (+ Start_3 Start_6) (* Start_9 Start_8) (div Start_1 Start_6) (mod Start_5 Start_12) (abs Start_8)))
   (Start_12 Int (1))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_1) (<= Start_8 Start_1) (= Start_8 Start_12) (>= Start_4 Start_8)))
   (Start_11 Int (5 2 (* Start_4 Start_9) (mod Start_10 Start_11) (abs Start_4)))
   (StartBool_3 Bool (true (and StartBool_4 StartBool_3) (or StartBool_5 StartBool_5) (< Start_7 Start_3) (> Start_9 Start_1)))
   (Start_3 Int (x (- Start_1) (+ Start_1 Start_4) (* Start_2 Start_1) (div Start_5 Start_6) (abs Start)))
   (Start_7 Int (2 0 (- Start_2) (abs Start_6) (ite StartBool_1 Start_7 Start)))
   (Start_5 Int (x 3 (- Start_3) (+ Start_6 Start_4) (div Start_5 Start_7) (mod Start_7 Start_6)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_2 StartBool) (= Start_8 Start_6) (> Start Start_2)))
   (Start_4 Int (2 (- Start_4 Start_3) (+ Start_5 Start_5) (div Start_13 Start_2) (mod Start_7 Start_3)))
   (Start_8 Int (5 x 3 (+ Start_1 Start_9) (div Start_9 Start_4) (mod Start_5 Start) (abs Start_8) (ite StartBool_3 Start_3 Start_7)))
   (Start_10 Int (4 0 y 3 5 2 1 x (+ Start_3 Start_5) (* Start_10 Start_9) (mod Start_11 Start_11) (abs Start_8) (ite StartBool Start_11 Start_7)))
   (StartBool_5 Bool (true false (and StartBool_6 StartBool)))
   (Start_1 Int (4 (- Start_1) (- Start_1 Start_2) (div Start_3 Start_3) (mod Start_1 Start_1) (abs Start_3) (ite StartBool Start_3 Start_3)))
   (StartBool_6 Bool (false (not StartBool_3) (> Start Start_1)))
   (StartBool_4 Bool (true false (not StartBool_2) (or StartBool_1 StartBool_2) (= Start_8 Start_3) (> Start_5 Start_7)))
   (Start_6 Int (2 3 (div Start_1 Start_6) (abs Start_6) (ite StartBool Start_5 Start)))
   (Start_9 Int (y (- Start_7) (+ Start_10 Start_10) (div Start Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ x (abs y))))

(check-synth)
