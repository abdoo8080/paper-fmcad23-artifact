(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_5 Bool) (Start_8 Int) (Start_6 Int) (Start_7 Int) (StartBool_9 Bool) (Start_3 Int) (StartBool_2 Bool) (Start_5 Int) (Start_2 Int) (StartBool_6 Bool) (StartBool_3 Bool) (Start_4 Int) (StartBool_4 Bool) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_1 Bool) (Start_1 Int))
  ((Start Int (0 2 5 y 4 (- Start_1) (div Start_1 Start) (abs Start) (ite StartBool_1 Start_2 Start_3)))
   (StartBool Bool (false (not StartBool_4) (and StartBool StartBool) (or StartBool_5 StartBool_6)))
   (StartBool_5 Bool (true (not StartBool_7) (and StartBool_3 StartBool_8) (< Start_1 Start_1) (<= Start_5 Start_7) (>= Start_2 Start_3) (> Start_3 Start_4)))
   (Start_8 Int (x (- Start_6) (- Start_8 Start_1) (div Start_3 Start_5) (abs Start_4) (ite StartBool_2 Start_2 Start_8)))
   (Start_6 Int (3 1 (- Start_4) (+ Start_4 Start_8) (* Start_6 Start_7) (mod Start Start_5) (ite StartBool_9 Start_5 Start_1)))
   (Start_7 Int (1 (- Start) (- Start_1 Start_4) (div Start Start_2) (mod Start_3 Start_2)))
   (StartBool_9 Bool (false (not StartBool_9) (and StartBool StartBool_8) (< Start_4 Start_8) (>= Start Start) (> Start_7 Start_6)))
   (Start_3 Int (3 0 (+ Start_2 Start_3) (div Start_2 Start_1) (mod Start_4 Start_2) (abs Start_2) (ite StartBool Start Start)))
   (StartBool_2 Bool (true (not StartBool) (or StartBool_3 StartBool) (< Start_2 Start) (= Start Start_1) (> Start_2 Start_3)))
   (Start_5 Int (2 (- Start_5) (+ Start_1 Start_5) (* Start_4 Start_4) (ite StartBool_2 Start_3 Start_4)))
   (Start_2 Int (x 2 y (- Start_5) (+ Start_1 Start_4) (div Start_2 Start_4) (mod Start Start) (abs Start_3) (ite StartBool_3 Start_2 Start_3)))
   (StartBool_6 Bool (false true (not StartBool) (and StartBool_4 StartBool_7) (or StartBool_7 StartBool_8) (< Start_3 Start) (= Start Start_2) (> Start Start_4)))
   (StartBool_3 Bool (false true (and StartBool_3 StartBool_4) (< Start_4 Start_3) (<= Start_4 Start_3) (>= Start_2 Start_5)))
   (Start_4 Int (y (+ Start_3 Start_5) (* Start_5 Start_3) (abs Start_3)))
   (StartBool_4 Bool (true false (and StartBool_3 StartBool_1) (or StartBool StartBool_4)))
   (StartBool_8 Bool (true (not StartBool_2) (and StartBool_5 StartBool_6)))
   (StartBool_7 Bool (true (not StartBool_4) (and StartBool_2 StartBool_8) (or StartBool_4 StartBool_5) (< Start_5 Start_3) (<= Start_2 Start_4) (= Start_6 Start_2) (>= Start_1 Start_5) (> Start_7 Start_6)))
   (StartBool_1 Bool (true (not StartBool_3) (and StartBool_1 StartBool_4) (> Start_1 Start_4)))
   (Start_1 Int (y (- Start_5) (+ Start_5 Start_3) (* Start_1 Start_1) (ite StartBool_1 Start_4 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div x 2)))

(check-synth)
