(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_12 Int) (Start_15 Int) (Start_2 Int) (Start_1 Int) (Start_13 Int) (Start_3 Int) (Start_5 Int) (Start_8 Int) (Start_4 Int) (Start_6 Int) (Start_9 Int) (Start_7 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_10 Int) (Start_11 Int))
  ((Start Int (x 5 (- Start) (* Start_1 Start_1) (div Start_1 Start_1)))
   (StartBool Bool (false true (and StartBool_1 StartBool_1) (or StartBool_2 StartBool_1) (< Start_4 Start_6) (<= Start_3 Start_12) (> Start_13 Start_14)))
   (Start_14 Int (4 (div Start_7 Start_3) (mod Start_4 Start_12) (ite StartBool_2 Start_15 Start_9)))
   (Start_12 Int (5 0 (* Start_6 Start_13) (div Start Start_10)))
   (Start_15 Int (0 (* Start_15 Start_12) (div Start_11 Start_11) (ite StartBool_1 Start_6 Start_12)))
   (Start_2 Int (3 4 y 2 x (- Start_4) (* Start_7 Start_5) (ite StartBool_2 Start_5 Start_9)))
   (Start_1 Int (3 (- Start_2) (+ Start_3 Start_1) (abs Start) (ite StartBool Start_1 Start)))
   (Start_13 Int (2 (- Start_6) (- Start_12 Start_3) (+ Start_4 Start_1) (mod Start_9 Start_11)))
   (Start_3 Int (4 2 5 1 (- Start) (+ Start_4 Start_4) (* Start_1 Start_2) (div Start_5 Start) (mod Start_1 Start) (abs Start)))
   (Start_5 Int (0 (- Start) (+ Start_4 Start_1) (* Start Start_5) (div Start_5 Start_3) (ite StartBool Start_6 Start_6)))
   (Start_8 Int (3 0 (- Start_1) (* Start_11 Start_6) (div Start_4 Start_1) (mod Start_11 Start) (ite StartBool_1 Start_10 Start_4)))
   (Start_4 Int (5 (+ Start_2 Start_6) (* Start_1 Start_8) (ite StartBool_2 Start_9 Start_11)))
   (Start_6 Int (0 4 y (- Start_1 Start_6) (+ Start_7 Start_4) (* Start_7 Start) (div Start_1 Start_1) (mod Start_7 Start_4) (abs Start_7)))
   (Start_9 Int (0 (- Start_2) (+ Start_6 Start_6) (* Start_4 Start_4) (div Start_3 Start_1) (abs Start_10) (ite StartBool Start_4 Start_6)))
   (Start_7 Int (1 5 3 4 0 (+ Start_8 Start_9) (* Start_9 Start_5) (mod Start_2 Start_10)))
   (StartBool_2 Bool (false true (< Start_6 Start_11) (<= Start Start_11) (> Start_4 Start)))
   (StartBool_1 Bool (true (<= Start_6 Start_10)))
   (Start_10 Int (3 2 0 y (- Start_7) (- Start_6 Start_9) (+ Start_10 Start_6) (div Start_10 Start_9) (mod Start_8 Start) (abs Start_2) (ite StartBool_1 Start_9 Start_1)))
   (Start_11 Int (0 x 2 1 (* Start_11 Start_4) (div Start_7 Start_4) (abs Start_9) (ite StartBool Start_11 Start_1)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (div y 0) (- 3))))

(check-synth)
