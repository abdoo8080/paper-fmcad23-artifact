(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_28 Int) (Start_1 Int) (Start_27 Int) (Start_3 Int) (Start_4 Int) (Start_13 Int) (Start_12 Int) (Start_14 Int) (Start_11 Int) (Start_25 Int) (Start_5 Int) (Start_7 Int) (Start_6 Int) (Start_23 Int) (Start_24 Int) (Start_10 Int) (Start_2 Int) (Start_26 Int) (Start_8 Int) (StartBool_4 Bool) (StartBool_3 Bool) (Start_9 Int) (StartBool_2 Bool) (Start_21 Int) (Start_16 Int) (Start_20 Int) (Start_15 Int) (StartBool_1 Bool) (Start_18 Int) (Start_17 Int) (Start_19 Int) (StartBool_5 Bool) (Start_22 Int))
  ((Start Int (1 3 5 2 y 0 4 (+ Start_1 Start_1) (div Start Start_2) (mod Start_1 Start_1)))
   (StartBool Bool (true (< Start_20 Start_19) (> Start_15 Start_9)))
   (Start_28 Int (4 (- Start_5) (+ Start Start_8) (* Start_13 Start_4) (div Start_1 Start_25)))
   (Start_1 Int (0 4 (- Start_14 Start_21) (+ Start_21 Start_4) (div Start Start_25) (abs Start_21) (ite StartBool_5 Start_28 Start_19)))
   (Start_27 Int (x 4 (- Start_1) (- Start_25 Start_9) (* Start_5 Start_24) (ite StartBool_2 Start_19 Start_3)))
   (Start_3 Int (5 (- Start_12 Start_16) (+ Start_27 Start_9) (div Start_7 Start_23) (ite StartBool Start_6 Start_10)))
   (Start_4 Int (4 3 (* Start_26 Start_7) (div Start_23 Start_25) (mod Start Start_13) (abs Start_25)))
   (Start_13 Int (3 y 0 (- Start_8 Start_4) (* Start_5 Start_5) (div Start_1 Start_7) (mod Start_12 Start_14) (abs Start_1) (ite StartBool Start_3 Start_13)))
   (Start_12 Int (2 x (- Start Start_13) (* Start_10 Start_7) (div Start_2 Start_13)))
   (Start_14 Int (2 (- Start_1) (- Start_12 Start_2) (* Start_4 Start_2) (div Start_1 Start_2) (abs Start_10)))
   (Start_11 Int (5 x 1 0 (- Start_7 Start_12) (mod Start_1 Start_8)))
   (Start_25 Int (5 (- Start_16) (+ Start_5 Start_12) (* Start_12 Start_19) (div Start_3 Start_2) (mod Start_18 Start_4) (abs Start_21) (ite StartBool_1 Start_3 Start_25)))
   (Start_5 Int (3 (- Start_8) (- Start_1 Start_9) (div Start_8 Start_5) (mod Start_1 Start_1) (abs Start_3)))
   (Start_7 Int (y 1 (- Start_4 Start_5) (* Start_3 Start_1) (abs Start) (ite StartBool Start_6 Start_2)))
   (Start_6 Int (1 4 0 2 (- Start_6 Start_7) (+ Start_7 Start_3) (ite StartBool Start_7 Start_3)))
   (Start_23 Int (0 3 (- Start) (- Start_12 Start_3) (* Start_2 Start_11) (mod Start_8 Start_21)))
   (Start_24 Int (3 (- Start_18) (- Start_12 Start_5) (+ Start_16 Start_13) (mod Start_26 Start_18)))
   (Start_10 Int (5 (- Start_7 Start_1) (+ Start_9 Start_1) (mod Start_8 Start_4) (abs Start_4)))
   (Start_2 Int (y 4 (- Start_2 Start_2) (+ Start_2 Start_3) (* Start_3 Start_4) (div Start Start_4) (ite StartBool Start_5 Start_6)))
   (Start_26 Int (4 0 (- Start_7) (- Start_9 Start_14) (+ Start_2 Start_2) (* Start_2 Start_8) (mod Start_23 Start_10) (ite StartBool_5 Start_26 Start_11)))
   (Start_8 Int (4 3 0 (- Start_15) (div Start_16 Start_3) (abs Start) (ite StartBool_1 Start Start_9)))
   (StartBool_4 Bool (false true (not StartBool_4) (< Start_10 Start_7) (= Start_5 Start_9) (> Start_6 Start_13)))
   (StartBool_3 Bool (false true (not StartBool_1) (or StartBool StartBool_4) (< Start_17 Start_6) (= Start_1 Start_14) (>= Start_14 Start_13)))
   (Start_9 Int (y (- Start_10) (div Start_4 Start_11) (ite StartBool Start_6 Start_4)))
   (StartBool_2 Bool (true false (not StartBool_1) (and StartBool_2 StartBool_2) (< Start_16 Start_9) (= Start_3 Start_7) (> Start_10 Start_12)))
   (Start_21 Int (2 (+ Start_5 Start_18) (* Start_18 Start_22) (div Start_15 Start_11) (ite StartBool_2 Start_23 Start_13)))
   (Start_16 Int (y (- Start_8) (- Start_7 Start_3) (* Start_14 Start_7) (div Start_12 Start_10) (mod Start_10 Start_1) (abs Start_10)))
   (Start_20 Int (0 (- Start_18) (+ Start_18 Start_4) (* Start_16 Start_21)))
   (Start_15 Int (3 1 5 y 4 0 (+ Start_2 Start_2) (* Start_9 Start_18) (mod Start_13 Start_6) (abs Start_14)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_3) (<= Start_16 Start_1) (= Start_8 Start_17) (>= Start_8 Start_7)))
   (Start_18 Int (2 (- Start_1) (- Start_17 Start_15) (+ Start_19 Start_5) (mod Start_1 Start_1)))
   (Start_17 Int (x (- Start_15) (- Start Start_12) (+ Start Start_1) (mod Start_8 Start_14) (abs Start_13) (ite StartBool Start_6 Start_17)))
   (Start_19 Int (x (- Start_14) (* Start_15 Start_19) (div Start_20 Start_13) (abs Start_1)))
   (StartBool_5 Bool (true (and StartBool_2 StartBool_5) (< Start_24 Start_25) (= Start_21 Start_13) (> Start_20 Start_17)))
   (Start_22 Int (5 y 3 0 1 x 2 (- Start_22) (+ Start_7 Start_8) (mod Start_23 Start_20) (ite StartBool_5 Start_23 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div y x)))

(check-synth)
