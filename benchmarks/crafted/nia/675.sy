(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_22 Int) (Start_21 Int) (Start_1 Int) (StartBool_2 Bool) (StartBool_9 Bool) (Start_16 Int) (Start_4 Int) (StartBool_7 Bool) (Start_6 Int) (Start_8 Int) (Start_7 Int) (StartBool_6 Bool) (StartBool_4 Bool) (Start_17 Int) (StartBool_10 Bool) (Start_3 Int) (Start_5 Int) (Start_9 Int) (Start_11 Int) (Start_14 Int) (Start_2 Int) (Start_13 Int) (Start_15 Int) (Start_10 Int) (StartBool_8 Bool) (StartBool_1 Bool) (StartBool_5 Bool) (Start_18 Int) (Start_19 Int) (StartBool_3 Bool) (Start_12 Int) (Start_20 Int))
  ((Start Int (y (- Start_1 Start_1) (div Start_1 Start_2) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true (and StartBool_8 StartBool_5) (or StartBool_8 StartBool_6) (< Start_8 Start_20) (<= Start_3 Start_16) (= Start_22 Start_16)))
   (Start_22 Int (0 4 (+ Start_9 Start_17) (* Start_1 Start_12)))
   (Start_21 Int (4 2 (- Start_9 Start_2) (+ Start_5 Start_2) (mod Start_20 Start_15) (abs Start_12)))
   (Start_1 Int (1 (abs Start_21)))
   (StartBool_2 Bool (false true (< Start_13 Start_18) (<= Start_6 Start_8)))
   (StartBool_9 Bool (false true (or StartBool_10 StartBool_9) (<= Start_2 Start_4) (> Start_8 Start_2)))
   (Start_16 Int (3 4 (- Start_11) (ite StartBool_10 Start_10 Start_14)))
   (Start_4 Int (4 (- Start Start_10) (* Start_7 Start_10) (div Start_12 Start_2) (mod Start_2 Start_18) (abs Start_5)))
   (StartBool_7 Bool (false (and StartBool_8 StartBool_9) (<= Start_6 Start_4) (>= Start Start_4)))
   (Start_6 Int (5 x 0 (- Start Start_6) (* Start_1 Start_4) (mod Start_1 Start_1) (abs Start) (ite StartBool_4 Start_2 Start_2)))
   (Start_8 Int (2 (+ Start_8 Start_3) (div Start_5 Start) (abs Start_5) (ite StartBool_2 Start_3 Start_8)))
   (Start_7 Int (3 (- Start_5 Start_3) (mod Start_6 Start_1)))
   (StartBool_6 Bool (false (not StartBool) (and StartBool_2 StartBool_6) (or StartBool_10 StartBool_6) (= Start_4 Start_5) (> Start_5 Start)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_6) (or StartBool_7 StartBool_3)))
   (Start_17 Int (1 3 (- Start_8 Start_8) (div Start_4 Start_7) (ite StartBool_4 Start_5 Start_15)))
   (StartBool_10 Bool (true false (and StartBool_3 StartBool_9) (or StartBool_8 StartBool_8) (<= Start_9 Start)))
   (Start_3 Int (3 1 y (+ Start_3 Start_1) (abs Start_3) (ite StartBool_1 Start_3 Start_3)))
   (Start_5 Int (4 (- Start_3) (- Start_3 Start_4) (+ Start_6 Start) (div Start Start_3) (mod Start_2 Start_7) (ite StartBool_3 Start_6 Start_1)))
   (Start_9 Int (1 4 3 5 0 2 x (- Start_7 Start_10) (* Start_10 Start_10) (div Start_1 Start_3) (abs Start_11) (ite StartBool_9 Start_4 Start_8)))
   (Start_11 Int (0 (* Start_2 Start_6) (div Start_12 Start_13) (mod Start_14 Start) (ite StartBool_1 Start_9 Start_10)))
   (Start_14 Int (y 0 (- Start_15) (+ Start_12 Start_9) (* Start Start_12) (mod Start_1 Start_5) (ite StartBool_2 Start_15 Start_3)))
   (Start_2 Int (0 1 2 (- Start_3 Start) (mod Start_1 Start_1)))
   (Start_13 Int (1 (- Start_7 Start_11) (+ Start_15 Start) (mod Start_11 Start_13) (abs Start_10) (ite StartBool_2 Start Start_7)))
   (Start_15 Int (5 3 (- Start_15 Start_10) (abs Start_3)))
   (Start_10 Int (y 3 (- Start_4 Start_3) (+ Start_4 Start_16) (* Start_3 Start_12) (mod Start_12 Start) (ite StartBool_7 Start_15 Start_4)))
   (StartBool_8 Bool (false true (not StartBool_10) (< Start_17 Start_14) (<= Start_2 Start_17) (> Start_14 Start_8)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_2 StartBool_3) (<= Start_4 Start_2) (= Start_3 Start_1) (> Start_5 Start_2)))
   (StartBool_5 Bool (false true (not StartBool_10) (and StartBool_8 StartBool_10) (<= Start_17 Start_2) (>= Start_3 Start) (> Start_18 Start_13)))
   (Start_18 Int (1 (- Start_5 Start_17) (+ Start_5 Start_10) (mod Start_13 Start_2) (abs Start_19)))
   (Start_19 Int (2 y (- Start_18) (- Start_9 Start_18) (* Start_18 Start_5)))
   (StartBool_3 Bool (true false (not StartBool_2) (and StartBool_6 StartBool_1) (or StartBool_10 StartBool_6) (= Start_10 Start_20) (>= Start_2 Start_1)))
   (Start_12 Int (3 (- Start Start_9) (+ Start_3 Start_4) (* Start_4 Start_1) (div Start_1 Start_7) (mod Start_2 Start_8) (abs Start_12) (ite StartBool_1 Start_15 Start_4)))
   (Start_20 Int (x 5 0 (- Start_5 Start_19) (mod Start_17 Start_9) (abs Start_1) (ite StartBool_10 Start_17 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (- (- x (mod (ite (< 2 y) 0 1) y))))))

(check-synth)
