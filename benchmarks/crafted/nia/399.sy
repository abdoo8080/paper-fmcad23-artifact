(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_3 Bool) (Start_13 Int) (Start_7 Int) (Start_5 Int) (Start_2 Int) (Start_8 Int) (Start_11 Int) (StartBool_2 Bool) (Start_16 Int) (Start_17 Int) (Start_10 Int) (Start_12 Int) (Start_9 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_15 Int) (Start_23 Int) (Start_14 Int) (Start_24 Int) (Start_4 Int) (Start_3 Int) (StartBool_1 Bool) (Start_18 Int) (Start_20 Int) (Start_22 Int) (Start_1 Int) (Start_19 Int) (Start_6 Int) (Start_21 Int))
  ((Start Int (2 4 y (- Start_1 Start_1) (* Start_2 Start_3) (div Start_3 Start_4) (mod Start Start_3) (abs Start_1) (ite StartBool_1 Start_3 Start_5)))
   (StartBool Bool (false (not StartBool_1) (and StartBool StartBool_1) (or StartBool_4 StartBool_4) (= Start_15 Start_19)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_1 StartBool_4) (<= Start_6 Start_4)))
   (Start_13 Int (2 3 x 0 (+ Start_7 Start_6) (* Start_8 Start_7) (mod Start_9 Start_12)))
   (Start_7 Int (3 2 (- Start_5 Start) (div Start_9 Start_4) (mod Start_10 Start_11)))
   (Start_5 Int (0 (- Start_6 Start_3) (* Start_4 Start_6) (mod Start_5 Start_4) (abs Start_4)))
   (Start_2 Int (2 1 (- Start_3) (* Start_13 Start_3) (mod Start_13 Start_17) (abs Start_20) (ite StartBool Start_13 Start_10)))
   (Start_8 Int (5 (+ Start_6 Start_3) (abs Start_2)))
   (Start_11 Int (1 (- Start_11 Start_6) (+ Start_1 Start_8) (* Start_12 Start_5) (mod Start_6 Start_2) (ite StartBool Start_5 Start_12)))
   (StartBool_2 Bool (true (not StartBool_2) (and StartBool_2 StartBool) (<= Start_3 Start) (= Start_6 Start_3) (> Start_4 Start_2)))
   (Start_16 Int (1 x (* Start_6 Start_3) (div Start_2 Start_15) (abs Start_1) (ite StartBool_1 Start_7 Start_1)))
   (Start_17 Int (y (- Start_6) (+ Start_6 Start_5) (div Start_10 Start_5) (mod Start_11 Start_11) (ite StartBool_1 Start_11 Start_16)))
   (Start_10 Int (y (- Start_7) (+ Start_4 Start_5) (abs Start_6) (ite StartBool_2 Start_12 Start_12)))
   (Start_12 Int (1 4 (* Start_12 Start_13) (div Start_1 Start_7)))
   (Start_9 Int (3 y 5 (ite StartBool_2 Start_9 Start_12)))
   (StartBool_4 Bool (false (not StartBool_3) (or StartBool_4 StartBool_2) (< Start_8 Start_8) (= Start_14 Start_15)))
   (StartBool_5 Bool (true (or StartBool_4 StartBool_1) (< Start_1 Start_8) (<= Start_13 Start_4) (>= Start_2 Start) (> Start_9 Start_14)))
   (Start_15 Int (2 0 y (- Start_16) (abs Start_2)))
   (Start_23 Int (x 5 (- Start_5) (- Start_18 Start_16) (+ Start_22 Start_1) (* Start_14 Start_7)))
   (Start_14 Int (4 (- Start_17) (- Start_14 Start_11) (+ Start_4 Start_2) (div Start_1 Start_3) (ite StartBool_5 Start_3 Start_14)))
   (Start_24 Int (y (- Start_6 Start_8) (mod Start_2 Start_15) (abs Start_17)))
   (Start_4 Int (y (- Start_4) (- Start_10 Start_2) (mod Start_2 Start_6)))
   (Start_3 Int (x (- Start_3) (- Start_17 Start_5) (* Start_10 Start_13) (div Start_12 Start_18) (ite StartBool_5 Start_19 Start_7)))
   (StartBool_1 Bool (false (or StartBool_3 StartBool_1)))
   (Start_18 Int (4 (- Start_2 Start_1) (* Start_9 Start_1) (mod Start_20 Start_8)))
   (Start_20 Int (3 (- Start_13) (- Start_9 Start_4) (+ Start_19 Start_11) (* Start_2 Start_19) (div Start_4 Start_6) (mod Start_12 Start_4)))
   (Start_22 Int (4 1 (* Start_12 Start_19) (div Start_23 Start_19) (abs Start_12) (ite StartBool Start Start_13)))
   (Start_1 Int (3 1 (- Start_18) (+ Start_10 Start_21) (* Start_3 Start_2) (div Start_10 Start_20) (mod Start_22 Start_1) (abs Start_3)))
   (Start_19 Int (5 (- Start_13) (+ Start_16 Start_9) (div Start_16 Start_1) (mod Start_3 Start_7) (ite StartBool_3 Start_11 Start_6)))
   (Start_6 Int (5 (- Start_3 Start_7) (+ Start_7 Start_3) (* Start_2 Start_8) (abs Start_5) (ite StartBool_2 Start_1 Start)))
   (Start_21 Int (3 (- Start_16) (+ Start_12 Start_21) (* Start Start_3) (div Start Start_16) (abs Start_24)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (- 2 y) (abs (abs (abs y))))))

(check-synth)
