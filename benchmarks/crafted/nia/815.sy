(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_17 Int) (Start_1 Int) (Start_13 Int) (Start_3 Int) (Start_4 Int) (Start_12 Int) (StartBool_1 Bool) (StartBool_5 Bool) (Start_6 Int) (Start_2 Int) (Start_16 Int) (StartBool_2 Bool) (Start_14 Int) (Start_8 Int) (StartBool_3 Bool) (Start_5 Int) (Start_7 Int) (StartBool_4 Bool) (Start_15 Int) (Start_10 Int) (Start_9 Int) (Start_11 Int))
  ((Start Int (4 (- Start_1) (- Start_2 Start) (ite StartBool_1 Start_2 Start_2)))
   (StartBool Bool (true false (not StartBool_1) (<= Start_15 Start_1) (>= Start_8 Start_6)))
   (Start_17 Int (4 (- Start_8) (- Start_8 Start_15) (+ Start_12 Start_12) (* Start Start_16) (div Start_9 Start_16) (abs Start_8)))
   (Start_1 Int (y x (+ Start_11 Start_17) (div Start_7 Start_9) (mod Start_15 Start_17) (ite StartBool Start_11 Start_10)))
   (Start_13 Int (0 y (- Start_12 Start_4) (* Start Start_14) (div Start_13 Start_3) (mod Start_10 Start_4) (ite StartBool_5 Start_4 Start_12)))
   (Start_3 Int (y 1 0 (- Start_10 Start_9) (+ Start_5 Start_10) (* Start_13 Start_5) (mod Start_4 Start) (abs Start_5) (ite StartBool_1 Start_5 Start_12)))
   (Start_4 Int (1 (+ Start_7 Start_7) (* Start_8 Start_8) (ite StartBool_3 Start_7 Start_11)))
   (Start_12 Int (3 0 x (- Start_6) (- Start_12 Start_2) (+ Start_7 Start_6)))
   (StartBool_1 Bool (true))
   (StartBool_5 Bool (true (and StartBool_5 StartBool_1) (or StartBool StartBool_1) (<= Start_15 Start_15)))
   (Start_6 Int (y (- Start_6 Start_2) (+ Start_6 Start_4) (div Start_3 Start_3) (mod Start_3 Start_5)))
   (Start_2 Int (3 (- Start) (- Start Start) (+ Start Start_1) (* Start Start) (div Start_3 Start_4) (mod Start_3 Start_5) (abs Start_6) (ite StartBool_2 Start_1 Start_5)))
   (Start_16 Int (y (- Start_13) (- Start_14 Start_3) (+ Start_11 Start_4) (* Start_6 Start_2) (mod Start_2 Start_14) (ite StartBool Start_11 Start_11)))
   (StartBool_2 Bool (true (< Start Start_5) (>= Start_3 Start_6)))
   (Start_14 Int (0 (- Start_6 Start_4) (+ Start_15 Start_1) (mod Start_15 Start_16) (ite StartBool_4 Start_2 Start_7)))
   (Start_8 Int (0 (- Start_6) (- Start_1 Start) (+ Start_7 Start_1) (* Start_6 Start_9) (mod Start_10 Start_2) (abs Start_8) (ite StartBool_3 Start_3 Start_4)))
   (StartBool_3 Bool (false true (and StartBool_1 StartBool_4) (or StartBool_3 StartBool) (<= Start_6 Start) (= Start_1 Start_7)))
   (Start_5 Int (y x (- Start_1) (- Start_2 Start_7) (+ Start_3 Start_5) (div Start_2 Start_8) (abs Start_5) (ite StartBool_2 Start_6 Start_1)))
   (Start_7 Int (1 x (+ Start_5 Start_9) (* Start_12 Start) (div Start_7 Start_8) (mod Start_6 Start_2) (abs Start_8)))
   (StartBool_4 Bool (true (>= Start_4 Start_9) (> Start_4 Start_4)))
   (Start_15 Int (y (- Start_6) (div Start_12 Start_14) (mod Start_8 Start_10) (abs Start_13) (ite StartBool_5 Start_4 Start_8)))
   (Start_10 Int (0 (- Start_7) (- Start_10 Start_7) (+ Start_8 Start_4) (* Start_5 Start_3) (abs Start_7)))
   (Start_9 Int (y 4 0 3 (- Start Start_2) (+ Start_9 Start) (* Start_8 Start_4) (div Start_1 Start_9) (abs Start_1) (ite StartBool_2 Start_11 Start_6)))
   (Start_11 Int (4 (- Start_11) (+ Start_9 Start_3) (* Start_7 Start) (div Start_11 Start_5) (mod Start_6 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (* x 4) 3)))

(check-synth)
