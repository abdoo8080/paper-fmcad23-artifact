(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_11 Int) (Start_1 Int) (Start_10 Int) (Start_3 Int) (Start_5 Int) (StartBool_1 Bool) (Start_2 Int) (Start_7 Int) (Start_8 Int) (Start_9 Int) (StartBool_3 Bool) (StartBool_2 Bool) (Start_6 Int) (Start_4 Int))
  ((Start Int (4 (- Start Start_1) (+ Start Start) (* Start_2 Start_3) (mod Start Start)))
   (StartBool Bool (false true (< Start Start_5) (<= Start_3 Start_1)))
   (Start_11 Int (5 2 1 y (- Start_5) (- Start_9 Start_9) (div Start_10 Start_3) (mod Start_10 Start_6) (ite StartBool_2 Start_7 Start_9)))
   (Start_1 Int (y 2 3 4 0 (- Start_9) (- Start_6 Start_9) (+ Start Start_8) (* Start_4 Start_7) (div Start_10 Start_11) (mod Start_11 Start) (ite StartBool_3 Start_2 Start_11)))
   (Start_10 Int (3 (- Start_5 Start_7) (+ Start_10 Start_7) (* Start_10 Start_6) (div Start_6 Start_10) (abs Start_10)))
   (Start_3 Int (y (- Start_4) (- Start_2 Start) (+ Start_2 Start_2) (* Start_1 Start_4) (div Start_2 Start_5) (mod Start Start)))
   (Start_5 Int (y (- Start_6) (- Start_1 Start_2) (mod Start_3 Start_3) (ite StartBool_1 Start_6 Start_4)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_3 StartBool_2) (= Start_6 Start_7) (>= Start_5 Start_5) (> Start_4 Start_7)))
   (Start_2 Int (4 (- Start_4 Start_4) (+ Start Start_5) (* Start_6 Start_6) (div Start_6 Start_6) (abs Start_5)))
   (Start_7 Int (1 2 5 4 (* Start Start_2) (mod Start_8 Start_8) (abs Start_7)))
   (Start_8 Int (y (- Start) (* Start_9 Start_9) (abs Start_3)))
   (Start_9 Int (3 (- Start_3) (- Start_2 Start_4) (* Start_5 Start_4) (div Start_3 Start_2) (mod Start_9 Start_10) (ite StartBool_3 Start_2 Start_2)))
   (StartBool_3 Bool (false true (< Start_2 Start_8) (<= Start_10 Start_5) (>= Start Start_2)))
   (StartBool_2 Bool (false (not StartBool_2) (< Start_8 Start_9) (<= Start_7 Start_9) (> Start_1 Start_4)))
   (Start_6 Int (5 3 1 x 4 y (- Start_6 Start_6) (+ Start Start_1) (div Start_8 Start_8)))
   (Start_4 Int (2 (- Start) (abs Start_4) (ite StartBool_1 Start_9 Start_5)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 0 x) 4)))

(check-synth)
