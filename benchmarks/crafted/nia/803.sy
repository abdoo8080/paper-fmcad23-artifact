(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_8 Bool) (StartBool_5 Bool) (Start_7 Int) (Start_8 Int) (StartBool_6 Bool) (Start_6 Int) (Start_2 Int) (Start_4 Int) (Start_5 Int) (Start_9 Int) (Start_1 Int) (Start_3 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_10 Int))
  ((Start Int (y (- Start Start) (abs Start_1)))
   (StartBool Bool (true (and StartBool_1 StartBool_1) (< Start_1 Start_2)))
   (StartBool_7 Bool (false true (and StartBool_1 StartBool_8) (< Start_8 Start_4)))
   (StartBool_1 Bool (true false (and StartBool_2 StartBool_7) (or StartBool_7 StartBool_3) (< Start_5 Start_7) (<= Start_5 Start)))
   (StartBool_4 Bool (false (or StartBool_5 StartBool) (> Start_8 Start_1)))
   (StartBool_8 Bool (true (not StartBool_2) (and StartBool_2 StartBool_7) (<= Start_3 Start_10)))
   (StartBool_5 Bool (false true (not StartBool_3) (and StartBool_1 StartBool_2) (or StartBool_5 StartBool_6) (< Start_8 Start_3) (<= Start_2 Start_1) (= Start Start_3)))
   (Start_7 Int (y (- Start_6) (- Start_5 Start_6) (+ Start_2 Start) (abs Start)))
   (Start_8 Int (4 (- Start_2) (ite StartBool_3 Start_3 Start_10)))
   (StartBool_6 Bool (true (not StartBool_6) (<= Start_1 Start) (= Start_7 Start) (>= Start_6 Start_9)))
   (Start_6 Int (x y (- Start_1) (div Start_6 Start_4) (mod Start_4 Start_2)))
   (Start_2 Int (4 (- Start_2 Start_3) (+ Start_1 Start_2) (* Start_3 Start_2) (div Start_1 Start_4) (mod Start Start_3) (abs Start_2)))
   (Start_4 Int (0 (- Start_5 Start_6) (+ Start_6 Start_6) (* Start_6 Start_4) (div Start_3 Start_4) (mod Start_1 Start)))
   (Start_5 Int (y (- Start_1 Start_7) (+ Start_7 Start_6)))
   (Start_9 Int (2 (- Start_7 Start_8) (+ Start_4 Start_6) (div Start_2 Start_1) (abs Start_10) (ite StartBool_2 Start_8 Start_8)))
   (Start_1 Int (3 (mod Start_1 Start) (abs Start)))
   (Start_3 Int (5 2 (- Start_8) (- Start_2 Start_5) (+ Start_1 Start_5) (* Start_9 Start_5) (div Start Start_5) (mod Start_1 Start_8) (abs Start_7)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool StartBool_1) (= Start_2 Start_10) (>= Start_3 Start_4)))
   (StartBool_3 Bool (true (not StartBool_4) (or StartBool StartBool_5) (< Start_8 Start_3) (= Start_1 Start_6) (> Start_3 Start_4)))
   (Start_10 Int (x 5 (- Start_5) (* Start_2 Start_10) (div Start_7 Start) (abs Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (* 3 x) 5)))

(check-synth)
