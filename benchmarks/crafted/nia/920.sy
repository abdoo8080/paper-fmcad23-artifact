(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_4 Bool) (Start_15 Int) (Start_13 Int) (Start_14 Int) (Start_10 Int) (Start_12 Int) (Start_11 Int) (Start_4 Int) (Start_1 Int) (Start_7 Int) (Start_8 Int) (StartBool_2 Bool) (Start_3 Int) (Start_2 Int) (Start_5 Int) (Start_6 Int) (StartBool_3 Bool) (StartBool_1 Bool) (Start_9 Int))
  ((Start Int (5 (- Start_1 Start) (+ Start_2 Start) (mod Start_3 Start) (ite StartBool_1 Start_1 Start_4)))
   (StartBool Bool (true (<= Start_4 Start_1) (> Start_4 Start_8)))
   (StartBool_4 Bool (true (not StartBool_2) (<= Start_15 Start_3) (= Start_15 Start_4)))
   (Start_15 Int (0 (- Start_14) (abs Start_5)))
   (Start_13 Int (3 2 (+ Start_12 Start_14) (* Start_3 Start_11) (mod Start_2 Start_13) (abs Start_11) (ite StartBool_1 Start_15 Start_14)))
   (Start_14 Int (x (- Start_7) (- Start Start_1) (mod Start_1 Start_5)))
   (Start_10 Int (x (- Start_13) (- Start_13 Start_7) (+ Start_14 Start_8) (div Start_10 Start_9) (ite StartBool_3 Start_4 Start_7)))
   (Start_12 Int (5 (- Start_10) (- Start_1 Start_12) (+ Start_5 Start_11) (div Start_12 Start_10) (abs Start_9)))
   (Start_11 Int (2 (+ Start_8 Start_7) (* Start_2 Start_3) (mod Start_7 Start_12) (abs Start_5) (ite StartBool_3 Start_2 Start_8)))
   (Start_4 Int (x (- Start Start) (+ Start_2 Start_4) (* Start_1 Start_3) (mod Start Start_1)))
   (Start_1 Int (x 3 (ite StartBool_3 Start_5 Start_1)))
   (Start_7 Int (4 0 y 3 (- Start_8 Start_5) (* Start_4 Start_2) (div Start_3 Start) (mod Start_2 Start_2) (abs Start_6) (ite StartBool_4 Start_4 Start)))
   (Start_8 Int (y 5 x 1 4 (- Start_4) (- Start_2 Start_4) (* Start_2 Start_6) (mod Start Start_6) (ite StartBool_3 Start_1 Start_7)))
   (StartBool_2 Bool (false (not StartBool_1) (or StartBool_1 StartBool) (= Start_5 Start_5)))
   (Start_3 Int (4 0 1 (mod Start_4 Start_1) (abs Start_3)))
   (Start_2 Int (1 (- Start_2 Start_4)))
   (Start_5 Int (2 (- Start_1 Start_1) (* Start_1 Start_4) (abs Start) (ite StartBool Start_2 Start_5)))
   (Start_6 Int (y 4 1 (- Start_5 Start_4) (* Start_5 Start_9) (mod Start_9 Start_4) (abs Start_8)))
   (StartBool_3 Bool (false true (not StartBool_3) (or StartBool_4 StartBool_3) (< Start_4 Start_5) (<= Start_1 Start_6) (= Start_7 Start) (>= Start_5 Start_5)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_2 StartBool) (or StartBool_2 StartBool) (<= Start_3 Start) (= Start_5 Start_3)))
   (Start_9 Int (x y (+ Start_2 Start_10) (div Start_1 Start_7) (abs Start_11) (ite StartBool_3 Start_9 Start_10)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (ite (< 4 y) (mod 5 0) x))))

(check-synth)
