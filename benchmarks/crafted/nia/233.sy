(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_19 Int) (Start_20 Int) (Start_5 Int) (Start_16 Int) (Start_3 Int) (Start_17 Int) (StartBool_5 Bool) (Start_1 Int) (Start_15 Int) (Start_13 Int) (Start_14 Int) (Start_6 Int) (Start_12 Int) (Start_2 Int) (StartBool_3 Bool) (Start_18 Int) (Start_4 Int) (StartBool_1 Bool) (StartBool_2 Bool) (Start_10 Int) (Start_8 Int) (Start_7 Int) (Start_9 Int) (Start_11 Int) (StartBool_4 Bool))
  ((Start Int (y 0 (- Start) (- Start Start) (+ Start Start_1) (mod Start_2 Start_2)))
   (StartBool Bool (false true (< Start_18 Start_5) (<= Start_3 Start_8) (= Start_17 Start_6) (> Start_3 Start_7)))
   (Start_19 Int (x (- Start_2) (- Start_11 Start_2) (* Start_19 Start_12) (div Start_11 Start_20) (mod Start_12 Start_12)))
   (Start_20 Int (4 y 1 (- Start_3 Start_14) (+ Start_4 Start_16) (div Start_3 Start_17) (mod Start_18 Start_19) (abs Start_14)))
   (Start_5 Int (x (- Start_12) (- Start_7 Start_4) (* Start_16 Start) (div Start_2 Start_1) (mod Start_13 Start_3) (abs Start_7)))
   (Start_16 Int (x (+ Start_3 Start_17) (abs Start_14) (ite StartBool Start_11 Start_7)))
   (Start_3 Int (3 4 (- Start_11) (- Start_3 Start_5) (div Start_2 Start_1) (mod Start_8 Start_11) (abs Start_12)))
   (Start_17 Int (2 y (+ Start_12 Start_15) (div Start_4 Start_9) (abs Start_15) (ite StartBool_2 Start_11 Start_16)))
   (StartBool_5 Bool (false (and StartBool_2 StartBool_1) (or StartBool_3 StartBool_5) (< Start_3 Start_11)))
   (Start_1 Int (5 2 3 4 (- Start_1 Start_14) (+ Start_18 Start_2) (* Start_19 Start_18) (div Start_8 Start_13) (abs Start_8)))
   (Start_15 Int (3 2 (* Start_13 Start_6) (mod Start_4 Start_2) (ite StartBool_5 Start_10 Start_13)))
   (Start_13 Int (0 5 x y (- Start_7) (+ Start_7 Start_13) (* Start_12 Start_14) (div Start_15 Start_10) (mod Start_15 Start_8) (abs Start_3) (ite StartBool_3 Start_14 Start_13)))
   (Start_14 Int (y 2 5 4 0 x 1 3 (- Start_4) (- Start_4 Start_3) (+ Start_13 Start_1) (div Start_4 Start_11)))
   (Start_6 Int (1 (- Start_16) (- Start_15 Start_15) (* Start_17 Start_1) (div Start_4 Start_8) (abs Start_4) (ite StartBool_1 Start_15 Start_6)))
   (Start_12 Int (4 (- Start_9 Start_8) (div Start_10 Start_11) (ite StartBool_2 Start_5 Start)))
   (Start_2 Int (2 4 3 x (- Start_1) (+ Start_3 Start_3) (* Start_3 Start_4) (abs Start_4)))
   (StartBool_3 Bool (true (not StartBool_2) (< Start Start_3) (<= Start_1 Start_4) (= Start_6 Start_9) (>= Start Start_4) (> Start_4 Start_2)))
   (Start_18 Int (3 (* Start Start_20) (mod Start_3 Start_12) (ite StartBool_4 Start_19 Start_8)))
   (Start_4 Int (5 (+ Start_5 Start_6) (mod Start_7 Start_8) (ite StartBool_1 Start_7 Start_3)))
   (StartBool_1 Bool (false true (not StartBool) (or StartBool_2 StartBool) (< Start Start_1) (<= Start_4 Start_8) (= Start_4 Start_6)))
   (StartBool_2 Bool (false true (not StartBool_3) (> Start_6 Start_3)))
   (Start_10 Int (2 (- Start_8) (* Start_5 Start_7) (ite StartBool_2 Start Start_3)))
   (Start_8 Int (0 (- Start_2) (- Start_10 Start_3) (+ Start_5 Start_8) (* Start_9 Start_4) (div Start_11 Start_8) (ite StartBool_1 Start_12 Start_6)))
   (Start_7 Int (0 x (- Start_13 Start) (div Start_14 Start_8) (mod Start_13 Start_12) (abs Start_12) (ite StartBool_4 Start_6 Start_5)))
   (Start_9 Int (y (- Start_1) (+ Start_6 Start_3) (* Start_5 Start_3) (div Start_9 Start_3) (mod Start_10 Start) (abs Start_3)))
   (Start_11 Int (3 (div Start_10 Start_8) (mod Start_10 Start_10) (abs Start_9) (ite StartBool Start_5 Start_5)))
   (StartBool_4 Bool (false (or StartBool_2 StartBool_3) (<= Start_9 Start_10) (= Start_3 Start_9)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* (- 3 (mod y x)) 2)))

(check-synth)
