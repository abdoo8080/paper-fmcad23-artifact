(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_15 Int) (Start_1 Int) (StartBool_5 Bool) (Start_2 Int) (Start_3 Int) (StartBool_1 Bool) (Start_8 Int) (Start_5 Int) (Start_14 Int) (StartBool_6 Bool) (Start_12 Int) (Start_9 Int) (StartBool_3 Bool) (Start_11 Int) (StartBool_2 Bool) (StartBool_4 Bool) (Start_6 Int) (Start_7 Int) (Start_4 Int) (Start_10 Int))
  ((Start Int (4 (+ Start_1 Start) (* Start_2 Start_3) (mod Start_2 Start_4) (abs Start_2) (ite StartBool_1 Start_2 Start_3)))
   (StartBool Bool (true (not StartBool_3) (< Start_1 Start) (<= Start_4 Start_13) (= Start_3 Start_2) (>= Start_10 Start_7) (> Start_11 Start_14)))
   (Start_13 Int (2 5 (- Start_3 Start_10) (+ Start_13 Start_4) (* Start_14 Start_10) (div Start_3 Start_13) (abs Start_8) (ite StartBool Start_3 Start_2)))
   (Start_15 Int (1 (- Start_9) (+ Start_12 Start_13) (* Start_9 Start_7) (div Start_12 Start_11) (mod Start_4 Start_6) (abs Start_7) (ite StartBool Start_14 Start)))
   (Start_1 Int (5 (- Start_12) (+ Start_1 Start_10) (* Start_7 Start_5) (abs Start_12) (ite StartBool_2 Start_4 Start_8)))
   (StartBool_5 Bool (true false (not StartBool_2) (and StartBool_6 StartBool_5) (< Start_11 Start_3)))
   (Start_2 Int (3 0 2 5 (- Start_4) (+ Start_3 Start_1) (div Start_5 Start) (abs Start_11) (ite StartBool_5 Start_6 Start_12)))
   (Start_3 Int (4 0 y (- Start_11) (+ Start_5 Start_5) (* Start_4 Start_7) (abs Start_4) (ite StartBool_3 Start_2 Start_9)))
   (StartBool_1 Bool (false (not StartBool_2) (or StartBool_1 StartBool_2) (< Start Start_4) (= Start_2 Start_5) (>= Start Start)))
   (Start_8 Int (1 (+ Start_2 Start_8) (div Start_8 Start_3) (abs Start_6)))
   (Start_5 Int (4 (- Start_2) (mod Start_1 Start_4)))
   (Start_14 Int (y (- Start_8) (mod Start_9 Start_4) (ite StartBool_2 Start_15 Start_7)))
   (StartBool_6 Bool (false true (not StartBool) (and StartBool_6 StartBool_5) (or StartBool_6 StartBool_1) (>= Start_3 Start_10)))
   (Start_12 Int (2 1 3 y (div Start_7 Start_8) (mod Start_7 Start_12) (ite StartBool_5 Start_5 Start_8)))
   (Start_9 Int (3 1 2 0 5 (abs Start_7)))
   (StartBool_3 Bool (true false (< Start_8 Start_5) (= Start_3 Start_2) (>= Start_4 Start_2) (> Start_5 Start_3)))
   (Start_11 Int (5 (- Start_1) (- Start_5 Start_11) (+ Start_2 Start) (div Start_7 Start_4) (abs Start_4)))
   (StartBool_2 Bool (false true (and StartBool_1 StartBool) (or StartBool_3 StartBool) (<= Start_1 Start_3) (= Start_5 Start_3) (> Start_6 Start_6)))
   (StartBool_4 Bool (true (<= Start Start_3) (= Start Start_6) (> Start_8 Start_8)))
   (Start_6 Int (x (- Start_7) (- Start_2 Start_6) (* Start_2 Start_6) (div Start_2 Start) (mod Start_4 Start_1) (abs Start_5) (ite StartBool_4 Start_4 Start_4)))
   (Start_7 Int (x 2 (- Start_1) (* Start_9 Start_8) (div Start_5 Start_6) (mod Start_5 Start_8) (ite StartBool Start Start_5)))
   (Start_4 Int (0 (- Start_5 Start_3) (* Start_5 Start_9) (div Start_10 Start_1) (ite StartBool_2 Start_3 Start_11)))
   (Start_10 Int (0 1 (- Start_1 Start_7) (+ Start_7 Start_2) (* Start_4 Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (abs (mod y 0)))))

(check-synth)
