(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_3 Bool) (Start_18 Int) (Start_12 Int) (Start_11 Int) (Start_9 Int) (Start_5 Int) (Start_8 Int) (StartBool_4 Bool) (Start_6 Int) (Start_16 Int) (Start_1 Int) (Start_7 Int) (StartBool_1 Bool) (StartBool_5 Bool) (Start_15 Int) (Start_21 Int) (Start_10 Int) (Start_3 Int) (Start_14 Int) (Start_22 Int) (Start_4 Int) (Start_19 Int) (Start_17 Int) (Start_13 Int) (StartBool_6 Bool) (StartBool_2 Bool) (Start_20 Int) (StartBool_7 Bool))
  ((Start Int (x 1 2 y (- Start_1) (* Start Start) (abs Start_1)))
   (StartBool Bool (true false (and StartBool StartBool_2) (or StartBool_4 StartBool_2) (<= Start_11 Start_21)))
   (Start_2 Int (y (- Start_21 Start_7) (+ Start_5 Start_11) (div Start_20 Start_9) (mod Start_21 Start_9) (abs Start_7)))
   (StartBool_3 Bool (true false (or StartBool_1 StartBool) (< Start_5 Start_13) (= Start_13 Start_1) (>= Start_13 Start_6) (> Start_9 Start_5)))
   (Start_18 Int (5 2 (+ Start_14 Start) (* Start_15 Start_2) (div Start_13 Start_11) (abs Start_11) (ite StartBool_5 Start_19 Start_16)))
   (Start_12 Int (x 2 (- Start_5 Start_7) (div Start_8 Start_3) (mod Start Start)))
   (Start_11 Int (3 y (- Start_12 Start_5) (* Start_2 Start_11) (abs Start_13) (ite StartBool_3 Start_13 Start_5)))
   (Start_9 Int (0 5 1 x (+ Start_4 Start_8) (* Start_8 Start_10) (div Start_11 Start_7) (mod Start_8 Start_7)))
   (Start_5 Int (2 5 (- Start_4) (+ Start Start_1) (* Start_3 Start_4) (mod Start Start_1) (abs Start_7)))
   (Start_8 Int (4 5 (- Start_8) (+ Start_9 Start_8) (* Start_4 Start_8) (div Start_3 Start_5) (abs Start_6) (ite StartBool_2 Start_1 Start_6)))
   (StartBool_4 Bool (false (not StartBool_4) (and StartBool_6 StartBool_3) (<= Start_4 Start_11) (= Start_5 Start_2) (> Start_2 Start_10)))
   (Start_6 Int (y (mod Start_4 Start_1) (abs Start_3)))
   (Start_16 Int (y 4 3 (- Start_11) (+ Start_11 Start) (* Start_13 Start_18) (div Start_9 Start_4)))
   (Start_1 Int (4 (mod Start_2 Start_3) (ite StartBool_1 Start_4 Start)))
   (Start_7 Int (5 0 (- Start_4 Start_3) (+ Start_4 Start_1) (* Start_6 Start_3) (abs Start_3) (ite StartBool Start Start_2)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool_1) (or StartBool_2 StartBool_1) (<= Start_8 Start_5) (>= Start_2 Start_7)))
   (StartBool_5 Bool (true false (not StartBool) (and StartBool_6 StartBool_3) (< Start_14 Start_2) (>= Start_13 Start_16)))
   (Start_15 Int (1 (- Start_15) (div Start_2 Start_12) (mod Start_1 Start_14) (abs Start_21)))
   (Start_21 Int (x 5 (- Start_22) (mod Start_6 Start_8) (ite StartBool_4 Start_5 Start_20)))
   (Start_10 Int (4 x (- Start_4) (- Start_10 Start_1) (mod Start_6 Start_9) (abs Start_9)))
   (Start_3 Int (1 x 2 (- Start_22) (- Start_5 Start_22) (+ Start_20 Start_1) (div Start_22 Start_8) (abs Start_2) (ite StartBool_4 Start_20 Start_2)))
   (Start_14 Int (1 2 (- Start_3) (+ Start_2 Start_9) (* Start_13 Start_7) (div Start_15 Start_9) (mod Start_11 Start_15) (abs Start_16) (ite StartBool_4 Start_8 Start_17)))
   (Start_22 Int (x y 3 4 (- Start_22 Start_18) (+ Start_5 Start_20) (div Start_1 Start_22) (mod Start_22 Start_12) (abs Start_19)))
   (Start_4 Int (y 3 0 (- Start_1) (- Start_4 Start_5) (* Start_6 Start_3) (div Start_1 Start_1) (mod Start_3 Start)))
   (Start_19 Int (2 3 (- Start_2 Start_10) (abs Start_6)))
   (Start_17 Int (2 1 (- Start_17) (- Start_8 Start) (+ Start_13 Start_10)))
   (Start_13 Int (x 2 (+ Start_12 Start_5) (* Start_11 Start_7)))
   (StartBool_6 Bool (false (or StartBool_5 StartBool_7) (< Start_9 Start_20)))
   (StartBool_2 Bool (false (not StartBool_4) (or StartBool_3 StartBool) (>= Start_8 Start_14) (> Start_13 Start_1)))
   (Start_20 Int (x (+ Start_2 Start_11) (mod Start_15 Start_18) (abs Start_19)))
   (StartBool_7 Bool (true false (and StartBool_5 StartBool_2) (< Start_5 Start_11) (<= Start_3 Start_2) (= Start_2 Start_1) (>= Start_14 Start_20) (> Start_17 Start_12)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (ite (< x 1) 2 0) y)))

(check-synth)
