(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_20 Int) (Start_1 Int) (Start_2 Int) (StartBool_4 Bool) (Start_17 Int) (Start_5 Int) (Start_16 Int) (Start_19 Int) (StartBool_1 Bool) (Start_6 Int) (Start_7 Int) (Start_12 Int) (Start_11 Int) (Start_10 Int) (Start_13 Int) (Start_9 Int) (Start_18 Int) (StartBool_5 Bool) (Start_3 Int) (Start_8 Int) (Start_4 Int) (Start_15 Int) (StartBool_2 Bool) (StartBool_3 Bool) (StartBool_6 Bool) (Start_14 Int))
  ((Start Int (1 y (- Start_1 Start) (* Start_2 Start_3) (div Start_4 Start_1) (mod Start_5 Start_6) (abs Start_6)))
   (StartBool Bool (false (not StartBool_5) (or StartBool_3 StartBool_4) (= Start_6 Start_17) (> Start_13 Start_11)))
   (Start_20 Int (3 0 (- Start_1 Start_20) (+ Start_14 Start_1) (div Start_6 Start_2) (abs Start_4)))
   (Start_1 Int (y 1 2 (- Start_15 Start_11) (+ Start_15 Start_4) (* Start_8 Start_7) (mod Start_6 Start_14) (ite StartBool_1 Start_11 Start_3)))
   (Start_2 Int (1 (+ Start_3 Start_13) (* Start_15 Start_3) (abs Start_6) (ite StartBool_2 Start_4 Start_8)))
   (StartBool_4 Bool (false (not StartBool_2) (and StartBool_2 StartBool_4) (< Start_15 Start_10) (<= Start_10 Start) (>= Start_8 Start_9) (> Start_10 Start_11)))
   (Start_17 Int (2 (+ Start_9 Start_15) (* Start_8 Start_9) (abs Start_14) (ite StartBool_2 Start_11 Start_15)))
   (Start_5 Int (2 (- Start_14 Start_15) (* Start Start_11) (mod Start_14 Start_7) (abs Start_14)))
   (Start_16 Int (x 1 5 4 y (- Start_9) (* Start_11 Start_1)))
   (Start_19 Int (2 (abs Start_19) (ite StartBool Start_2 Start_3)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool StartBool) (< Start Start_4) (<= Start_7 Start_9) (= Start Start_7) (>= Start_3 Start_7) (> Start_6 Start_12)))
   (Start_6 Int (5 2 (- Start_4) (- Start_4 Start_7) (+ Start_7 Start_6) (div Start_5 Start_4) (ite StartBool Start_6 Start_1)))
   (Start_7 Int (3 (- Start_6) (- Start_8 Start_5) (+ Start_5 Start_9) (* Start_10 Start_7) (div Start_3 Start_11) (abs Start_8) (ite StartBool_1 Start_7 Start_2)))
   (Start_12 Int (x 3 y 2 1 0 4 (- Start_9) (- Start_3 Start_1) (+ Start Start_8) (* Start_9 Start_1) (mod Start_5 Start_8) (ite StartBool_1 Start_11 Start_1)))
   (Start_11 Int (x 3 (- Start_12 Start_6) (+ Start_8 Start_7) (* Start_2 Start_1) (div Start_12 Start) (abs Start_9) (ite StartBool Start_11 Start_2)))
   (Start_10 Int (1 4 y 5 (- Start_2) (+ Start_10 Start_7) (* Start Start_7) (div Start_11 Start_3) (abs Start_2)))
   (Start_13 Int (y 0 x (- Start_6) (- Start_12 Start_7) (+ Start_10 Start) (div Start_4 Start_7) (mod Start_6 Start_6)))
   (Start_9 Int (5 (- Start_3 Start_12) (+ Start_5 Start_13) (* Start_12 Start_1) (mod Start_9 Start_9)))
   (Start_18 Int (0 x (- Start_9 Start_3) (+ Start_6 Start_4) (div Start_19 Start_3) (mod Start Start_14) (abs Start_15)))
   (StartBool_5 Bool (true false (not StartBool_6) (and StartBool_4 StartBool_5) (= Start_18 Start_16)))
   (Start_3 Int (y 0 (+ Start_4 Start_16) (* Start_16 Start_16) (div Start_5 Start_7) (mod Start_2 Start_16) (abs Start_8)))
   (Start_8 Int (x (- Start_11) (+ Start_12 Start) (ite StartBool_2 Start_6 Start_13)))
   (Start_4 Int (5 0 (- Start_9 Start_1) (+ Start_6 Start_7) (* Start_1 Start_12) (ite StartBool_4 Start_16 Start_16)))
   (Start_15 Int (1 2 3 x y (- Start_3) (- Start_1 Start_16) (+ Start_1 Start_12) (div Start_7 Start) (abs Start_10) (ite StartBool Start_16 Start_7)))
   (StartBool_2 Bool (true (and StartBool StartBool_2) (or StartBool_1 StartBool_3) (< Start Start_5) (= Start_3 Start_2)))
   (StartBool_3 Bool (true false (= Start_6 Start_4) (>= Start_6 Start_14)))
   (StartBool_6 Bool (false (and StartBool_5 StartBool_4) (or StartBool_4 StartBool_1) (< Start Start_8) (= Start_20 Start_15) (> Start Start_16)))
   (Start_14 Int (3 y 2 0 4 (- Start_11 Start_14) (+ Start_1 Start_2) (div Start_15 Start_9) (mod Start_7 Start_11) (ite StartBool Start_13 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (+ (mod (div 3 0) y) 1)))

(check-synth)
