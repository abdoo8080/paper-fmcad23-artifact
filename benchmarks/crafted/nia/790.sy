(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_16 Int) (Start_11 Int) (Start_17 Int) (Start_15 Int) (StartBool_5 Bool) (Start_12 Int) (Start_13 Int) (StartBool_4 Bool) (Start_9 Int) (Start_2 Int) (Start_5 Int) (Start_3 Int) (Start_4 Int) (StartBool_1 Bool) (Start_14 Int) (StartBool_2 Bool) (StartBool_3 Bool) (Start_6 Int) (Start_1 Int) (Start_10 Int) (Start_7 Int) (Start_8 Int))
  ((Start Int (2 5 (+ Start_1 Start_1) (* Start Start_1) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (false (<= Start_16 Start_5) (= Start_17 Start_3) (>= Start_15 Start_2)))
   (Start_16 Int (0 (- Start_11 Start_15) (+ Start Start_2) (div Start_5 Start_13) (abs Start_12) (ite StartBool_2 Start_2 Start_14)))
   (Start_11 Int (3 x (+ Start_14 Start_10) (* Start_6 Start) (mod Start_7 Start_2) (abs Start_3) (ite StartBool_2 Start_9 Start)))
   (Start_17 Int (4 (+ Start_2 Start_13) (div Start_1 Start_5) (ite StartBool_3 Start_10 Start_16)))
   (Start_15 Int (4 3 1 x (- Start_8) (- Start_9 Start_5) (div Start_10 Start_10) (mod Start Start_15) (ite StartBool_1 Start_14 Start_2)))
   (StartBool_5 Bool (true (<= Start_5 Start_14) (= Start_1 Start) (>= Start_15 Start_2)))
   (Start_12 Int (0 1 5 (+ Start_8 Start_8) (ite StartBool_5 Start_2 Start_11)))
   (Start_13 Int (3 (- Start_9) (* Start Start_7) (div Start_10 Start_3) (mod Start_10 Start_9) (ite StartBool_5 Start_9 Start_9)))
   (StartBool_4 Bool (true false (and StartBool_4 StartBool_5) (or StartBool StartBool) (< Start Start_4) (<= Start_1 Start_7) (>= Start_12 Start_13)))
   (Start_9 Int (1 4 (- Start_11) (* Start_3 Start_5) (div Start_10 Start_10) (mod Start_7 Start_5) (abs Start_6) (ite StartBool_4 Start_8 Start_7)))
   (Start_2 Int (y 2 (- Start_2 Start_2) (* Start_2 Start_3) (ite StartBool Start_3 Start_2)))
   (Start_5 Int (2 (+ Start_4 Start_4) (* Start Start_5) (ite StartBool_2 Start_5 Start_6)))
   (Start_3 Int (1 3 (div Start_3 Start_1) (mod Start_3 Start) (abs Start_2)))
   (Start_4 Int (x 1 y 3 4 (- Start_1 Start_4) (abs Start_1)))
   (StartBool_1 Bool (true false (not StartBool_1) (or StartBool_2 StartBool_2) (< Start_1 Start_3) (<= Start_1 Start_2) (= Start_4 Start) (> Start_4 Start_2)))
   (Start_14 Int (x (* Start_2 Start_12) (div Start_9 Start_8) (abs Start_2)))
   (StartBool_2 Bool (true (not StartBool_2) (<= Start_5 Start_2) (= Start_5 Start_3) (>= Start_3 Start_1)))
   (StartBool_3 Bool (false true (< Start_7 Start_4)))
   (Start_6 Int (2 (div Start_7 Start_7) (ite StartBool_1 Start_5 Start_5)))
   (Start_1 Int (1 4 (- Start) (- Start_2 Start) (* Start_2 Start_1) (div Start_5 Start_5) (mod Start_2 Start_1) (abs Start_9) (ite StartBool_3 Start_7 Start_10)))
   (Start_10 Int (y 2 4 1 (- Start_7 Start) (+ Start_4 Start_8) (div Start_6 Start_6) (mod Start_2 Start_1)))
   (Start_7 Int (0 (- Start_5 Start_4) (div Start_3 Start_1) (mod Start_3 Start_4) (abs Start_6) (ite StartBool_2 Start_8 Start_7)))
   (Start_8 Int (3 4 (- Start_2) (abs Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div 4 x) (mod x 2))))

(check-synth)
