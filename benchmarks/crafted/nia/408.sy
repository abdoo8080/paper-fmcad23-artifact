(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_16 Int) (Start_14 Int) (Start_2 Int) (Start_1 Int) (Start_3 Int) (Start_12 Int) (StartBool_3 Bool) (StartBool_4 Bool) (Start_4 Int) (Start_6 Int) (Start_5 Int) (StartBool_1 Bool) (Start_10 Int) (StartBool_2 Bool) (Start_13 Int) (Start_11 Int) (Start_7 Int) (Start_8 Int) (StartBool_5 Bool) (Start_15 Int) (Start_9 Int))
  ((Start Int (2 4 5 (- Start_1) (- Start_1 Start_2) (+ Start_1 Start_2) (div Start_1 Start_1) (mod Start_1 Start_1) (abs Start_3) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false (not StartBool_3) (< Start_10 Start_10) (<= Start_11 Start_7) (= Start_14 Start_7) (>= Start_16 Start_11)))
   (Start_16 Int (3 4 1 y (- Start_1 Start_4) (* Start_5 Start_11) (mod Start_3 Start_2)))
   (Start_14 Int (2 (- Start_11) (div Start_1 Start_13) (abs Start_12) (ite StartBool_4 Start_12 Start_4)))
   (Start_2 Int (3 (- Start_11 Start_6) (+ Start_12 Start_11) (* Start_12 Start_2) (ite StartBool_2 Start_13 Start_11)))
   (Start_1 Int (2 (- Start_7 Start_2) (+ Start_5 Start_8) (* Start_2 Start_15) (abs Start_11) (ite StartBool Start_15 Start_5)))
   (Start_3 Int (0 5 y (- Start_4) (+ Start_10 Start_7) (mod Start_2 Start_3)))
   (Start_12 Int (2 (- Start_3) (+ Start_3 Start_7)))
   (StartBool_3 Bool (false (not StartBool_2) (and StartBool_2 StartBool_1) (or StartBool StartBool_4) (= Start Start_1)))
   (StartBool_4 Bool (false (not StartBool_3) (and StartBool_5 StartBool_4) (or StartBool_1 StartBool_5) (< Start_2 Start_4) (> Start_2 Start_1)))
   (Start_4 Int (5 (- Start Start_5) (+ Start_3 Start) (div Start Start_6) (mod Start_4 Start_5) (abs Start_6) (ite StartBool_1 Start Start_5)))
   (Start_6 Int (3 (- Start_2 Start_3) (+ Start_1 Start_4) (* Start_4 Start_1) (mod Start Start) (ite StartBool_1 Start_2 Start_6)))
   (Start_5 Int (2 (- Start_6) (+ Start_7 Start_4) (ite StartBool_4 Start_6 Start_2)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool_2 StartBool_3) (< Start_2 Start) (= Start_3 Start_2) (>= Start Start_3)))
   (Start_10 Int (3 (- Start_6) (ite StartBool_2 Start_2 Start)))
   (StartBool_2 Bool (false true (= Start_4 Start_2) (>= Start_8 Start_11) (> Start_2 Start_3)))
   (Start_13 Int (2 1 4 5 (- Start_6) (+ Start_6 Start_4) (div Start_6 Start_13) (mod Start_14 Start_5) (abs Start_12)))
   (Start_11 Int (5 y (+ Start_10 Start_9) (* Start_5 Start_9) (mod Start_4 Start_12) (abs Start_3) (ite StartBool_5 Start_5 Start_4)))
   (Start_7 Int (5 (- Start_1 Start_2) (* Start_2 Start_7) (div Start_3 Start) (mod Start_8 Start_5)))
   (Start_8 Int (0 (* Start_3 Start_8) (div Start_1 Start_8) (ite StartBool_1 Start_8 Start_2)))
   (StartBool_5 Bool (false true (not StartBool) (< Start_4 Start_9) (<= Start_6 Start_10) (= Start_2 Start_10)))
   (Start_15 Int (4 3 (mod Start_8 Start_7) (abs Start) (ite StartBool_1 Start_4 Start_15)))
   (Start_9 Int (1 (* Start_7 Start_7) (ite StartBool_1 Start_1 Start_3)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 0 (- (div 4 0) 1))))

(check-synth)
