(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_1 Int) (Start_17 Int) (Start_2 Int) (Start_14 Int) (StartBool_5 Bool) (Start_5 Int) (Start_4 Int) (Start_12 Int) (Start_3 Int) (StartBool_2 Bool) (Start_7 Int) (Start_8 Int) (Start_19 Int) (Start_9 Int) (Start_10 Int) (StartBool_1 Bool) (Start_6 Int) (Start_16 Int) (Start_11 Int) (Start_15 Int) (StartBool_4 Bool) (Start_13 Int) (StartBool_3 Bool))
  ((Start Int (1 (- Start_1) (- Start_1 Start_2) (+ Start_1 Start_2) (ite StartBool_1 Start_3 Start_4)))
   (StartBool Bool (false true (not StartBool_2) (and StartBool_2 StartBool_2) (< Start_6 Start_7) (<= Start_5 Start) (= Start_19 Start_14) (>= Start_13 Start_19) (> Start_3 Start_7)))
   (Start_18 Int (4 (- Start_8 Start_14) (mod Start_13 Start_4) (abs Start_13) (ite StartBool Start_19 Start_17)))
   (Start_1 Int (2 (+ Start Start_16) (* Start_13 Start_10)))
   (Start_17 Int (2 1 (- Start_11 Start_9) (* Start_4 Start_11) (mod Start_17 Start_18) (abs Start_13) (ite StartBool_1 Start_5 Start_13)))
   (Start_2 Int (4 (- Start_14 Start_15) (+ Start_9 Start_1) (* Start_16 Start_5) (div Start_13 Start_3) (mod Start_8 Start_2) (abs Start_10)))
   (Start_14 Int (0 (- Start_1) (- Start_10 Start_10) (* Start_10 Start_4) (div Start_10 Start_2) (ite StartBool_4 Start_5 Start_2)))
   (StartBool_5 Bool (true false (< Start_11 Start_5) (= Start_14 Start_17) (>= Start_17 Start_4) (> Start_6 Start_13)))
   (Start_5 Int (4 x (- Start_14 Start_1) (+ Start_8 Start_7) (mod Start_10 Start_11)))
   (Start_4 Int (y 4 (- Start_2 Start) (+ Start_3 Start) (mod Start_5 Start) (ite StartBool_2 Start_4 Start_5)))
   (Start_12 Int (0 4 5 (- Start_12) (- Start_12 Start_11) (+ Start_13 Start_13) (* Start_2 Start_8) (ite StartBool_3 Start_2 Start_12)))
   (Start_3 Int (0 (- Start_7) (+ Start_3 Start_8) (div Start_8 Start_4) (mod Start_1 Start_7) (abs Start_5) (ite StartBool_1 Start_5 Start_8)))
   (StartBool_2 Bool (false true (and StartBool StartBool_3) (or StartBool StartBool_1) (<= Start_4 Start_1) (= Start_6 Start_7) (>= Start_1 Start_2) (> Start_4 Start_7)))
   (Start_7 Int (4 2 x y 1 0 (- Start_1) (- Start_5 Start_2) (+ Start_8 Start_8) (mod Start_7 Start_7) (abs Start_7) (ite StartBool_2 Start_5 Start_6)))
   (Start_8 Int (x 4 (- Start_6) (- Start_4 Start_3) (+ Start Start) (* Start_4 Start_6) (mod Start Start_9)))
   (Start_19 Int (5 (+ Start_14 Start_11) (* Start_17 Start_13) (div Start_14 Start_12) (abs Start_10) (ite StartBool_5 Start_7 Start_10)))
   (Start_9 Int (y 4 (- Start_6) (+ Start_10 Start_4) (* Start_3 Start_1) (div Start_3 Start_4)))
   (Start_10 Int (4 (- Start_6) (- Start_7 Start_1) (+ Start_8 Start_1) (div Start_4 Start_3) (mod Start_7 Start_10) (abs Start_8)))
   (StartBool_1 Bool (true false (< Start_12 Start_4) (<= Start_6 Start_4) (>= Start_1 Start_10)))
   (Start_6 Int (x (- Start_9 Start_3) (div Start_3 Start_11) (mod Start_11 Start_8) (ite StartBool_1 Start_8 Start_7)))
   (Start_16 Int (5 (- Start_2) (- Start_7 Start_1) (div Start_12 Start_12)))
   (Start_11 Int (1 (- Start_7) (- Start_1 Start_8) (+ Start_1 Start_12) (div Start_12 Start) (abs Start_11) (ite StartBool_3 Start_9 Start_12)))
   (Start_15 Int (0 4 (- Start_5) (- Start_4 Start_10) (+ Start_10 Start_12) (* Start_14 Start) (ite StartBool_5 Start_15 Start_12)))
   (StartBool_4 Bool (false true (not StartBool_1) (and StartBool_1 StartBool) (<= Start_8 Start_6) (= Start_9 Start_2) (>= Start_7 Start_10) (> Start Start_2)))
   (Start_13 Int (5 (- Start Start_13) (mod Start_9 Start_10)))
   (StartBool_3 Bool (false true (and StartBool StartBool_2) (or StartBool_4 StartBool_4) (<= Start_8 Start_13)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 y)))

(check-synth)
