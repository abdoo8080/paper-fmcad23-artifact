(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_23 Int) (Start_1 Int) (Start_2 Int) (Start_4 Int) (Start_20 Int) (Start_17 Int) (Start_14 Int) (Start_5 Int) (Start_12 Int) (Start_21 Int) (Start_16 Int) (Start_18 Int) (Start_8 Int) (Start_15 Int) (Start_19 Int) (Start_3 Int) (StartBool_3 Bool) (Start_6 Int) (Start_13 Int) (Start_22 Int) (StartBool_4 Bool) (StartBool_1 Bool) (Start_10 Int) (Start_9 Int) (Start_7 Int) (Start_11 Int) (StartBool_2 Bool))
  ((Start Int (5 (- Start Start_1) (+ Start_2 Start_2) (* Start_2 Start) (div Start Start_3) (mod Start_1 Start_1)))
   (StartBool Bool (true false (not StartBool_1) (or StartBool StartBool_3) (<= Start_23 Start_14) (= Start_5 Start_12) (>= Start_1 Start_12) (> Start_17 Start_10)))
   (Start_23 Int (2 5 y 4 (- Start_12) (+ Start_7 Start_20) (div Start_4 Start_17)))
   (Start_1 Int (3 5 (- Start_9) (- Start_17 Start_10) (+ Start_17 Start_18) (* Start_3 Start_20) (mod Start_19 Start_12) (abs Start_5)))
   (Start_2 Int (0 (- Start_10 Start_6) (+ Start_10 Start_14) (* Start_7 Start_15)))
   (Start_4 Int (4 1 0 (+ Start_8 Start_3) (* Start_22 Start_14) (div Start Start_18) (abs Start_22) (ite StartBool_3 Start_9 Start_15)))
   (Start_20 Int (x y (- Start_8) (- Start_19 Start_15) (+ Start Start_7) (* Start_16 Start_6) (div Start_19 Start_6) (mod Start_8 Start_4) (abs Start_4) (ite StartBool_1 Start Start_14)))
   (Start_17 Int (x 4 (- Start_6) (- Start_7 Start_3) (div Start_14 Start_9) (abs Start_18)))
   (Start_14 Int (3 (- Start_7) (+ Start_15 Start_4) (mod Start_16 Start_13) (ite StartBool_3 Start_17 Start_2)))
   (Start_5 Int (x 4 (- Start_14) (- Start_14 Start) (div Start_1 Start) (abs Start_2) (ite StartBool_1 Start_3 Start_2)))
   (Start_12 Int (y x (- Start_4) (+ Start_9 Start_10) (mod Start_4 Start_11) (ite StartBool_1 Start_6 Start_6)))
   (Start_21 Int (1 (- Start_18) (div Start_17 Start_15) (abs Start_3) (ite StartBool_1 Start_21 Start_21)))
   (Start_16 Int (3 (+ Start_4 Start_13) (* Start_13 Start_19) (div Start_3 Start_7) (ite StartBool Start_6 Start_14)))
   (Start_18 Int (0 (- Start_14) (- Start_15 Start_8)))
   (Start_8 Int (0 (- Start_6 Start_9) (+ Start_7 Start_4) (abs Start) (ite StartBool_3 Start Start_7)))
   (Start_15 Int (x (- Start_16) (- Start_4 Start_20) (+ Start_21 Start_12) (div Start_6 Start_1) (mod Start_20 Start_9)))
   (Start_19 Int (y (+ Start_12 Start_9) (abs Start_10) (ite StartBool_4 Start_9 Start_20)))
   (Start_3 Int (x 5 (- Start) (- Start_4 Start_2) (div Start_3 Start_5) (abs Start_5) (ite StartBool_1 Start_2 Start_3)))
   (StartBool_3 Bool (true (not StartBool_3) (and StartBool_2 StartBool_4) (or StartBool_4 StartBool_1) (< Start Start_4) (> Start_9 Start_8)))
   (Start_6 Int (0 1 (div Start_7 Start_1) (abs Start_8) (ite StartBool Start_3 Start)))
   (Start_13 Int (4 (+ Start_5 Start_1) (* Start_7 Start) (mod Start_3 Start_7) (ite StartBool_4 Start_12 Start_13)))
   (Start_22 Int (4 1 y 0 5 3 x 2 (- Start_17) (- Start_3 Start_14) (* Start_18 Start_12) (mod Start_22 Start_20)))
   (StartBool_4 Bool (true false (not StartBool) (and StartBool_4 StartBool_4) (or StartBool_3 StartBool_3) (= Start_4 Start_10)))
   (StartBool_1 Bool (true (or StartBool_2 StartBool) (< Start_5 Start_6) (<= Start_2 Start_2)))
   (Start_10 Int (3 1 (- Start_3) (+ Start_3 Start_4) (div Start_2 Start_3) (abs Start_2)))
   (Start_9 Int (4 (mod Start Start_2) (abs Start_5)))
   (Start_7 Int (1 3 (div Start_9 Start_9) (ite StartBool Start_11 Start)))
   (Start_11 Int (3 (- Start_11) (+ Start_9 Start_8) (abs Start_3) (ite StartBool_4 Start Start_2)))
   (StartBool_2 Bool (false (and StartBool_3 StartBool_3) (= Start_10 Start_12) (>= Start_13 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (- 4 x) (- x))))

(check-synth)
