(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_1 Int) (Start_2 Int) (StartBool_9 Bool) (Start_25 Int) (Start_17 Int) (StartBool_4 Bool) (Start_13 Int) (Start_16 Int) (Start_6 Int) (Start_4 Int) (Start_21 Int) (Start_11 Int) (StartBool_7 Bool) (StartBool_2 Bool) (Start_24 Int) (Start_8 Int) (StartBool_1 Bool) (Start_15 Int) (StartBool_8 Bool) (Start_7 Int) (Start_10 Int) (Start_12 Int) (Start_9 Int) (StartBool_3 Bool) (StartBool_5 Bool) (Start_14 Int) (Start_23 Int) (StartBool_6 Bool) (Start_3 Int) (Start_18 Int) (Start_20 Int) (Start_5 Int) (Start_22 Int) (Start_19 Int))
  ((Start Int (3 y 0 4 2 5 x (- Start) (- Start Start_1) (div Start Start_1) (mod Start Start_2) (abs Start) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true false (not StartBool_7) (<= Start_6 Start_5)))
   (Start_1 Int (x (- Start_13) (abs Start_23)))
   (Start_2 Int (0 2 (- Start_14) (- Start_12 Start_5) (+ Start_13 Start_14) (div Start_25 Start_11) (abs Start_9) (ite StartBool_2 Start_21 Start_25)))
   (StartBool_9 Bool (false (not StartBool_4) (or StartBool StartBool_2) (<= Start_11 Start_25) (= Start_14 Start) (>= Start_13 Start_18)))
   (Start_25 Int (5 (- Start_12 Start_18) (+ Start_25 Start_13) (* Start_19 Start_8) (div Start_25 Start_8) (abs Start_23) (ite StartBool Start_14 Start_10)))
   (Start_17 Int (x 0 2 3 (+ Start_11 Start) (ite StartBool_9 Start_12 Start_25)))
   (StartBool_4 Bool (false true (not StartBool_5) (< Start_11 Start_3) (<= Start_11 Start_10) (>= Start_3 Start_1)))
   (Start_13 Int (3 5 (- Start_5) (* Start_10 Start_2) (div Start_7 Start_13) (mod Start_6 Start_1)))
   (Start_16 Int (1 (- Start_15) (+ Start_14 Start_12) (ite StartBool_5 Start_4 Start_13)))
   (Start_6 Int (y (+ Start_4 Start) (div Start_1 Start_6) (abs Start_4) (ite StartBool_1 Start_2 Start_3)))
   (Start_4 Int (3 (- Start_5) (- Start_6 Start_3) (+ Start_2 Start_4) (div Start_6 Start_7) (mod Start Start)))
   (Start_21 Int (x (- Start_22 Start_7) (+ Start_23 Start_8) (* Start_10 Start_17) (div Start_11 Start_3)))
   (Start_11 Int (1 (- Start_1) (div Start_5 Start_6) (abs Start_12) (ite StartBool_3 Start_13 Start_10)))
   (StartBool_7 Bool (false (not StartBool_7) (> Start_9 Start_8)))
   (StartBool_2 Bool (true (and StartBool_3 StartBool) (or StartBool StartBool_3) (< Start Start_1) (= Start_1 Start_3) (>= Start_4 Start_6) (> Start_5 Start_6)))
   (Start_24 Int (1 (- Start_22) (- Start_19 Start_3) (+ Start_16 Start_20) (* Start_17 Start_7) (mod Start_7 Start_17) (abs Start_20)))
   (Start_8 Int (0 1 (- Start_10 Start_13) (+ Start_4 Start_1) (* Start_3 Start_8) (div Start_15 Start_5) (mod Start_8 Start_1) (abs Start_5) (ite StartBool_5 Start_2 Start_4)))
   (StartBool_1 Bool (true false (or StartBool StartBool) (< Start_1 Start_2) (= Start_3 Start_4) (> Start_5 Start_5)))
   (Start_15 Int (y 2 3 (- Start_6 Start_12) (* Start_8 Start_13) (div Start_16 Start_16) (mod Start_12 Start_5) (abs Start_8) (ite StartBool_5 Start_9 Start_7)))
   (StartBool_8 Bool (false true (and StartBool_8 StartBool) (= Start_10 Start_21)))
   (Start_7 Int (5 4 y x (div Start Start_8) (mod Start_5 Start_5) (abs Start_9)))
   (Start_10 Int (1 3 (+ Start_6 Start_4) (* Start Start_1) (mod Start_7 Start_1) (abs Start_1)))
   (Start_12 Int (5 (+ Start_2 Start_10) (* Start_2 Start_9) (abs Start_2)))
   (Start_9 Int (x (- Start_3) (- Start_1 Start_4) (+ Start_5 Start_1) (div Start_3 Start_5) (mod Start_7 Start_9) (ite StartBool_4 Start_10 Start_4)))
   (StartBool_3 Bool (false true (< Start_6 Start_3) (>= Start_3 Start_2) (> Start_2 Start)))
   (StartBool_5 Bool (true (not StartBool_1) (or StartBool_6 StartBool) (= Start_6 Start_14)))
   (Start_14 Int (5 2 x (+ Start_9 Start_3) (* Start_11 Start_10) (mod Start_14 Start_2) (abs Start_6)))
   (Start_23 Int (4 (- Start) (- Start_22 Start) (div Start_14 Start_1) (abs Start_19) (ite StartBool_1 Start_11 Start_15)))
   (StartBool_6 Bool (false true (or StartBool_6 StartBool_7) (= Start_2 Start_14)))
   (Start_3 Int (5 (mod Start_17 Start_18)))
   (Start_18 Int (1 (- Start_17) (- Start_11 Start_16) (* Start_1 Start_7) (div Start_2 Start_6) (mod Start_19 Start_16) (ite StartBool_8 Start_18 Start_20)))
   (Start_20 Int (0 (- Start) (+ Start_13 Start_7) (* Start_14 Start_18)))
   (Start_5 Int (x 1 3 (- Start Start_4) (* Start_2 Start_4) (div Start_5 Start_1) (ite StartBool_2 Start_5 Start_2)))
   (Start_22 Int (5 x (- Start_19) (- Start_18 Start_20) (* Start_19 Start_17) (div Start_8 Start_20) (abs Start_12) (ite StartBool_4 Start_22 Start_18)))
   (Start_19 Int (3 5 (* Start_24 Start_15) (mod Start_20 Start_18)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* x (mod 0 0))))

(check-synth)
