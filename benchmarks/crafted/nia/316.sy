(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_7 Bool) (StartBool_1 Bool) (Start_16 Int) (Start_12 Int) (StartBool_3 Bool) (Start_2 Int) (StartBool_4 Bool) (Start_9 Int) (Start_26 Int) (Start_5 Int) (Start_8 Int) (StartBool_2 Bool) (Start_10 Int) (Start_7 Int) (Start_4 Int) (Start_1 Int) (Start_11 Int) (Start_13 Int) (Start_21 Int) (Start_15 Int) (Start_18 Int) (Start_14 Int) (Start_6 Int) (StartBool_5 Bool) (Start_25 Int) (Start_20 Int) (StartBool_6 Bool) (Start_27 Int) (Start_17 Int) (Start_19 Int) (Start_22 Int) (Start_3 Int) (Start_23 Int) (Start_24 Int))
  ((Start Int (x 5 2 y 4 0 (- Start) (- Start_1 Start) (* Start_1 Start_1) (mod Start Start) (abs Start)))
   (StartBool Bool (false (or StartBool StartBool_7) (< Start_4 Start_16) (<= Start Start_4) (= Start Start_19)))
   (StartBool_7 Bool (true (not StartBool_7) (and StartBool_7 StartBool_2) (<= Start_13 Start_16) (>= Start_1 Start_23) (> Start_8 Start)))
   (StartBool_1 Bool (true false (or StartBool_2 StartBool_1) (< Start_12 Start_26) (<= Start_3 Start_18) (= Start_12 Start_21) (>= Start_7 Start_23)))
   (Start_16 Int (4 (- Start_5) (- Start_5 Start_24) (+ Start_2 Start_17) (* Start_11 Start_6) (mod Start_10 Start_11)))
   (Start_12 Int (x 4 (- Start_12 Start_9) (+ Start_11 Start_12) (* Start_8 Start_9) (div Start_12 Start_4) (abs Start_5)))
   (StartBool_3 Bool (false (and StartBool_2 StartBool_4) (>= Start Start_1) (> Start_1 Start_4)))
   (Start_2 Int (5 (- Start_7) (- Start_17 Start_23) (+ Start_2 Start_23) (* Start_20 Start_15)))
   (StartBool_4 Bool (true (not StartBool_3) (< Start_9 Start_2) (<= Start_2 Start_6) (= Start_5 Start_3) (>= Start_1 Start_10) (> Start_3 Start_8)))
   (Start_9 Int (2 x 3 1 4 (- Start_4) (- Start_8 Start_8) (* Start_5 Start_3) (mod Start Start_1) (ite StartBool Start_3 Start_6)))
   (Start_26 Int (0 (+ Start_5 Start_21) (div Start_15 Start_4) (ite StartBool_1 Start_19 Start_8)))
   (Start_5 Int (3 (+ Start_5 Start_6) (* Start_1 Start_7) (div Start_8 Start_5) (ite StartBool Start_2 Start)))
   (Start_8 Int (4 3 2 (- Start_6) (div Start_1 Start_4) (abs Start_9)))
   (StartBool_2 Bool (false true (< Start_5 Start_5) (= Start_5 Start_4)))
   (Start_10 Int (x (- Start_3 Start_5) (+ Start_7 Start_8) (* Start_3 Start_11) (div Start_3 Start_8) (mod Start_6 Start_12) (abs Start_9) (ite StartBool_4 Start_6 Start_9)))
   (Start_7 Int (x 0 y 3 4 (+ Start_7 Start_5) (* Start Start) (mod Start_7 Start_7) (abs Start_2) (ite StartBool_3 Start_1 Start_6)))
   (Start_4 Int (1 0 (- Start_5 Start_3) (+ Start_1 Start_2) (mod Start_5 Start_5) (abs Start_4) (ite StartBool_2 Start_1 Start_3)))
   (Start_1 Int (x 4 y 0 (- Start_1 Start_2) (+ Start Start) (div Start Start_3) (ite StartBool_1 Start_4 Start_4)))
   (Start_11 Int (3 (- Start_8) (div Start_6 Start_6) (mod Start_13 Start_14) (abs Start)))
   (Start_13 Int (1 (- Start_5) (- Start_2 Start_14) (+ Start_9 Start) (abs Start_3) (ite StartBool_5 Start Start_15)))
   (Start_21 Int (3 1 4 (div Start_15 Start_16) (mod Start_22 Start) (abs Start_17)))
   (Start_15 Int (y 1 x (div Start_12 Start_10) (mod Start_10 Start_1) (ite StartBool_4 Start_6 Start)))
   (Start_18 Int (x 1 (- Start_19) (+ Start_21 Start_14) (abs Start_24) (ite StartBool_3 Start_11 Start_18)))
   (Start_14 Int (2 x (- Start_6) (+ Start_2 Start_9) (* Start_1 Start_12) (mod Start_12 Start_4) (abs Start_13)))
   (Start_6 Int (0 x 2 (- Start_16) (- Start Start_7) (+ Start_2 Start) (ite StartBool_6 Start_3 Start_10)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_2) (or StartBool StartBool) (< Start_1 Start_13) (= Start_3 Start_9) (>= Start_1 Start_13) (> Start_1 Start_1)))
   (Start_25 Int (2 4 3 (+ Start_16 Start_11) (div Start_25 Start_21) (abs Start_7) (ite StartBool_4 Start_8 Start_3)))
   (Start_20 Int (4 (- Start_22) (+ Start_8 Start_24) (* Start_5 Start_25) (div Start_21 Start_2) (mod Start_23 Start_8) (abs Start_17)))
   (StartBool_6 Bool (false (and StartBool_1 StartBool) (< Start_6 Start_9) (= Start_11 Start_17) (>= Start Start_2)))
   (Start_27 Int (y (- Start_9) (- Start_24 Start_14) (mod Start_7 Start_4) (ite StartBool_1 Start_27 Start_1)))
   (Start_17 Int (4 (- Start_3 Start_10) (* Start_13 Start_17) (abs Start_18) (ite StartBool_3 Start_15 Start_19)))
   (Start_19 Int (5 2 4 0 y (+ Start_20 Start_18) (div Start_4 Start_21) (abs Start_8)))
   (Start_22 Int (2 (- Start_9 Start_2) (+ Start_6 Start_23) (mod Start_22 Start_21) (ite StartBool_3 Start_11 Start_21)))
   (Start_3 Int (1 (- Start_17 Start) (* Start_27 Start_6)))
   (Start_23 Int (0 2 (- Start_2) (- Start_21 Start_7) (ite StartBool Start_9 Start_1)))
   (Start_24 Int (0 2 4 1 (- Start_25) (- Start_11 Start_26) (mod Start_13 Start_7) (abs Start_11)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod x 5)))

(check-synth)
