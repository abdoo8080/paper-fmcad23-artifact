(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_1 Bool) (Start_7 Int) (Start_1 Int) (Start_14 Int) (Start_3 Int) (Start_10 Int) (Start_11 Int) (Start_4 Int) (Start_15 Int) (StartBool_3 Bool) (Start_16 Int) (Start_6 Int) (Start_9 Int) (StartBool_2 Bool) (Start_13 Int) (Start_8 Int) (StartBool_4 Bool) (Start_5 Int) (Start_12 Int))
  ((Start Int (5 2 x 1 3 (- Start_1) (div Start Start_2) (ite StartBool_1 Start Start_3)))
   (StartBool Bool (true false (not StartBool_3) (< Start Start_1) (= Start_10 Start_1) (> Start_13 Start_3)))
   (Start_2 Int (0 1 (* Start_3 Start_8) (div Start_13 Start_14) (mod Start_15 Start) (abs Start_8) (ite StartBool_1 Start_12 Start_9)))
   (StartBool_1 Bool (false (not StartBool_3) (and StartBool_3 StartBool_3)))
   (Start_7 Int (2 (- Start_4 Start_12) (+ Start_13 Start_3) (* Start_2 Start_6) (ite StartBool_4 Start_1 Start_9)))
   (Start_1 Int (3 (+ Start Start_4) (* Start_12 Start_6) (div Start_9 Start_8) (mod Start_3 Start_2) (abs Start_16)))
   (Start_14 Int (y 2 1 (+ Start_13 Start_4) (* Start_9 Start_7) (ite StartBool_4 Start_4 Start_8)))
   (Start_3 Int (3 (- Start_1) (+ Start_4 Start_1) (ite StartBool_2 Start_4 Start_2)))
   (Start_10 Int (5 (- Start_4 Start_11) (+ Start_5 Start_2) (div Start_11 Start_3) (mod Start_9 Start_4) (abs Start_10)))
   (Start_11 Int (1 y (- Start_8) (+ Start_11 Start_2) (div Start_12 Start_9) (mod Start_11 Start_10)))
   (Start_4 Int (4 (- Start_1 Start_2) (+ Start Start) (div Start_2 Start_5) (abs Start_3)))
   (Start_15 Int (1 (- Start_13) (- Start_11 Start_2) (div Start_11 Start_7) (mod Start_13 Start_15) (ite StartBool_1 Start_6 Start_4)))
   (StartBool_3 Bool (true false (not StartBool) (and StartBool_4 StartBool_1) (< Start_9 Start_10) (> Start_10 Start_7)))
   (Start_16 Int (0 (- Start_6) (- Start_10 Start_14) (* Start Start_12) (div Start_6 Start_10) (mod Start_5 Start_16)))
   (Start_6 Int (5 2 (- Start_4) (- Start_7 Start_5) (+ Start_6 Start_1) (* Start_5 Start_3) (abs Start_6) (ite StartBool_3 Start_7 Start_8)))
   (Start_9 Int (1 (- Start_9 Start_4) (+ Start_10 Start_12) (mod Start_13 Start_8)))
   (StartBool_2 Bool (true (not StartBool_2) (and StartBool_2 StartBool) (or StartBool_1 StartBool) (<= Start_4 Start) (> Start Start_4)))
   (Start_13 Int (5 (- Start_7 Start_6) (* Start_2 Start_11) (mod Start_8 Start) (abs Start_14) (ite StartBool_1 Start_3 Start_3)))
   (Start_8 Int (3 y (- Start_2) (- Start_3 Start_4) (div Start_3 Start)))
   (StartBool_4 Bool (false true (and StartBool StartBool_1) (or StartBool_1 StartBool_2) (<= Start_1 Start_1) (>= Start_14 Start) (> Start_10 Start_9)))
   (Start_5 Int (y x 0 (+ Start_5 Start_3) (* Start Start_6) (abs Start_5) (ite StartBool_1 Start Start_1)))
   (Start_12 Int (x (- Start_12) (div Start_5 Start_6) (mod Start_10 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (- (- 3 (+ x (abs (div 3 y)))) 4)))

(check-synth)
