(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_2 Int) (StartBool_1 Bool) (Start_19 Int) (Start_15 Int) (Start_14 Int) (Start_18 Int) (Start_16 Int) (StartBool_4 Bool) (Start_3 Int) (Start_17 Int) (Start_8 Int) (Start_20 Int) (Start_7 Int) (StartBool_3 Bool) (Start_6 Int) (Start_10 Int) (Start_13 Int) (Start_11 Int) (Start_1 Int) (Start_12 Int) (Start_4 Int) (Start_5 Int) (Start_9 Int) (StartBool_2 Bool) (StartBool_5 Bool))
  ((Start Int (2 (- Start_1 Start_1) (* Start_1 Start_2) (mod Start_3 Start) (abs Start_1)))
   (StartBool Bool (true (or StartBool_2 StartBool) (< Start_2 Start_1) (<= Start_10 Start_6) (= Start_9 Start_4) (>= Start_5 Start_15)))
   (Start_2 Int (5 3 (- Start_9) (* Start_7 Start_13) (mod Start_9 Start_14) (ite StartBool_5 Start_17 Start_18)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool_3 StartBool_4) (< Start_12 Start) (<= Start_10 Start_12) (> Start_3 Start_12)))
   (Start_19 Int (1 (- Start_2 Start_2) (+ Start_17 Start_7) (div Start_2 Start_16) (mod Start_18 Start_20) (ite StartBool Start_18 Start_2)))
   (Start_15 Int (0 x 3 (- Start_10) (+ Start_15 Start_1) (mod Start_7 Start_5) (ite StartBool_3 Start_7 Start_9)))
   (Start_14 Int (y (- Start_15) (+ Start_11 Start_3) (* Start_10 Start_3) (abs Start_7)))
   (Start_18 Int (3 (- Start_17) (* Start_9 Start_13) (mod Start_13 Start_18) (abs Start_15)))
   (Start_16 Int (2 (- Start_10 Start_14) (+ Start_1 Start_8) (mod Start_12 Start_10) (abs Start_3)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_2) (<= Start_11 Start_13) (= Start_8 Start_9) (>= Start_2 Start_3) (> Start_14 Start_2)))
   (Start_3 Int (2 x 3 y (* Start_1 Start_4) (mod Start_2 Start_1)))
   (Start_17 Int (4 0 (- Start_16) (- Start_17 Start_18) (div Start_19 Start_18) (mod Start_8 Start_2) (ite StartBool_3 Start_20 Start_5)))
   (Start_8 Int (x (- Start_9) (- Start_3 Start_2) (+ Start_3 Start_7) (* Start_7 Start_4) (abs Start_7) (ite StartBool_2 Start_1 Start_1)))
   (Start_20 Int (1 5 (div Start_15 Start_18) (abs Start_18)))
   (Start_7 Int (5 (div Start_8 Start_4) (mod Start_1 Start_3) (ite StartBool_2 Start_6 Start_7)))
   (StartBool_3 Bool (false (or StartBool StartBool_1) (< Start_11 Start) (<= Start_12 Start_6)))
   (Start_6 Int (3 0 2 y 5 (- Start_14) (- Start_12 Start_11) (+ Start_4 Start_15) (* Start_16 Start_5) (div Start_16 Start_7) (mod Start_3 Start) (abs Start)))
   (Start_10 Int (x 1 (div Start_2 Start_11)))
   (Start_13 Int (0 (- Start_1) (- Start_12 Start_14) (+ Start_4 Start_6) (div Start_11 Start_10) (abs Start_2)))
   (Start_11 Int (x (+ Start_6 Start_2) (* Start_12 Start_10) (ite StartBool_1 Start_8 Start)))
   (Start_1 Int (4 (- Start_16) (+ Start_10 Start_15) (* Start_8 Start_16) (div Start_14 Start_20) (abs Start_4) (ite StartBool_4 Start_1 Start_16)))
   (Start_12 Int (4 (- Start_11) (+ Start_4 Start_12) (* Start_9 Start_1) (mod Start Start_8) (abs Start_1) (ite StartBool_3 Start_12 Start_4)))
   (Start_4 Int (4 5 2 (- Start_2) (+ Start_4 Start_3) (abs Start_4) (ite StartBool_1 Start_3 Start_5)))
   (Start_5 Int (3 (- Start) (- Start_6 Start_4) (+ Start_4 Start_5) (* Start_1 Start_1) (ite StartBool_2 Start_7 Start_2)))
   (Start_9 Int (0 x 2 (- Start_6 Start_10) (div Start_8 Start_2)))
   (StartBool_2 Bool (false (not StartBool_4) (and StartBool_5 StartBool_1) (or StartBool_2 StartBool_2) (= Start_1 Start_12) (> Start_7 Start_4)))
   (StartBool_5 Bool (false (and StartBool_4 StartBool_2) (< Start_4 Start_1) (<= Start_4 Start_1) (= Start_6 Start_2) (>= Start_12 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (mod (mod x 0) 2)))

(check-synth)
