(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_13 Int) (Start_11 Int) (StartBool_4 Bool) (StartBool_5 Bool) (Start_1 Int) (Start_6 Int) (Start_3 Int) (StartBool_1 Bool) (Start_9 Int) (Start_12 Int) (Start_4 Int) (Start_8 Int) (Start_10 Int) (StartBool_2 Bool) (Start_7 Int) (StartBool_3 Bool) (Start_5 Int) (Start_2 Int))
  ((Start Int (x (- Start) (div Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_3) (or StartBool_5 StartBool_4) (= Start_10 Start_12) (>= Start_10 Start_13) (> Start_12 Start_3)))
   (Start_13 Int (2 1 3 4 (- Start_2 Start_12) (+ Start_11 Start_4) (div Start_4 Start_8) (mod Start Start_7) (ite StartBool_5 Start Start_7)))
   (Start_11 Int (y (- Start_6 Start) (* Start Start_3) (abs Start_8) (ite StartBool_4 Start_2 Start_9)))
   (StartBool_4 Bool (false (and StartBool_2 StartBool_1) (< Start_4 Start_1) (= Start_11 Start_9) (>= Start Start_9)))
   (StartBool_5 Bool (true (or StartBool_2 StartBool) (< Start Start_7)))
   (Start_1 Int (2 3 (- Start_1) (+ Start_1 Start_2) (div Start_3 Start_3) (mod Start_3 Start_3) (abs Start_3)))
   (Start_6 Int (y x 2 4 3 (+ Start_3 Start_4) (* Start Start_6) (mod Start_4 Start_3) (ite StartBool_2 Start_1 Start_4)))
   (Start_3 Int (3 5 (- Start_3 Start_4) (mod Start_5 Start_3)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool StartBool) (<= Start Start_6) (= Start Start_1) (> Start_6 Start_4)))
   (Start_9 Int (5 1 (+ Start_9 Start_7) (div Start_2 Start) (mod Start_9 Start_6)))
   (Start_12 Int (1 (- Start_8 Start) (mod Start_9 Start_4)))
   (Start_4 Int (y (- Start) (- Start_4 Start_7) (* Start_2 Start_8)))
   (Start_8 Int (2 y (- Start_6) (* Start_5 Start) (mod Start_1 Start_3)))
   (Start_10 Int (3 4 y (- Start_7 Start_7) (+ Start_4 Start_11) (div Start_10 Start_5) (mod Start_6 Start_10)))
   (StartBool_2 Bool (false true (or StartBool_1 StartBool_2) (>= Start_4 Start_4) (> Start_3 Start)))
   (Start_7 Int (1 (- Start_5) (+ Start_6 Start_7) (ite StartBool_3 Start_1 Start_7)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool StartBool) (or StartBool_2 StartBool_1) (> Start Start_9)))
   (Start_5 Int (3 1 (+ Start_1 Start_1) (* Start_2 Start_5) (div Start_3 Start_2) (mod Start_5 Start_3) (abs Start_4) (ite StartBool_1 Start_3 Start_3)))
   (Start_2 Int (0 (* Start_4 Start_10) (div Start_8 Start_2) (abs Start_8) (ite StartBool_4 Start_7 Start_6)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (mod y x) 3)))

(check-synth)
