(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (StartBool_1 Bool) (StartBool_3 Bool) (Start_14 Int) (Start_15 Int) (StartBool_4 Bool) (Start_13 Int) (StartBool_6 Bool) (Start_3 Int) (Start_2 Int) (Start_9 Int) (Start_5 Int) (Start_1 Int) (Start_10 Int) (StartBool_5 Bool) (Start_11 Int) (Start_8 Int) (Start_4 Int) (Start_12 Int) (Start_7 Int) (StartBool_2 Bool) (Start_6 Int))
  ((Start Int (2 4 (- Start)))
   (StartBool Bool (true false (and StartBool_1 StartBool_2) (or StartBool_3 StartBool_4) (< Start_1 Start_1) (> Start_1 Start)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool) (or StartBool_6 StartBool_6) (< Start_11 Start_4)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_1 StartBool_2) (or StartBool_5 StartBool_4) (< Start_14 Start_2) (= Start_14 Start) (>= Start Start_10)))
   (Start_14 Int (3 5 y x 1 2 0 4 (- Start_4) (- Start_12 Start_7) (+ Start_5 Start_12) (abs Start)))
   (Start_15 Int (0 2 (- Start_8 Start_5) (abs Start_1)))
   (StartBool_4 Bool (false true (and StartBool_2 StartBool_4) (or StartBool_5 StartBool) (< Start_1 Start) (= Start_12 Start_14) (> Start_1 Start_15)))
   (Start_13 Int (y (- Start_11) (+ Start_11 Start_2) (* Start_4 Start_1) (ite StartBool_4 Start_9 Start_3)))
   (StartBool_6 Bool (false (and StartBool StartBool_4) (or StartBool_6 StartBool) (< Start_3 Start_13) (<= Start_8 Start_5) (>= Start_8 Start_10)))
   (Start_3 Int (x (- Start_3) (+ Start_2 Start_3)))
   (Start_2 Int (1 5 (- Start Start_2) (* Start_2 Start_2) (div Start_3 Start_4) (mod Start_5 Start_3)))
   (Start_9 Int (0 1 4 3 x 5 y 2 (- Start_4) (+ Start_6 Start_9) (* Start_9 Start_8) (mod Start_10 Start_7)))
   (Start_5 Int (5 y (- Start_6 Start) (+ Start_7 Start_4) (* Start_4 Start_8) (mod Start_1 Start_9)))
   (Start_1 Int (4 (- Start_2) (+ Start_2 Start_3) (div Start_1 Start_2) (mod Start_3 Start_2) (abs Start_1)))
   (Start_10 Int (4 2 (- Start_3 Start_2) (+ Start_3 Start_10) (div Start_1 Start_11) (abs Start_6)))
   (StartBool_5 Bool (false true (not StartBool_2) (and StartBool StartBool) (< Start_5 Start) (<= Start_12 Start_2) (>= Start_13 Start_13) (> Start_8 Start_13)))
   (Start_11 Int (4 x (- Start Start_6) (* Start_5 Start_1) (abs Start_3)))
   (Start_8 Int (0 (+ Start_8 Start_2) (div Start_11 Start_1) (mod Start_6 Start_1)))
   (Start_4 Int (2 4 x 3 0 (- Start_12) (- Start Start_11) (div Start_10 Start_3) (abs Start)))
   (Start_12 Int (2 (- Start_2 Start_10) (+ Start_12 Start_8) (div Start_10 Start_5)))
   (Start_7 Int (5 4 (- Start_11) (+ Start_11 Start_11) (div Start_4 Start_3) (mod Start Start_10) (abs Start_7) (ite StartBool_1 Start_12 Start_8)))
   (StartBool_2 Bool (true (not StartBool_5) (<= Start_6 Start_8) (> Start_8 Start_2)))
   (Start_6 Int (x 3 (- Start_4 Start_5) (+ Start_13 Start_8) (* Start_13 Start_4) (div Start_9 Start_8) (ite StartBool_4 Start_11 Start_4)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (* 4 (+ y 1))))

(check-synth)
