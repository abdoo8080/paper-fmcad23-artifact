(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_18 Int) (Start_2 Int) (Start_3 Int) (StartBool_5 Bool) (Start_17 Int) (Start_16 Int) (StartBool_3 Bool) (Start_1 Int) (StartBool_6 Bool) (Start_4 Int) (Start_14 Int) (Start_7 Int) (Start_13 Int) (StartBool_1 Bool) (Start_6 Int) (StartBool_4 Bool) (Start_10 Int) (Start_5 Int) (Start_9 Int) (Start_12 Int) (StartBool_2 Bool) (Start_15 Int) (Start_8 Int) (Start_11 Int))
  ((Start Int (1 (- Start Start_1)))
   (StartBool Bool (true false (or StartBool StartBool) (< Start Start_9) (<= Start_6 Start_2) (= Start_16 Start_5) (> Start_6 Start_18)))
   (Start_18 Int (4 y 5 (- Start_12) (div Start_15 Start_8) (abs Start_15)))
   (Start_2 Int (2 4 (div Start_7 Start_1) (mod Start_17 Start_11) (abs Start_14) (ite StartBool_1 Start_9 Start_17)))
   (Start_3 Int (4 (- Start_14) (+ Start_6 Start_5) (* Start_10 Start_9) (div Start_15 Start_12) (ite StartBool_4 Start_15 Start_12)))
   (StartBool_5 Bool (false true (or StartBool_4 StartBool_1) (< Start_7 Start_2) (>= Start_5 Start_9)))
   (Start_17 Int (y (mod Start_3 Start_1) (abs Start_1) (ite StartBool_6 Start_4 Start_4)))
   (Start_16 Int (2 (+ Start_1 Start_8) (* Start_4 Start_17) (div Start Start_13)))
   (StartBool_3 Bool (true false (not StartBool_3) (and StartBool_2 StartBool) (or StartBool_1 StartBool_1)))
   (Start_1 Int (2 1 (- Start) (- Start_1 Start_1) (+ Start_1 Start) (* Start_2 Start_3) (div Start_2 Start_2) (mod Start Start_3) (ite StartBool_1 Start_4 Start_2)))
   (StartBool_6 Bool (false true (and StartBool_3 StartBool_1) (< Start_2 Start_16) (<= Start_9 Start_15) (= Start_3 Start_9) (> Start_1 Start_4)))
   (Start_4 Int (3 (- Start_3 Start_4) (+ Start_1 Start_4) (div Start_3 Start_3) (abs Start_5)))
   (Start_14 Int (x 1 (- Start_15) (- Start_14 Start_4) (* Start_9 Start_15) (abs Start_1)))
   (Start_7 Int (3 (+ Start_8 Start_5) (div Start_4 Start_5) (ite StartBool Start_6 Start_7)))
   (Start_13 Int (y 1 (- Start_13) (- Start_8 Start_8) (+ Start_13 Start_9) (* Start_12 Start_5) (abs Start_3) (ite StartBool_4 Start_2 Start_9)))
   (StartBool_1 Bool (false (not StartBool_5) (or StartBool_3 StartBool_6) (<= Start_11 Start_12)))
   (Start_6 Int (2 4 (- Start_5) (* Start_5 Start_8) (div Start_2 Start_8) (mod Start_9 Start_3) (abs Start_6)))
   (StartBool_4 Bool (true (<= Start_14 Start_14) (> Start_13 Start)))
   (Start_10 Int (1 (+ Start_8 Start_7)))
   (Start_5 Int (y x (- Start_6) (div Start_7 Start_8) (abs Start_1) (ite StartBool Start Start_6)))
   (Start_9 Int (4 (- Start_3 Start_7) (+ Start_2 Start_7) (* Start Start_2) (mod Start_3 Start_10) (ite StartBool_2 Start_4 Start_8)))
   (Start_12 Int (3 0 5 (- Start_11) (- Start_5 Start_5) (* Start_15 Start_8) (div Start_9 Start_1)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool_2) (or StartBool StartBool_3) (<= Start_6 Start_10) (= Start_8 Start_3) (>= Start_11 Start_2) (> Start_10 Start_10)))
   (Start_15 Int (5 x (* Start_5 Start_6) (mod Start_7 Start_3) (abs Start_1)))
   (Start_8 Int (5 (- Start_4) (- Start_2 Start_3) (* Start_4 Start) (div Start_3 Start_8)))
   (Start_11 Int (4 0 x (- Start_2 Start_8) (div Start Start_9) (mod Start_12 Start_3) (ite StartBool_1 Start_13 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div (div x 3) x)))

(check-synth)
