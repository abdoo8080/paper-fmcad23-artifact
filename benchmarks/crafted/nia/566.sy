(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_14 Int) (Start_13 Int) (Start_15 Int) (Start_11 Int) (StartBool_3 Bool) (Start_10 Int) (StartBool_6 Bool) (StartBool_1 Bool) (StartBool_2 Bool) (Start_1 Int) (Start_3 Int) (Start_4 Int) (Start_5 Int) (StartBool_5 Bool) (Start_6 Int) (Start_2 Int) (StartBool_4 Bool) (Start_12 Int) (Start_8 Int) (Start_16 Int) (Start_9 Int) (StartBool_7 Bool) (Start_7 Int))
  ((Start Int (2 (- Start_1) (abs Start) (ite StartBool_1 Start Start)))
   (StartBool Bool (false true (not StartBool) (or StartBool_3 StartBool_6) (< Start Start_7) (= Start_10 Start_4) (> Start_4 Start_3)))
   (Start_14 Int (0 5 (- Start_5 Start_7) (* Start_14 Start_4) (mod Start_12 Start_9) (abs Start_2) (ite StartBool Start_5 Start_12)))
   (Start_13 Int (5 4 (- Start_8) (* Start_3 Start_14) (ite StartBool_3 Start_13 Start_8)))
   (Start_15 Int (2 1 3 (- Start_14 Start_16) (+ Start_16 Start) (mod Start_15 Start_16) (abs Start_7) (ite StartBool_2 Start_13 Start_6)))
   (Start_11 Int (1 (- Start_11 Start_3) (+ Start_8 Start_9) (* Start_8 Start_12) (div Start_1 Start_6) (abs Start_3)))
   (StartBool_3 Bool (false true (or StartBool_4 StartBool_5) (< Start_9 Start_4) (> Start_9 Start_7)))
   (Start_10 Int (1))
   (StartBool_6 Bool (false (not StartBool_4) (and StartBool StartBool) (or StartBool_7 StartBool_6) (< Start_13 Start_13) (<= Start_3 Start_13) (= Start_4 Start_7) (>= Start_5 Start_7)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool StartBool) (or StartBool_2 StartBool_2) (< Start_1 Start) (= Start_1 Start_1)))
   (StartBool_2 Bool (true (not StartBool_3) (<= Start_1 Start_1) (= Start_2 Start)))
   (Start_1 Int (4 (- Start_4) (- Start_10 Start_8) (* Start_10 Start_10) (mod Start_11 Start_7) (abs Start_7)))
   (Start_3 Int (3 0 (- Start_1) (- Start Start) (+ Start_4 Start) (ite StartBool_5 Start_5 Start_5)))
   (Start_4 Int (x (- Start_2) (- Start_2 Start_3) (+ Start_3 Start_3) (* Start Start_3) (abs Start_3)))
   (Start_5 Int (0 (- Start Start_2) (+ Start_4 Start_1) (* Start Start_5) (div Start_5 Start_4) (mod Start Start_4) (ite StartBool_1 Start_4 Start_3)))
   (StartBool_5 Bool (true false (not StartBool_1) (< Start_6 Start_6) (= Start_2 Start_3) (> Start_3 Start_6)))
   (Start_6 Int (4 (* Start_2 Start) (div Start_5 Start_3) (mod Start_3 Start_2) (abs Start)))
   (Start_2 Int (1 (- Start) (+ Start_2 Start_2) (* Start Start_2) (mod Start Start_1) (ite StartBool_4 Start_1 Start_3)))
   (StartBool_4 Bool (true (and StartBool_1 StartBool_4) (= Start_3 Start_2) (> Start_1 Start_7)))
   (Start_12 Int (5 (- Start_9) (- Start_8 Start_3) (div Start_6 Start_2) (mod Start_6 Start_6)))
   (Start_8 Int (y (+ Start_4 Start) (* Start Start_8) (div Start_9 Start_7) (mod Start_4 Start_1)))
   (Start_16 Int (x (div Start_1 Start) (mod Start_16 Start_5) (abs Start_5)))
   (Start_9 Int (y 3 5 0 (- Start_1) (+ Start_2 Start_8) (div Start_8 Start_5) (mod Start_3 Start_10)))
   (StartBool_7 Bool (false true (= Start_15 Start_12) (>= Start_4 Start_3) (> Start_5 Start_8)))
   (Start_7 Int (5 3 2 (- Start_1) (- Start Start_2) (mod Start_4 Start_3) (abs Start_8) (ite StartBool_2 Start_3 Start_8)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (div 0 (+ 5 y))))

(check-synth)
