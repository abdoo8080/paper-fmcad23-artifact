(set-logic NIA)

(synth-fun f ((x Int) (y Int)) Int
  ((Start Int) (StartBool Bool) (Start_9 Int) (Start_1 Int) (StartBool_3 Bool) (Start_3 Int) (Start_6 Int) (StartBool_2 Bool) (StartBool_5 Bool) (Start_2 Int) (Start_5 Int) (Start_4 Int) (StartBool_1 Bool) (Start_8 Int) (Start_7 Int) (StartBool_4 Bool))
  ((Start Int (4 5 0 (* Start_1 Start) (mod Start_1 Start) (abs Start)))
   (StartBool Bool (true false (not StartBool) (and StartBool_4 StartBool_4) (<= Start_9 Start_3) (> Start_6 Start_6)))
   (Start_9 Int (0 1 (div Start_5 Start_3)))
   (Start_1 Int (5 0 2 (- Start) (* Start Start) (ite StartBool_1 Start_1 Start_2)))
   (StartBool_3 Bool (false true (and StartBool_1 StartBool_1) (or StartBool StartBool_1) (< Start Start_7) (> Start_4 Start_8)))
   (Start_3 Int (5 4 0 (+ Start_2 Start) (* Start_1 Start_2) (div Start_1 Start_2) (mod Start_3 Start) (abs Start_3) (ite StartBool_2 Start_1 Start_1)))
   (Start_6 Int (5 y (- Start_1) (* Start_2 Start_3) (div Start_2 Start)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_1) (or StartBool_2 StartBool_2) (< Start_4 Start_2) (= Start_3 Start_3) (> Start_5 Start_3)))
   (StartBool_5 Bool (false (not StartBool_5) (and StartBool_1 StartBool_2) (= Start_2 Start_5) (>= Start_5 Start_8)))
   (Start_2 Int (0 (- Start_3) (+ Start_3 Start_3) (ite StartBool Start Start_3)))
   (Start_5 Int (x 2 3 5 0 (- Start) (+ Start_4 Start_4) (div Start_4 Start) (mod Start_3 Start) (abs Start_4) (ite StartBool_2 Start_1 Start_2)))
   (Start_4 Int (5 (- Start_5) (+ Start Start) (* Start_5 Start_6) (div Start_4 Start_3) (mod Start_4 Start_5) (abs Start_5) (ite StartBool_1 Start_2 Start_5)))
   (StartBool_1 Bool (false (not StartBool_1) (or StartBool_3 StartBool_3) (< Start Start_6)))
   (Start_8 Int (1 x (- Start_1) (- Start Start_6) (* Start_1 Start_5) (ite StartBool_4 Start Start_7)))
   (Start_7 Int (0 1 (- Start_7) (ite StartBool_5 Start_6 Start_2)))
   (StartBool_4 Bool (false true (not StartBool_2) (or StartBool StartBool_5) (< Start_1 Start) (<= Start_1 Start_5) (= Start_2 Start_2) (>= Start_8 Start_7)))))

(declare-var x Int)
(declare-var y Int)

(constraint (= (f x y) (abs (mod 5 0))))

(check-synth)
