(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_10 String) (StartInt_8 Int) (StartInt_6 Int) (StartBool_1 Bool) (StartInt_5 Int) (StartInt_1 Int) (StartInt_7 Int) (Start_9 String) (StartInt_3 Int) (StartInt_2 Int) (Start_7 String) (Start_2 String) (Start_5 String) (Start_4 String) (Start_3 String) (Start_6 String) (Start_1 String) (StartInt_4 Int) (Start_8 String))
  ((Start String ("b" y "0" "a" (str.++ Start Start) (str.at Start StartInt) (str.substr Start_1 StartInt_1 StartInt) (str.from_int StartInt) (ite StartBool Start Start)))
   (StartInt Int (0 1 (str.len Start_5)))
   (StartBool Bool (true (not StartBool_1) (str.< Start_2 Start_9) (str.prefixof Start_7 Start_8) (= Start_5 Start_8) (<= StartInt_8 StartInt_7)))
   (Start_10 String (x "a" (str.from_int StartInt)))
   (StartInt_8 Int (1 0 (str.len Start) (str.indexof Start_10 Start_5 StartInt)))
   (StartInt_6 Int (1))
   (StartBool_1 Bool (true false (str.< Start Start_7) (str.<= Start_7 Start_9) (str.suffixof Start_5 Start_5) (= Start_7 Start_5) (<= StartInt_6 StartInt_3)))
   (StartInt_5 Int (0 (str.indexof Start_2 Start_4 StartInt_5)))
   (StartInt_1 Int (0 (str.len Start_2) (str.indexof Start Start StartInt) (str.to_int Start_3)))
   (StartInt_7 Int (1 0 (str.to_int Start_8)))
   (Start_9 String ("" "a" "0" (str.substr Start_1 StartInt StartInt_7) (str.replace Start_7 Start_4 Start_3)))
   (StartInt_3 Int (0))
   (StartInt_2 Int (1))
   (Start_7 String ("1" "0" "" "a" "b" (str.++ Start_1 Start_5) (str.replace Start_4 Start_6 Start_4)))
   (Start_2 String ("" (str.++ Start_1 Start_4) (ite StartBool Start_5 Start_4)))
   (Start_5 String ("b" (str.substr Start_4 StartInt StartInt_2)))
   (Start_4 String ("b" x (str.++ Start Start_6) (str.at Start_3 StartInt_1) (str.replace Start Start Start_7) (str.from_int StartInt_3)))
   (Start_3 String ("b" (str.++ Start_2 Start) (str.at Start_3 StartInt) (str.substr Start StartInt_1 StartInt_2) (str.from_int StartInt_2)))
   (Start_6 String ("1" "" (str.++ Start_7 Start) (ite StartBool Start_3 Start_4)))
   (Start_1 String ("b" (str.substr Start_3 StartInt_3 StartInt_3) (str.replace Start_3 Start_6 Start) (ite StartBool_1 Start_6 Start_8)))
   (StartInt_4 Int (1 (str.indexof Start_8 Start_3 StartInt_5)))
   (Start_8 String ("" "b" (str.++ Start_6 Start) (str.substr Start_3 StartInt_2 StartInt_4) (str.replace Start Start_8 Start_7)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ "b" (str.replace x "" "1"))))

(check-synth)
