(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_11 String) (StartInt_1 Int) (Start_6 String) (StartInt_2 Int) (StartBool_1 Bool) (Start_4 String) (Start_8 String) (Start_5 String) (Start_2 String) (Start_10 String) (Start_3 String) (Start_1 String) (StartInt_3 Int) (Start_9 String) (StartInt_4 Int) (Start_7 String))
  ((Start String ("b" "a" y (str.++ Start_1 Start) (str.substr Start_1 StartInt StartInt_1) (str.replace Start_2 Start_1 Start_2) (str.from_int StartInt_2)))
   (StartInt Int (1 (str.len Start_8)))
   (StartBool Bool (false (str.< Start_11 Start_3) (str.prefixof Start_3 Start_10) (= Start_9 Start_9) (= StartInt_2 StartInt_1) (<= StartInt_4 StartInt_4)))
   (Start_11 String ("0" "1" (str.replace Start_2 Start Start_1) (str.from_int StartInt_4) (ite StartBool Start_8 Start_2)))
   (StartInt_1 Int (0 1 (str.len Start_9)))
   (Start_6 String ("b" (str.++ Start_7 Start) (str.substr Start_3 StartInt_4 StartInt_2) (str.replace Start_4 Start_5 Start_5) (ite StartBool Start_8 Start_2)))
   (StartInt_2 Int (1 0 (str.indexof Start Start_3 StartInt_1) (str.to_int Start_4)))
   (StartBool_1 Bool (false true (not StartBool_1) (str.<= Start_2 Start_4) (str.prefixof Start_5 Start_3) (str.suffixof Start_3 Start_6)))
   (Start_4 String ("b" (str.++ Start_2 Start_3) (str.substr Start_2 StartInt_1 StartInt) (str.from_int StartInt_3)))
   (Start_8 String (x (str.++ Start_3 Start_3) (str.at Start_2 StartInt) (str.from_int StartInt_3)))
   (Start_5 String ("" (str.++ Start_8 Start_6) (str.at Start_9 StartInt_3)))
   (Start_2 String ("" (str.replace Start_8 Start_6 Start_6)))
   (Start_10 String ("a" (str.++ Start_6 Start_9) (str.at Start StartInt_3) (str.substr Start StartInt_1 StartInt) (str.replace Start_4 Start_9 Start)))
   (Start_3 String ("a" x (str.at Start_1 StartInt_1) (str.replace Start_1 Start_1 Start_4) (str.from_int StartInt_4)))
   (Start_1 String ("b" "1" x (str.++ Start_10 Start_2) (str.at Start_4 StartInt_1) (str.substr Start_2 StartInt_4 StartInt_3) (str.replace Start_7 Start_2 Start_9) (str.from_int StartInt_3)))
   (StartInt_3 Int (0 (str.to_int Start)))
   (Start_9 String ("b" (str.++ Start_8 Start_1) (str.replace Start_7 Start_5 Start_7)))
   (StartInt_4 Int (1 0 (str.len Start_2) (str.indexof Start_2 Start_5 StartInt_4) (str.to_int Start_6)))
   (Start_7 String ("0" y "b" "" (str.++ Start_8 Start) (str.replace Start_7 Start_7 Start_6) (ite StartBool_1 Start_1 Start_6)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "a" (str.at y 1) (str.at "1" (str.len y)))))

(check-synth)
