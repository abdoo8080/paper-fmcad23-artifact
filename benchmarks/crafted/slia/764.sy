(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_8 String) (Start_2 String) (Start_7 String) (StartInt_1 Int) (Start_4 String) (StartBool_1 Bool) (Start_1 String) (StartInt_2 Int) (StartInt_3 Int) (StartBool_2 Bool) (Start_5 String) (Start_3 String) (Start_6 String))
  ((Start String (y "b" "0" (str.at Start StartInt) (str.replace Start_1 Start_2 Start_1) (str.from_int StartInt) (ite StartBool_1 Start_3 Start_3)))
   (StartInt Int (0 (str.len Start_5) (str.to_int Start)))
   (StartBool Bool (true false (not StartBool_1) (and StartBool_1 StartBool) (str.<= Start_2 Start_7) (str.prefixof Start_2 Start_8) (str.contains Start Start_6)))
   (Start_8 String (x (str.++ Start_8 Start_4)))
   (Start_2 String ("b" (str.at Start StartInt_2) (str.substr Start_2 StartInt StartInt) (ite StartBool_1 Start_3 Start_4)))
   (Start_7 String ("1" (str.from_int StartInt_2) (ite StartBool_2 Start_7 Start)))
   (StartInt_1 Int (1 0 (str.len Start_4) (str.indexof Start Start_3 StartInt_1)))
   (Start_4 String (x "1" y "0" (str.++ Start_2 Start_3) (str.from_int StartInt)))
   (StartBool_1 Bool (false (and StartBool StartBool) (str.< Start_2 Start_2) (str.<= Start_3 Start_4) (str.prefixof Start_1 Start_4) (str.contains Start_3 Start_5) (= StartInt_1 StartInt_2)))
   (Start_1 String ("b" (str.++ Start_5 Start_5) (str.replace Start_6 Start_1 Start_3) (str.from_int StartInt_1)))
   (StartInt_2 Int (0 (str.len Start_3) (str.indexof Start_5 Start StartInt_3)))
   (StartInt_3 Int (1 (str.len Start_4)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_2) (str.< Start Start_7) (str.<= Start Start) (= StartInt StartInt_2)))
   (Start_5 String ("" x (str.++ Start_3 Start_1) (str.at Start_3 StartInt_1) (ite StartBool_1 Start_2 Start_2)))
   (Start_3 String (y "0" "b" (str.from_int StartInt_1) (ite StartBool Start Start)))
   (Start_6 String ("" (str.replace Start_2 Start_1 Start_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.at "0" (str.indexof "b" (str.substr y 0 1) 0))))

(check-synth)
