(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_1 String) (StartInt_5 Int) (Start_3 String) (Start_8 String) (StartInt_2 Int) (Start_6 String) (Start_9 String) (Start_5 String) (StartBool_1 Bool) (Start_7 String) (Start_4 String) (StartInt_3 Int) (StartInt_1 Int) (StartInt_4 Int) (Start_2 String))
  ((Start String ("" (str.++ Start_1 Start) (str.replace Start_2 Start_3 Start_1) (str.from_int StartInt) (ite StartBool Start_1 Start_1)))
   (StartInt Int (1))
   (StartBool Bool (true false (and StartBool_1 StartBool_1) (str.< Start_9 Start_6) (str.prefixof Start_8 Start_3) (str.suffixof Start_9 Start_5)))
   (Start_1 String ("1" "" "b" (str.++ Start_3 Start_5) (str.at Start_7 StartInt_2)))
   (StartInt_5 Int (1 (str.len Start_7)))
   (Start_3 String ("" (str.++ Start_3 Start_1) (str.at Start_2 StartInt) (str.substr Start_1 StartInt StartInt_1) (str.replace Start_1 Start_4 Start) (ite StartBool Start_5 Start_2)))
   (Start_8 String ("0" (str.++ Start Start_7) (str.at Start StartInt_3)))
   (StartInt_2 Int (1 0 (str.indexof Start_1 Start_4 StartInt_2) (str.to_int Start_6)))
   (Start_6 String ("a" y (str.++ Start_1 Start_2) (str.replace Start_6 Start_5 Start_3) (ite StartBool Start_4 Start_3)))
   (Start_9 String ("1" "0" (str.substr Start_2 StartInt_5 StartInt_2) (str.from_int StartInt_3)))
   (Start_5 String ("b" (str.++ Start Start_2) (str.substr Start StartInt_1 StartInt_2)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool_1 StartBool_1) (str.<= Start_5 Start_8) (str.prefixof Start_5 Start_6) (= Start_5 Start_6) (<= StartInt_2 StartInt)))
   (Start_7 String ("1" (str.at Start_1 StartInt_2) (str.substr Start_2 StartInt_2 StartInt_3)))
   (Start_4 String (x (str.++ Start_5 Start_5) (str.at Start_6 StartInt) (str.substr Start_7 StartInt_2 StartInt_2) (str.from_int StartInt_2) (ite StartBool_1 Start_2 Start_1)))
   (StartInt_3 Int (1 (str.len Start_4) (str.indexof Start_6 Start_4 StartInt_3) (str.to_int Start_6)))
   (StartInt_1 Int (1 (str.len Start_8) (str.indexof Start_3 Start_7 StartInt_4) (str.to_int Start_8)))
   (StartInt_4 Int (1 0 (str.len Start_8) (str.indexof Start_3 Start_4 StartInt_1) (str.to_int Start_1)))
   (Start_2 String ("a" (str.replace Start_2 Start_9 Start_9) (str.from_int StartInt) (ite StartBool Start_4 Start_6)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace (str.replace x "0" "1") "a" "0")))

(check-synth)
