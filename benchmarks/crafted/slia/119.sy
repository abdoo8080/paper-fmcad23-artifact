(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_5 Int) (StartInt_4 Int) (Start_6 String) (StartInt_1 Int) (Start_3 String) (Start_2 String) (Start_1 String) (StartBool_2 Bool) (Start_5 String) (StartInt_3 Int) (StartInt_2 Int) (StartBool_1 Bool) (Start_4 String) (Start_7 String) (Start_8 String))
  ((Start String (x "0" (str.++ Start_1 Start_2) (str.at Start_3 StartInt_1) (str.substr Start_1 StartInt StartInt) (str.replace Start_3 Start_3 Start_1) (str.from_int StartInt_1)))
   (StartInt Int (1 0 (str.to_int Start)))
   (StartBool Bool (true false (str.<= Start_4 Start_3) (str.suffixof Start_3 Start_4) (str.contains Start Start) (= StartInt StartInt_1) (<= StartInt_1 StartInt_1)))
   (StartInt_5 Int (0 1 (str.len Start_8)))
   (StartInt_4 Int (0 (str.len Start_6)))
   (Start_6 String ("a" "1" (str.++ Start_1 Start_7) (str.substr Start_4 StartInt_3 StartInt_4) (ite StartBool_1 Start_8 Start_4)))
   (StartInt_1 Int (0 1 (str.to_int Start_3)))
   (Start_3 String ("b" "1" (str.from_int StartInt_1)))
   (Start_2 String ("a" "" (ite StartBool Start_3 Start)))
   (Start_1 String ("" "0"))
   (StartBool_2 Bool (true (and StartBool StartBool_1) (str.suffixof Start_8 Start_6) (= Start_2 Start_2) (<= StartInt StartInt)))
   (Start_5 String ("1" (str.++ Start_8 Start_4) (str.at Start_7 StartInt_5) (str.from_int StartInt_2)))
   (StartInt_3 Int (0 (str.indexof Start_4 Start_2 StartInt)))
   (StartInt_2 Int (1 0 (str.len Start_4) (str.to_int Start_8)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool_1 StartBool_1) (str.< Start_3 Start_2) (str.<= Start_2 Start_1) (= Start_7 Start_6) (<= StartInt StartInt_1)))
   (Start_4 String (y "" "b" (str.++ Start_4 Start_5) (str.substr Start_1 StartInt_1 StartInt) (str.replace Start_4 Start_5 Start_6) (ite StartBool_1 Start_3 Start_5)))
   (Start_7 String ("0" (str.++ Start_1 Start_7) (str.at Start_7 StartInt_1) (ite StartBool Start_6 Start)))
   (Start_8 String ("1" (str.at Start_2 StartInt_2) (str.substr Start_7 StartInt_1 StartInt_2)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "b" x "b")))

(check-synth)
