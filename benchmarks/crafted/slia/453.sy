(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_5 Int) (Start_9 String) (StartInt_4 Int) (StartInt_2 Int) (StartInt_1 Int) (Start_1 String) (Start_3 String) (Start_4 String) (Start_2 String) (Start_6 String) (StartInt_3 Int) (Start_7 String) (Start_5 String) (StartBool_1 Bool) (Start_8 String))
  ((Start String (y "0" "" "b" "1" (str.++ Start Start_1) (str.at Start_1 StartInt_1) (str.substr Start StartInt StartInt_2)))
   (StartInt Int (0 1 (str.indexof Start_5 Start_3 StartInt_2) (str.to_int Start_5)))
   (StartBool Bool (true (str.< Start_7 Start_2) (str.prefixof Start_2 Start_7) (str.contains Start_3 Start_5) (= StartInt_5 StartInt_2) (<= StartInt_4 StartInt_1)))
   (StartInt_5 Int (1 0 (str.to_int Start)))
   (Start_9 String (x (str.++ Start_6 Start_6) (str.at Start_1 StartInt_3) (str.replace Start Start_5 Start_2) (ite StartBool Start_2 Start)))
   (StartInt_4 Int (1 0 (str.len Start_8) (str.to_int Start_9)))
   (StartInt_2 Int (0 1 (str.len Start_1) (str.indexof Start_1 Start_1 StartInt_2)))
   (StartInt_1 Int (1 (str.len Start)))
   (Start_1 String ("b" (str.++ Start_2 Start_1) (str.from_int StartInt_1) (ite StartBool Start_2 Start_3)))
   (Start_3 String (x "1" "0" (str.++ Start_1 Start_2) (str.at Start_4 StartInt) (str.substr Start_5 StartInt StartInt)))
   (Start_4 String (y (str.++ Start_3 Start_4) (str.at Start_5 StartInt_2) (str.substr Start_4 StartInt StartInt_2) (str.replace Start_3 Start_6 Start_4)))
   (Start_2 String ("" (str.++ Start_4 Start_7) (str.at Start_6 StartInt_3) (ite StartBool_1 Start_3 Start)))
   (Start_6 String (y "" (str.++ Start_6 Start_7) (str.from_int StartInt_3)))
   (StartInt_3 Int (0 1))
   (Start_7 String (x "1" "b"))
   (Start_5 String ("b" "1" y (str.++ Start Start_5) (str.replace Start Start Start) (ite StartBool Start_5 Start_5)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool StartBool_1) (str.< Start_2 Start_8) (str.<= Start_1 Start_5) (= Start_5 Start_6)))
   (Start_8 String ("0" (str.at Start_9 StartInt_2) (str.substr Start_2 StartInt_4 StartInt_3) (str.replace Start_6 Start_9 Start_7) (str.from_int StartInt_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.from_int (str.indexof "1" (str.at x 1) 1))))

(check-synth)
