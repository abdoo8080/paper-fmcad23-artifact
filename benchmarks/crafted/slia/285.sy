(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_9 String) (Start_7 String) (StartInt_5 Int) (StartInt_7 Int) (StartBool_2 Bool) (Start_4 String) (Start_2 String) (StartInt_2 Int) (StartInt_3 Int) (StartInt_1 Int) (StartInt_6 Int) (Start_3 String) (Start_6 String) (Start_8 String) (StartInt_4 Int) (StartBool_1 Bool) (Start_1 String) (Start_5 String))
  ((Start String ("1" (str.++ Start_1 Start) (str.at Start_2 StartInt_1) (str.from_int StartInt) (ite StartBool Start_2 Start_1)))
   (StartInt Int (0 (str.len Start_3) (str.indexof Start_5 Start_3 StartInt_2)))
   (StartBool Bool (true false (not StartBool_2) (str.prefixof Start_4 Start_1) (str.suffixof Start_7 Start_7) (= Start_8 Start_1) (<= StartInt_5 StartInt_1)))
   (Start_9 String ("" "a" (str.replace Start_3 Start Start_9) (ite StartBool_2 Start_4 Start_8)))
   (Start_7 String ("b" (str.++ Start_8 Start_9) (str.replace Start_3 Start_5 Start_4) (ite StartBool Start Start_8)))
   (StartInt_5 Int (1 0 (str.len Start_3) (str.indexof Start_2 Start_4 StartInt) (str.to_int Start_2)))
   (StartInt_7 Int (0 (str.indexof Start_5 Start_4 StartInt_3)))
   (StartBool_2 Bool (false (not StartBool_1) (str.suffixof Start_2 Start_6) (str.contains Start_1 Start_3) (= StartInt_3 StartInt_7)))
   (Start_4 String (x (str.++ Start_2 Start_1) (str.at Start_4 StartInt_3)))
   (Start_2 String (x (str.substr Start_3 StartInt_2 StartInt_1) (str.replace Start_3 Start_2 Start_2) (str.from_int StartInt_3) (ite StartBool_1 Start_3 Start_1)))
   (StartInt_2 Int (1 0 (str.len Start_3) (str.to_int Start_2)))
   (StartInt_3 Int (0 1 (str.len Start_4)))
   (StartInt_1 Int (1 (str.len Start_2) (str.to_int Start_2)))
   (StartInt_6 Int (0 (str.len Start_2) (str.indexof Start_4 Start_2 StartInt_3) (str.to_int Start_5)))
   (Start_3 String (y (str.from_int StartInt_4)))
   (Start_6 String ("a" "b" y (str.++ Start_3 Start) (str.from_int StartInt_4) (ite StartBool_2 Start_2 Start_5)))
   (Start_8 String ("b" "" "1" (str.substr Start_7 StartInt StartInt_7) (str.replace Start_7 Start Start_6) (ite StartBool_1 Start_2 Start_8)))
   (StartInt_4 Int (1 (str.len Start_4) (str.to_int Start_3)))
   (StartBool_1 Bool (true false (not StartBool_1) (str.prefixof Start_1 Start_2) (= Start_4 Start) (<= StartInt_2 StartInt_1)))
   (Start_1 String ("0" (str.++ Start_3 Start_2) (str.from_int StartInt_1) (ite StartBool Start_3 Start_5)))
   (Start_5 String ("b" (str.++ Start_4 Start) (str.at Start_2 StartInt_5) (str.substr Start_6 StartInt StartInt_6) (str.replace Start_1 Start_3 Start_4) (ite StartBool_1 Start_6 Start_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.from_int (str.to_int (str.at "a" (str.len y))))))

(check-synth)
