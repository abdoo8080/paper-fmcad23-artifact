(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_3 Int) (StartInt_4 Int) (StartBool_2 Bool) (Start_5 String) (Start_7 String) (Start_1 String) (StartInt_1 Int) (Start_2 String) (Start_6 String) (StartInt_5 Int) (Start_4 String) (StartInt_2 Int) (StartBool_1 Bool) (Start_3 String))
  ((Start String (x "0" (str.replace Start_1 Start_1 Start_1)))
   (StartInt Int (1 (str.indexof Start_1 Start StartInt_2) (str.to_int Start_7)))
   (StartBool Bool (false (and StartBool_2 StartBool_1) (= StartInt_1 StartInt_3) (<= StartInt_4 StartInt_5)))
   (StartInt_3 Int (1 (str.len Start_1)))
   (StartInt_4 Int (1 0 (str.to_int Start_1)))
   (StartBool_2 Bool (false (not StartBool) (str.< Start_4 Start_3) (str.<= Start_7 Start_5) (str.prefixof Start_2 Start_2) (str.suffixof Start_6 Start_3) (= StartInt_3 StartInt_1)))
   (Start_5 String ("b" (str.replace Start_4 Start_3 Start_2) (str.from_int StartInt)))
   (Start_7 String ("" "a" (str.++ Start_4 Start_6) (str.from_int StartInt_1) (ite StartBool Start_1 Start)))
   (Start_1 String ("0" (str.substr Start_2 StartInt StartInt_1) (str.replace Start Start_1 Start_3) (ite StartBool Start_3 Start)))
   (StartInt_1 Int (1 0 (str.indexof Start_5 Start_6 StartInt) (str.to_int Start_6)))
   (Start_2 String ("1" "0" (str.++ Start Start_1) (str.replace Start_5 Start_7 Start_7)))
   (Start_6 String ("b" (str.at Start_5 StartInt_2) (str.substr Start_2 StartInt_1 StartInt_1) (str.replace Start Start Start_3) (str.from_int StartInt_2) (ite StartBool_1 Start_4 Start_6)))
   (StartInt_5 Int (1 0 (str.len Start_4)))
   (Start_4 String (y (str.at Start_2 StartInt) (ite StartBool_1 Start_5 Start_2)))
   (StartInt_2 Int (1 0 (str.len Start_3) (str.to_int Start_5)))
   (StartBool_1 Bool (false (not StartBool_1) (str.< Start_2 Start_3) (str.<= Start_5 Start_6) (str.prefixof Start_3 Start_6)))
   (Start_3 String ("a" y x (str.at Start_4 StartInt)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.from_int (str.len (str.at x 0)))))

(check-synth)
