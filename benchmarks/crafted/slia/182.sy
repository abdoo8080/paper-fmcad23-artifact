(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_2 String) (Start_1 String))
  ((Start String ("" (str.++ Start_1 Start) (str.from_int StartInt) (ite StartBool Start_1 Start)))
   (StartInt Int (1 0 (str.len Start) (str.to_int Start_2)))
   (StartBool Bool (false (not StartBool) (str.contains Start_1 Start)))
   (Start_2 String ("b" y x (str.at Start_1 StartInt) (str.from_int StartInt) (ite StartBool Start_2 Start_1)))
   (Start_1 String ("a" "0" (str.replace Start Start Start_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (ite (str.<= x (str.from_int (str.indexof "0" x 1))) "a" "0")))

(check-synth)
