(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_6 String) (StartInt_4 Int) (Start_8 String) (Start_1 String) (Start_2 String) (Start_4 String) (StartBool_1 Bool) (Start_3 String) (Start_9 String) (Start_5 String) (Start_7 String) (StartInt_2 Int) (StartInt_5 Int) (StartInt_3 Int) (StartInt_1 Int) (StartBool_2 Bool))
  ((Start String ("a" y (str.++ Start Start) (str.replace Start_1 Start Start) (str.from_int StartInt)))
   (StartInt Int (1 (str.to_int Start_2)))
   (StartBool Bool (true (and StartBool StartBool_1) (= Start_4 Start_3) (= StartInt_1 StartInt_1)))
   (Start_6 String ("1" "0" "" "b"))
   (StartInt_4 Int (0 1 (str.len Start_9) (str.indexof Start_3 Start_2 StartInt_4) (str.to_int Start_6)))
   (Start_8 String ("a" (str.++ Start_4 Start_5) (str.at Start_1 StartInt_4) (str.from_int StartInt_3)))
   (Start_1 String ("0" (str.replace Start Start Start_2) (ite StartBool Start_2 Start)))
   (Start_2 String ("" "b" x y (str.replace Start_3 Start_1 Start_4) (str.from_int StartInt)))
   (Start_4 String ("" "0"))
   (StartBool_1 Bool (true (not StartBool) (str.prefixof Start_7 Start_6) (= Start_2 Start_3) (= StartInt_2 StartInt_1)))
   (Start_3 String ("a" (str.at Start_5 StartInt) (str.substr Start StartInt_1 StartInt_1) (str.from_int StartInt)))
   (Start_9 String (x (str.++ Start_4 Start_5) (str.substr Start StartInt StartInt_2) (str.replace Start_4 Start_8 Start_8) (ite StartBool_2 Start_2 Start_2)))
   (Start_5 String (x "1" "b" (str.++ Start_2 Start_6) (str.at Start_7 StartInt_1) (str.replace Start_6 Start_3 Start_6)))
   (Start_7 String ("b" "0" (ite StartBool_1 Start_5 Start_3)))
   (StartInt_2 Int (1 0 (str.len Start_8) (str.indexof Start_6 Start_8 StartInt_3) (str.to_int Start_4)))
   (StartInt_5 Int (0 (str.len Start_6) (str.indexof Start_3 Start_1 StartInt_4)))
   (StartInt_3 Int (0 (str.len Start_9) (str.to_int Start_2)))
   (StartInt_1 Int (0 (str.to_int Start_3)))
   (StartBool_2 Bool (false (= StartInt_1 StartInt) (<= StartInt_4 StartInt_5)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "1" (str.replace y "" x) "")))

(check-synth)
