(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_7 String) (Start_11 String) (Start_1 String) (Start_12 String) (Start_9 String) (StartBool_2 Bool) (Start_10 String) (Start_8 String) (StartInt_1 Int) (Start_2 String) (Start_3 String) (StartInt_3 Int) (StartInt_5 Int) (StartBool_1 Bool) (Start_4 String) (Start_6 String) (StartInt_2 Int) (Start_5 String) (StartInt_4 Int))
  ((Start String ("a" (str.from_int StartInt_1)))
   (StartInt Int (1 (str.len Start_1) (str.indexof Start_1 Start_2 StartInt_1) (str.to_int Start_1)))
   (StartBool Bool (false true (str.< Start_12 Start_11) (str.contains Start_4 Start_2)))
   (Start_7 String (y "a" "1" "b" "" x "0" (str.at Start_1 StartInt_2) (str.substr Start_9 StartInt_5 StartInt_2) (str.replace Start_8 Start_7 Start_5) (ite StartBool Start_12 Start_1)))
   (Start_11 String (x "a" y (str.replace Start_7 Start_7 Start_11)))
   (Start_1 String (x y (str.++ Start_8 Start) (str.at Start_2 StartInt_3) (str.from_int StartInt_4)))
   (Start_12 String ("b" "1" (str.++ Start_4 Start_10)))
   (Start_9 String ("1" "0" (str.++ Start_7 Start_1) (str.substr Start_11 StartInt StartInt) (str.replace Start Start_12 Start_3)))
   (StartBool_2 Bool (true (str.<= Start_3 Start_4) (str.prefixof Start_6 Start_9) (str.contains Start_4 Start_3) (= Start_10 Start_1) (<= StartInt StartInt_5)))
   (Start_10 String ("a" (str.replace Start_4 Start_9 Start_7) (str.from_int StartInt_1) (ite StartBool_2 Start_5 Start_2)))
   (Start_8 String ("0" "" (str.++ Start_9 Start_8) (str.substr Start_8 StartInt_1 StartInt_4) (str.replace Start Start_9 Start_2) (str.from_int StartInt_4)))
   (StartInt_1 Int (0))
   (Start_2 String ("b" (ite StartBool Start_2 Start_3)))
   (Start_3 String (y (str.replace Start_1 Start_1 Start_4) (str.from_int StartInt)))
   (StartInt_3 Int (0 (str.indexof Start_2 Start_4 StartInt_1)))
   (StartInt_5 Int (0 (str.len Start_8) (str.to_int Start_10)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_1) (str.< Start_3 Start_4) (str.<= Start_5 Start_1) (str.prefixof Start_5 Start_5) (= Start Start_6) (= StartInt_1 StartInt_1)))
   (Start_4 String ("b" "1" (str.at Start StartInt_1) (str.substr Start StartInt StartInt) (ite StartBool_1 Start_4 Start_1)))
   (Start_6 String ("a" (str.at Start_3 StartInt) (str.replace Start_3 Start Start_4)))
   (StartInt_2 Int (1 0 (str.len Start_2) (str.indexof Start_1 Start_8 StartInt_2) (str.to_int Start_5)))
   (Start_5 String ("a" "" (str.++ Start_4 Start_4) (str.at Start_7 StartInt) (str.substr Start_8 StartInt_2 StartInt_3) (str.from_int StartInt)))
   (StartInt_4 Int (1 (str.len Start_8) (str.indexof Start_7 Start_10 StartInt_3) (str.to_int Start_6)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "" (str.replace "1" y x) "a")))

(check-synth)
