(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_7 String) (StartInt_6 Int) (Start_5 String) (Start_3 String) (StartBool_1 Bool) (Start_2 String) (StartInt_2 Int) (Start_4 String) (Start_6 String) (StartInt_4 Int) (StartInt_3 Int) (StartInt_5 Int) (StartInt_1 Int) (Start_1 String))
  ((Start String (y "1" "a" x (str.++ Start Start_1) (str.at Start StartInt_1) (str.substr Start_2 StartInt_2 StartInt_2) (str.replace Start_2 Start_3 Start_2) (str.from_int StartInt_1)))
   (StartInt Int (0 1 (str.to_int Start)))
   (StartBool Bool (true (and StartBool StartBool_1) (str.<= Start_4 Start_3) (str.contains Start_1 Start_7) (= Start_7 Start_1) (<= StartInt_3 StartInt_6)))
   (Start_7 String ("a" (str.at Start_6 StartInt_6) (str.replace Start_5 Start_6 Start_7)))
   (StartInt_6 Int (1 (str.len Start_5) (str.indexof Start_5 Start_2 StartInt)))
   (Start_5 String ("a" y (str.substr Start_2 StartInt_2 StartInt_3) (str.replace Start_3 Start_1 Start_4)))
   (Start_3 String ("" "a" "b" (str.at Start StartInt) (str.substr Start_1 StartInt_3 StartInt_4) (str.replace Start_1 Start_1 Start_1) (str.from_int StartInt_2) (ite StartBool_1 Start_2 Start_1)))
   (StartBool_1 Bool (true (str.prefixof Start_4 Start_2) (str.contains Start_5 Start_5)))
   (Start_2 String ("a" "0" "1" x "b" (str.replace Start_4 Start_2 Start_2)))
   (StartInt_2 Int (0 (str.len Start)))
   (Start_4 String ("a" y (str.at Start StartInt) (str.replace Start_1 Start_4 Start_2)))
   (Start_6 String ("" "0" "b" y "a" (str.substr Start_3 StartInt_1 StartInt_5) (str.from_int StartInt)))
   (StartInt_4 Int (0 (str.len Start) (str.indexof Start_2 Start StartInt_2)))
   (StartInt_3 Int (0 (str.indexof Start_6 Start_4 StartInt_4)))
   (StartInt_5 Int (1 (str.len Start)))
   (StartInt_1 Int (1 0 (str.indexof Start_2 Start_2 StartInt_2)))
   (Start_1 String ("a" (str.at Start StartInt_6) (str.from_int StartInt_5)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (ite (str.suffixof y "b") (str.at y 1) "1")))

(check-synth)
