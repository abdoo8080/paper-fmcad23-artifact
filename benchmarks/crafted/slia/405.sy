(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_1 String) (Start_21 String) (Start_11 String) (Start_22 String) (StartInt_5 Int) (StartInt_6 Int) (Start_13 String) (StartBool_7 Bool) (StartBool_5 Bool) (Start_12 String) (Start_14 String) (Start_6 String) (StartInt_11 Int) (StartInt_7 Int) (Start_19 String) (Start_4 String) (Start_3 String) (StartInt_2 Int) (Start_10 String) (StartInt_4 Int) (StartInt_1 Int) (StartInt_10 Int) (Start_8 String) (StartInt_9 Int) (StartBool_4 Bool) (Start_18 String) (Start_2 String) (Start_5 String) (Start_17 String) (Start_7 String) (StartBool_3 Bool) (Start_20 String) (StartInt_3 Int) (Start_23 String) (StartBool_6 Bool) (StartBool_2 Bool) (StartInt_8 Int) (StartBool_1 Bool) (Start_16 String) (Start_9 String) (Start_15 String))
  ((Start String ("b" y "a" "0" (str.at Start_1 StartInt) (ite StartBool_1 Start_2 Start_1)))
   (StartInt Int (0 1 (str.len Start_22) (str.indexof Start_14 Start_20 StartInt_4)))
   (StartBool Bool (false (and StartBool_6 StartBool_3) (str.prefixof Start_6 Start_3) (str.suffixof Start_10 Start_18) (str.contains Start_22 Start_12) (= Start_13 Start_21) (= StartInt_8 StartInt_1) (<= StartInt_5 StartInt_4)))
   (Start_1 String ("" (str.substr Start_13 StartInt_6 StartInt_11) (str.replace Start_12 Start_15 Start_23) (ite StartBool_2 Start_3 Start_18)))
   (Start_21 String ("" (str.at Start_13 StartInt_10) (str.replace Start_13 Start_12 Start_20) (str.from_int StartInt_2)))
   (Start_11 String (x "" "a" y (str.++ Start_20 Start_21) (str.at Start_2 StartInt_8)))
   (Start_22 String ("" "0" x (str.at Start_11 StartInt_8) (str.replace Start_1 Start_15 Start_17) (str.from_int StartInt_10) (ite StartBool Start_23 Start_4)))
   (StartInt_5 Int (0))
   (StartInt_6 Int (0 1 (str.indexof Start_10 Start StartInt_1) (str.to_int Start_7)))
   (Start_13 String ("b" (str.substr Start_1 StartInt_11 StartInt_6) (str.replace Start_16 Start_15 Start_6) (ite StartBool_6 Start Start_19)))
   (StartBool_7 Bool (false (str.< Start_14 Start_19) (str.suffixof Start_2 Start_2) (= Start_19 Start_2)))
   (StartBool_5 Bool (true false (not StartBool_6) (str.< Start_4 Start_3) (str.contains Start_5 Start_7) (= Start_7 Start) (= StartInt_1 StartInt_1) (<= StartInt_3 StartInt_4)))
   (Start_12 String ("1" (str.++ Start_13 Start_8) (str.replace Start_8 Start_4 Start_10) (ite StartBool_7 Start_8 Start_14)))
   (Start_14 String ("" (str.++ Start_4 Start_15) (str.at Start_4 StartInt_3) (str.replace Start Start_16 Start_12) (ite StartBool_7 Start_17 Start_15)))
   (Start_6 String ("b" y x (str.at Start_5 StartInt) (str.replace Start_5 Start_7 Start_3) (str.from_int StartInt_3) (ite StartBool_4 Start_7 Start_1)))
   (StartInt_11 Int (0 (str.to_int Start_17)))
   (StartInt_7 Int (1 0 (str.len Start_12) (str.to_int Start)))
   (Start_19 String (y "0" (str.++ Start_3 Start_18) (str.at Start_15 StartInt_6) (str.from_int StartInt_10)))
   (Start_4 String (y (str.substr Start_1 StartInt_3 StartInt) (str.replace Start_1 Start_4 Start_3) (str.from_int StartInt_1) (ite StartBool_2 Start_1 Start_1)))
   (Start_3 String ("b" "1" y "" "a" (str.++ Start Start) (str.from_int StartInt_2)))
   (StartInt_2 Int (1 (str.len Start_4) (str.indexof Start_2 Start_3 StartInt)))
   (Start_10 String ("b" "" x (str.++ Start_3 Start_2) (str.at Start_6 StartInt_2) (str.replace Start_4 Start_9 Start_2) (str.from_int StartInt_3)))
   (StartInt_4 Int (0 (str.len Start) (str.indexof Start_3 Start_8 StartInt_4) (str.to_int Start_6)))
   (StartInt_1 Int (0 1 (str.len Start_1) (str.indexof Start Start_3 StartInt) (str.to_int Start)))
   (StartInt_10 Int (0 1))
   (Start_8 String (y (str.++ Start_9 Start_9) (str.substr Start_4 StartInt_2 StartInt_1) (str.replace Start_2 Start_9 Start_7) (str.from_int StartInt) (ite StartBool_6 Start_5 Start_3)))
   (StartInt_9 Int (1 (str.len Start_3) (str.indexof Start_6 Start_5 StartInt) (str.to_int Start_3)))
   (StartBool_4 Bool (false true (and StartBool_5 StartBool_5) (str.<= Start_1 Start_7) (str.prefixof Start_1 Start_2) (str.contains Start_4 Start_1) (= Start_1 Start_6)))
   (Start_18 String ("" (str.++ Start_15 Start_4) (str.at Start_6 StartInt_2) (str.substr Start_15 StartInt_4 StartInt_3) (str.from_int StartInt_9)))
   (Start_2 String (x (str.at Start_3 StartInt_1)))
   (Start_5 String ("a" "" (str.at Start_1 StartInt_1) (str.substr Start StartInt_3 StartInt_4) (str.replace Start_5 Start_4 Start_6)))
   (Start_17 String ("a" (str.++ Start_10 Start_16) (str.at Start_12 StartInt_6) (ite StartBool_1 Start Start_12)))
   (Start_7 String ("b" x "" (str.replace Start_7 Start_4 Start_4)))
   (StartBool_3 Bool (false (not StartBool_1) (and StartBool_3 StartBool) (str.< Start_2 Start_7) (str.<= Start_2 Start_7) (str.prefixof Start_7 Start_10) (= StartInt_1 StartInt_1) (<= StartInt_4 StartInt)))
   (Start_20 String ("a" (str.substr Start_22 StartInt_1 StartInt_4) (str.replace Start_11 Start_2 Start_19) (str.from_int StartInt_4) (ite StartBool_4 Start_7 Start)))
   (StartInt_3 Int (0 (str.indexof Start_10 Start_8 StartInt) (str.to_int Start_10)))
   (Start_23 String ("a" "1" y x "b" "" (str.++ Start_20 Start_22) (str.at Start_10 StartInt_1)))
   (StartBool_6 Bool (true (str.prefixof Start_7 Start_4) (str.suffixof Start_4 Start) (= Start_8 Start_8) (= StartInt_3 StartInt_1)))
   (StartBool_2 Bool (false true (and StartBool_3 StartBool) (str.<= Start_1 Start_3) (str.prefixof Start Start_1) (str.contains Start_5 Start_2)))
   (StartInt_8 Int (0 (str.len Start_18) (str.to_int Start_5)))
   (StartBool_1 Bool (true false (not StartBool_2) (and StartBool_4 StartBool_2) (str.<= Start_11 Start_2) (str.suffixof Start_7 Start_1) (str.contains Start_3 Start_6) (= Start_5 Start_7) (= StartInt_5 StartInt_2) (<= StartInt_6 StartInt_7)))
   (Start_16 String ("b" y "a" "0" "" "1" (str.substr Start_11 StartInt_4 StartInt_8) (str.from_int StartInt_2) (ite StartBool_7 Start_16 Start_5)))
   (Start_9 String (x (str.substr Start_9 StartInt StartInt) (str.from_int StartInt_4) (ite StartBool_5 Start Start_4)))
   (Start_15 String ("0" "" (str.at Start StartInt_2) (ite StartBool_4 Start_7 Start)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace y (str.replace "0" x "a") "1")))

(check-synth)
