(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_3 String) (Start_4 String) (Start_2 String) (Start_1 String) (StartInt_1 Int))
  ((Start String ("a" "" "0"))
   (StartInt Int (1 0 (str.indexof Start_1 Start StartInt)))
   (StartBool Bool (true false))
   (Start_3 String ("a" y "1" (str.++ Start_4 Start_2) (str.from_int StartInt) (ite StartBool Start_1 Start_3)))
   (Start_4 String (y "1" "b" "" (str.replace Start_1 Start_1 Start)))
   (Start_2 String ("b" (str.++ Start_2 Start) (str.at Start StartInt_1) (str.substr Start StartInt_1 StartInt) (str.replace Start Start_3 Start_4) (str.from_int StartInt)))
   (Start_1 String ("" (str.++ Start_1 Start_2) (str.at Start StartInt_1) (str.substr Start_2 StartInt StartInt_1)))
   (StartInt_1 Int (0 1 (str.len Start_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "0" (str.at x 1) "0")))

(check-synth)
