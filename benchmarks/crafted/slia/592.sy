(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_1 Bool) (StartInt_2 Int) (StartBool_3 Bool) (Start_5 String) (StartBool_6 Bool) (StartBool_5 Bool) (Start_16 String) (Start_6 String) (Start_2 String) (Start_13 String) (Start_3 String) (StartInt_3 Int) (Start_8 String) (Start_7 String) (Start_14 String) (StartInt_1 Int) (StartInt_4 Int) (Start_9 String) (Start_10 String) (StartBool_2 Bool) (StartInt_6 Int) (StartBool_4 Bool) (StartInt_5 Int) (Start_11 String) (Start_1 String) (Start_4 String) (Start_12 String) (Start_15 String))
  ((Start String (x "1" y "a" (str.++ Start Start_1) (str.at Start_2 StartInt_1) (str.replace Start_2 Start_2 Start_1)))
   (StartInt Int (0 1 (str.len Start_7) (str.indexof Start_3 Start_12 StartInt_4) (str.to_int Start_8)))
   (StartBool Bool (false true (not StartBool_3) (and StartBool_6 StartBool_2) (str.< Start_15 Start_7) (str.<= Start_8 Start_12) (str.prefixof Start_11 Start_3) (str.suffixof Start_12 Start_6) (str.contains Start_11 Start_10) (<= StartInt_5 StartInt_5)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_2 StartBool_1) (str.< Start Start) (str.prefixof Start_4 Start_1) (str.suffixof Start_5 Start_6) (str.contains Start_4 Start_1) (= Start_2 Start)))
   (StartInt_2 Int (1 (str.len Start_2) (str.indexof Start Start_3 StartInt_3)))
   (StartBool_3 Bool (true (not StartBool_1) (and StartBool_3 StartBool) (str.<= Start_3 Start_7) (str.prefixof Start_6 Start_5) (str.suffixof Start_1 Start_5) (= Start_7 Start_5)))
   (Start_5 String (x (str.++ Start_5 Start_5) (str.replace Start Start_4 Start_2) (str.from_int StartInt_5) (ite StartBool_3 Start_4 Start_3)))
   (StartBool_6 Bool (true false (str.< Start_2 Start_7) (str.prefixof Start_3 Start_15) (str.contains Start_16 Start_15) (= Start_8 Start_9) (<= StartInt StartInt_3)))
   (StartBool_5 Bool (false (not StartBool_1) (str.< Start_1 Start_2) (str.prefixof Start_4 Start_2) (= StartInt_6 StartInt)))
   (Start_16 String ("1" "a" (str.++ Start_6 Start_8) (str.at Start_3 StartInt_6) (str.from_int StartInt_1)))
   (Start_6 String ("a" (str.++ Start_2 Start_3) (str.from_int StartInt_1) (ite StartBool_1 Start_6 Start_2)))
   (Start_2 String ("1" (str.++ Start_4 Start) (str.from_int StartInt_3) (ite StartBool_1 Start_3 Start_1)))
   (Start_13 String (y (str.++ Start Start_10) (str.at Start_1 StartInt_1) (str.replace Start_14 Start_7 Start_13)))
   (Start_3 String ("1" (str.substr Start_3 StartInt_4 StartInt_4)))
   (StartInt_3 Int (0 1 (str.len Start_1) (str.indexof Start Start StartInt_1)))
   (Start_8 String (y "0" (str.++ Start_3 Start_2) (str.replace Start_7 Start_2 Start_9) (str.from_int StartInt_6) (ite StartBool_4 Start_9 Start_2)))
   (Start_7 String ("" "b" x "1" (str.++ Start Start_8) (ite StartBool_4 Start_1 Start)))
   (Start_14 String ("1" "0" (str.++ Start_5 Start_14) (str.at Start_15 StartInt_5) (str.substr Start_13 StartInt StartInt_5) (ite StartBool_1 Start_5 Start_8)))
   (StartInt_1 Int (0 1 (str.indexof Start Start StartInt_2)))
   (StartInt_4 Int (1 0 (str.len Start_1) (str.to_int Start)))
   (Start_9 String ("b" "1" "a" y "" (str.replace Start_6 Start_3 Start_2)))
   (Start_10 String (x "b" (str.substr Start_4 StartInt_3 StartInt_2) (str.replace Start_1 Start_3 Start_11) (ite StartBool_1 Start_2 Start_1)))
   (StartBool_2 Bool (false (str.< Start_10 Start) (str.<= Start_10 Start_11) (= Start_1 Start_10)))
   (StartInt_6 Int (1 (str.to_int Start)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_5 StartBool) (str.< Start_3 Start_8) (str.<= Start_1 Start_6) (str.suffixof Start Start_5) (= StartInt_2 StartInt_2)))
   (StartInt_5 Int (0 (str.indexof Start_10 Start_6 StartInt_5)))
   (Start_11 String ("a" x (str.at Start_10 StartInt_5) (str.substr Start_4 StartInt_6 StartInt) (str.replace Start_6 Start_11 Start_8) (str.from_int StartInt_1)))
   (Start_1 String ("0" "a" y (str.++ Start_3 Start_4) (str.replace Start_3 Start_9 Start_9) (str.from_int StartInt_6) (ite StartBool_3 Start_7 Start_3)))
   (Start_4 String ("1" (str.substr Start_11 StartInt_3 StartInt_4) (str.replace Start_7 Start_6 Start_8) (str.from_int StartInt_4)))
   (Start_12 String ("1" (str.++ Start_13 Start_13) (str.replace Start_8 Start_5 Start_7) (ite StartBool Start Start_2)))
   (Start_15 String ("1" "a" "b" (str.at Start_16 StartInt_5) (str.replace Start Start_16 Start_2) (str.from_int StartInt)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ (str.replace y "b" "1") y)))

(check-synth)
