(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_2 Int) (Start_3 String) (StartInt_5 Int) (Start_4 String) (Start_1 String) (Start_2 String) (Start_8 String) (StartInt_1 Int) (Start_5 String) (StartInt_3 Int) (Start_7 String) (Start_6 String) (StartInt_4 Int))
  ((Start String ("b" x "" "1" (str.at Start StartInt) (str.replace Start Start_1 Start_1) (str.from_int StartInt)))
   (StartInt Int (1))
   (StartBool Bool (true (str.< Start Start) (str.<= Start_1 Start_1) (str.contains Start Start_1) (= Start Start_1) (= StartInt StartInt_1) (<= StartInt_1 StartInt)))
   (StartInt_2 Int (1 0 (str.len Start_5) (str.indexof Start_4 Start_1 StartInt_4) (str.to_int Start_5)))
   (Start_3 String ("" y (str.substr Start_2 StartInt_3 StartInt_3) (str.replace Start_7 Start_8 Start_7)))
   (StartInt_5 Int (0 (str.len Start_7) (str.to_int Start_1)))
   (Start_4 String ("0" x (str.at Start StartInt_2) (str.from_int StartInt_2) (ite StartBool Start_5 Start_3)))
   (Start_1 String (x "a" "b" "1" "" (str.at Start_1 StartInt) (str.from_int StartInt)))
   (Start_2 String (x "0" (str.++ Start_1 Start) (str.substr Start_1 StartInt_2 StartInt_2) (str.replace Start_3 Start_4 Start_2) (str.from_int StartInt) (ite StartBool Start Start_1)))
   (Start_8 String ("1" (ite StartBool Start_6 Start_1)))
   (StartInt_1 Int (0 1 (str.len Start) (str.indexof Start Start StartInt_1) (str.to_int Start_2)))
   (Start_5 String ("0" "1" y (str.++ Start_6 Start_3) (str.substr Start_2 StartInt StartInt_3) (str.from_int StartInt)))
   (StartInt_3 Int (0 (str.indexof Start Start_2 StartInt_3)))
   (Start_7 String ("1" (str.++ Start_5 Start_6) (str.replace Start_7 Start_3 Start_1) (str.from_int StartInt_5) (ite StartBool Start_8 Start_3)))
   (Start_6 String ("b" x "" (str.++ Start_1 Start_7) (str.at Start_6 StartInt_4) (str.replace Start_7 Start_6 Start_4)))
   (StartInt_4 Int (0 (str.indexof Start_7 Start_6 StartInt_2)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.at "1" (str.indexof y x 1))))

(check-synth)
