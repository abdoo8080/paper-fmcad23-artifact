(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_11 String) (Start_1 String) (Start_2 String) (StartInt_1 Int) (Start_5 String) (StartBool_2 Bool) (Start_10 String) (StartInt_3 Int) (Start_4 String) (StartBool_1 Bool) (Start_6 String) (Start_9 String) (Start_7 String) (Start_3 String) (StartInt_4 Int) (Start_8 String) (StartInt_2 Int))
  ((Start String ("a" (str.at Start StartInt) (str.substr Start_1 StartInt_1 StartInt_1) (str.replace Start_2 Start Start_3) (str.from_int StartInt_1)))
   (StartInt Int (0))
   (StartBool Bool (false true (not StartBool_2) (str.<= Start_11 Start_6) (str.prefixof Start_10 Start_6) (= StartInt_4 StartInt_3) (<= StartInt_4 StartInt_3)))
   (Start_11 String (x y (str.substr Start_9 StartInt_4 StartInt_3) (str.replace Start_10 Start_5 Start_8) (str.from_int StartInt_4)))
   (Start_1 String ("a" (str.++ Start_4 Start_11) (ite StartBool_1 Start_4 Start_3)))
   (Start_2 String ("b" (str.replace Start_1 Start_1 Start_10) (str.from_int StartInt_3)))
   (StartInt_1 Int (1 (str.to_int Start)))
   (Start_5 String ("" (str.++ Start_8 Start_10)))
   (StartBool_2 Bool (true (not StartBool_2) (str.< Start_6 Start_2) (str.<= Start_8 Start_3) (str.suffixof Start_7 Start_4) (= Start_6 Start) (= StartInt_4 StartInt_2)))
   (Start_10 String (x (str.substr Start_4 StartInt_2 StartInt_2) (str.replace Start_9 Start_10 Start_1) (ite StartBool Start_2 Start_6)))
   (StartInt_3 Int (0 1 (str.to_int Start_3)))
   (Start_4 String ("a" (str.at Start_3 StartInt) (str.from_int StartInt_1) (ite StartBool_1 Start_3 Start_1)))
   (StartBool_1 Bool (true (not StartBool) (str.prefixof Start_3 Start_5) (str.suffixof Start_6 Start_7) (= Start_4 Start) (= StartInt_1 StartInt) (<= StartInt StartInt)))
   (Start_6 String ("b" x "0" (str.++ Start_8 Start_3) (str.at Start_6 StartInt_2) (str.substr Start_4 StartInt_3 StartInt) (str.replace Start_9 Start_1 Start_5)))
   (Start_9 String ("" "1" y (str.from_int StartInt_4) (ite StartBool_2 Start_3 Start)))
   (Start_7 String (x "" (str.++ Start_1 Start_2) (ite StartBool_1 Start_8 Start_6)))
   (Start_3 String ("b" (str.at Start_4 StartInt_1) (str.substr Start_2 StartInt_1 StartInt_1)))
   (StartInt_4 Int (0 (str.len Start_10) (str.to_int Start_9)))
   (Start_8 String ("1" "b" y (str.at Start_2 StartInt_2) (str.substr Start_1 StartInt StartInt_1) (str.from_int StartInt_2)))
   (StartInt_2 Int (0 (str.to_int Start_4)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.at "a" (str.indexof "" x (str.indexof "1" "1" (str.len y))))))

(check-synth)
