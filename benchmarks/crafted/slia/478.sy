(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_21 String) (Start_20 String) (Start_1 String) (Start_2 String) (StartInt_5 Int) (Start_7 String) (Start_13 String) (Start_8 String) (StartBool_2 Bool) (Start_9 String) (Start_5 String) (Start_3 String) (StartInt_2 Int) (Start_16 String) (Start_19 String) (StartBool_1 Bool) (Start_17 String) (StartInt_7 Int) (StartInt_1 Int) (Start_12 String) (StartBool_3 Bool) (Start_14 String) (Start_15 String) (StartInt_3 Int) (StartBool_5 Bool) (StartInt_6 Int) (Start_18 String) (Start_11 String) (StartBool_4 Bool) (StartInt_4 Int) (Start_4 String) (Start_10 String) (Start_6 String))
  ((Start String ("a" (str.++ Start_1 Start_2) (ite StartBool Start_2 Start_3)))
   (StartInt Int (0 1 (str.indexof Start_1 Start_13 StartInt_4)))
   (StartBool Bool (true false (not StartBool) (str.<= Start_5 Start_16) (str.prefixof Start_3 Start_12) (str.contains Start_13 Start_3) (= Start_21 Start_11) (= StartInt_6 StartInt_2)))
   (Start_21 String ("b" "0" (str.++ Start_9 Start_8) (str.replace Start_2 Start_14 Start_3) (str.from_int StartInt_1)))
   (Start_20 String ("a" (str.++ Start_13 Start_17) (str.at Start_10 StartInt) (str.substr Start_12 StartInt_4 StartInt_3) (str.replace Start_2 Start_11 Start_19) (str.from_int StartInt_6) (ite StartBool_1 Start_13 Start)))
   (Start_1 String (x "0" "1" (str.at Start_20 StartInt_3)))
   (Start_2 String (x "b" "1" y (str.++ Start_18 Start_1) (str.at Start StartInt_6) (str.replace Start_15 Start Start_1) (str.from_int StartInt_4)))
   (StartInt_5 Int (0 1 (str.to_int Start_14)))
   (Start_7 String ("0" "a" (str.++ Start_5 Start_8)))
   (Start_13 String ("1" y (str.substr Start_3 StartInt_2 StartInt_5) (ite StartBool Start_2 Start_9)))
   (Start_8 String ("0" (str.++ Start_5 Start_9) (str.at Start_9 StartInt_1) (str.from_int StartInt_3)))
   (StartBool_2 Bool (false true (str.< Start_12 Start_6) (str.<= Start_13 Start_5) (str.prefixof Start_10 Start_1) (str.suffixof Start_10 Start) (= Start_2 Start_6) (<= StartInt_2 StartInt_2)))
   (Start_9 String ("" (str.++ Start_10 Start_3) (str.substr Start_8 StartInt_3 StartInt) (str.replace Start_5 Start_10 Start_7)))
   (Start_5 String (y (str.++ Start_6 Start) (str.at Start_1 StartInt_2) (str.replace Start_7 Start_1 Start_2)))
   (Start_3 String (x (str.at Start_1 StartInt_1) (str.replace Start_4 Start Start_1) (str.from_int StartInt_2)))
   (StartInt_2 Int (0 (str.indexof Start_5 Start_4 StartInt_2)))
   (Start_16 String (y (str.++ Start_9 Start_9) (str.at Start_8 StartInt_2) (str.substr Start_7 StartInt_6 StartInt_2) (str.replace Start_8 Start_16 Start_10) (ite StartBool_2 Start_8 Start_9)))
   (Start_19 String (y "a" "b" (str.substr Start_19 StartInt_6 StartInt_2)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool_2 StartBool) (str.prefixof Start_6 Start_9) (str.contains Start_11 Start_4) (= Start_10 Start_10)))
   (Start_17 String (x (str.++ Start_10 Start_4) (str.at Start_18 StartInt_6) (str.substr Start_13 StartInt_1 StartInt_1) (str.replace Start_14 Start_1 Start_10) (str.from_int StartInt_5) (ite StartBool_1 Start_6 Start_14)))
   (StartInt_7 Int (0 1 (str.len Start_14) (str.indexof Start_19 Start_11 StartInt_1) (str.to_int Start_14)))
   (StartInt_1 Int (0 1))
   (Start_12 String (y "a" "0" "1" "b" (str.replace Start_5 Start_10 Start_1) (ite StartBool_3 Start_10 Start_1)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_5 StartBool_5) (str.< Start_14 Start_13) (str.<= Start_2 Start_4) (str.prefixof Start_15 Start_13) (str.suffixof Start_2 Start_16) (str.contains Start_9 Start_1) (= Start_17 Start_8)))
   (Start_14 String ("" "0" (str.substr Start_5 StartInt_4 StartInt) (str.replace Start_15 Start_7 Start_7) (str.from_int StartInt_1)))
   (Start_15 String ("a" y (str.++ Start_4 Start_3) (str.at Start_3 StartInt_6) (str.from_int StartInt_2) (ite StartBool_1 Start_6 Start_6)))
   (StartInt_3 Int (0 1 (str.indexof Start_8 Start_3 StartInt_2) (str.to_int Start_4)))
   (StartBool_5 Bool (false (str.prefixof Start_16 Start_4) (str.contains Start_19 Start_4) (= Start_18 Start_11) (<= StartInt_7 StartInt_4)))
   (StartInt_6 Int (1))
   (Start_18 String ("" "a" (str.++ Start_13 Start_13) (str.from_int StartInt_1)))
   (Start_11 String ("1" "a" (str.replace Start_5 Start_1 Start_19) (str.from_int StartInt_1)))
   (StartBool_4 Bool (true false (str.< Start_7 Start_6) (str.prefixof Start_7 Start_13) (str.contains Start Start_16) (= Start_3 Start_6) (<= StartInt_7 StartInt_1)))
   (StartInt_4 Int (1 (str.len Start_14) (str.indexof Start_13 Start_6 StartInt_2)))
   (Start_4 String ("0" "" (str.at Start StartInt_4) (str.replace Start_3 Start_19 Start_18)))
   (Start_10 String (x y "a" (str.at Start_10 StartInt_3) (str.substr Start_11 StartInt_4 StartInt_1) (str.replace Start_4 Start_1 Start_2) (ite StartBool_1 Start_8 Start_10)))
   (Start_6 String ("" (str.substr Start_18 StartInt_5 StartInt_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace (str.replace x "0" y) y "")))

(check-synth)
