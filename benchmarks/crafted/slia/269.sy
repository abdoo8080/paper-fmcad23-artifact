(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_4 Int) (StartInt_7 Int) (StartBool_1 Bool) (Start_9 String) (StartInt_1 Int) (Start_3 String) (StartBool_3 Bool) (Start_1 String) (Start_4 String) (StartInt_6 Int) (StartBool_2 Bool) (Start_2 String) (Start_5 String) (Start_7 String) (StartInt_2 Int) (Start_6 String) (StartInt_3 Int) (Start_10 String) (Start_8 String) (StartInt_5 Int))
  ((Start String (y "1" "0" "a" "" (str.++ Start_1 Start_1) (str.replace Start Start Start_1) (str.from_int StartInt) (ite StartBool Start_1 Start)))
   (StartInt Int (1 0 (str.len Start_4)))
   (StartBool Bool (false true (str.< Start_7 Start_8) (str.suffixof Start_6 Start_8) (= Start Start_8)))
   (StartInt_4 Int (1 0 (str.to_int Start_3)))
   (StartInt_7 Int (1))
   (StartBool_1 Bool (false (and StartBool_1 StartBool_2) (str.< Start_6 Start_4) (str.contains Start_2 Start_4) (= Start_7 Start_3)))
   (Start_9 String (x "0" y "" (str.substr Start_6 StartInt_5 StartInt_6) (str.replace Start_6 Start_3 Start_3) (str.from_int StartInt_6) (ite StartBool_1 Start_6 Start_8)))
   (StartInt_1 Int (0 (str.indexof Start_4 Start_1 StartInt)))
   (Start_3 String ("0" y "" (str.at Start_3 StartInt_3) (str.substr Start_7 StartInt_1 StartInt)))
   (StartBool_3 Bool (false true (str.< Start_7 Start_7) (str.prefixof Start_5 Start_5) (str.suffixof Start_6 Start_9) (= Start_6 Start_5) (= StartInt_1 StartInt_6) (<= StartInt_7 StartInt_6)))
   (Start_1 String ("" "0" (str.at Start_1 StartInt_1) (str.replace Start_2 Start_1 Start) (ite StartBool Start Start)))
   (Start_4 String ("" (str.++ Start_1 Start_4) (str.at Start StartInt) (ite StartBool Start_5 Start)))
   (StartInt_6 Int (0 (str.to_int Start_9)))
   (StartBool_2 Bool (true false (not StartBool_3) (str.prefixof Start_3 Start_1) (str.suffixof Start_6 Start_1) (= Start_8 Start) (<= StartInt StartInt_7)))
   (Start_2 String ("" "b" "0" (str.++ Start Start) (str.at Start_3 StartInt_2) (str.replace Start_1 Start_3 Start_2) (ite StartBool Start_3 Start_4)))
   (Start_5 String ("a" "1" x (str.++ Start_6 Start_2) (str.substr Start StartInt_2 StartInt_2) (str.from_int StartInt)))
   (Start_7 String ("a" (str.++ Start_4 Start_7) (str.at Start_7 StartInt_1)))
   (StartInt_2 Int (0 (str.len Start_5) (str.to_int Start_5)))
   (Start_6 String (x (str.++ Start_3 Start_7) (str.at Start_6 StartInt_2)))
   (StartInt_3 Int (0 (str.len Start_6) (str.indexof Start_7 Start_7 StartInt_1) (str.to_int Start_8)))
   (Start_10 String (x y (str.++ Start_2 Start_8) (str.at Start_1 StartInt_4) (ite StartBool Start Start_7)))
   (Start_8 String (y "b" (str.at Start_6 StartInt_4) (str.substr Start_9 StartInt_3 StartInt_5)))
   (StartInt_5 Int (1 (str.indexof Start_8 Start_10 StartInt)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace x (str.substr y 0 1) "")))

(check-synth)
