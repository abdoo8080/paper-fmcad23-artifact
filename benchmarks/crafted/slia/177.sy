(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_6 Int) (Start_1 String) (StartBool_1 Bool) (Start_6 String) (StartInt_1 Int) (Start_2 String) (StartInt_2 Int) (StartInt_3 Int) (StartBool_2 Bool) (StartInt_5 Int) (Start_3 String) (Start_8 String) (Start_4 String) (StartInt_4 Int) (Start_7 String) (Start_5 String))
  ((Start String (x (str.at Start StartInt_1) (str.substr Start StartInt_1 StartInt) (str.replace Start Start Start)))
   (StartInt Int (0 (str.indexof Start_1 Start_8 StartInt_2)))
   (StartBool Bool (false (not StartBool) (and StartBool_2 StartBool_1) (str.<= Start_1 Start) (str.suffixof Start_3 Start_6) (= Start_8 Start_5) (<= StartInt_5 StartInt_5)))
   (StartInt_6 Int (1 (str.to_int Start_1)))
   (Start_1 String ("0" (str.++ Start Start_5) (str.at Start_3 StartInt_3) (str.replace Start_6 Start_3 Start) (str.from_int StartInt_4) (ite StartBool_1 Start_4 Start_6)))
   (StartBool_1 Bool (true false (and StartBool StartBool_1) (str.suffixof Start_8 Start_6) (= StartInt_2 StartInt_2) (<= StartInt_4 StartInt_2)))
   (Start_6 String ("a" y (str.++ Start_6 Start_7) (str.at Start_1 StartInt_4) (str.from_int StartInt_2) (ite StartBool Start_3 Start_3)))
   (StartInt_1 Int (0 1 (str.len Start_1) (str.indexof Start_2 Start StartInt_1)))
   (Start_2 String ("0" "a" "1" (str.at Start StartInt_1) (ite StartBool_1 Start_3 Start_2)))
   (StartInt_2 Int (1 (str.len Start_4) (str.indexof Start_5 Start_6 StartInt_3)))
   (StartInt_3 Int (1 0 (str.len Start_7) (str.to_int Start_8)))
   (StartBool_2 Bool (true false (str.suffixof Start_4 Start_5) (= Start Start_5) (<= StartInt_6 StartInt_6)))
   (StartInt_5 Int (1 0 (str.to_int Start_3)))
   (Start_3 String (y (str.from_int StartInt_2)))
   (Start_8 String ("a" (str.substr Start_8 StartInt_4 StartInt_1) (str.from_int StartInt)))
   (Start_4 String ("a" (str.at Start_3 StartInt_4) (str.replace Start_6 Start_3 Start_1) (str.from_int StartInt_5) (ite StartBool_1 Start_8 Start_5)))
   (StartInt_4 Int (0 1 (str.indexof Start Start_5 StartInt)))
   (Start_7 String (x "a" (str.substr Start_8 StartInt StartInt_5)))
   (Start_5 String ("b" (str.substr Start_2 StartInt_4 StartInt_1) (str.replace Start_8 Start_3 Start_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "" y "1")))

(check-synth)
