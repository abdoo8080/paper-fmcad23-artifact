(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_7 Int) (StartInt_6 Int) (StartInt_1 Int) (Start_2 String) (Start_4 String) (Start_5 String) (Start_1 String) (StartInt_2 Int) (StartBool_1 Bool) (Start_3 String) (StartInt_4 Int) (Start_6 String) (StartInt_3 Int) (StartInt_5 Int))
  ((Start String ("0" (str.++ Start Start) (str.at Start StartInt) (str.from_int StartInt) (ite StartBool Start Start)))
   (StartInt Int (1 (str.indexof Start Start_1 StartInt_1) (str.to_int Start)))
   (StartBool Bool (false (not StartBool) (and StartBool StartBool_1) (str.< Start_3 Start_6) (str.prefixof Start_3 Start_4) (str.suffixof Start_6 Start_2) (str.contains Start_1 Start_1) (= Start_5 Start) (= StartInt_6 StartInt_6)))
   (StartInt_7 Int (0 (str.len Start_3) (str.indexof Start Start_4 StartInt_7)))
   (StartInt_6 Int (1))
   (StartInt_1 Int (0 (str.to_int Start_1)))
   (Start_2 String (y "0" "1" "a" x "" (str.++ Start_2 Start) (str.from_int StartInt_2)))
   (Start_4 String ("" (str.++ Start_1 Start_5) (ite StartBool Start_2 Start)))
   (Start_5 String ("" "0" "a" "1" (str.at Start_5 StartInt_4) (str.substr Start_2 StartInt_2 StartInt) (str.from_int StartInt) (ite StartBool Start_5 Start_2)))
   (Start_1 String ("b" (str.replace Start_2 Start_2 Start) (ite StartBool Start_1 Start_2)))
   (StartInt_2 Int (1 0 (str.len Start_3) (str.indexof Start Start_1 StartInt_1)))
   (StartBool_1 Bool (true false (str.<= Start_5 Start_2) (str.prefixof Start_1 Start) (str.suffixof Start_3 Start_4) (= Start_2 Start) (= StartInt_4 StartInt_7)))
   (Start_3 String ("b" (str.substr Start_1 StartInt_3 StartInt) (str.replace Start_1 Start Start_1) (str.from_int StartInt_1) (ite StartBool Start Start_4)))
   (StartInt_4 Int (0 1))
   (Start_6 String ("b" (str.++ Start_1 Start_2) (str.at Start_5 StartInt_1) (str.substr Start_6 StartInt_4 StartInt_1) (str.replace Start_4 Start Start)))
   (StartInt_3 Int (0 (str.indexof Start_1 Start_4 StartInt_5)))
   (StartInt_5 Int (0 1 (str.len Start_1) (str.indexof Start_6 Start_6 StartInt)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.at (str.++ y x) 1)))

(check-synth)
