(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_1 String) (StartInt_1 Int) (Start_10 String) (Start_11 String) (StartInt_6 Int) (Start_5 String) (Start_8 String) (StartInt_2 Int) (Start_2 String) (StartInt_4 Int) (StartBool_1 Bool) (Start_6 String) (Start_7 String) (StartInt_5 Int) (StartInt_3 Int) (Start_9 String) (Start_4 String) (Start_3 String))
  ((Start String ("1" (str.at Start_1 StartInt) (str.substr Start_1 StartInt_1 StartInt_2)))
   (StartInt Int (1 (str.len Start_8) (str.indexof Start Start_5 StartInt_5) (str.to_int Start_5)))
   (StartBool Bool (false true (not StartBool_1) (str.< Start_7 Start_2) (str.<= Start_3 Start) (str.suffixof Start_7 Start_7) (= Start_2 Start_4) (= StartInt_1 StartInt_1) (<= StartInt_2 StartInt)))
   (Start_1 String (y (str.++ Start_4 Start_11) (str.at Start_1 StartInt_1) (str.from_int StartInt_4)))
   (StartInt_1 Int (0 (str.indexof Start_6 Start_2 StartInt_1)))
   (Start_10 String ("a" x (str.substr Start_8 StartInt StartInt_1) (str.replace Start_6 Start_3 Start_10) (str.from_int StartInt) (ite StartBool_1 Start_11 Start_1)))
   (Start_11 String ("0" "a" (str.++ Start_3 Start_7) (str.substr Start StartInt_1 StartInt_4) (str.from_int StartInt_1)))
   (StartInt_6 Int (0 (str.len Start_3) (str.indexof Start_4 Start_11 StartInt_5) (str.to_int Start_5)))
   (Start_5 String (x (str.at Start_6 StartInt_4) (str.replace Start_6 Start_1 Start_3) (ite StartBool Start_7 Start_8)))
   (Start_8 String ("" (str.++ Start_1 Start_8) (str.at Start_5 StartInt) (str.replace Start_4 Start_2 Start_3) (str.from_int StartInt_4) (ite StartBool_1 Start Start)))
   (StartInt_2 Int (0 (str.indexof Start_1 Start_1 StartInt_1) (str.to_int Start_2)))
   (Start_2 String ("a" "" "0" (str.++ Start_2 Start_3) (str.at Start_2 StartInt) (str.substr Start_2 StartInt_3 StartInt) (str.from_int StartInt_4) (ite StartBool Start_4 Start_3)))
   (StartInt_4 Int (1 (str.len Start_5) (str.indexof Start_1 Start_1 StartInt) (str.to_int Start_4)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (str.<= Start_2 Start_6) (str.suffixof Start_5 Start_1) (<= StartInt_2 StartInt_2)))
   (Start_6 String ("0" y "b" "" (str.from_int StartInt)))
   (Start_7 String ("1" "b" x y "a" (str.at Start_2 StartInt_4) (str.substr Start_7 StartInt StartInt) (str.from_int StartInt_1) (ite StartBool Start_2 Start_3)))
   (StartInt_5 Int (1 0 (str.indexof Start_7 Start_8 StartInt_6) (str.to_int Start_9)))
   (StartInt_3 Int (1 (str.to_int Start_9)))
   (Start_9 String (y x "1" "" "b" "a" (str.substr Start_3 StartInt_1 StartInt_2)))
   (Start_4 String ("0" "b" (str.++ Start_2 Start_4) (str.at Start StartInt_4) (str.substr Start_2 StartInt_2 StartInt_3) (ite StartBool Start_4 Start)))
   (Start_3 String ("b" (str.++ Start_10 Start_2) (str.substr Start_2 StartInt_5 StartInt_6) (str.replace Start_7 Start_3 Start_3) (str.from_int StartInt_5)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ (str.replace "a" y "a") "b")))

(check-synth)
