(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_10 String) (Start_11 String) (Start_8 String) (StartInt_7 Int) (Start_9 String) (Start_7 String) (Start_4 String) (Start_2 String) (StartInt_2 Int) (Start_3 String) (Start_12 String) (StartInt_4 Int) (StartInt_6 Int) (StartInt_5 Int) (Start_6 String) (Start_1 String) (StartInt_3 Int) (Start_5 String) (StartInt_1 Int))
  ((Start String ("" (str.++ Start Start_1) (str.at Start_2 StartInt_1) (str.substr Start_3 StartInt_2 StartInt_1) (str.from_int StartInt_1) (ite StartBool Start_1 Start_4)))
   (StartInt Int (0 (str.len Start_1) (str.indexof Start_9 Start_2 StartInt_6) (str.to_int Start_9)))
   (StartBool Bool (false (str.<= Start_2 Start_1) (str.suffixof Start_5 Start_1) (= Start_3 Start_12) (<= StartInt_6 StartInt_2)))
   (Start_10 String ("a" (str.substr Start_8 StartInt_1 StartInt_2) (str.from_int StartInt_4)))
   (Start_11 String ("a" (str.substr Start_3 StartInt_4 StartInt_7) (str.from_int StartInt_1)))
   (Start_8 String (x (str.at Start_4 StartInt_7)))
   (StartInt_7 Int (0 1 (str.len Start) (str.indexof Start_8 Start_1 StartInt_3)))
   (Start_9 String (x "" "b" "0" (str.substr Start_10 StartInt_2 StartInt_1) (str.replace Start_4 Start_2 Start_11)))
   (Start_7 String (x (str.++ Start_5 Start_4) (str.substr Start_2 StartInt_7 StartInt_7)))
   (Start_4 String ("0" (ite StartBool Start Start_3)))
   (Start_2 String (x "0" "b" (str.++ Start_1 Start_5) (str.at Start_2 StartInt_1) (str.from_int StartInt_4)))
   (StartInt_2 Int (1 0 (str.to_int Start)))
   (Start_3 String ("b" y (str.++ Start_5 Start_1) (str.at Start_1 StartInt) (str.substr Start_5 StartInt_1 StartInt_1) (str.replace Start_3 Start_1 Start_4) (str.from_int StartInt_3) (ite StartBool Start_3 Start_1)))
   (Start_12 String (x "0" "1" (str.replace Start_2 Start_2 Start_10)))
   (StartInt_4 Int (0))
   (StartInt_6 Int (1 0 (str.len Start_4) (str.indexof Start_4 Start_1 StartInt)))
   (StartInt_5 Int (1 0 (str.len Start_6) (str.to_int Start_4)))
   (Start_6 String ("b" (str.substr Start StartInt_5 StartInt_1)))
   (Start_1 String ("b" (str.substr Start_6 StartInt_4 StartInt_6) (str.from_int StartInt_4) (ite StartBool Start_7 Start_7)))
   (StartInt_3 Int (0 1))
   (Start_5 String ("" y (str.at Start_2 StartInt_4) (str.substr Start_1 StartInt StartInt_5) (str.replace Start_4 Start_5 Start_3)))
   (StartInt_1 Int (1 (str.indexof Start_1 Start_2 StartInt)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ (str.++ (str.replace "1" "" "b") "b") "0")))

(check-synth)
