(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_1 Bool) (Start_7 String) (Start_1 String) (Start_6 String) (StartInt_6 Int) (StartInt_1 Int) (Start_3 String) (Start_5 String) (StartInt_4 Int) (Start_4 String) (StartInt_2 Int) (StartInt_5 Int) (StartInt_3 Int) (Start_8 String) (Start_2 String))
  ((Start String ("1" "a" (str.++ Start_1 Start)))
   (StartInt Int (0 1 (str.to_int Start_5)))
   (StartBool Bool (true false (not StartBool) (str.<= Start_1 Start_1) (str.prefixof Start_7 Start_5) (str.suffixof Start_6 Start_5) (= Start_2 Start_1) (= StartInt_3 StartInt_2) (<= StartInt_5 StartInt_5)))
   (StartBool_1 Bool (false (str.< Start_8 Start_4) (str.prefixof Start_3 Start_5) (= StartInt_4 StartInt) (<= StartInt_5 StartInt_6)))
   (Start_7 String (x (str.++ Start_8 Start_6) (str.at Start_1 StartInt_6) (str.substr Start_1 StartInt_2 StartInt)))
   (Start_1 String (y "a" "1" x "b" (str.++ Start Start_2) (str.at Start_3 StartInt_1) (str.substr Start_1 StartInt_1 StartInt_2)))
   (Start_6 String ("1" y (str.replace Start_2 Start_2 Start_2)))
   (StartInt_6 Int (0 1 (str.len Start_5) (str.indexof Start_6 Start StartInt) (str.to_int Start_7)))
   (StartInt_1 Int (1 (str.indexof Start Start_1 StartInt_2)))
   (Start_3 String (y "b" "" (str.substr Start StartInt_3 StartInt_4) (str.replace Start Start_1 Start_1)))
   (Start_5 String (y "" (str.at Start_2 StartInt_1) (str.from_int StartInt_1)))
   (StartInt_4 Int (1 (str.len Start_4) (str.to_int Start_3)))
   (Start_4 String ("0" (str.++ Start_4 Start_2) (str.replace Start_5 Start_4 Start_5) (str.from_int StartInt_5)))
   (StartInt_2 Int (0 (str.to_int Start_3)))
   (StartInt_5 Int (0 (str.len Start_2)))
   (StartInt_3 Int (0 1 (str.to_int Start)))
   (Start_8 String (y (str.++ Start_7 Start_6) (str.at Start_5 StartInt_1) (str.from_int StartInt_6) (ite StartBool_1 Start Start_3)))
   (Start_2 String ("b" (str.at Start_6 StartInt_3) (str.substr Start_5 StartInt StartInt_2) (str.from_int StartInt) (ite StartBool Start Start_4)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace x "1" y)))

(check-synth)
