(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_2 Bool) (StartBool_1 Bool) (Start_9 String) (Start_8 String) (Start_7 String) (StartInt_2 Int) (StartInt_3 Int) (Start_6 String) (StartInt_1 Int) (Start_3 String) (StartInt_4 Int) (Start_2 String) (StartInt_5 Int) (Start_1 String) (Start_5 String) (Start_4 String))
  ((Start String (y (str.++ Start_1 Start_2) (str.at Start_3 StartInt_1) (str.substr Start_3 StartInt StartInt_2) (str.from_int StartInt_3)))
   (StartInt Int (0 1 (str.indexof Start_2 Start_1 StartInt)))
   (StartBool Bool (true (not StartBool_1) (str.< Start_3 Start_4) (str.<= Start_1 Start_7) (= Start_6 Start_7) (= StartInt_2 StartInt_2)))
   (StartBool_2 Bool (false (str.suffixof Start_2 Start_3)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_1 StartBool_2) (str.< Start_8 Start_9) (str.prefixof Start_5 Start_3) (str.suffixof Start_9 Start_3) (= Start_8 Start_7) (= StartInt_3 StartInt_5) (<= StartInt_5 StartInt)))
   (Start_9 String ("b" (str.at Start_6 StartInt_4) (str.replace Start_6 Start_1 Start_2) (str.from_int StartInt) (ite StartBool Start_7 Start_5)))
   (Start_8 String ("" y (str.++ Start_2 Start) (str.from_int StartInt) (ite StartBool Start_2 Start_1)))
   (Start_7 String (y "a" (str.++ Start_3 Start_1) (str.substr Start_7 StartInt StartInt_5) (str.replace Start_8 Start_5 Start_3) (ite StartBool Start_3 Start_7)))
   (StartInt_2 Int (0 (str.indexof Start_1 Start_3 StartInt_1)))
   (StartInt_3 Int (0 1))
   (Start_6 String (y (str.substr Start_7 StartInt_3 StartInt_3) (str.replace Start_5 Start_1 Start) (ite StartBool Start_8 Start_1)))
   (StartInt_1 Int (0 1 (str.len Start_3) (str.indexof Start_1 Start_2 StartInt_3)))
   (Start_3 String ("1" "" (str.++ Start_1 Start_3)))
   (StartInt_4 Int (0 1 (str.len Start_5) (str.indexof Start_5 Start_1 StartInt_3) (str.to_int Start_2)))
   (Start_2 String ("0" (str.++ Start_1 Start_4) (str.at Start StartInt_2) (str.substr Start_2 StartInt_4 StartInt_4) (str.replace Start_4 Start Start)))
   (StartInt_5 Int (1 (str.indexof Start_8 Start StartInt_1) (str.to_int Start_5)))
   (Start_1 String ("a" (str.++ Start_5 Start_3) (str.substr Start_5 StartInt_4 StartInt_4) (str.replace Start_3 Start_6 Start_3)))
   (Start_5 String ("0" (str.++ Start_5 Start_1) (str.at Start_6 StartInt_2) (str.substr Start_2 StartInt_2 StartInt_4) (str.replace Start_1 Start_6 Start_5) (str.from_int StartInt_2)))
   (Start_4 String ("a" y x "" (str.++ Start_3 Start_6) (str.substr Start_4 StartInt_5 StartInt_5) (str.replace Start_1 Start_9 Start_8)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ "1" (str.replace x "" "1"))))

(check-synth)
