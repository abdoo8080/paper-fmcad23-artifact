(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_4 Bool) (StartInt_8 Int) (Start_14 String) (StartInt_7 Int) (StartInt_6 Int) (Start_13 String) (StartInt_2 Int) (Start_10 String) (Start_11 String) (Start_5 String) (StartInt_4 Int) (Start_4 String) (StartInt_5 Int) (Start_6 String) (StartBool_1 Bool) (Start_3 String) (StartBool_2 Bool) (Start_9 String) (Start_1 String) (StartBool_3 Bool) (Start_8 String) (Start_12 String) (StartInt_3 Int) (StartInt_1 Int) (Start_7 String) (Start_2 String))
  ((Start String ("b" (str.++ Start Start) (str.at Start StartInt_1) (str.from_int StartInt_2) (ite StartBool_1 Start_1 Start)))
   (StartInt Int (0 1 (str.indexof Start_13 Start_6 StartInt_7) (str.to_int Start_3)))
   (StartBool Bool (false true (not StartBool_1) (and StartBool_4 StartBool_4) (str.prefixof Start_10 Start_5)))
   (StartBool_4 Bool (true (and StartBool StartBool_1) (str.< Start_5 Start_7) (str.<= Start_13 Start_10) (str.prefixof Start_7 Start_6) (str.suffixof Start_5 Start_9) (str.contains Start_12 Start_6)))
   (StartInt_8 Int (1 0 (str.indexof Start_2 Start_10 StartInt_1) (str.to_int Start_12)))
   (Start_14 String ("1" "a" x "b" (str.at Start_7 StartInt_8) (str.replace Start_5 Start_2 Start_3)))
   (StartInt_7 Int (1 (str.indexof Start_8 Start_11 StartInt)))
   (StartInt_6 Int (0 1 (str.len Start_6) (str.indexof Start_5 Start_7 StartInt) (str.to_int Start_2)))
   (Start_13 String ("0" (str.substr Start_9 StartInt_5 StartInt_2) (ite StartBool_2 Start_8 Start_14)))
   (StartInt_2 Int (0 (str.len Start_9) (str.indexof Start_8 Start_1 StartInt_6) (str.to_int Start_6)))
   (Start_10 String ("b" (str.++ Start_1 Start_11) (str.at Start_4 StartInt_2) (str.substr Start_3 StartInt_2 StartInt_1) (ite StartBool_3 Start_1 Start_11)))
   (Start_11 String (x y (str.at Start_11 StartInt_1) (str.substr Start_10 StartInt StartInt_2) (str.from_int StartInt_1) (ite StartBool_1 Start_1 Start_1)))
   (Start_5 String ("0" (str.++ Start_6 Start_7) (ite StartBool_2 Start_7 Start_1)))
   (StartInt_4 Int (0 (str.len Start_8)))
   (Start_4 String (x (str.replace Start_3 Start_1 Start_3)))
   (StartInt_5 Int (1 (str.to_int Start_6)))
   (Start_6 String (y (str.replace Start_2 Start_6 Start_3) (ite StartBool Start Start)))
   (StartBool_1 Bool (true (not StartBool_1) (str.<= Start_10 Start_2) (str.contains Start_12 Start_6) (= StartInt_2 StartInt_1) (<= StartInt_5 StartInt_1)))
   (Start_3 String ("a" "1" "0" (str.at Start_4 StartInt_3) (str.replace Start_5 Start_6 Start_6) (str.from_int StartInt_3) (ite StartBool_1 Start_5 Start_1)))
   (StartBool_2 Bool (true false (not StartBool_3) (str.<= Start_1 Start) (str.prefixof Start_4 Start_6) (str.suffixof Start_5 Start_2) (str.contains Start_4 Start_4) (= Start_6 Start_3) (= StartInt_2 StartInt)))
   (Start_9 String ("0" (str.++ Start_8 Start_11) (str.substr Start StartInt_5 StartInt_4)))
   (Start_1 String ("a" (str.++ Start Start_1) (str.substr Start_2 StartInt_2 StartInt) (str.replace Start_1 Start Start_3) (str.from_int StartInt) (ite StartBool Start_1 Start_4)))
   (StartBool_3 Bool (false true (not StartBool_2) (str.prefixof Start_5 Start_4) (str.contains Start Start_1) (= Start_8 Start_6) (= StartInt_4 StartInt_3) (<= StartInt_4 StartInt_4)))
   (Start_8 String ("" y (str.++ Start_1 Start_3) (str.from_int StartInt) (ite StartBool_1 Start_6 Start_1)))
   (Start_12 String ("a" (str.substr Start_5 StartInt_5 StartInt_3) (str.replace Start_9 Start_8 Start) (ite StartBool_3 Start_6 Start)))
   (StartInt_3 Int (1 0 (str.len Start_5) (str.indexof Start_8 Start_8 StartInt)))
   (StartInt_1 Int (1 (str.len Start_6)))
   (Start_7 String ("" (str.++ Start_3 Start_5) (str.substr Start_7 StartInt_2 StartInt_3) (str.replace Start Start_5 Start_1) (str.from_int StartInt_2) (ite StartBool_3 Start_4 Start_6)))
   (Start_2 String ("0" (str.++ Start_7 Start_9) (str.substr Start_10 StartInt_1 StartInt_3) (str.replace Start_4 Start_7 Start_11) (str.from_int StartInt_3)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace (str.substr y 0 1) "a" "0")))

(check-synth)
