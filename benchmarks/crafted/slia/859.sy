(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_8 Int) (Start_3 String) (StartBool_1 Bool) (StartInt_4 Int) (StartInt_1 Int) (StartInt_5 Int) (StartBool_2 Bool) (Start_1 String) (Start_4 String) (StartInt_7 Int) (StartInt_2 Int) (StartInt_6 Int) (StartInt_3 Int) (Start_5 String) (Start_7 String) (Start_6 String) (Start_2 String) (Start_8 String))
  ((Start String ("1" "0" "a" (str.++ Start_1 Start) (str.substr Start StartInt_1 StartInt)))
   (StartInt Int (1 0 (str.len Start_4) (str.to_int Start)))
   (StartBool Bool (false (not StartBool_1) (and StartBool StartBool_1) (str.<= Start_5 Start) (str.prefixof Start_4 Start_1) (str.contains Start_7 Start_6) (= StartInt_8 StartInt) (<= StartInt_6 StartInt_3)))
   (StartInt_8 Int (0 1 (str.indexof Start_1 Start_2 StartInt_2) (str.to_int Start)))
   (Start_3 String (y (str.++ Start_6 Start) (str.at Start_4 StartInt_7) (str.replace Start_1 Start_8 Start_2) (str.from_int StartInt_4)))
   (StartBool_1 Bool (false (and StartBool StartBool_2) (str.prefixof Start_4 Start_6) (<= StartInt_1 StartInt_5)))
   (StartInt_4 Int (0 (str.to_int Start_3)))
   (StartInt_1 Int (1 (str.to_int Start_1)))
   (StartInt_5 Int (1 0 (str.to_int Start_1)))
   (StartBool_2 Bool (false (not StartBool) (str.< Start_6 Start_1) (str.<= Start_6 Start_3) (str.contains Start_5 Start_5) (= StartInt_1 StartInt) (<= StartInt_7 StartInt_1)))
   (Start_1 String (x (str.substr Start_2 StartInt StartInt) (str.from_int StartInt_2) (ite StartBool Start_2 Start)))
   (Start_4 String ("" (str.substr Start_5 StartInt_2 StartInt_1) (str.replace Start_3 Start_4 Start)))
   (StartInt_7 Int (0 (str.to_int Start_6)))
   (StartInt_2 Int (0 (str.indexof Start_2 Start_3 StartInt_3)))
   (StartInt_6 Int (1 0 (str.indexof Start_7 Start_3 StartInt_2)))
   (StartInt_3 Int (0 (str.len Start_2) (str.indexof Start Start_2 StartInt_4) (str.to_int Start_4)))
   (Start_5 String ("b" (str.at Start_4 StartInt_3) (str.substr Start_6 StartInt_4 StartInt_5) (str.replace Start_4 Start_5 Start_5) (ite StartBool Start_2 Start_5)))
   (Start_7 String (y (str.substr Start_3 StartInt_4 StartInt_5) (str.replace Start_1 Start_6 Start_8) (str.from_int StartInt_6)))
   (Start_6 String ("" (str.at Start_7 StartInt) (str.substr Start_1 StartInt_5 StartInt_2) (str.from_int StartInt_2) (ite StartBool Start_6 Start_6)))
   (Start_2 String ("b" x (str.substr Start_1 StartInt_1 StartInt_5) (str.from_int StartInt_1)))
   (Start_8 String (y (str.++ Start_1 Start) (str.substr Start StartInt_1 StartInt_7) (str.replace Start_6 Start Start_7) (ite StartBool Start_8 Start_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.substr (str.replace y "b" "") 0 (str.len x))))

(check-synth)
