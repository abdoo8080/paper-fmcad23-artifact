(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_2 Bool) (StartInt_4 Int) (Start_7 String) (StartBool_1 Bool) (Start_3 String) (Start_5 String) (Start_4 String) (Start_1 String) (Start_2 String) (StartInt_2 Int) (StartInt_1 Int) (StartInt_3 Int) (Start_6 String))
  ((Start String ("b" x "" (str.at Start StartInt_1) (str.replace Start_1 Start_2 Start_2) (str.from_int StartInt)))
   (StartInt Int (1 (str.indexof Start_6 Start_2 StartInt_2) (str.to_int Start_7)))
   (StartBool Bool (true false (not StartBool) (and StartBool_1 StartBool_2) (str.prefixof Start_2 Start) (str.suffixof Start_5 Start_3) (= StartInt StartInt_3) (<= StartInt_4 StartInt)))
   (StartBool_2 Bool (false true (str.< Start_7 Start_7) (str.<= Start_7 Start_6) (= Start_2 Start) (<= StartInt_1 StartInt_3)))
   (StartInt_4 Int (0 1 (str.indexof Start_6 Start_4 StartInt_3) (str.to_int Start_7)))
   (Start_7 String ("a" "b" x y "" "0" "1" (str.++ Start Start_4) (str.at Start StartInt_1) (ite StartBool_1 Start_1 Start_1)))
   (StartBool_1 Bool (false true (str.<= Start_4 Start) (str.prefixof Start_7 Start_4) (str.contains Start_4 Start_1) (= StartInt_2 StartInt_1)))
   (Start_3 String ("" "b" (str.++ Start_2 Start_4)))
   (Start_5 String (y "1" "0" "b" (str.at Start_5 StartInt_2) (str.substr Start_1 StartInt_2 StartInt) (str.replace Start_1 Start Start_4) (ite StartBool Start Start_3)))
   (Start_4 String ("b" "1" (str.from_int StartInt)))
   (Start_1 String ("a" y x (str.at Start_1 StartInt) (str.from_int StartInt_2)))
   (Start_2 String (x "b" "" (str.at Start_3 StartInt)))
   (StartInt_2 Int (0 1 (str.len Start_2) (str.to_int Start_4)))
   (StartInt_1 Int (1 0 (str.len Start_1) (str.indexof Start_5 Start_4 StartInt) (str.to_int Start_3)))
   (StartInt_3 Int (0 1 (str.to_int Start_6)))
   (Start_6 String ("a" y (str.++ Start_6 Start_4) (str.replace Start_6 Start_4 Start_2) (str.from_int StartInt_2)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ (str.at x 0) "0")))

(check-synth)
