(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_10 String) (StartInt_6 Int) (StartInt_7 Int) (Start_9 String) (Start_1 String) (Start_2 String) (Start_5 String) (StartInt_1 Int) (StartBool_2 Bool) (StartBool_1 Bool) (Start_6 String) (Start_8 String) (Start_7 String) (StartInt_3 Int) (Start_4 String) (StartInt_4 Int) (StartInt_2 Int) (StartInt_5 Int) (Start_3 String))
  ((Start String ("1" "0" (str.replace Start_1 Start_2 Start_3) (ite StartBool_1 Start_2 Start_3)))
   (StartInt Int (1 (str.len Start_8) (str.indexof Start_4 Start_2 StartInt_3)))
   (StartBool Bool (false true (str.< Start_10 Start_10) (str.contains Start_9 Start_6) (= Start_6 Start_7) (= StartInt_6 StartInt_3) (<= StartInt_3 StartInt_7)))
   (Start_10 String ("" (str.at Start_3 StartInt_2) (str.substr Start_10 StartInt_3 StartInt_3) (str.replace Start_1 Start_8 Start_4) (str.from_int StartInt_6)))
   (StartInt_6 Int (0 1 (str.to_int Start_8)))
   (StartInt_7 Int (1 0 (str.len Start_4) (str.to_int Start_5)))
   (Start_9 String ("1" (str.++ Start Start) (str.at Start_2 StartInt_5) (ite StartBool_2 Start_1 Start_5)))
   (Start_1 String ("a" (str.++ Start_6 Start_4)))
   (Start_2 String (y (str.from_int StartInt_3)))
   (Start_5 String ("" y (str.++ Start_2 Start_3) (str.replace Start_6 Start_3 Start_7) (str.from_int StartInt)))
   (StartInt_1 Int (0 1 (str.len Start_6) (str.to_int Start_2)))
   (StartBool_2 Bool (true false (str.<= Start_5 Start_7) (str.suffixof Start_4 Start_3)))
   (StartBool_1 Bool (true false (str.<= Start_4 Start_3) (= StartInt StartInt)))
   (Start_6 String ("" "1" x "0" "b" "a" (str.substr Start_7 StartInt_2 StartInt_3) (str.from_int StartInt) (ite StartBool_2 Start_1 Start_5)))
   (Start_8 String ("1" "b" (str.at Start_3 StartInt_2) (str.replace Start_2 Start_9 Start_4) (ite StartBool Start_8 Start)))
   (Start_7 String ("" (str.++ Start Start_7) (str.from_int StartInt_1)))
   (StartInt_3 Int (0 1 (str.indexof Start_6 Start_1 StartInt_4) (str.to_int Start_6)))
   (Start_4 String ("" (str.++ Start_3 Start_3) (str.at Start StartInt) (str.replace Start Start_2 Start_2) (ite StartBool Start_5 Start_5)))
   (StartInt_4 Int (1 (str.indexof Start_4 Start_4 StartInt_5)))
   (StartInt_2 Int (0 1 (str.len Start_2) (str.indexof Start_2 Start StartInt_3)))
   (StartInt_5 Int (0 (str.to_int Start_3)))
   (Start_3 String ("a" (str.replace Start_1 Start_4 Start_4) (str.from_int StartInt_5)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.at (str.replace "b" y "b") 0)))

(check-synth)
