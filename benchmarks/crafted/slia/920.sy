(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_12 String) (StartInt_8 Int) (StartInt_4 Int) (Start_5 String) (Start_4 String) (StartBool_1 Bool) (StartInt_2 Int) (StartBool_6 Bool) (Start_3 String) (Start_6 String) (StartInt_6 Int) (Start_2 String) (Start_10 String) (StartBool_4 Bool) (StartBool_3 Bool) (Start_8 String) (Start_1 String) (Start_7 String) (Start_9 String) (StartInt_5 Int) (StartInt_1 Int) (StartInt_3 Int) (StartBool_5 Bool) (StartBool_2 Bool) (StartInt_7 Int) (StartBool_7 Bool) (Start_11 String))
  ((Start String (y (str.++ Start Start) (str.substr Start_1 StartInt_1 StartInt) (ite StartBool_1 Start Start_2)))
   (StartInt Int (0 1))
   (StartBool Bool (true false (not StartBool_4) (str.< Start_12 Start_11) (str.<= Start_3 Start) (str.contains Start_4 Start_9) (= Start_12 Start)))
   (Start_12 String ("a" "" "0" "1" y (str.++ Start_7 Start_2) (str.at Start_8 StartInt_2) (str.replace Start_11 Start_12 Start_10) (str.from_int StartInt_4)))
   (StartInt_8 Int (1 (str.len Start_4) (str.to_int Start_7)))
   (StartInt_4 Int (1 (str.indexof Start_1 Start_1 StartInt_4)))
   (Start_5 String (y "" (str.++ Start_4 Start_4) (str.at Start_3 StartInt_1) (str.from_int StartInt)))
   (Start_4 String ("1" "" "0" x (str.++ Start_4 Start_1) (str.at Start StartInt) (str.substr Start_2 StartInt_2 StartInt_2) (str.replace Start Start_1 Start_2)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool_2 StartBool_3) (str.<= Start_5 Start_2) (str.contains Start_2 Start_1) (= Start_1 Start) (<= StartInt_1 StartInt_2)))
   (StartInt_2 Int (1 (str.indexof Start_1 Start_4 StartInt) (str.to_int Start_1)))
   (StartBool_6 Bool (true false (not StartBool_6) (and StartBool_5 StartBool) (str.prefixof Start_3 Start_9) (= StartInt_6 StartInt_4)))
   (Start_3 String (x "" "b" y "0" (str.at Start StartInt) (str.substr Start_1 StartInt_1 StartInt_2) (str.replace Start_3 Start_1 Start_2) (ite StartBool Start_1 Start)))
   (Start_6 String ("b" "a" (str.++ Start_4 Start_3) (str.replace Start_6 Start_5 Start_4) (str.from_int StartInt_2)))
   (StartInt_6 Int (0 1 (str.to_int Start_10)))
   (Start_2 String ("a" "0" (str.++ Start Start_3) (str.at Start_1 StartInt_1)))
   (Start_10 String (y (str.from_int StartInt_2) (ite StartBool_3 Start_5 Start_4)))
   (StartBool_4 Bool (false (not StartBool) (and StartBool StartBool_4) (str.< Start_5 Start) (str.<= Start_7 Start_4) (str.prefixof Start_6 Start_1) (= StartInt_4 StartInt)))
   (StartBool_3 Bool (true (and StartBool_3 StartBool_3) (str.< Start_3 Start_1) (str.<= Start_3 Start) (str.suffixof Start_1 Start_1) (str.contains Start Start_6) (= StartInt_1 StartInt_3) (<= StartInt_2 StartInt_4)))
   (Start_8 String ("a" (str.from_int StartInt) (ite StartBool_5 Start Start_6)))
   (Start_1 String ("" y "a" (str.at Start_5 StartInt_2) (str.replace Start_4 Start_6 Start_7) (str.from_int StartInt_6) (ite StartBool_7 Start_3 Start_7)))
   (Start_7 String ("0" (str.at Start_8 StartInt_5)))
   (Start_9 String ("a" "0" (str.at Start_7 StartInt_1) (str.from_int StartInt_4) (ite StartBool_4 Start_3 Start_1)))
   (StartInt_5 Int (0 (str.len Start_8) (str.to_int Start_5)))
   (StartInt_1 Int (0 (str.indexof Start_2 Start_7 StartInt_7)))
   (StartInt_3 Int (1 0 (str.to_int Start)))
   (StartBool_5 Bool (false true (and StartBool_6 StartBool_6) (str.< Start_5 Start_4) (str.<= Start_6 Start_1) (= StartInt_3 StartInt_2)))
   (StartBool_2 Bool (false (and StartBool_4 StartBool_1) (str.<= Start_5 Start_5) (str.prefixof Start_4 Start_1) (= StartInt_1 StartInt_1)))
   (StartInt_7 Int (1 0 (str.to_int Start_9)))
   (StartBool_7 Bool (false true (not StartBool_3) (str.prefixof Start_11 Start_11) (str.contains Start_3 Start) (= Start_4 Start_7) (= StartInt_3 StartInt_8)))
   (Start_11 String ("b" "1" "" (str.at Start_11 StartInt_8) (str.replace Start_11 Start_3 Start) (str.from_int StartInt_7) (ite StartBool Start_7 Start_11)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ (str.replace "b" "" x) (str.from_int (str.to_int (str.replace "a" x "0"))))))

(check-synth)
