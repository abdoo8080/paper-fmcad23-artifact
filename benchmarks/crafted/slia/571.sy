(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_5 Int) (Start_8 String) (Start_7 String) (StartBool_2 Bool) (StartInt_1 Int) (Start_6 String) (Start_3 String) (Start_2 String) (Start_4 String) (Start_5 String) (StartInt_3 Int) (Start_1 String) (StartInt_2 Int) (StartBool_1 Bool) (StartInt_4 Int))
  ((Start String ("b" "a" (str.++ Start_1 Start_2) (str.at Start_2 StartInt) (str.substr Start_1 StartInt_1 StartInt_1) (str.from_int StartInt) (ite StartBool_1 Start_1 Start_3)))
   (StartInt Int (1 (str.indexof Start_1 Start_1 StartInt_2)))
   (StartBool Bool (true (not StartBool_2) (str.<= Start_3 Start_6) (str.prefixof Start_7 Start_6) (str.suffixof Start Start_5) (= StartInt_1 StartInt_3) (<= StartInt_4 StartInt_2)))
   (StartInt_5 Int (0))
   (Start_8 String ("1" y "0" (str.++ Start_3 Start_7)))
   (Start_7 String (x (str.++ Start_5 Start_8) (str.at Start_6 StartInt) (str.from_int StartInt_1) (ite StartBool_2 Start_3 Start_7)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_2 StartBool) (str.<= Start_5 Start_7) (= Start Start_6) (= StartInt_2 StartInt_2) (<= StartInt_2 StartInt_5)))
   (StartInt_1 Int (0 1 (str.to_int Start_2)))
   (Start_6 String ("" (str.from_int StartInt_2)))
   (Start_3 String (y "1" (str.at Start_1 StartInt_1) (str.replace Start_2 Start_3 Start) (str.from_int StartInt)))
   (Start_2 String ("1" (str.++ Start_3 Start) (str.replace Start_4 Start_3 Start_3) (str.from_int StartInt_1) (ite StartBool_1 Start Start_3)))
   (Start_4 String (y (str.++ Start Start_4) (str.substr Start_2 StartInt StartInt_1) (str.replace Start Start_4 Start) (ite StartBool_1 Start_1 Start_4)))
   (Start_5 String (y (str.++ Start_5 Start_2) (str.substr Start_1 StartInt_2 StartInt) (str.replace Start_4 Start_2 Start) (ite StartBool Start_1 Start_5)))
   (StartInt_3 Int (0 1))
   (Start_1 String ("0" y (str.substr Start_2 StartInt_1 StartInt) (str.replace Start_2 Start_5 Start_5)))
   (StartInt_2 Int (0 (str.to_int Start_3)))
   (StartBool_1 Bool (false (and StartBool StartBool_1) (= Start_4 Start_2) (<= StartInt StartInt)))
   (StartInt_4 Int (0 (str.to_int Start_5)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "0" (str.replace "0" y "") (str.at (str.replace y "b" "a") 0))))

(check-synth)
