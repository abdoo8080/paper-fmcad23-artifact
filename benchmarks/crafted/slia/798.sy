(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_3 Bool) (StartInt_4 Int) (Start_6 String) (StartInt_7 Int) (Start_2 String) (Start_5 String) (StartBool_5 Bool) (Start_3 String) (StartInt_1 Int) (Start_13 String) (StartBool_1 Bool) (StartBool_2 Bool) (StartInt_3 Int) (Start_10 String) (Start_7 String) (StartInt_2 Int) (Start_4 String) (Start_15 String) (Start_1 String) (Start_9 String) (Start_11 String) (StartInt_6 Int) (StartInt_5 Int) (Start_12 String) (Start_14 String) (Start_8 String) (StartBool_4 Bool))
  ((Start String (y (str.++ Start_1 Start_1) (ite StartBool Start_1 Start)))
   (StartInt Int (1 (str.len Start_11) (str.indexof Start Start_7 StartInt_3)))
   (StartBool Bool (false true (and StartBool_3 StartBool_4) (str.<= Start_10 Start_10) (str.suffixof Start_8 Start_5) (str.contains Start_10 Start_5) (= Start_3 Start_12)))
   (StartBool_3 Bool (true false (not StartBool_2) (and StartBool StartBool_3) (str.< Start_13 Start_2) (str.suffixof Start_12 Start_10) (str.contains Start_8 Start_5) (= StartInt_3 StartInt_5)))
   (StartInt_4 Int (1 (str.len Start_8)))
   (Start_6 String ("a" (str.at Start_5 StartInt_2) (str.substr Start StartInt StartInt) (str.replace Start_2 Start_6 Start_5) (str.from_int StartInt_2)))
   (StartInt_7 Int (1 0 (str.indexof Start Start_14 StartInt_3) (str.to_int Start_14)))
   (Start_2 String ("a" (str.substr Start_1 StartInt_1 StartInt) (str.replace Start_7 Start_7 Start_6) (ite StartBool_2 Start_3 Start)))
   (Start_5 String ("a" (str.at Start_6 StartInt) (str.from_int StartInt)))
   (StartBool_5 Bool (false (and StartBool StartBool_1) (str.< Start_2 Start_14) (str.suffixof Start_10 Start_10) (str.contains Start_4 Start_14) (= Start_7 Start_11) (<= StartInt_5 StartInt_6)))
   (Start_3 String ("" (str.++ Start_3 Start_5) (str.at Start_1 StartInt_1) (str.substr Start_5 StartInt StartInt) (str.from_int StartInt_3)))
   (StartInt_1 Int (0 (str.len Start)))
   (Start_13 String ("b" (str.at Start_1 StartInt_2) (str.substr Start_15 StartInt_3 StartInt_1) (str.replace Start_5 Start_9 Start_4)))
   (StartBool_1 Bool (true (str.< Start Start_5) (str.suffixof Start_3 Start_3) (= StartInt StartInt) (<= StartInt StartInt_1)))
   (StartBool_2 Bool (false (str.<= Start_8 Start_2) (str.prefixof Start_2 Start_2) (= Start_4 Start_8) (= StartInt_4 StartInt)))
   (StartInt_3 Int (0 (str.len Start_3) (str.indexof Start_3 Start_1 StartInt_2)))
   (Start_10 String (y (str.++ Start_9 Start_1) (str.replace Start_2 Start_4 Start_11) (ite StartBool_2 Start_9 Start_4)))
   (Start_7 String ("0" (str.at Start_5 StartInt_3) (str.substr Start_7 StartInt_3 StartInt) (str.replace Start_6 Start Start_3) (str.from_int StartInt_5)))
   (StartInt_2 Int (1))
   (Start_4 String ("" "0" y (str.++ Start_4 Start_2) (str.replace Start_1 Start_3 Start)))
   (Start_15 String ("" y (str.substr Start_9 StartInt_7 StartInt_3) (str.replace Start_2 Start_2 Start_6)))
   (Start_1 String (x "0" (str.++ Start_2 Start) (str.at Start_1 StartInt) (str.substr Start_2 StartInt StartInt) (str.replace Start_2 Start_3 Start) (ite StartBool_1 Start_4 Start_3)))
   (Start_9 String (y "" (str.++ Start_9 Start_1) (str.at Start_4 StartInt_3) (str.replace Start_7 Start_1 Start_6)))
   (Start_11 String ("1" "b" (str.++ Start_9 Start_8) (str.at Start_4 StartInt_4) (str.substr Start_4 StartInt StartInt_6) (str.from_int StartInt_2)))
   (StartInt_6 Int (0))
   (StartInt_5 Int (1 0 (str.len Start_8) (str.indexof Start_1 Start_2 StartInt_5)))
   (Start_12 String ("1" (str.++ Start_8 Start_13) (str.from_int StartInt_6) (ite StartBool_5 Start Start_11)))
   (Start_14 String ("" (str.substr Start_12 StartInt_1 StartInt_3) (str.from_int StartInt_6)))
   (Start_8 String ("a" "b" (str.at Start_9 StartInt_5) (str.replace Start_8 Start_10 Start_11) (ite StartBool Start_6 Start_7)))
   (StartBool_4 Bool (false (not StartBool_3) (str.<= Start_5 Start_14) (str.contains Start_6 Start_3) (= StartInt_3 StartInt_1)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.at (str.from_int (str.indexof x "" 1)) 1)))

(check-synth)
