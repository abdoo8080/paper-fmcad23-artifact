(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_5 Int) (Start_12 String) (Start_1 String) (Start_6 String) (StartInt_4 Int) (Start_5 String) (StartInt_1 Int) (Start_2 String) (StartBool_1 Bool) (Start_11 String) (Start_4 String) (Start_3 String) (Start_7 String) (StartInt_3 Int) (Start_8 String) (Start_9 String) (StartInt_2 Int) (Start_10 String))
  ((Start String ("b" y (str.at Start StartInt_1)))
   (StartInt Int (0 1 (str.to_int Start_1)))
   (StartBool Bool (false (and StartBool_1 StartBool_1) (str.< Start_4 Start_4) (str.<= Start_11 Start_7) (str.prefixof Start_11 Start_12) (str.suffixof Start_8 Start_1) (= Start_1 Start_4)))
   (StartInt_5 Int (1 0 (str.len Start_11) (str.indexof Start_4 Start_6 StartInt_3)))
   (Start_12 String (y "b" (str.at Start_3 StartInt_1) (str.substr Start_7 StartInt_4 StartInt_5) (str.from_int StartInt_1)))
   (Start_1 String ("1" (str.at Start_9 StartInt_2) (str.replace Start_5 Start_9 Start_9)))
   (Start_6 String (x "b" y "0" "1" "" (str.++ Start_10 Start_5) (str.substr Start_9 StartInt_1 StartInt_1)))
   (StartInt_4 Int (0 (str.to_int Start_8)))
   (Start_5 String ("" (str.at Start_3 StartInt_2)))
   (StartInt_1 Int (1 0 (str.len Start_1) (str.indexof Start_2 Start_1 StartInt_1)))
   (Start_2 String ("b" (str.++ Start Start_2) (str.replace Start_3 Start_3 Start)))
   (StartBool_1 Bool (false (and StartBool_1 StartBool) (str.< Start_6 Start_9) (str.<= Start_4 Start_9) (str.prefixof Start_6 Start) (str.contains Start_1 Start_2) (= Start_3 Start_4) (<= StartInt_1 StartInt_3)))
   (Start_11 String ("a" "" "b" (str.replace Start_10 Start_3 Start_3) (ite StartBool_1 Start_6 Start_11)))
   (Start_4 String ("a" (str.at Start_6 StartInt_3) (str.replace Start Start_4 Start_1) (str.from_int StartInt) (ite StartBool Start_4 Start_7)))
   (Start_3 String ("a" "b" (str.++ Start_3 Start_4) (str.at Start_5 StartInt) (str.from_int StartInt_1)))
   (Start_7 String (y (str.replace Start_8 Start_8 Start_3) (str.from_int StartInt_2)))
   (StartInt_3 Int (0 (str.indexof Start_7 Start_9 StartInt)))
   (Start_8 String ("b" (str.replace Start_9 Start Start_2) (str.from_int StartInt_1) (ite StartBool_1 Start_5 Start_3)))
   (Start_9 String ("0" (str.++ Start_7 Start_10) (ite StartBool_1 Start_5 Start_9)))
   (StartInt_2 Int (1 0 (str.to_int Start_4)))
   (Start_10 String ("" x (str.++ Start_9 Start_3) (str.at Start_7 StartInt) (str.substr Start_4 StartInt_1 StartInt_3) (ite StartBool Start_4 Start_9)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "b" x y)))

(check-synth)
