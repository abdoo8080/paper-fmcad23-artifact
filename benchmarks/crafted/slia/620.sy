(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_8 String) (Start_2 String) (StartInt_3 Int) (Start_3 String) (StartBool_3 Bool) (Start_9 String) (Start_4 String) (Start_6 String) (StartBool_1 Bool) (Start_7 String) (StartBool_2 Bool) (StartInt_1 Int) (Start_5 String) (StartInt_2 Int) (Start_1 String))
  ((Start String ("1" (str.++ Start_1 Start) (str.at Start_2 StartInt) (str.substr Start_2 StartInt StartInt) (str.from_int StartInt) (ite StartBool Start_2 Start_1)))
   (StartInt Int (0 1 (str.indexof Start_2 Start_8 StartInt_2) (str.to_int Start_3)))
   (StartBool Bool (true false (not StartBool_3) (and StartBool_1 StartBool_3)))
   (Start_8 String (y "a" x (str.at Start_2 StartInt_3) (str.substr Start_6 StartInt_3 StartInt_3) (str.replace Start Start_7 Start_9) (str.from_int StartInt) (ite StartBool_1 Start_3 Start_1)))
   (Start_2 String ("1" x "b" y (str.at Start StartInt_1) (str.replace Start_3 Start_3 Start_1) (str.from_int StartInt) (ite StartBool Start_2 Start)))
   (StartInt_3 Int (0 (str.len Start_4) (str.to_int Start_2)))
   (Start_3 String ("a" (str.at Start_4 StartInt) (str.from_int StartInt_1)))
   (StartBool_3 Bool (false true (and StartBool_2 StartBool_2) (str.<= Start_2 Start_4) (str.contains Start_1 Start_3) (= Start_4 Start_6) (= StartInt_3 StartInt_1) (<= StartInt_3 StartInt_3)))
   (Start_9 String ("" x (str.++ Start_2 Start_9) (str.from_int StartInt)))
   (Start_4 String (x (str.++ Start_4 Start) (str.replace Start_2 Start_5 Start_4) (str.from_int StartInt_1) (ite StartBool_1 Start_4 Start_1)))
   (Start_6 String ("b" "" (str.at Start_1 StartInt) (str.substr Start_2 StartInt_2 StartInt) (str.from_int StartInt_1)))
   (StartBool_1 Bool (false true (and StartBool_2 StartBool_2) (str.<= Start Start_5) (str.contains Start_5 Start_2) (= Start_5 Start) (<= StartInt StartInt)))
   (Start_7 String ("" (str.at Start_7 StartInt_2) (str.substr Start_7 StartInt StartInt_1) (str.from_int StartInt_1)))
   (StartBool_2 Bool (true (not StartBool) (str.<= Start Start_2) (str.suffixof Start_1 Start_3) (<= StartInt_1 StartInt_2)))
   (StartInt_1 Int (1 (str.indexof Start_4 Start_3 StartInt)))
   (Start_5 String ("0" x "a" (str.substr Start_7 StartInt_2 StartInt)))
   (StartInt_2 Int (1 0 (str.indexof Start_6 Start_5 StartInt_2) (str.to_int Start_6)))
   (Start_1 String ("0" "b" (str.at Start_7 StartInt) (str.replace Start_1 Start_5 Start_4)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (ite (str.prefixof y "0") "" "a")))

(check-synth)
