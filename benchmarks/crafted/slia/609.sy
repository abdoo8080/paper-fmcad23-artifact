(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_6 Int) (Start_8 String) (Start_3 String) (Start_4 String) (StartInt_3 Int) (StartInt_2 Int) (StartInt_7 Int) (StartInt_5 Int) (Start_2 String) (Start_7 String) (StartInt_1 Int) (Start_1 String) (StartInt_4 Int) (Start_5 String) (Start_6 String))
  ((Start String ("" (str.++ Start_1 Start) (str.at Start StartInt_1) (str.replace Start_1 Start_2 Start_3)))
   (StartInt Int (0 1 (str.to_int Start_7)))
   (StartBool Bool (false true (str.< Start_5 Start_8) (str.prefixof Start_5 Start) (str.suffixof Start_2 Start_7) (= Start_2 Start_3)))
   (StartInt_6 Int (0 1 (str.indexof Start_7 Start_4 StartInt_3)))
   (Start_8 String ("" (str.++ Start_7 Start_4) (str.at Start_7 StartInt_7) (str.substr Start_2 StartInt_3 StartInt_3) (ite StartBool Start_5 Start_8)))
   (Start_3 String ("1" "b" "a" x "0" "" (str.++ Start_2 Start_2) (str.substr Start_2 StartInt_1 StartInt_2) (str.replace Start_2 Start_2 Start_4) (str.from_int StartInt)))
   (Start_4 String (y "" "0" x "b" "a" (str.at Start_4 StartInt_3) (str.substr Start_3 StartInt_2 StartInt_2) (str.replace Start_4 Start_3 Start_3)))
   (StartInt_3 Int (0 1 (str.len Start_4) (str.indexof Start_2 Start_2 StartInt_3) (str.to_int Start_2)))
   (StartInt_2 Int (1 0 (str.to_int Start)))
   (StartInt_7 Int (1 0 (str.len Start_7) (str.to_int Start_4)))
   (StartInt_5 Int (1 (str.to_int Start_6)))
   (Start_2 String (y (str.substr Start StartInt_1 StartInt_4)))
   (Start_7 String ("" "1" (str.substr Start StartInt_6 StartInt_3) (str.replace Start_6 Start_8 Start_3) (ite StartBool Start_3 Start_2)))
   (StartInt_1 Int (1 0 (str.len Start_3) (str.to_int Start)))
   (Start_1 String ("1" x (str.replace Start_4 Start_1 Start_5) (ite StartBool Start_5 Start_5)))
   (StartInt_4 Int (1 0 (str.len Start_3) (str.indexof Start_1 Start_1 StartInt_2) (str.to_int Start_4)))
   (Start_5 String (y (str.++ Start_3 Start_6) (str.from_int StartInt)))
   (Start_6 String ("a" (str.at Start_3 StartInt_1) (str.substr Start_7 StartInt_5 StartInt_4) (str.replace Start_1 Start_2 Start_2) (str.from_int StartInt_4)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ x (str.substr "b" 0 (str.to_int (str.at x 1))))))

(check-synth)
