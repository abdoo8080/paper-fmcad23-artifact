(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_8 Int) (Start_5 String) (Start_12 String) (StartBool_1 Bool) (Start_9 String) (Start_1 String) (StartInt_7 Int) (StartInt_3 Int) (StartInt_2 Int) (Start_8 String) (Start_4 String) (Start_17 String) (StartInt_1 Int) (StartInt_4 Int) (Start_10 String) (Start_2 String) (Start_15 String) (Start_7 String) (Start_6 String) (Start_11 String) (Start_3 String) (Start_13 String) (Start_18 String) (Start_16 String) (StartInt_5 Int) (StartBool_2 Bool) (Start_14 String) (StartBool_3 Bool) (StartInt_6 Int))
  ((Start String ("" (str.at Start_1 StartInt) (str.substr Start_1 StartInt StartInt) (str.from_int StartInt) (ite StartBool Start_2 Start_2)))
   (StartInt Int (0))
   (StartBool Bool (false true (not StartBool_2) (and StartBool_2 StartBool_2) (str.<= Start_12 Start_7) (str.prefixof Start_10 Start_2) (str.suffixof Start_6 Start_7) (= Start_13 Start_9) (<= StartInt_4 StartInt_1)))
   (StartInt_8 Int (0 1 (str.indexof Start_3 Start_3 StartInt_4) (str.to_int Start_1)))
   (Start_5 String ("" x "a" (str.++ Start_5 Start) (str.at Start_5 StartInt) (str.replace Start_10 Start_5 Start_11)))
   (Start_12 String ("1" (str.++ Start_14 Start) (str.at Start_14 StartInt_2) (str.substr Start StartInt_2 StartInt_5) (ite StartBool_1 Start_10 Start_2)))
   (StartBool_1 Bool (false true (and StartBool StartBool) (str.< Start_2 Start_2) (str.<= Start_3 Start_1) (= Start_2 Start)))
   (Start_9 String ("" "0" "a" (str.at Start StartInt_4) (str.substr Start StartInt_1 StartInt_3)))
   (Start_1 String (x (str.substr Start StartInt StartInt) (ite StartBool_1 Start_2 Start)))
   (StartInt_7 Int (1 (str.len Start_5)))
   (StartInt_3 Int (0 (str.len Start_9) (str.indexof Start Start StartInt_3)))
   (StartInt_2 Int (1 0 (str.len Start_4) (str.indexof Start_1 Start_2 StartInt_1) (str.to_int Start_1)))
   (Start_8 String (x "a" "b" (str.substr Start_5 StartInt StartInt_1)))
   (Start_4 String ("b" (str.++ Start_5 Start_6) (ite StartBool Start_4 Start_5)))
   (Start_17 String ("" "1" "a" (str.++ Start_13 Start_15) (str.replace Start_14 Start_15 Start_7) (str.from_int StartInt_4) (ite StartBool Start_8 Start_16)))
   (StartInt_1 Int (1 (str.indexof Start Start_2 StartInt_1)))
   (StartInt_4 Int (1 (str.len Start_6) (str.indexof Start Start_6 StartInt) (str.to_int Start_4)))
   (Start_10 String (x y (str.++ Start_3 Start_10) (str.substr Start_8 StartInt_1 StartInt_2) (str.from_int StartInt)))
   (Start_2 String (y "a" (str.++ Start_1 Start) (str.replace Start Start_2 Start_1) (str.from_int StartInt_1)))
   (Start_15 String ("" (str.at Start_4 StartInt_1) (str.substr Start_12 StartInt_3 StartInt_1) (str.from_int StartInt_3) (ite StartBool_3 Start_8 Start_11)))
   (Start_7 String ("" "a" "1" (str.at Start_1 StartInt_4)))
   (Start_6 String ("" "b" (str.++ Start_3 Start_3) (str.at Start_7 StartInt) (str.replace Start_8 Start_3 Start_3) (str.from_int StartInt_3)))
   (Start_11 String ("b" "0" "1" x (str.++ Start_3 Start_7) (str.from_int StartInt)))
   (Start_3 String ("0" "1" (str.substr Start_4 StartInt_1 StartInt) (str.from_int StartInt_2)))
   (Start_13 String (x "0" "b" (str.at Start_10 StartInt_4) (ite StartBool Start_8 Start_1)))
   (Start_18 String ("a" (str.at Start_14 StartInt_2) (str.from_int StartInt_3) (ite StartBool_1 Start_18 Start_16)))
   (Start_16 String ("1" "b" (str.++ Start_18 Start_12) (str.at Start_3 StartInt_7) (str.substr Start_9 StartInt_8 StartInt_5) (str.replace Start_9 Start_13 Start_6) (str.from_int StartInt_7)))
   (StartInt_5 Int (1 0))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_3) (str.prefixof Start_16 Start_17) (str.suffixof Start_14 Start_12) (= Start_1 Start_13) (= StartInt_4 StartInt_3) (<= StartInt_1 StartInt_5)))
   (Start_14 String ("b" (str.substr Start_15 StartInt_3 StartInt_4) (str.replace Start_8 Start_12 Start_1) (str.from_int StartInt) (ite StartBool_1 Start_15 Start_14)))
   (StartBool_3 Bool (true (str.suffixof Start_3 Start_10) (= StartInt_1 StartInt_3) (<= StartInt_6 StartInt_1)))
   (StartInt_6 Int (0 1 (str.len Start_2)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace x "a" "0")))

(check-synth)
