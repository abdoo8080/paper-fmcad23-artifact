(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartBool_7 Bool) (StartInt_1 Int) (StartBool_2 Bool) (StartBool_6 Bool) (Start_9 String) (StartInt_3 Int) (Start_3 String) (StartInt_2 Int) (Start_7 String) (Start_4 String) (StartBool_3 Bool) (Start_8 String) (Start_6 String) (Start_16 String) (Start_1 String) (StartBool_1 Bool) (Start_10 String) (StartInt_6 Int) (Start_14 String) (StartInt_4 Int) (StartBool_5 Bool) (StartBool_4 Bool) (StartInt_7 Int) (Start_5 String) (StartInt_5 Int) (Start_2 String) (Start_13 String) (Start_11 String) (Start_12 String) (Start_15 String))
  ((Start String ("0" (str.at Start_1 StartInt) (str.replace Start_1 Start Start_1) (str.from_int StartInt_1)))
   (StartInt Int (1 0 (str.to_int Start_9)))
   (StartBool Bool (false true (not StartBool_7) (str.< Start_8 Start_10) (str.prefixof Start_14 Start_4) (str.contains Start_12 Start_9)))
   (StartBool_7 Bool (false true (not StartBool_6) (str.< Start_7 Start_5) (str.<= Start_9 Start_5) (str.prefixof Start_8 Start_12) (str.contains Start_7 Start_6) (= StartInt_5 StartInt_7) (<= StartInt_2 StartInt_5)))
   (StartInt_1 Int (0 (str.len Start_2) (str.indexof Start_3 Start_1 StartInt_1) (str.to_int Start_4)))
   (StartBool_2 Bool (true false (str.< Start_6 Start_6) (str.<= Start_7 Start) (str.prefixof Start_8 Start_7) (str.contains Start_1 Start_6)))
   (StartBool_6 Bool (true (str.prefixof Start_14 Start_11) (str.suffixof Start_11 Start_3) (str.contains Start_16 Start_6)))
   (Start_9 String ("1" (str.at Start_1 StartInt) (str.substr Start_1 StartInt_1 StartInt_3) (ite StartBool_2 Start_2 Start_6)))
   (StartInt_3 Int (1 (str.len Start_3) (str.to_int Start_11)))
   (Start_3 String ("" x y "b" "a" "1" (str.substr Start_3 StartInt_2 StartInt_3) (ite StartBool_1 Start_5 Start_6)))
   (StartInt_2 Int (1 (str.len Start) (str.to_int Start)))
   (Start_7 String ("1" "0" "b" y))
   (Start_4 String (y (str.at Start StartInt_2) (str.replace Start_4 Start_3 Start_2)))
   (StartBool_3 Bool (false true (str.<= Start_6 Start_7) (str.prefixof Start_9 Start) (str.suffixof Start_4 Start_7) (str.contains Start_5 Start_4) (= Start_4 Start_6) (<= StartInt StartInt)))
   (Start_8 String (y x "b" (str.substr Start_3 StartInt_1 StartInt_1) (str.from_int StartInt) (ite StartBool_3 Start_2 Start_1)))
   (Start_6 String ("1" x (str.++ Start_6 Start) (ite StartBool_2 Start_3 Start_7)))
   (Start_16 String ("1" "" "a" (str.at Start_6 StartInt) (str.replace Start_16 Start_7 Start_14)))
   (Start_1 String ("1" x (str.replace Start_7 Start_13 Start_12) (str.from_int StartInt_6) (ite StartBool_6 Start_13 Start_16)))
   (StartBool_1 Bool (false (not StartBool_4) (str.< Start_5 Start_11) (str.prefixof Start_6 Start_11) (str.contains Start_1 Start_6) (= StartInt_2 StartInt_4)))
   (Start_10 String (x "a" (str.substr Start_5 StartInt_3 StartInt_3) (str.replace Start_5 Start_11 Start_2) (str.from_int StartInt_3)))
   (StartInt_6 Int (1 0 (str.len Start_16)))
   (Start_14 String ("a" "0" "" x y (str.at Start_11 StartInt_1) (str.replace Start_1 Start_15 Start_4) (str.from_int StartInt_4)))
   (StartInt_4 Int (1 (str.to_int Start_10)))
   (StartBool_5 Bool (false (not StartBool_5) (str.< Start_12 Start_11) (str.prefixof Start_1 Start_8) (str.contains Start_13 Start_8) (= Start_9 Start_10)))
   (StartBool_4 Bool (false (str.< Start_9 Start_11) (str.suffixof Start_2 Start_6) (= StartInt_3 StartInt_3) (<= StartInt_5 StartInt_3)))
   (StartInt_7 Int (1 0 (str.to_int Start_12)))
   (Start_5 String (x (str.at Start_8 StartInt) (str.replace Start_9 Start Start_10) (str.from_int StartInt_1)))
   (StartInt_5 Int (1 0 (str.len Start_3) (str.to_int Start_4)))
   (Start_2 String ("1" (str.substr Start_10 StartInt_3 StartInt_2) (str.from_int StartInt_2) (ite StartBool_5 Start_6 Start_3)))
   (Start_13 String ("1" (str.substr Start_2 StartInt_4 StartInt_3)))
   (Start_11 String ("" (str.at Start_6 StartInt) (str.from_int StartInt) (ite StartBool Start Start_1)))
   (Start_12 String ("b" (str.substr Start_11 StartInt_3 StartInt_6) (ite StartBool_5 Start_8 Start_14)))
   (Start_15 String ("" "a" (str.replace Start_6 Start_8 Start_16)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.++ "1" (str.replace x y x))))

(check-synth)
