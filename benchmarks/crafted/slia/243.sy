(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (StartInt_6 Int) (StartInt_3 Int) (Start_1 String) (Start_2 String) (Start_4 String) (Start_8 String) (Start_5 String) (Start_6 String) (StartBool_1 Bool) (StartInt_5 Int) (StartInt_2 Int) (StartInt_1 Int) (Start_7 String) (StartInt_4 Int) (Start_3 String))
  ((Start String ("1" "" "b" "a" (str.at Start StartInt_1) (str.substr Start StartInt_1 StartInt) (str.replace Start Start Start_1) (str.from_int StartInt_1)))
   (StartInt Int (0 (str.len Start_8) (str.to_int Start_3)))
   (StartBool Bool (true (not StartBool_1) (str.<= Start_8 Start_8) (str.contains Start_1 Start) (= Start Start_7) (= StartInt_1 StartInt_2)))
   (StartInt_6 Int (0 1 (str.len Start_2) (str.to_int Start_5)))
   (StartInt_3 Int (1 0 (str.indexof Start_3 Start_2 StartInt_3) (str.to_int Start_1)))
   (Start_1 String ("a" x (str.++ Start_1 Start_1) (str.replace Start_2 Start_1 Start)))
   (Start_2 String ("" "a" (str.++ Start_3 Start_2) (str.substr Start_1 StartInt_2 StartInt_1) (str.replace Start_2 Start_3 Start_4)))
   (Start_4 String (x y (str.++ Start Start) (str.at Start_1 StartInt_2) (str.replace Start_2 Start_5 Start)))
   (Start_8 String ("0" x (str.substr Start_6 StartInt_6 StartInt_6) (ite StartBool_1 Start_2 Start_3)))
   (Start_5 String (x (str.++ Start_3 Start) (str.at Start_6 StartInt) (str.substr Start StartInt_3 StartInt_1)))
   (Start_6 String ("a" "0" (str.at Start_1 StartInt_1) (str.replace Start Start_4 Start_5) (str.from_int StartInt_3)))
   (StartBool_1 Bool (true (str.prefixof Start_1 Start_6) (str.suffixof Start Start_6) (str.contains Start Start_5)))
   (StartInt_5 Int (0 1 (str.len Start_2) (str.to_int Start_4)))
   (StartInt_2 Int (1))
   (StartInt_1 Int (1))
   (Start_7 String (x "" y "0" (str.at Start_1 StartInt) (str.substr Start_8 StartInt_4 StartInt_2) (str.from_int StartInt_5)))
   (StartInt_4 Int (1 0 (str.len Start_8) (str.to_int Start)))
   (Start_3 String ("a" (str.at Start_7 StartInt) (ite StartBool Start_6 Start_5)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (ite (str.prefixof "1" x) "b" x)))

(check-synth)
