(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_11 String) (StartInt_7 Int) (StartInt_6 Int) (Start_10 String) (Start_9 String) (Start_2 String) (Start_6 String) (StartBool_1 Bool) (Start_1 String) (Start_4 String) (StartBool_2 Bool) (StartInt_5 Int) (Start_7 String) (StartInt_2 Int) (Start_5 String) (StartInt_4 Int) (StartInt_1 Int) (Start_8 String) (StartInt_3 Int) (Start_3 String))
  ((Start String (y (str.substr Start_1 StartInt StartInt)))
   (StartInt Int (0))
   (StartBool Bool (true false (not StartBool_2) (str.<= Start Start_3) (str.contains Start_2 Start_11) (= Start_2 Start_3) (<= StartInt_5 StartInt_5)))
   (Start_11 String (x (str.++ Start_8 Start_11) (str.at Start_7 StartInt_7) (str.replace Start_9 Start_6 Start_6) (str.from_int StartInt_7)))
   (StartInt_7 Int (0 (str.len Start_10)))
   (StartInt_6 Int (0 1 (str.indexof Start_2 Start_6 StartInt_2) (str.to_int Start_11)))
   (Start_10 String ("a" y "" "0" x "1" "b" (str.substr Start_2 StartInt_6 StartInt_4) (str.from_int StartInt_3)))
   (Start_9 String ("" y (str.substr Start_9 StartInt_4 StartInt_2) (str.replace Start_10 Start Start) (ite StartBool_2 Start_2 Start_9)))
   (Start_2 String ("b" "a" (ite StartBool_2 Start Start_2)))
   (Start_6 String ("" x "b" "0" (str.at Start_5 StartInt) (str.from_int StartInt_3)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool_2 StartBool_2) (str.< Start_6 Start_3) (str.<= Start_1 Start_8) (str.contains Start Start_3) (= StartInt StartInt) (<= StartInt_2 StartInt_5)))
   (Start_1 String ("b" (str.at Start_1 StartInt) (str.replace Start Start_1 Start) (str.from_int StartInt_1) (ite StartBool_1 Start_1 Start_2)))
   (Start_4 String ("1" x (str.substr Start_6 StartInt_2 StartInt_1) (ite StartBool Start_1 Start_8)))
   (StartBool_2 Bool (true (not StartBool) (str.< Start_3 Start_2) (str.<= Start_1 Start_4) (str.suffixof Start_5 Start_2) (str.contains Start_2 Start) (= StartInt_2 StartInt_3) (<= StartInt_1 StartInt_3)))
   (StartInt_5 Int (0 (str.len Start_1)))
   (Start_7 String ("a" (str.at Start_2 StartInt) (str.replace Start_6 Start Start_6) (str.from_int StartInt_3) (ite StartBool_2 Start_7 Start_7)))
   (StartInt_2 Int (0 1 (str.len Start_2) (str.indexof Start_7 Start_1 StartInt_2)))
   (Start_5 String ("" x (str.at Start_7 StartInt_4) (ite StartBool Start_5 Start_4)))
   (StartInt_4 Int (0 1 (str.len Start_2) (str.indexof Start_4 Start_4 StartInt_1) (str.to_int Start_5)))
   (StartInt_1 Int (1 (str.len Start_4) (str.indexof Start_2 Start_9 StartInt_3)))
   (Start_8 String (y "b" "a" "" "0" "1" (str.++ Start_7 Start_2) (str.at Start_4 StartInt) (str.from_int StartInt)))
   (StartInt_3 Int (1 0 (str.len Start_4) (str.indexof Start_1 Start_6 StartInt)))
   (Start_3 String (x (str.at Start_1 StartInt_4) (str.replace Start_4 Start_7 Start_3)))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace "a" (str.at x 1) x)))

(check-synth)
