(set-logic SLIA)

(synth-fun f ((x String) (y String)) String
  ((Start String) (StartInt Int) (StartBool Bool) (Start_9 String) (StartInt_1 Int) (Start_2 String) (Start_1 String) (Start_4 String) (Start_5 String) (Start_7 String) (StartInt_4 Int) (StartInt_3 Int) (StartInt_2 Int) (StartBool_1 Bool) (StartInt_5 Int) (Start_6 String) (Start_8 String) (Start_3 String))
  ((Start String (x "0" (str.at Start StartInt_1) (str.replace Start_1 Start_1 Start) (ite StartBool Start Start_2)))
   (StartInt Int (1))
   (StartBool Bool (true false (not StartBool_1) (str.contains Start_9 Start_8) (= Start_3 Start_4) (= StartInt_2 StartInt_4) (<= StartInt_5 StartInt_2)))
   (Start_9 String ("b" "" (str.++ Start_8 Start_3) (str.at Start_9 StartInt_5) (str.substr Start_8 StartInt_2 StartInt_4) (str.replace Start_2 Start_7 Start_3)))
   (StartInt_1 Int (0 1 (str.len Start_5) (str.to_int Start_8)))
   (Start_2 String (x "" "1" (str.++ Start_3 Start_1) (ite StartBool_1 Start_4 Start_3)))
   (Start_1 String ("1" "0" y (str.from_int StartInt) (ite StartBool Start_6 Start_1)))
   (Start_4 String ("a" "0" (str.substr Start StartInt StartInt) (str.replace Start_5 Start_4 Start_2)))
   (Start_5 String ("" x "1" (str.at Start_5 StartInt) (str.substr Start_2 StartInt_2 StartInt_3) (str.from_int StartInt_4) (ite StartBool Start_2 Start_4)))
   (Start_7 String ("a" x y "" (str.++ Start Start_1) (str.at Start_4 StartInt_1) (str.substr Start_4 StartInt_5 StartInt)))
   (StartInt_4 Int (0 1 (str.indexof Start_5 Start_5 StartInt_1) (str.to_int Start_2)))
   (StartInt_3 Int (1 0 (str.len Start_3)))
   (StartInt_2 Int (1 (str.indexof Start_1 Start_5 StartInt_4)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_1 StartBool) (str.< Start_6 Start_5) (str.prefixof Start_7 Start_7) (str.suffixof Start_5 Start_1) (str.contains Start_6 Start_5) (= Start_2 Start) (= StartInt_3 StartInt_4)))
   (StartInt_5 Int (0 (str.to_int Start_8)))
   (Start_6 String ("a" (str.++ Start_1 Start_6) (str.from_int StartInt)))
   (Start_8 String ("b" (str.++ Start_6 Start_3) (str.substr Start_3 StartInt StartInt) (str.replace Start_8 Start_6 Start_7)))
   (Start_3 String (x))))

(declare-var x String)
(declare-var y String)

(constraint (= (f x y) (str.replace (str.replace "0" y "") "" "a")))

(check-synth)
