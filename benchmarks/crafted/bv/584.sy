(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_4 Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start) (bvand Start Start_2) (bvor Start_1 Start_2) (bvadd Start Start_3) (bvudiv Start_1 Start) (bvurem Start_2 Start_1) (bvlshr Start Start_2)))
   (StartBool Bool (false true (bvult Start_12 Start_4)))
   (StartBool_4 Bool (true (not StartBool_4)))
   (Start_1 (_ BitVec 8) (y (bvor Start_15 Start_1) (bvadd Start_5 Start_7) (bvurem Start_13 Start_11) (bvlshr Start_9 Start_15) (ite StartBool_4 Start_9 Start_9)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvneg Start_14) (bvand Start_2 Start_11) (bvor Start_15 Start_9) (bvmul Start_3 Start_12) (bvurem Start_13 Start_13) (bvshl Start_5 Start_3) (bvlshr Start_5 Start_10)))
   (Start_15 (_ BitVec 8) (y x #b00000001 (bvnot Start_4) (bvneg Start_13) (bvudiv Start_5 Start_1) (ite StartBool Start_9 Start_7)))
   (Start_14 (_ BitVec 8) (#b00000001 x y #b10100101 (bvnot Start) (bvneg Start_6) (bvand Start_13 Start_15) (bvor Start Start_12) (bvadd Start_10 Start_1) (bvlshr Start_14 Start_13) (ite StartBool_3 Start_14 Start_11)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_1)))
   (Start_11 (_ BitVec 8) (#b10100101 #b00000000 x y (bvneg Start_1) (bvudiv Start_11 Start) (bvshl Start Start_3) (ite StartBool Start_7 Start_2)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvor Start_12 Start_10) (bvmul Start_4 Start_9) (bvudiv Start_6 Start_4) (bvshl Start_12 Start_6) (bvlshr Start_10 Start_7)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_2) (bvand Start Start_1) (bvadd Start_4 Start) (bvmul Start_1 Start_1) (bvurem Start_4 Start_5) (bvshl Start_6 Start_3) (ite StartBool_1 Start_7 Start_5)))
   (StartBool_3 Bool (true (bvult Start_9 Start_8)))
   (Start_7 (_ BitVec 8) (#b10100101 (bvand Start_7 Start_6) (bvor Start_6 Start_4) (bvadd Start_5 Start_3) (bvshl Start_5 Start_7) (bvlshr Start_4 Start_2) (ite StartBool Start_1 Start_8)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvneg Start_3) (bvand Start_7 Start) (bvadd Start_2 Start_5) (bvmul Start_3 Start) (bvurem Start Start_12) (bvshl Start_1 Start) (ite StartBool_2 Start_5 Start_1)))
   (Start_10 (_ BitVec 8) (y x (bvnot Start_4) (bvneg Start_9) (bvmul Start_9 Start_8) (bvlshr Start Start_6)))
   (Start_12 (_ BitVec 8) (y #b00000000 #b10100101 (bvnot Start_4) (bvneg Start_11) (bvor Start_4 Start_6) (bvadd Start_10 Start_11) (bvurem Start_13 Start_11) (bvshl Start Start_10) (bvlshr Start_8 Start_9)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_11) (bvand Start_11 Start) (bvadd Start_9 Start_8)))
   (Start_4 (_ BitVec 8) (y x #b10100101 #b00000000 #b00000001 (bvnot Start_11) (bvneg Start) (bvor Start_14 Start_1) (bvurem Start_2 Start) (bvlshr Start_9 Start_2)))
   (StartBool_1 Bool (true false (not StartBool_1)))
   (Start_8 (_ BitVec 8) (y (bvand Start_8 Start_8) (bvmul Start_7 Start_7) (bvurem Start Start) (bvshl Start_9 Start_7) (ite StartBool_2 Start_10 Start_1)))
   (Start_5 (_ BitVec 8) (x (bvor Start_11 Start_13) (bvudiv Start_10 Start_5) (bvshl Start_10 Start_9) (ite StartBool Start_5 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul #b10100101 (bvadd y y))))

(check-synth)
