(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_2 Bool) (Start_12 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_3 Bool) (Start_10 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_4 Bool) (Start_11 (_ BitVec 8)) (StartBool_5 Bool) (Start_1 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y #b00000001 #b10100101 x #b00000000 (bvnot Start) (bvand Start Start) (bvor Start Start_1) (bvmul Start_2 Start_3) (bvurem Start_4 Start_4) (bvlshr Start_3 Start_4)))
   (StartBool Bool (true false))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool_4) (bvult Start_7 Start_1)))
   (Start_12 (_ BitVec 8) (x (bvadd Start_3 Start_9) (bvmul Start_10 Start_8) (bvlshr Start_12 Start_1) (ite StartBool_2 Start Start_12)))
   (Start_2 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_5) (bvor Start Start_4) (bvadd Start Start_5) (bvmul Start_4 Start_5) (bvurem Start Start_1) (bvlshr Start_1 Start_4) (ite StartBool_1 Start_3 Start_1)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvor Start_2 Start_2) (bvadd Start Start_1) (bvurem Start_4 Start_2) (ite StartBool_1 Start_3 Start)))
   (StartBool_1 Bool (true (not StartBool) (and StartBool StartBool)))
   (StartBool_3 Bool (false true (and StartBool_4 StartBool_5)))
   (Start_10 (_ BitVec 8) (x (bvnot Start_5) (bvand Start_3 Start_10) (bvor Start_5 Start) (bvurem Start_3 Start_6) (bvshl Start_2 Start_12) (bvlshr Start_6 Start_7)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvneg Start_3) (bvand Start Start) (bvmul Start Start_4) (bvudiv Start_1 Start) (bvurem Start_1 Start_3) (bvshl Start_4 Start_2)))
   (Start_5 (_ BitVec 8) (y x #b10100101 #b00000000 #b00000001 (bvor Start_4 Start_2) (bvadd Start_5 Start_5) (bvudiv Start_6 Start) (bvshl Start_4 Start_2) (ite StartBool Start_6 Start_2)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_3) (bvand Start_6 Start_2) (bvor Start_2 Start_6) (bvurem Start_6 Start_4) (bvshl Start_6 Start_7) (bvlshr Start_6 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000000 y #b10100101 (bvand Start_1 Start_6) (bvudiv Start_4 Start) (bvshl Start_8 Start_3) (bvlshr Start_6 Start_5)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvnot Start_2) (bvand Start_3 Start) (bvor Start_7 Start_7) (bvadd Start_5 Start_3)))
   (Start_8 (_ BitVec 8) (x (bvnot Start_8) (bvneg Start) (bvand Start_7 Start_1) (bvor Start_2 Start_8) (bvadd Start Start) (bvurem Start_5 Start) (bvshl Start_9 Start_8)))
   (StartBool_6 Bool (true (or StartBool_2 StartBool_2) (bvult Start_6 Start_4)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool_5 StartBool_5) (bvult Start_12 Start_8)))
   (Start_11 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvneg Start_4) (bvand Start_6 Start_2) (bvor Start Start_6) (bvadd Start_10 Start_4) (bvurem Start_7 Start_5) (bvshl Start_5 Start) (bvlshr Start_3 Start_3)))
   (StartBool_5 Bool (false true (and StartBool_1 StartBool_6)))
   (Start_1 (_ BitVec 8) (y #b10100101 (bvnot Start_4) (bvand Start_4 Start_4) (bvadd Start_2 Start_8) (bvmul Start_8 Start_7) (bvurem Start_10 Start_11) (bvshl Start Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvand y #b10100101) x)))

(check-synth)
