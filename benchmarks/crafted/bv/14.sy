(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (StartBool_5 Bool) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (StartBool_4 Bool) (Start_2 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvnot Start) (bvudiv Start_1 Start) (bvurem Start_2 Start_2) (ite StartBool_1 Start Start)))
   (StartBool Bool (false (not StartBool_4) (and StartBool_4 StartBool_1) (or StartBool_1 StartBool_5)))
   (Start_1 (_ BitVec 8) (y #b10100101 (bvneg Start_2) (bvor Start_8 Start) (bvadd Start_3 Start_5) (bvmul Start_1 Start) (bvurem Start_13 Start_6) (bvshl Start_3 Start_3) (ite StartBool Start_9 Start_10)))
   (StartBool_5 Bool (true false (bvult Start_11 Start)))
   (Start_3 (_ BitVec 8) (#b00000001 y (bvnot Start_13) (bvor Start Start_14) (bvadd Start_14 Start_10) (bvmul Start_1 Start_13) (bvurem Start_14 Start_10) (ite StartBool_5 Start_12 Start_7)))
   (Start_4 (_ BitVec 8) (#b00000000 x y (bvneg Start_5) (bvand Start_12 Start_6) (bvudiv Start_2 Start_9) (ite StartBool_3 Start_6 Start_12)))
   (Start_14 (_ BitVec 8) (y #b00000001 #b10100101 (bvnot Start_1) (bvudiv Start_1 Start_2) (bvshl Start Start_5)))
   (StartBool_3 Bool (true (or StartBool_2 StartBool_4)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool StartBool) (bvult Start_1 Start)))
   (Start_8 (_ BitVec 8) (x (bvand Start_8 Start_1) (bvadd Start_4 Start_5) (bvmul Start_8 Start_3) (bvudiv Start_4 Start_4) (bvurem Start_8 Start_7) (bvshl Start_8 Start_1) (ite StartBool_2 Start_1 Start_9)))
   (StartBool_4 Bool (true (and StartBool_2 StartBool_4) (bvult Start_12 Start_5)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_3) (bvand Start_3 Start_2) (bvor Start_1 Start) (bvmul Start_2 Start_4) (bvudiv Start_1 Start_4) (bvshl Start Start_5) (bvlshr Start Start_2) (ite StartBool_2 Start Start_4)))
   (Start_6 (_ BitVec 8) (#b00000000 #b00000001 (bvand Start_1 Start_6) (bvor Start_6 Start_9) (bvadd Start_2 Start_12) (bvmul Start_2 Start) (bvudiv Start_2 Start) (bvurem Start_14 Start_7) (bvshl Start_3 Start_6) (ite StartBool_3 Start_11 Start)))
   (Start_7 (_ BitVec 8) (y #b10100101 (bvneg Start_8) (bvor Start_1 Start_6) (bvurem Start_8 Start_4) (bvlshr Start_7 Start) (ite StartBool_2 Start_5 Start_3)))
   (Start_9 (_ BitVec 8) (x (bvand Start_10 Start_10) (bvudiv Start_3 Start_6) (bvurem Start_4 Start_7) (bvshl Start_9 Start_10) (ite StartBool Start_1 Start_2)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 y #b00000001 x (bvnot Start_2) (bvneg Start_2) (bvand Start Start_3) (bvmul Start_1 Start_6) (bvudiv Start_4 Start_7) (bvurem Start Start) (bvshl Start_3 Start_7)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_4) (bvand Start_8 Start_4) (bvor Start_11 Start_3) (bvmul Start_3 Start_2) (ite StartBool_1 Start_4 Start_11)))
   (StartBool_2 Bool (true false (not StartBool_2) (bvult Start Start_3)))
   (Start_11 (_ BitVec 8) (x y #b10100101 #b00000000 #b00000001 (bvnot Start_4) (bvneg Start_2) (bvand Start_6 Start_1) (bvadd Start_8 Start_4) (bvudiv Start_2 Start_12) (bvshl Start Start_4) (bvlshr Start Start_4)))
   (Start_12 (_ BitVec 8) (#b10100101 y #b00000000 #b00000001 x (bvneg Start_6) (bvadd Start_6 Start_7) (bvmul Start_9 Start_1) (bvshl Start_6 Start_2) (bvlshr Start_12 Start_13) (ite StartBool_2 Start_4 Start_2)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_9) (bvor Start_8 Start_11) (bvadd Start_13 Start_7) (bvudiv Start_12 Start_1) (bvurem Start_1 Start_3) (bvshl Start_9 Start_1) (bvlshr Start_11 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul y y)))

(check-synth)
