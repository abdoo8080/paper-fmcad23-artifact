(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_2 (_ BitVec 8)) (StartBool_5 Bool) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (Start_11 (_ BitVec 8)) (StartBool_4 Bool) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_5 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b10100101 (bvand Start_1 Start) (bvor Start_1 Start) (bvmul Start_2 Start_1) (bvudiv Start_2 Start_1) (bvurem Start_3 Start_1) (bvshl Start_1 Start) (ite StartBool Start Start_1)))
   (StartBool Bool (true (not StartBool_4) (or StartBool StartBool_5)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvor Start_4 Start_7) (bvmul Start_1 Start) (ite StartBool_1 Start Start_8)))
   (StartBool_5 Bool (true false (not StartBool_3)))
   (Start_1 (_ BitVec 8) (#b00000000 y #b10100101 x #b00000001 (bvnot Start_4) (bvneg Start_5) (bvmul Start_12 Start_4) (bvudiv Start_2 Start_12) (bvurem Start Start_3) (bvshl Start_4 Start) (ite StartBool Start_7 Start_2)))
   (StartBool_3 Bool (true (and StartBool_1 StartBool_1) (or StartBool StartBool_3) (bvult Start_2 Start_6)))
   (Start_11 (_ BitVec 8) (#b10100101 #b00000001 x (bvudiv Start_6 Start_3) (bvshl Start_8 Start_7) (bvlshr Start_1 Start_1) (ite StartBool_2 Start_9 Start_12)))
   (StartBool_4 Bool (false true (not StartBool) (and StartBool StartBool) (bvult Start_3 Start_13)))
   (Start_3 (_ BitVec 8) (#b00000000 #b00000001 (bvneg Start_1) (bvor Start_2 Start_3) (bvadd Start_2 Start_3) (bvmul Start_3 Start_2) (bvudiv Start_2 Start_4) (ite StartBool_1 Start_2 Start_1)))
   (Start_7 (_ BitVec 8) (y (bvnot Start_3) (bvand Start_6 Start_5) (bvudiv Start_8 Start_3) (bvurem Start_4 Start_1)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start_11) (bvor Start_7 Start_9) (bvudiv Start_8 Start_2) (bvurem Start_11 Start_1) (bvlshr Start_11 Start_5) (ite StartBool Start Start_13)))
   (Start_9 (_ BitVec 8) (y (bvnot Start_5) (bvand Start_7 Start_4) (bvadd Start_7 Start_2) (bvmul Start_1 Start_6) (bvudiv Start_8 Start_10) (bvshl Start_7 Start_2)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvneg Start_3) (bvand Start_1 Start_1) (bvadd Start_7 Start_4) (bvmul Start_1 Start_7) (bvudiv Start_7 Start_2) (bvurem Start Start_6) (bvshl Start Start_7) (bvlshr Start_5 Start_1)))
   (Start_8 (_ BitVec 8) (x (bvand Start_3 Start_8) (bvmul Start_9 Start_5) (bvurem Start_4 Start_4) (bvshl Start_8 Start) (bvlshr Start Start_5) (ite StartBool_1 Start_4 Start_1)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvnot Start_11) (bvneg Start_7) (bvor Start_1 Start_3) (bvurem Start_8 Start_9)))
   (Start_12 (_ BitVec 8) (#b00000000 #b00000001 (bvor Start_8 Start_12) (bvadd Start_8 Start_1)))
   (Start_4 (_ BitVec 8) (#b10100101 y (bvand Start_1 Start_3) (bvadd Start_2 Start_1) (bvmul Start_5 Start_2) (bvlshr Start_5 Start_6)))
   (StartBool_2 Bool (true (not StartBool) (and StartBool_1 StartBool)))
   (StartBool_1 Bool (false (not StartBool_1) (or StartBool_1 StartBool)))
   (Start_5 (_ BitVec 8) (#b00000000 (bvnot Start_10) (bvand Start_12 Start) (bvadd Start_4 Start) (ite StartBool_3 Start_8 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem y (bvadd #b00000001 #b10100101))))

(check-synth)
