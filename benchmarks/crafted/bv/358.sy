(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_2 Bool) (StartBool_3 Bool) (StartBool_1 Bool) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvneg Start) (bvurem Start Start) (bvshl Start Start) (bvlshr Start_1 Start_1)))
   (StartBool Bool (true (and StartBool_1 StartBool_1) (or StartBool_3 StartBool_1)))
   (StartBool_2 Bool (false true (not StartBool_3)))
   (StartBool_3 Bool (true (bvult Start_3 Start_4)))
   (StartBool_1 Bool (false true (or StartBool_1 StartBool_2)))
   (Start_3 (_ BitVec 8) (#b00000000 #b10100101 x #b00000001 (bvnot Start_1) (bvor Start_2 Start) (bvadd Start Start_1) (bvshl Start_3 Start_2) (ite StartBool_1 Start_2 Start_2)))
   (Start_2 (_ BitVec 8) (#b00000001 #b10100101 x #b00000000 (bvnot Start_2) (bvneg Start_2) (bvadd Start Start_2) (bvmul Start_1 Start_1) (bvudiv Start Start_3) (bvshl Start_3 Start_2) (bvlshr Start_1 Start_1)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvand Start_1 Start_1) (bvudiv Start Start) (bvurem Start_1 Start_2)))
   (Start_5 (_ BitVec 8) (y #b00000001 (bvnot Start_4) (bvneg Start_3) (bvmul Start_4 Start_4) (bvudiv Start Start_1) (bvurem Start_1 Start_5) (bvshl Start_4 Start_2)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start) (bvand Start_1 Start_3) (bvadd Start_2 Start_3) (bvudiv Start Start_3) (bvurem Start_1 Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvudiv (bvneg y) y) (bvand (bvand x #b10100101) (bvudiv y x)))))

(check-synth)
