(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (StartBool_9 Bool) (StartBool_8 Bool) (StartBool_6 Bool) (Start_14 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_7 Bool) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_4 Bool) (Start_13 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (Start_10 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 #b00000000 (bvadd Start Start_1) (bvmul Start_1 Start) (bvudiv Start_2 Start_3) (bvshl Start Start_2)))
   (StartBool Bool (false true (not StartBool_2) (and StartBool_1 StartBool_3) (or StartBool_1 StartBool_4)))
   (StartBool_5 Bool (true))
   (StartBool_9 Bool (true (not StartBool_6)))
   (StartBool_8 Bool (false (and StartBool StartBool_3) (or StartBool_9 StartBool_3) (bvult Start_4 Start_13)))
   (StartBool_6 Bool (false true (not StartBool_7) (and StartBool StartBool_4) (bvult Start_11 Start_13)))
   (Start_14 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 x y (bvnot Start_13) (bvand Start_2 Start_11) (bvor Start Start_2)))
   (StartBool_2 Bool (true (or StartBool_2 StartBool_1)))
   (StartBool_7 Bool (false (not StartBool_8) (or StartBool_6 StartBool_6) (bvult Start_7 Start_3)))
   (Start_1 (_ BitVec 8) (#b10100101 y (bvand Start_4 Start_4) (bvadd Start_11 Start_9) (bvmul Start_7 Start_9) (bvudiv Start_11 Start_3) (bvurem Start_13 Start_5) (bvlshr Start_5 Start_13) (ite StartBool_2 Start_2 Start_13)))
   (StartBool_3 Bool (true (not StartBool_5) (and StartBool StartBool_6)))
   (Start_3 (_ BitVec 8) (x y #b10100101 (bvnot Start_1) (bvneg Start_4) (bvadd Start_4 Start_5) (bvmul Start_4 Start_6) (bvudiv Start_4 Start_7) (bvlshr Start_3 Start_2)))
   (Start_4 (_ BitVec 8) (y #b10100101 #b00000001 (bvnot Start_10) (bvneg Start_10) (bvand Start_4 Start_10) (bvadd Start_6 Start_6) (bvmul Start_4 Start_11) (bvshl Start_4 Start_5) (bvlshr Start Start) (ite StartBool_1 Start_5 Start_12)))
   (Start_7 (_ BitVec 8) (#b00000000 x (bvor Start_4 Start_3) (bvadd Start_5 Start_8) (bvmul Start_3 Start_2) (bvurem Start Start_1) (bvshl Start_5 Start_6) (bvlshr Start_1 Start_9)))
   (Start_8 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 (bvnot Start_3) (bvand Start_2 Start_8) (bvadd Start Start_9) (bvmul Start_6 Start_5) (bvudiv Start_1 Start_9) (bvurem Start_2 Start_4) (bvlshr Start_3 Start_8)))
   (Start_9 (_ BitVec 8) (y (bvadd Start Start_5) (bvudiv Start_5 Start_3) (bvlshr Start_9 Start_4) (ite StartBool_1 Start_8 Start_9)))
   (Start_5 (_ BitVec 8) (#b10100101 x #b00000000 (bvnot Start_9) (bvadd Start_8 Start_5) (bvmul Start_10 Start) (bvudiv Start_7 Start_8) (bvurem Start_7 Start_8) (bvshl Start_11 Start_6) (bvlshr Start_4 Start_3) (ite StartBool Start_3 Start_10)))
   (Start_12 (_ BitVec 8) (x (bvmul Start_5 Start_9) (bvshl Start_11 Start_1) (bvlshr Start_9 Start_3)))
   (StartBool_4 Bool (false (bvult Start_9 Start_14)))
   (Start_13 (_ BitVec 8) (x #b10100101 (bvor Start Start_13) (bvshl Start_7 Start_2) (bvlshr Start Start_1)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_9) (bvand Start Start_1) (bvadd Start Start_11) (bvurem Start_7 Start_6)))
   (StartBool_1 Bool (false true (and StartBool StartBool) (or StartBool StartBool)))
   (Start_10 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 (bvneg Start_10) (bvadd Start_1 Start_2) (bvmul Start_4 Start_7)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvneg Start_8) (bvand Start_6 Start_3) (bvadd Start_6 Start_4) (bvshl Start_3 Start_5)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_7) (bvneg Start_5) (bvor Start_6 Start_1) (bvadd Start_12 Start_3) (bvurem Start_9 Start_1) (bvlshr Start_11 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul (bvnot #b00000001) #b10100101)))

(check-synth)
