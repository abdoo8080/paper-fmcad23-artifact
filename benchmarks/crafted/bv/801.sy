(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (StartBool_1 Bool) (Start_13 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_4 Bool) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_3 Bool) (Start_8 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x y #b00000000 #b00000001 #b10100101 (bvand Start_1 Start_1) (bvor Start Start) (bvurem Start_1 Start_1) (bvlshr Start Start_1) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (false true (not StartBool_4) (and StartBool_4 StartBool_2)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvneg Start_8) (bvmul Start_13 Start_6) (bvudiv Start_6 Start_3) (bvurem Start_6 Start_10)))
   (StartBool_1 Bool (true false (or StartBool StartBool_2)))
   (Start_13 (_ BitVec 8) (#b00000001 y #b00000000 (bvnot Start_13) (bvand Start_11 Start_12) (bvor Start Start_5) (bvurem Start_6 Start_6) (bvlshr Start_5 Start_2) (ite StartBool_4 Start_5 Start_3)))
   (Start_2 (_ BitVec 8) (y (bvneg Start_1) (bvand Start Start) (bvadd Start_3 Start) (bvmul Start_2 Start_1) (bvudiv Start_1 Start_2) (bvshl Start_2 Start) (bvlshr Start_1 Start_1) (ite StartBool_1 Start_4 Start_2)))
   (Start_4 (_ BitVec 8) (y (bvand Start Start_2) (bvor Start_1 Start_5) (bvmul Start_5 Start_3) (bvudiv Start_5 Start_1) (bvurem Start_5 Start_4) (bvshl Start_2 Start_4)))
   (StartBool_4 Bool (false true (not StartBool_1) (bvult Start_1 Start_13)))
   (Start_9 (_ BitVec 8) (x y #b10100101 #b00000001 #b00000000 (bvand Start_9 Start_9) (bvshl Start Start_12) (bvlshr Start_5 Start_2) (ite StartBool_1 Start_11 Start)))
   (Start_5 (_ BitVec 8) (y #b00000001 #b10100101 (bvnot Start) (bvneg Start_5) (bvor Start Start_6) (bvadd Start_6 Start_3) (bvmul Start Start_3) (bvlshr Start_3 Start_6) (ite StartBool_1 Start_2 Start)))
   (Start_12 (_ BitVec 8) (x #b10100101 #b00000001 (bvnot Start_1) (bvand Start_5 Start_1) (ite StartBool_3 Start_4 Start)))
   (Start_6 (_ BitVec 8) (y (bvand Start_7 Start_8) (bvadd Start_7 Start_9) (bvudiv Start_4 Start_10) (bvlshr Start_10 Start_9) (ite StartBool_2 Start_11 Start_3)))
   (Start_11 (_ BitVec 8) (y #b00000000 (bvnot Start_10) (bvand Start_1 Start_8) (bvadd Start_2 Start_1) (bvmul Start_3 Start) (bvudiv Start_5 Start_5) (bvurem Start Start_11) (ite StartBool_1 Start_12 Start_9)))
   (StartBool_3 Bool (false true (not StartBool_3) (bvult Start_5 Start)))
   (Start_8 (_ BitVec 8) (x (bvnot Start_5) (bvand Start_3 Start_8) (bvor Start_3 Start_7) (bvmul Start Start) (bvudiv Start_3 Start_12) (bvurem Start_1 Start) (bvlshr Start_3 Start_10) (ite StartBool_3 Start_5 Start_4)))
   (StartBool_2 Bool (true false))
   (Start_10 (_ BitVec 8) (x (bvnot Start_5) (bvneg Start) (bvand Start_10 Start_12) (bvor Start_1 Start_1) (bvmul Start_12 Start_11) (bvudiv Start_9 Start_6) (bvlshr Start_8 Start_6)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvand Start_7 Start_2) (bvor Start_8 Start_9) (bvmul Start_2 Start_7) (bvudiv Start_7 Start_3) (bvurem Start_2 Start_2) (bvlshr Start_6 Start_13)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_12) (bvudiv Start_5 Start_7) (bvshl Start_5 Start_4) (bvlshr Start_6 Start_5) (ite StartBool_4 Start_1 Start_13)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (ite (bvult #b00000001 x) #b10100101 y)))

(check-synth)
