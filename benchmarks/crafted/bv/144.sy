(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (StartBool_7 Bool) (Start_5 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_3 Bool) (StartBool_1 Bool) (StartBool_5 Bool) (Start_7 (_ BitVec 8)) (StartBool_6 Bool) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 #b10100101 (bvnot Start) (bvneg Start_1) (bvand Start Start_1) (bvadd Start_1 Start) (bvurem Start_2 Start_3) (bvlshr Start_1 Start_4) (ite StartBool_1 Start_5 Start_3)))
   (StartBool Bool (false true (not StartBool_4)))
   (Start_12 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 x (bvneg Start_12) (bvand Start_3 Start_1) (bvor Start_6 Start_5) (bvudiv Start_5 Start_4) (bvurem Start_5 Start) (bvlshr Start_4 Start_9)))
   (Start_11 (_ BitVec 8) (#b00000001 x #b10100101 (bvnot Start) (bvneg Start_6) (bvand Start_8 Start_6) (bvor Start_6 Start_1) (bvadd Start Start) (bvmul Start_8 Start_11) (bvudiv Start_11 Start_8) (bvshl Start_6 Start_3) (ite StartBool Start_10 Start_12)))
   (Start_1 (_ BitVec 8) (x (bvneg Start_7) (bvand Start_7 Start_10) (bvadd Start_11 Start_2) (bvudiv Start_9 Start_8) (bvurem Start_11 Start_2)))
   (Start_2 (_ BitVec 8) (x #b00000001 #b10100101 (bvnot Start_7) (bvadd Start_2 Start_7)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_10) (bvadd Start_3 Start_5) (bvshl Start_1 Start) (ite StartBool Start Start_2)))
   (Start_8 (_ BitVec 8) (#b00000001 y #b00000000 #b10100101 x (bvurem Start_6 Start) (bvlshr Start_4 Start_9)))
   (Start_10 (_ BitVec 8) (#b10100101 y (bvnot Start_1) (bvor Start_2 Start_5) (bvadd Start_7 Start_10) (bvmul Start_5 Start_3) (bvshl Start_9 Start_6)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool_1 StartBool_5) (or StartBool_1 StartBool_4)))
   (Start_6 (_ BitVec 8) (y (bvneg Start) (bvudiv Start_1 Start_5) (bvshl Start_6 Start_1) (bvlshr Start Start_4) (ite StartBool_1 Start_5 Start_6)))
   (StartBool_7 Bool (true false (not StartBool_3) (bvult Start Start_7)))
   (Start_5 (_ BitVec 8) (y (bvand Start_2 Start) (bvudiv Start_6 Start) (bvlshr Start_2 Start_2)))
   (StartBool_2 Bool (true (or StartBool_3 StartBool_2)))
   (StartBool_3 Bool (false true (not StartBool_1) (and StartBool_1 StartBool) (or StartBool StartBool_4)))
   (StartBool_1 Bool (true false (not StartBool) (and StartBool_1 StartBool_2)))
   (StartBool_5 Bool (false true (and StartBool_2 StartBool_4) (bvult Start_7 Start)))
   (Start_7 (_ BitVec 8) (y (bvand Start_6 Start_5) (bvudiv Start_2 Start_6) (bvlshr Start_4 Start_5) (ite StartBool_3 Start_2 Start_6)))
   (StartBool_6 Bool (false (and StartBool_3 StartBool_7) (bvult Start_1 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000001 y (bvneg Start_1) (bvand Start Start_8) (bvmul Start_5 Start_2) (bvudiv Start_8 Start_4) (bvurem Start_9 Start_8) (ite StartBool_6 Start_8 Start_9)))
   (Start_9 (_ BitVec 8) (y #b00000000 (bvand Start_7 Start_9) (bvor Start_5 Start_1) (bvadd Start_4 Start_5) (bvlshr Start_10 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvadd x #b00000001) (bvudiv (bvneg y) x))))

(check-synth)
