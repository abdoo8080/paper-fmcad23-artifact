(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_16 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_2 Bool) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvneg Start) (bvor Start_1 Start) (bvadd Start_1 Start) (bvudiv Start Start_2) (ite StartBool Start Start)))
   (StartBool Bool (false true))
   (Start_16 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start_15) (bvand Start_12 Start_12) (bvmul Start_3 Start_5) (bvudiv Start_16 Start_6) (bvurem Start_4 Start_6) (bvshl Start_8 Start_13) (bvlshr Start_5 Start_9)))
   (Start_1 (_ BitVec 8) (#b00000001 x (bvnot Start_2) (bvadd Start_3 Start_9) (bvmul Start_9 Start) (bvurem Start_16 Start_15)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool_1) (or StartBool_1 StartBool_1)))
   (Start_15 (_ BitVec 8) (#b00000001 y (bvneg Start_1) (bvadd Start_10 Start_4) (bvmul Start_10 Start_12) (bvudiv Start_12 Start_14) (bvurem Start_1 Start_1) (ite StartBool_1 Start_5 Start_6)))
   (Start_14 (_ BitVec 8) (x (bvnot Start_12) (bvmul Start Start_10) (bvudiv Start_5 Start_9) (bvurem Start_5 Start_2) (bvlshr Start_15 Start_7) (ite StartBool_2 Start_8 Start_6)))
   (Start_13 (_ BitVec 8) (y x (bvneg Start_1) (bvand Start_14 Start_4) (bvor Start_10 Start_12) (bvmul Start_7 Start_11) (bvudiv Start_3 Start_13)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvneg Start) (bvand Start_1 Start_4) (bvor Start_5 Start_3) (bvshl Start_5 Start_2) (bvlshr Start Start_3) (ite StartBool Start_1 Start_3)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_2) (bvand Start Start_6) (bvor Start_1 Start_2) (bvmul Start_3 Start_8) (bvlshr Start_2 Start_9)))
   (Start_2 (_ BitVec 8) (y (bvudiv Start_2 Start_1) (ite StartBool Start_1 Start_3)))
   (Start_5 (_ BitVec 8) (y #b00000000 x (bvnot Start_5) (bvmul Start_2 Start) (bvudiv Start_4 Start_1) (bvurem Start_1 Start_5) (bvlshr Start_5 Start_4)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvand Start_8 Start_8) (bvadd Start_9 Start_3) (bvudiv Start_9 Start_4) (bvshl Start_8 Start) (bvlshr Start_2 Start_9)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvneg Start_6) (bvand Start_5 Start_4) (bvor Start_1 Start_6) (bvadd Start_10 Start_7) (bvmul Start_9 Start_1) (bvlshr Start Start_10) (ite StartBool_1 Start_10 Start_10)))
   (StartBool_1 Bool (false (bvult Start_3 Start_6)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvneg Start_3) (bvand Start_9 Start_7) (bvmul Start_1 Start_3) (bvudiv Start_10 Start_6) (bvurem Start_4 Start_5) (bvshl Start_4 Start_5) (bvlshr Start_11 Start_11)))
   (Start_4 (_ BitVec 8) (y #b10100101 x (bvneg Start_3) (bvand Start_4 Start_4) (bvmul Start Start) (bvurem Start_3 Start_6) (bvshl Start_5 Start_7) (ite StartBool Start_2 Start_4)))
   (Start_8 (_ BitVec 8) (x (bvadd Start_1 Start_7) (bvlshr Start_10 Start) (ite StartBool Start_4 Start_5)))
   (Start_11 (_ BitVec 8) (x #b00000000 #b00000001 y #b10100101 (bvand Start_3 Start_9) (bvurem Start_12 Start_10) (bvlshr Start_10 Start_11)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvmul Start_5 Start) (bvlshr Start_5 Start_3) (ite StartBool_2 Start_10 Start_13)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl #b00000001 (bvurem x #b00000000))))

(check-synth)
