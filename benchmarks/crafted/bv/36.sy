(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_3 Bool) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_2 Bool) (Start_12 (_ BitVec 8)) (StartBool_1 Bool) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 y #b00000000 (bvnot Start) (bvneg Start) (bvand Start_1 Start_2) (bvor Start_3 Start_4) (bvadd Start_4 Start_2) (bvlshr Start_4 Start_4)))
   (StartBool Bool (false true (not StartBool_2)))
   (StartBool_3 Bool (true false (not StartBool_3) (bvult Start_12 Start_6)))
   (Start_3 (_ BitVec 8) (#b10100101 x #b00000000 (bvnot Start_11) (bvneg Start_7) (bvand Start_14 Start_12) (bvor Start_15 Start_7) (bvmul Start_9 Start) (bvshl Start_6 Start_6) (ite StartBool_3 Start_15 Start_15)))
   (Start_5 (_ BitVec 8) (y (bvand Start_12 Start_7) (bvor Start Start_2) (bvudiv Start_2 Start_12) (bvurem Start_2 Start_11) (ite StartBool Start_8 Start_2)))
   (Start_6 (_ BitVec 8) (#b00000000 x #b00000001 #b10100101 y (bvnot Start_7) (bvneg Start_11) (bvor Start_5 Start_6) (bvadd Start Start_7) (bvlshr Start_2 Start_14)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvneg Start_10) (bvand Start_7 Start_4) (bvor Start_11 Start_4) (bvadd Start_4 Start_10) (bvshl Start_13 Start_3) (bvlshr Start_1 Start_14)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvneg Start_5) (bvor Start_6 Start_1) (bvadd Start_1 Start_4) (bvurem Start_3 Start_7) (bvshl Start_1 Start_8) (ite StartBool Start_1 Start_6)))
   (Start_8 (_ BitVec 8) (y (bvneg Start) (bvand Start Start_4) (bvadd Start_1 Start_1) (bvmul Start_2 Start) (bvshl Start_1 Start_9) (bvlshr Start_2 Start_2) (ite StartBool Start_10 Start_6)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_6) (bvneg Start_2) (bvshl Start_5 Start_12) (bvlshr Start_15 Start_2) (ite StartBool_1 Start_8 Start_3)))
   (StartBool_2 Bool (false (and StartBool StartBool_2) (or StartBool_1 StartBool_2)))
   (Start_12 (_ BitVec 8) (#b00000001 (bvnot Start_4) (bvneg Start_9) (bvand Start Start_3) (bvor Start_5 Start_6) (bvmul Start_13 Start) (bvudiv Start_14 Start_12) (bvurem Start_2 Start_15) (ite StartBool_1 Start_15 Start)))
   (StartBool_1 Bool (true (not StartBool_2)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_8) (bvand Start_6 Start_3) (bvor Start_7 Start_5) (bvmul Start_3 Start_9) (bvurem Start_10 Start_9) (bvshl Start_11 Start_1) (bvlshr Start_2 Start_10) (ite StartBool Start_2 Start_3)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvnot Start_12) (bvand Start_3 Start_10) (bvadd Start_14 Start_15) (bvudiv Start_4 Start_13) (ite StartBool_1 Start_11 Start_13)))
   (Start_15 (_ BitVec 8) (x #b00000000 (bvadd Start_5 Start_2) (bvmul Start_12 Start_4) (bvlshr Start_11 Start_15) (ite StartBool_2 Start_5 Start_2)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_12) (bvneg Start_3) (bvadd Start_9 Start_1) (bvmul Start_7 Start_6) (bvurem Start_1 Start_1) (bvshl Start_9 Start_9) (ite StartBool Start_6 Start_5)))
   (Start_14 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvnot Start_1) (bvor Start_7 Start_1) (bvadd Start_8 Start_1) (bvudiv Start_3 Start_8) (bvurem Start_10 Start_14) (ite StartBool Start_12 Start_12)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000001 y x (bvnot Start_10) (bvand Start_3 Start_9) (bvor Start_9 Start) (bvadd Start_14 Start_6) (bvmul Start_10 Start_2) (bvudiv Start_7 Start_10) (bvurem Start_2 Start_4) (bvshl Start_2 Start_6)))
   (Start_9 (_ BitVec 8) (#b00000000 #b00000001 (bvneg Start_7) (bvor Start_14 Start) (bvadd Start_8 Start_9) (bvmul Start_8 Start_14) (bvudiv Start_4 Start_11) (bvshl Start_14 Start_9) (ite StartBool_1 Start Start_12)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv y #b10100101)))

(check-synth)
