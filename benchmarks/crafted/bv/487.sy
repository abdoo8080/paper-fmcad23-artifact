(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_8 Bool) (Start_16 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_4 Bool) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_7 Bool) (Start_2 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_3 Bool) (Start_6 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvnot Start_1) (bvneg Start) (bvand Start Start) (bvor Start_2 Start_2) (bvadd Start_2 Start_3) (bvudiv Start Start_1) (bvshl Start_2 Start_2) (bvlshr Start_4 Start_5) (ite StartBool_1 Start Start_3)))
   (StartBool Bool (true (and StartBool_5 StartBool_5) (or StartBool_6 StartBool_8)))
   (StartBool_8 Bool (true (and StartBool_3 StartBool_1)))
   (Start_16 (_ BitVec 8) (#b00000001 y (bvnot Start_9) (bvadd Start_7 Start_7) (bvurem Start Start_2)))
   (StartBool_6 Bool (true false))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool_6 StartBool_6) (or StartBool_1 StartBool_2)))
   (Start_12 (_ BitVec 8) (#b00000001 y #b00000000 #b10100101 x (bvneg Start_13) (ite StartBool_4 Start Start_14)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_6) (bvudiv Start_1 Start_13)))
   (StartBool_7 Bool (true (not StartBool_3) (and StartBool StartBool_7)))
   (Start_2 (_ BitVec 8) (#b00000001 #b10100101 x (bvor Start_14 Start_13) (bvmul Start_14 Start_13) (bvudiv Start_4 Start_9) (bvurem Start_2 Start_6) (ite StartBool_1 Start Start_15)))
   (Start_14 (_ BitVec 8) (y (bvnot Start_5) (bvand Start_2 Start_2) (bvadd Start_1 Start_10) (bvmul Start_5 Start_14) (bvlshr Start_12 Start_6)))
   (Start_15 (_ BitVec 8) (#b10100101 x (bvnot Start_13) (bvneg Start_1) (bvand Start_8 Start_1) (bvadd Start_15 Start_5) (bvudiv Start_10 Start_15) (bvurem Start_12 Start_16) (bvshl Start_7 Start_5) (ite StartBool_7 Start_14 Start_5)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool_2 StartBool_1) (or StartBool_1 StartBool_1)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_1 StartBool_1) (or StartBool_2 StartBool)))
   (Start_4 (_ BitVec 8) (x y #b10100101 (bvneg Start_6) (bvand Start_6 Start_2) (bvor Start_7 Start_2) (bvadd Start_4 Start_7) (bvmul Start_5 Start_5) (bvurem Start Start_2)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000000 (bvneg Start_8) (bvand Start_4 Start_8) (bvor Start_1 Start_3) (bvadd Start_4 Start_8) (bvmul Start_7 Start_9) (bvshl Start_6 Start_6)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvor Start_12 Start_13) (bvudiv Start_2 Start_9) (bvshl Start_2 Start_11) (bvlshr Start_14 Start_13)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvneg Start_3) (bvor Start_8 Start_10) (bvadd Start_1 Start_2) (bvurem Start_5 Start_11)))
   (Start_11 (_ BitVec 8) (x y (bvnot Start_10) (bvor Start_8 Start) (bvurem Start_7 Start_9) (bvlshr Start_8 Start_3) (ite StartBool_2 Start_6 Start_3)))
   (Start_5 (_ BitVec 8) (#b00000001 #b10100101 y (bvnot Start_3) (bvor Start_3 Start_3) (bvadd Start_1 Start) (bvmul Start_3 Start_3) (bvudiv Start Start_4) (bvurem Start_5 Start_3) (bvshl Start_1 Start) (bvlshr Start_1 Start_3) (ite StartBool_2 Start_3 Start_5)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvor Start_4 Start) (bvadd Start_9 Start_11) (bvurem Start_3 Start_10) (bvshl Start_10 Start_3) (bvlshr Start Start_6)))
   (Start_1 (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_12) (bvand Start_12 Start_12) (bvor Start_4 Start_8) (bvadd Start Start_15) (bvmul Start_4 Start_3)))
   (Start_8 (_ BitVec 8) (y (bvneg Start_10) (bvand Start_3 Start_1) (bvmul Start_2 Start_9) (bvudiv Start_11 Start_3) (bvurem Start_1 Start_6) (bvshl Start_3 Start_1)))
   (StartBool_5 Bool (false true))
   (StartBool_3 Bool (false (not StartBool_3)))
   (Start_6 (_ BitVec 8) (x (bvnot Start_11) (bvand Start_7 Start_6) (bvudiv Start_2 Start_6) (bvshl Start_4 Start_2) (bvlshr Start_4 Start_1) (ite StartBool_3 Start_2 Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul x (bvor y x))))

(check-synth)
