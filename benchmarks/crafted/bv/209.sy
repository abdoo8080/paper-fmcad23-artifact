(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_13 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_3 Bool) (Start_3 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvand Start_2 Start_1) (bvmul Start_1 Start) (bvurem Start_1 Start_2) (bvlshr Start_3 Start)))
   (StartBool Bool (false (not StartBool_1) (and StartBool_4 StartBool_2) (bvult Start_11 Start_9)))
   (Start_13 (_ BitVec 8) (#b00000000 (bvadd Start_6 Start_11) (bvlshr Start_3 Start_6)))
   (StartBool_4 Bool (true (not StartBool)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool_4)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvand Start Start) (bvor Start_3 Start) (bvmul Start_3 Start_2) (bvudiv Start Start_2) (bvurem Start_2 Start_4)))
   (Start_9 (_ BitVec 8) (y (bvneg Start_5) (bvand Start_6 Start_9) (bvadd Start Start_2) (bvudiv Start_7 Start_3)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvand Start_8 Start_9) (bvudiv Start_5 Start_11) (bvlshr Start_4 Start_14)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvneg Start_5) (bvmul Start_4 Start_6) (bvudiv Start_3 Start_1) (bvshl Start_2 Start_4) (bvlshr Start Start_7) (ite StartBool Start Start_1)))
   (Start_14 (_ BitVec 8) (#b10100101 y #b00000000 #b00000001 (bvneg Start_8) (bvand Start_6 Start_6) (bvshl Start_9 Start_6) (bvlshr Start_6 Start_5) (ite StartBool_4 Start_2 Start_8)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvor Start_11 Start_5) (bvmul Start_2 Start_1) (bvurem Start_1 Start) (bvshl Start_4 Start_5) (ite StartBool_2 Start_12 Start_12)))
   (Start_5 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_4) (bvadd Start_8 Start_3) (bvmul Start_9 Start_6) (bvudiv Start_7 Start_3) (bvshl Start_9 Start_3) (ite StartBool_1 Start_9 Start_8)))
   (StartBool_1 Bool (true (or StartBool_1 StartBool) (bvult Start_3 Start_10)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvneg Start_8) (bvmul Start_5 Start_5) (bvshl Start_7 Start_8) (ite StartBool Start_6 Start_6)))
   (Start_6 (_ BitVec 8) (x y #b10100101 (bvor Start_4 Start_9) (bvadd Start_2 Start) (bvudiv Start_4 Start_3) (bvlshr Start_9 Start_8) (ite StartBool Start_9 Start_6)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000000 (bvneg Start_2) (bvand Start_3 Start) (bvor Start_9 Start_6) (bvmul Start_1 Start_2) (bvurem Start_3 Start_7) (bvlshr Start_1 Start_4)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_6) (bvand Start_4 Start_6) (bvor Start_8 Start_2) (bvadd Start_6 Start_13) (bvmul Start_13 Start_4) (bvurem Start_9 Start_4) (bvshl Start_12 Start_7) (bvlshr Start_11 Start_10) (ite StartBool_4 Start_4 Start_4)))
   (Start_7 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 y (bvor Start_7 Start_6) (bvudiv Start_6 Start_3) (bvshl Start_4 Start_1) (bvlshr Start_8 Start_8)))
   (Start_12 (_ BitVec 8) (y (bvneg Start_3) (bvand Start_1 Start_9) (bvurem Start_7 Start_1) (bvlshr Start_9 Start_10) (ite StartBool_1 Start_3 Start_5)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_1) (or StartBool_3 StartBool_3) (bvult Start_11 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvudiv #b00000000 (bvadd #b00000001 (bvurem x (bvudiv #b00000001 x)))))))

(check-synth)
