(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_4 Bool) (Start_12 (_ BitVec 8)) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 x #b00000000 y #b10100101 (bvneg Start_1) (bvor Start_1 Start) (bvurem Start_1 Start_1) (bvlshr Start_1 Start_2) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (true false (or StartBool_2 StartBool_4) (bvult Start_11 Start_12)))
   (Start_1 (_ BitVec 8) (x #b00000001 (bvand Start_4 Start_12) (bvor Start_7 Start_6) (bvadd Start_7 Start_12) (bvmul Start_1 Start_5) (bvudiv Start_8 Start_11) (bvshl Start_10 Start_12) (bvlshr Start_10 Start_3)))
   (Start_3 (_ BitVec 8) (x #b00000000 #b00000001 #b10100101 y (bvand Start_5 Start_4) (bvadd Start_7 Start_2) (bvshl Start_12 Start_13) (ite StartBool_2 Start_3 Start)))
   (Start_7 (_ BitVec 8) (#b10100101 y x (bvneg Start_4) (bvand Start_2 Start_1) (bvor Start_4 Start_1) (bvadd Start Start_2) (bvshl Start_7 Start_8)))
   (Start_13 (_ BitVec 8) (y #b00000001 (bvneg Start_1) (bvurem Start_1 Start_8) (bvshl Start_8 Start_3) (bvlshr Start_4 Start_8) (ite StartBool Start Start_4)))
   (StartBool_2 Bool (false true (or StartBool_2 StartBool_1) (bvult Start Start_5)))
   (StartBool_4 Bool (true (bvult Start_5 Start_3)))
   (Start_12 (_ BitVec 8) (y (bvadd Start_7 Start_5) (bvmul Start_6 Start_9) (bvudiv Start_10 Start_7) (bvshl Start_7 Start_13) (ite StartBool_3 Start_9 Start_7)))
   (StartBool_1 Bool (false (bvult Start_1 Start)))
   (Start_2 (_ BitVec 8) (y (bvnot Start) (bvand Start_3 Start_4) (bvor Start_2 Start_2) (bvurem Start_5 Start_3) (bvshl Start_6 Start_1) (ite StartBool Start_1 Start)))
   (Start_4 (_ BitVec 8) (x #b00000000 y (bvneg Start_11) (bvand Start_7 Start_4) (bvor Start_1 Start_5) (bvadd Start_12 Start_2) (bvmul Start_1 Start_1) (bvshl Start_9 Start_10) (bvlshr Start_5 Start_8)))
   (Start_6 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 y (bvshl Start_6 Start_7)))
   (Start_8 (_ BitVec 8) (y (bvnot Start_9) (bvand Start Start_1) (bvadd Start_10 Start_10) (bvmul Start_6 Start_4) (bvshl Start_8 Start) (ite StartBool_2 Start_10 Start_10)))
   (Start_5 (_ BitVec 8) (x (bvneg Start_5) (bvand Start Start_2) (bvor Start_6 Start_3) (bvadd Start_5 Start_2) (bvudiv Start Start_1) (bvshl Start Start_7)))
   (StartBool_3 Bool (false true (not StartBool_4) (and StartBool StartBool) (bvult Start_11 Start_8)))
   (Start_10 (_ BitVec 8) (x (bvneg Start_4) (bvmul Start Start_6) (bvudiv Start_2 Start_9) (bvurem Start_3 Start) (bvshl Start_10 Start_6) (ite StartBool Start_9 Start_1)))
   (Start_11 (_ BitVec 8) (#b00000000 #b10100101 y #b00000001 (bvnot Start_9) (bvneg Start_3) (bvand Start_7 Start_12) (bvor Start_9 Start) (bvadd Start Start_7) (bvudiv Start_1 Start_5) (bvurem Start_3 Start_9)))
   (Start_9 (_ BitVec 8) (y #b10100101 (bvneg Start_1) (bvand Start_5 Start_6) (bvor Start_10 Start_3) (bvadd Start_10 Start_9) (bvurem Start_1 Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem (bvadd x #b00000001) (bvand (bvlshr #b10100101 x) (bvurem #b00000000 x)))))

(check-synth)
