(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_8 Bool) (StartBool_7 Bool) (StartBool_3 Bool) (StartBool_5 Bool) (Start_8 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_2 Bool) (Start_7 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_4 Bool))
  ((Start (_ BitVec 8) (y #b10100101 (bvnot Start_1) (bvmul Start Start) (bvurem Start_1 Start) (bvlshr Start_2 Start_3)))
   (StartBool Bool (true false (not StartBool_7) (and StartBool_4 StartBool_8) (or StartBool_6 StartBool_4) (bvult Start_12 Start_2)))
   (StartBool_8 Bool (false true))
   (StartBool_7 Bool (true (or StartBool StartBool_4)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_6 StartBool_4)))
   (StartBool_5 Bool (true (bvult Start_1 Start_4)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvnot Start_5) (bvor Start_8 Start_3) (bvadd Start_8 Start_2) (ite StartBool_5 Start_2 Start)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvneg Start_4) (bvand Start_5 Start_5) (bvor Start_2 Start_1) (bvadd Start_4 Start_2) (bvmul Start_3 Start_5) (bvurem Start_3 Start_6) (ite StartBool_3 Start_1 Start_7)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_3) (bvneg Start) (bvand Start Start_2) (bvor Start Start_3) (bvadd Start_2 Start_1) (bvmul Start_2 Start_1) (bvurem Start_1 Start) (bvshl Start_1 Start_2) (bvlshr Start_1 Start_2)))
   (StartBool_6 Bool (false (or StartBool_7 StartBool_5)))
   (StartBool_1 Bool (false (not StartBool_2) (or StartBool_1 StartBool_2)))
   (Start_9 (_ BitVec 8) (#b00000000 (bvneg Start_10) (bvand Start_8 Start_9) (bvadd Start_2 Start_6) (bvlshr Start_1 Start_7) (ite StartBool_3 Start_4 Start_3)))
   (Start_10 (_ BitVec 8) (#b10100101 x (bvneg Start_9) (bvor Start_5 Start_6) (bvurem Start_9 Start_11) (bvshl Start Start_2) (bvlshr Start_4 Start_2)))
   (Start_12 (_ BitVec 8) (#b00000000 y #b10100101 (bvnot Start) (bvmul Start_7 Start)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvadd Start_2 Start_2) (bvudiv Start_3 Start_2)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start_1) (bvadd Start_5 Start_2) (bvmul Start_3 Start_1) (bvshl Start_3 Start_1) (bvlshr Start_2 Start_1) (ite StartBool_1 Start_5 Start)))
   (Start_6 (_ BitVec 8) (#b10100101 y #b00000001 (bvlshr Start_10 Start_5)))
   (Start_11 (_ BitVec 8) (x #b00000000 (bvneg Start_3) (bvand Start Start_8) (bvadd Start_6 Start_10) (bvmul Start_11 Start_10) (bvudiv Start_1 Start_6) (ite StartBool_2 Start_5 Start)))
   (StartBool_2 Bool (false (and StartBool StartBool_1) (bvult Start_4 Start_2)))
   (Start_7 (_ BitVec 8) (x #b00000001 (bvnot Start_3) (bvneg Start_1) (bvand Start Start) (bvor Start_3 Start_3) (bvudiv Start_8 Start_2) (bvurem Start Start_1) (bvlshr Start_6 Start_9) (ite StartBool_4 Start_4 Start_7)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvneg Start_4) (bvor Start_1 Start_5) (bvadd Start_3 Start_3) (bvurem Start_2 Start_4) (bvlshr Start_2 Start_2) (ite StartBool Start_3 Start_2)))
   (StartBool_4 Bool (true false (or StartBool_2 StartBool) (bvult Start Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv y (bvneg x))))

(check-synth)
