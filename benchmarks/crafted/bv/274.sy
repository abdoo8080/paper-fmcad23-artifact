(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (Start_6 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (StartBool_5 Bool) (Start_10 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_3 Bool) (Start_1 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 #b00000000 y x #b10100101 (bvnot Start) (bvor Start Start_1) (bvmul Start Start_1) (bvudiv Start_2 Start_2) (bvurem Start Start) (bvshl Start_2 Start)))
   (StartBool Bool (false (not StartBool_5) (and StartBool_6 StartBool_4) (bvult Start_11 Start_5)))
   (StartBool_6 Bool (true false (and StartBool_6 StartBool)))
   (Start_6 (_ BitVec 8) (x (bvnot Start_5) (bvneg Start_8) (bvor Start_5 Start_1) (bvmul Start_3 Start_2)))
   (StartBool_4 Bool (false (and StartBool_2 StartBool_4) (or StartBool_2 StartBool_4)))
   (StartBool_1 Bool (false true (or StartBool StartBool_2)))
   (Start_2 (_ BitVec 8) (y (bvnot Start) (bvand Start_1 Start) (bvor Start Start) (bvudiv Start Start) (bvshl Start_3 Start) (bvlshr Start_3 Start) (ite StartBool_1 Start_2 Start)))
   (Start_8 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 y x (bvor Start_5 Start_7) (bvmul Start_10 Start_9) (bvudiv Start_1 Start_10) (bvshl Start_11 Start_9) (bvlshr Start_2 Start_3)))
   (StartBool_2 Bool (true false (not StartBool_1) (and StartBool StartBool_1) (or StartBool_3 StartBool) (bvult Start_2 Start_3)))
   (Start_5 (_ BitVec 8) (y (bvand Start_4 Start_3) (bvadd Start Start_5) (bvmul Start_1 Start_1) (bvurem Start_4 Start_3) (bvlshr Start_6 Start) (ite StartBool_3 Start_1 Start_7)))
   (StartBool_5 Bool (true false (or StartBool_1 StartBool_1) (bvult Start_6 Start_8)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvnot Start) (bvneg Start_8) (bvor Start_3 Start_8) (bvadd Start_9 Start_2) (bvshl Start_11 Start_8) (bvlshr Start_7 Start_3)))
   (Start_3 (_ BitVec 8) (x (bvor Start_3 Start) (bvadd Start_2 Start) (bvshl Start_4 Start_4)))
   (Start_7 (_ BitVec 8) (#b00000000 y #b10100101 (bvnot Start_2) (bvadd Start Start_2) (bvmul Start Start_8) (bvudiv Start_6 Start_7) (bvurem Start_4 Start_2) (bvshl Start_6 Start) (bvlshr Start_9 Start_6) (ite StartBool Start_2 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvneg Start_3) (bvand Start_3 Start) (bvor Start_1 Start_4) (bvudiv Start_2 Start_2) (bvshl Start_4 Start_4)))
   (Start_9 (_ BitVec 8) (#b00000000 (bvnot Start) (bvneg Start_6) (bvmul Start_5 Start) (bvlshr Start_4 Start_3)))
   (Start_11 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvor Start_2 Start_2) (bvmul Start_7 Start_11) (bvshl Start_6 Start_5) (bvlshr Start_4 Start_8) (ite StartBool_4 Start_1 Start_2)))
   (StartBool_3 Bool (true false (not StartBool_3) (and StartBool StartBool_2) (or StartBool_2 StartBool_2)))
   (Start_1 (_ BitVec 8) (y (bvneg Start) (bvand Start_1 Start_3) (bvmul Start_2 Start_1) (bvudiv Start_4 Start_1) (bvshl Start Start_1) (ite StartBool_1 Start_2 Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvshl #b00000001 y) y)))

(check-synth)
