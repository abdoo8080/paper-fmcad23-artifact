(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_4 Bool) (Start_2 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_3 Bool) (Start_4 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_12 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x #b10100101 #b00000000 #b00000001 y (bvadd Start Start_1) (bvurem Start_2 Start) (bvshl Start_1 Start_2) (ite StartBool_1 Start_1 Start)))
   (StartBool Bool (false true (not StartBool_3)))
   (StartBool_4 Bool (false true (bvult Start_11 Start_11)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvnot Start_4) (bvand Start_3 Start_1) (bvor Start_13 Start_12) (bvshl Start_6 Start_9)))
   (Start_11 (_ BitVec 8) (x y (bvnot Start_12) (bvneg Start_10) (bvor Start_12 Start) (bvmul Start_12 Start_12) (bvudiv Start_1 Start_12) (bvurem Start_10 Start_2) (bvshl Start_11 Start_6) (bvlshr Start_11 Start_3)))
   (Start_14 (_ BitVec 8) (#b10100101 (bvneg Start_5) (bvand Start_12 Start_13) (bvudiv Start_1 Start_13) (bvshl Start_14 Start_10) (bvlshr Start Start_2) (ite StartBool Start_7 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000000 #b10100101 y #b00000001 x (bvneg Start_2) (bvand Start_6 Start_7) (bvadd Start_8 Start_6) (bvmul Start_5 Start_4) (bvudiv Start_7 Start_8) (bvurem Start_4 Start_6) (bvshl Start_1 Start_4) (bvlshr Start Start_3)))
   (StartBool_3 Bool (false))
   (Start_4 (_ BitVec 8) (y #b10100101 x (bvnot Start_8) (bvor Start_9 Start) (bvmul Start_1 Start_10)))
   (Start_1 (_ BitVec 8) (#b10100101 y #b00000000 (bvneg Start_9) (bvand Start_6 Start_13) (bvadd Start_9 Start_10) (bvmul Start_10 Start_5) (bvshl Start_11 Start_14) (bvlshr Start_7 Start_5) (ite StartBool_4 Start_10 Start_7)))
   (Start_3 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_3) (bvadd Start_5 Start) (bvmul Start_6 Start_7) (bvudiv Start_3 Start_1) (bvshl Start Start_2) (bvlshr Start Start_6) (ite StartBool Start_5 Start_5)))
   (Start_8 (_ BitVec 8) (x #b00000001 (bvor Start_3 Start) (bvadd Start Start_5) (bvudiv Start_8 Start_8) (bvshl Start_9 Start_1) (bvlshr Start Start_6) (ite StartBool_2 Start_8 Start_8)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvneg Start_2) (bvmul Start_7 Start_3) (bvurem Start_11 Start_7) (ite StartBool_3 Start_9 Start_12)))
   (StartBool_2 Bool (false (not StartBool_3)))
   (Start_9 (_ BitVec 8) (y (bvmul Start_8 Start_6) (bvudiv Start_3 Start) (bvurem Start_8 Start_6) (ite StartBool Start_1 Start_6)))
   (StartBool_1 Bool (false true (bvult Start_3 Start_2)))
   (Start_6 (_ BitVec 8) (#b00000001 y #b10100101 (bvor Start_8 Start_2) (bvadd Start_8 Start_7) (bvmul Start Start_3) (bvudiv Start_4 Start_6) (bvshl Start_5 Start_5) (ite StartBool_1 Start_1 Start_9)))
   (Start_13 (_ BitVec 8) (x (bvand Start_2 Start_5) (bvor Start_9 Start_11) (bvmul Start_5 Start_6) (bvlshr Start_2 Start_8)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvand Start_7 Start) (bvlshr Start_7 Start_6)))
   (Start_12 (_ BitVec 8) (y (bvneg Start_10) (bvand Start_4 Start_2) (bvmul Start_10 Start_13) (bvudiv Start_5 Start_3) (bvurem Start_1 Start_5) (ite StartBool Start_3 Start_13)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor #b00000001 (bvmul x y))))

(check-synth)
