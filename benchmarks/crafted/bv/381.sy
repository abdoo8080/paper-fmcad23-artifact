(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_2 Bool) (Start_4 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvadd Start_2 Start_1) (bvmul Start Start_1) (bvudiv Start Start) (bvurem Start Start_2) (bvshl Start_2 Start) (ite StartBool Start Start_3)))
   (StartBool Bool (false (and StartBool StartBool_2)))
   (Start_1 (_ BitVec 8) (#b00000000 x #b10100101 (bvneg Start_4) (bvand Start_8 Start_6) (bvudiv Start_2 Start_9) (bvurem Start_13 Start_4) (ite StartBool_3 Start Start_9)))
   (Start_2 (_ BitVec 8) (y x (bvor Start_10 Start_13) (bvadd Start_9 Start_7) (bvudiv Start_1 Start_6) (bvshl Start_8 Start_6) (ite StartBool_3 Start_13 Start_6)))
   (Start_3 (_ BitVec 8) (x y #b00000000 (bvand Start Start_4) (bvor Start_4 Start_3) (bvudiv Start_3 Start_4)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvnot Start_2) (bvor Start Start) (bvmul Start_6 Start_6) (bvudiv Start_5 Start_6) (bvurem Start_2 Start_4) (bvshl Start_4 Start_5) (ite StartBool Start_3 Start_2)))
   (Start_13 (_ BitVec 8) (x #b10100101 (bvnot Start_10) (bvand Start_13 Start_13) (bvmul Start Start_7) (bvudiv Start_2 Start_5) (bvurem Start_1 Start_10) (bvshl Start_13 Start_1) (ite StartBool_1 Start_9 Start_11)))
   (Start_5 (_ BitVec 8) (#b00000000 (bvshl Start Start_7)))
   (StartBool_1 Bool (true))
   (Start_7 (_ BitVec 8) (y #b10100101 x (bvneg Start_4) (bvand Start_4 Start_7) (bvshl Start_5 Start_5) (bvlshr Start Start_6) (ite StartBool_1 Start_8 Start)))
   (Start_8 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_4) (bvand Start_9 Start_9) (bvudiv Start Start_3) (bvurem Start_10 Start_5)))
   (StartBool_3 Bool (false true (and StartBool_1 StartBool_3)))
   (StartBool_2 Bool (false true (not StartBool_1) (and StartBool_2 StartBool_2)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvneg Start) (bvor Start_4 Start_2) (bvmul Start_1 Start_5) (bvudiv Start Start) (ite StartBool Start_3 Start_6)))
   (Start_10 (_ BitVec 8) (#b10100101 y #b00000000 (bvand Start_10 Start_8) (bvor Start_3 Start_10) (bvadd Start Start_5) (bvmul Start_6 Start) (bvlshr Start_9 Start_3)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvneg Start_11) (bvand Start_11 Start_4) (bvor Start_7 Start_2) (bvmul Start_10 Start) (bvurem Start_4 Start_9) (ite StartBool_2 Start_7 Start_12)))
   (Start_12 (_ BitVec 8) (x #b00000001 #b10100101 (bvnot Start_2) (bvneg Start_4) (bvor Start Start_4) (bvudiv Start_7 Start_4) (bvurem Start_6 Start_9)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_13) (bvand Start_5 Start_7) (bvmul Start_9 Start_9) (bvurem Start_7 Start_1) (bvshl Start_2 Start_13) (ite StartBool Start_11 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand #b00000001 (bvudiv y x))))

(check-synth)
