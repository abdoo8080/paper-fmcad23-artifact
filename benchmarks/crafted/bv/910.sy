(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_6 Bool) (Start_7 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_4 Bool) (Start_5 (_ BitVec 8)) (StartBool_5 Bool))
  ((Start (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvshl Start_1 Start_2)))
   (StartBool Bool (false true (or StartBool_5 StartBool_2) (bvult Start_2 Start_3)))
   (Start_1 (_ BitVec 8) (y (bvnot Start_3) (bvand Start_9 Start_4) (bvor Start Start) (bvlshr Start_1 Start_7) (ite StartBool_6 Start_11 Start_2)))
   (Start_12 (_ BitVec 8) (#b00000001 (bvor Start_4 Start_4) (bvmul Start_2 Start_2) (bvudiv Start_6 Start_9) (bvshl Start Start_2) (ite StartBool_3 Start_10 Start_5)))
   (Start_11 (_ BitVec 8) (x (bvneg Start_9) (bvmul Start_7 Start_2) (bvudiv Start_4 Start_2) (bvurem Start_9 Start_8) (ite StartBool_4 Start Start_2)))
   (StartBool_6 Bool (true (not StartBool_6)))
   (Start_7 (_ BitVec 8) (x #b00000001 (bvneg Start_2) (bvand Start_10 Start_2) (bvadd Start_3 Start_3) (bvmul Start_12 Start_9) (bvshl Start_5 Start_1) (bvlshr Start_1 Start_10)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool StartBool_4) (or StartBool_1 StartBool_3) (bvult Start_8 Start_7)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000001 x (bvnot Start) (bvneg Start_2) (bvor Start_2 Start) (bvmul Start_1 Start_3) (bvurem Start_2 Start_2) (bvshl Start_1 Start_2) (bvlshr Start Start_3) (ite StartBool_1 Start_3 Start_4)))
   (Start_4 (_ BitVec 8) (x (bvnot Start_3) (bvand Start Start_4) (bvadd Start Start_3) (bvmul Start_4 Start) (ite StartBool_2 Start_1 Start_1)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool_1 StartBool_2) (bvult Start_3 Start_2)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool_2 StartBool_2)))
   (Start_3 (_ BitVec 8) (y #b00000000 (bvadd Start_2 Start_5) (bvurem Start_3 Start_4) (bvlshr Start_4 Start_1) (ite StartBool_2 Start_4 Start_5)))
   (Start_6 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvadd Start_2 Start_3) (bvmul Start_8 Start_7) (bvshl Start_4 Start_7) (bvlshr Start_3 Start_8)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvand Start_3 Start_3) (bvor Start Start_5) (bvadd Start_1 Start_3) (bvmul Start Start_7) (bvurem Start_8 Start_8) (bvlshr Start_5 Start_9)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvnot Start_7) (bvneg Start_5) (bvor Start_3 Start_10) (bvmul Start_5 Start_10) (bvudiv Start_5 Start_5) (bvlshr Start_8 Start)))
   (Start_10 (_ BitVec 8) (x #b10100101 (bvneg Start_5) (bvand Start_4 Start_6) (bvor Start_11 Start_9) (bvadd Start_8 Start_9) (bvmul Start_1 Start_8) (bvudiv Start_7 Start_6) (bvurem Start_1 Start) (bvlshr Start_7 Start_3) (ite StartBool_3 Start_4 Start_11)))
   (StartBool_4 Bool (true false (not StartBool_5)))
   (Start_5 (_ BitVec 8) (#b10100101 (bvnot Start_6) (bvadd Start_1 Start_2) (bvshl Start_7 Start_3) (bvlshr Start_2 Start_5) (ite StartBool_2 Start_4 Start_8)))
   (StartBool_5 Bool (false true (not StartBool_2) (and StartBool_3 StartBool_5) (or StartBool_5 StartBool_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul x (bvadd #b00000001 #b10100101))))

(check-synth)
