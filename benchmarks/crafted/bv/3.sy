(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_17 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_4 Bool) (Start_2 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_9 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (StartBool_2 Bool) (Start_12 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start_1) (bvneg Start) (bvand Start_1 Start_1) (bvadd Start_1 Start) (bvudiv Start_1 Start_1) (bvurem Start_2 Start_2) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true (not StartBool_2) (and StartBool_2 StartBool) (bvult Start_4 Start_2)))
   (Start_17 (_ BitVec 8) (y #b00000000 x (bvadd Start_1 Start_3) (bvmul Start_16 Start_13) (bvurem Start Start_2)))
   (Start_1 (_ BitVec 8) (#b10100101 y (bvnot Start_9) (bvand Start_6 Start_6) (bvor Start_1 Start_9) (bvadd Start_1 Start_4) (bvudiv Start_16 Start_3) (bvurem Start_13 Start_11) (bvshl Start_2 Start) (ite StartBool_1 Start_16 Start_17)))
   (Start_14 (_ BitVec 8) (#b00000001 (bvadd Start_5 Start_8) (bvudiv Start_3 Start_4) (bvurem Start_2 Start_8) (ite StartBool_1 Start_6 Start_12)))
   (StartBool_4 Bool (false true (and StartBool_2 StartBool_2) (or StartBool_4 StartBool_2) (bvult Start_6 Start_10)))
   (Start_2 (_ BitVec 8) (x y (bvnot Start_3) (bvor Start_4 Start_2) (bvadd Start_2 Start_4) (ite StartBool Start_5 Start_5)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_10) (bvneg Start) (bvadd Start_1 Start_6) (bvlshr Start_14 Start_3) (ite StartBool_2 Start_3 Start_4)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool StartBool_2)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start_2) (bvor Start_5 Start_3) (bvadd Start Start_1) (bvmul Start_6 Start_7) (bvudiv Start_7 Start_4) (bvlshr Start_4 Start_5)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000000 x (bvnot Start) (bvneg Start) (bvor Start_14 Start_15) (bvadd Start_16 Start) (bvudiv Start_7 Start_8) (bvshl Start_6 Start_2) (bvlshr Start_4 Start)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvneg Start_8) (bvadd Start_7 Start_5) (bvmul Start_5 Start_1) (bvudiv Start_2 Start_7) (bvurem Start Start_6) (bvlshr Start_4 Start_1)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool_3) (bvult Start_9 Start)))
   (Start_9 (_ BitVec 8) (y #b10100101 x (bvnot Start_6) (bvshl Start_6 Start_15)))
   (Start_15 (_ BitVec 8) (x (bvnot Start_7) (bvneg Start_6) (bvand Start_3 Start_4) (bvor Start_13 Start_8) (bvmul Start_11 Start_9) (bvudiv Start_15 Start_6) (bvlshr Start_13 Start) (ite StartBool Start_5 Start_12)))
   (Start_7 (_ BitVec 8) (y x (bvnot Start_5) (bvand Start_1 Start_3) (bvudiv Start Start_5)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvand Start_15 Start_14) (bvor Start_6 Start_15) (bvmul Start_11 Start_4) (bvudiv Start_13 Start_6) (bvurem Start_6 Start_4) (bvshl Start_6 Start_10) (ite StartBool_3 Start_5 Start_12)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvneg Start_8) (bvand Start_5 Start_5) (bvor Start_2 Start_5) (bvadd Start_4 Start_3) (bvmul Start_9 Start_10) (bvurem Start_11 Start_12) (ite StartBool_1 Start_13 Start)))
   (Start_5 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_1) (bvmul Start Start_3) (bvshl Start_1 Start_5)))
   (Start_13 (_ BitVec 8) (#b00000001 x (bvneg Start_1) (bvmul Start_6 Start_1) (bvudiv Start_3 Start_8) (bvurem Start_5 Start_2)))
   (Start_16 (_ BitVec 8) (#b10100101 y x #b00000001 #b00000000 (bvnot Start_11) (bvmul Start_1 Start_3) (bvudiv Start_9 Start_13) (bvurem Start_10 Start_6) (ite StartBool_4 Start_6 Start_1)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool StartBool_1) (or StartBool_2 StartBool_3) (bvult Start_1 Start_4)))
   (Start_12 (_ BitVec 8) (#b00000001 y (bvneg Start) (bvurem Start_5 Start_11) (bvshl Start_12 Start_1) (bvlshr Start_5 Start_1) (ite StartBool_3 Start_3 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvudiv #b00000000 y) (bvudiv x (bvadd #b00000001 #b00000001)))))

(check-synth)
