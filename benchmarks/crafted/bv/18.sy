(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_1) (bvadd Start_1 Start_2) (bvmul Start_1 Start_2) (bvudiv Start_1 Start_2) (bvshl Start_1 Start_2)))
   (StartBool Bool (false true (or StartBool_1 StartBool) (bvult Start_1 Start)))
   (Start_3 (_ BitVec 8) (y (bvand Start_2 Start_2) (bvor Start Start_5) (bvudiv Start_5 Start_5)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvadd Start_4 Start_2) (bvudiv Start_1 Start_6) (bvlshr Start Start_6)))
   (StartBool_2 Bool (false true (and StartBool_1 StartBool_2) (or StartBool StartBool_1) (bvult Start_5 Start_1)))
   (Start_1 (_ BitVec 8) (x #b00000000 #b10100101 (bvnot Start) (bvadd Start_3 Start_4) (bvmul Start_1 Start_4) (bvurem Start_3 Start_6)))
   (Start_6 (_ BitVec 8) (x (bvnot Start_3) (bvneg Start_3) (bvadd Start_5 Start_6) (bvshl Start_1 Start_6) (bvlshr Start_4 Start_6)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_4) (bvand Start Start_2) (bvadd Start_2 Start_2) (bvmul Start_1 Start_4) (bvurem Start_4 Start_5) (bvshl Start_3 Start_3) (ite StartBool_1 Start_6 Start_2)))
   (StartBool_1 Bool (true false (and StartBool_2 StartBool) (bvult Start_3 Start_5)))
   (Start_2 (_ BitVec 8) (#b00000001 x #b10100101 #b00000000 y (bvadd Start_2 Start) (bvmul Start Start_3) (bvudiv Start Start_2) (bvlshr Start_1 Start_4) (ite StartBool_1 Start Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem y #b00000000)))

(check-synth)
