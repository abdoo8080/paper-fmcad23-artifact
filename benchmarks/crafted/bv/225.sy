(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_3 Bool) (Start_11 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (StartBool_5 Bool) (Start_9 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_6 Bool) (StartBool_4 Bool))
  ((Start (_ BitVec 8) (#b00000000 (bvnot Start) (bvneg Start_1) (bvand Start_1 Start_2) (bvmul Start_1 Start_1) (ite StartBool Start Start_2)))
   (StartBool Bool (true (not StartBool_4) (and StartBool StartBool) (bvult Start_6 Start_3)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_3) (bvadd Start_2 Start_11) (bvmul Start_11 Start_1) (bvurem Start_10 Start_1) (bvshl Start_1 Start)))
   (Start_12 (_ BitVec 8) (y (bvnot Start_11) (bvneg Start_1) (bvand Start_12 Start_12) (bvor Start_13 Start_8) (bvadd Start_4 Start_8) (bvmul Start_3 Start_5)))
   (Start_1 (_ BitVec 8) (x y (bvnot Start_8) (bvor Start_2 Start_1) (bvmul Start_5 Start_10) (bvudiv Start_9 Start_5) (bvurem Start_3 Start_12) (bvlshr Start_10 Start_3)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvadd Start_6 Start_11) (bvmul Start_8 Start_1) (bvurem Start_9 Start_7) (bvshl Start_2 Start_4) (ite StartBool Start_1 Start_10)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start_9) (bvneg Start_6) (bvlshr Start_8 Start_9)))
   (StartBool_3 Bool (true (not StartBool_5)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_11) (bvudiv Start_8 Start_4) (bvurem Start_9 Start_7) (bvlshr Start_7 Start_9) (ite StartBool_2 Start_4 Start_5)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvneg Start) (bvand Start_4 Start) (bvshl Start_4 Start_3) (bvlshr Start_4 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvand Start_1 Start_2) (bvor Start_5 Start_1) (bvadd Start_3 Start_5) (bvmul Start_5 Start_1) (bvudiv Start Start_6) (bvurem Start Start) (bvshl Start_6 Start_2) (ite StartBool_1 Start_6 Start_1)))
   (StartBool_1 Bool (false (not StartBool)))
   (Start_8 (_ BitVec 8) (#b00000001 x y (bvadd Start_9 Start_8) (bvudiv Start_5 Start_9) (bvurem Start_2 Start_9) (bvlshr Start_1 Start_6) (ite StartBool Start_4 Start)))
   (StartBool_5 Bool (false (or StartBool_1 StartBool_6)))
   (Start_9 (_ BitVec 8) (#b00000001 x (bvnot Start_10) (bvadd Start_6 Start_9) (bvmul Start_6 Start_3) (bvurem Start_7 Start_6) (ite StartBool_1 Start_7 Start_3)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start_7) (bvadd Start_3 Start_1) (bvudiv Start_3 Start_10) (bvshl Start_1 Start)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_7) (bvand Start_2 Start_1) (bvudiv Start_4 Start) (ite StartBool_1 Start_11 Start)))
   (Start_6 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 x y (bvor Start_4 Start_7) (bvadd Start_8 Start_8) (bvmul Start_3 Start) (bvurem Start_2 Start) (bvlshr Start_3 Start_2)))
   (StartBool_2 Bool (true false (not StartBool) (or StartBool_3 StartBool_4)))
   (StartBool_6 Bool (false (bvult Start_1 Start_7)))
   (StartBool_4 Bool (true false (or StartBool_5 StartBool_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvshl y x) y)))

(check-synth)
