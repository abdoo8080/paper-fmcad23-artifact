(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_15 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_4 Bool) (Start_8 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_5 Bool) (Start_4 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (y (bvneg Start) (bvadd Start Start) (bvmul Start Start) (bvudiv Start Start_1) (bvurem Start_1 Start)))
   (StartBool Bool (false true (and StartBool_1 StartBool) (bvult Start_13 Start_7)))
   (Start_15 (_ BitVec 8) (x (bvmul Start_7 Start_4) (bvurem Start_7 Start_8)))
   (Start_3 (_ BitVec 8) (y (bvor Start_5 Start_10) (bvadd Start_9 Start_9) (bvmul Start_11 Start_8) (bvlshr Start_8 Start_10) (ite StartBool_6 Start_11 Start_4)))
   (Start_14 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start) (bvneg Start_8) (bvudiv Start_12 Start_13) (bvlshr Start_15 Start_13)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvneg Start_11) (bvand Start_1 Start_2) (bvmul Start_8 Start_6) (bvshl Start_13 Start_4)))
   (StartBool_3 Bool (true (not StartBool_5) (and StartBool_3 StartBool_2)))
   (StartBool_4 Bool (true (not StartBool_5) (and StartBool StartBool_2)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvneg Start_2) (bvor Start_4 Start_7) (bvmul Start_10 Start) (bvurem Start_1 Start_11) (bvlshr Start Start_6)))
   (Start_13 (_ BitVec 8) (#b10100101 y x #b00000001 (bvnot Start_8) (bvor Start_10 Start_13) (bvshl Start_14 Start_5) (bvlshr Start_13 Start_11)))
   (Start_1 (_ BitVec 8) (x (bvnot Start) (bvneg Start) (bvand Start_2 Start_1) (bvmul Start_3 Start_4) (bvurem Start_3 Start_5) (bvlshr Start_5 Start_1)))
   (StartBool_6 Bool (true))
   (StartBool_1 Bool (true (bvult Start_6 Start_5)))
   (Start_6 (_ BitVec 8) (y #b00000000 #b10100101 #b00000001 (bvneg Start_1) (bvand Start_3 Start_2) (bvadd Start_4 Start_1) (bvudiv Start_3 Start_7) (bvlshr Start_2 Start_8)))
   (Start_12 (_ BitVec 8) (#b10100101 #b00000001 x (bvand Start_7 Start_4) (bvmul Start_6 Start_10) (bvudiv Start_6 Start_9) (bvlshr Start_11 Start_9)))
   (StartBool_5 Bool (true false (and StartBool_4 StartBool) (or StartBool_3 StartBool_5)))
   (Start_4 (_ BitVec 8) (#b10100101 x #b00000000 y (bvor Start_6 Start_12) (bvadd Start_3 Start_11) (bvmul Start_2 Start) (bvshl Start_11 Start_12) (ite StartBool_2 Start_3 Start_2)))
   (Start_5 (_ BitVec 8) (#b00000000 x (bvadd Start_2 Start_1) (bvudiv Start_1 Start_6) (bvurem Start_5 Start) (bvshl Start_3 Start_2)))
   (Start_11 (_ BitVec 8) (y #b00000000 x #b00000001 #b10100101 (bvneg Start_12) (bvmul Start_11 Start) (bvurem Start Start_10) (ite StartBool_1 Start_12 Start_11)))
   (Start_10 (_ BitVec 8) (#b00000001 y #b00000000 x #b10100101 (bvadd Start_5 Start_8) (bvmul Start_5 Start_8) (bvshl Start_4 Start_4)))
   (Start_7 (_ BitVec 8) (x #b00000000 y (bvnot Start) (bvneg Start_6) (bvand Start_8 Start_12) (bvor Start_2 Start_7) (bvadd Start_4 Start) (bvmul Start_1 Start_3) (bvudiv Start_8 Start_2) (ite StartBool Start_7 Start_11)))
   (Start_9 (_ BitVec 8) (x #b00000000 (bvnot Start_12) (bvudiv Start_12 Start_9) (bvshl Start_3 Start_4) (bvlshr Start_9 Start_10)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool_3 StartBool_4) (or StartBool_3 StartBool_5) (bvult Start_12 Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv y (bvmul x y))))

(check-synth)
