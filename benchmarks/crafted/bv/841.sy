(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (StartBool_5 Bool) (Start_1 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool) (StartBool_4 Bool) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 (bvnot Start) (bvneg Start_1) (bvand Start_2 Start_3) (bvmul Start_4 Start_2) (bvudiv Start_4 Start) (bvurem Start_1 Start_4) (bvshl Start_1 Start_3)))
   (StartBool Bool (true false (not StartBool_4) (or StartBool_2 StartBool_2) (bvult Start_9 Start)))
   (StartBool_6 Bool (true false))
   (StartBool_5 Bool (false (not StartBool_3) (and StartBool_6 StartBool_1)))
   (Start_1 (_ BitVec 8) (x y #b00000000 (bvadd Start_4 Start) (bvmul Start_3 Start_8) (bvudiv Start_8 Start_2) (bvurem Start_2 Start_9) (ite StartBool Start_3 Start_3)))
   (Start_4 (_ BitVec 8) (#b00000000 y (bvnot Start) (bvor Start_5 Start_1) (bvudiv Start Start_4) (bvlshr Start_6 Start_4) (ite StartBool_1 Start_1 Start_7)))
   (Start_9 (_ BitVec 8) (x (bvneg Start_5) (bvand Start_9 Start_1) (bvadd Start_1 Start_6) (bvmul Start Start_6) (bvudiv Start_5 Start_4) (bvshl Start_7 Start_8)))
   (Start_8 (_ BitVec 8) (y x (bvnot Start_5) (bvadd Start_6 Start_4) (bvurem Start_7 Start_3) (ite StartBool_1 Start_9 Start_9)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvadd Start Start_4) (bvudiv Start_10 Start_6) (bvurem Start_8 Start_5)))
   (Start_5 (_ BitVec 8) (x y (bvnot Start) (bvneg Start_7) (bvadd Start_7 Start_8) (bvmul Start_8 Start_4) (bvshl Start_10 Start_9) (ite StartBool Start Start)))
   (Start_10 (_ BitVec 8) (y (bvor Start_7 Start_7) (bvadd Start_5 Start_7) (bvmul Start_9 Start_3) (bvudiv Start_7 Start) (bvshl Start_5 Start_7) (ite StartBool_1 Start_10 Start_7)))
   (StartBool_1 Bool (true))
   (StartBool_2 Bool (true (and StartBool_3 StartBool) (bvult Start_1 Start_1)))
   (StartBool_4 Bool (false true (not StartBool_3) (or StartBool_5 StartBool_3) (bvult Start_7 Start_2)))
   (StartBool_3 Bool (false (not StartBool) (and StartBool_1 StartBool_3) (bvult Start_10 Start_10)))
   (Start_2 (_ BitVec 8) (x (bvand Start_3 Start_1) (bvor Start Start_4) (bvmul Start_10 Start_4) (ite StartBool_2 Start_3 Start_11)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvand Start Start_6) (bvor Start_6 Start_1) (bvmul Start_5 Start_8) (bvshl Start_2 Start)))
   (Start_3 (_ BitVec 8) (#b00000000 y #b10100101 x (bvneg Start_2) (bvor Start_1 Start_5) (bvadd Start_1 Start_10) (bvudiv Start_7 Start_2) (bvshl Start_3 Start_3)))
   (Start_11 (_ BitVec 8) (x y #b00000000 (bvnot Start_4) (bvmul Start Start_7) (bvudiv Start_2 Start_2) (bvlshr Start_5 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvshl (bvnot y) #b00000001) (bvurem #b00000001 y))))

(check-synth)
