(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (Start_11 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_4 Bool) (Start_4 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_1 Bool))
  ((Start (_ BitVec 8) (x (bvnot Start_1) (bvneg Start_2) (bvand Start Start) (bvadd Start Start_2) (ite StartBool Start_3 Start_2)))
   (StartBool Bool (false true (and StartBool_2 StartBool_3) (or StartBool_3 StartBool_4)))
   (StartBool_5 Bool (false (not StartBool_4)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_9) (bvneg Start_4) (bvand Start_2 Start_3) (bvmul Start_8 Start_10) (bvudiv Start_6 Start_7) (bvshl Start_6 Start) (bvlshr Start_3 Start_10)))
   (Start_3 (_ BitVec 8) (#b10100101 y (bvand Start_1 Start) (bvadd Start_2 Start_2) (bvurem Start Start_2) (ite StartBool_1 Start_3 Start_4)))
   (Start_5 (_ BitVec 8) (y #b10100101 (bvnot Start_5) (bvneg Start_5) (bvand Start_1 Start_4) (bvadd Start_6 Start_1) (bvurem Start_4 Start)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvneg Start_6) (bvand Start_5 Start_10) (bvmul Start_3 Start) (bvshl Start Start_7) (bvlshr Start Start_6) (ite StartBool_5 Start_1 Start_2)))
   (StartBool_4 Bool (false (bvult Start_10 Start_6)))
   (Start_4 (_ BitVec 8) (y (bvnot Start) (bvadd Start_2 Start_3) (bvmul Start_4 Start_2) (bvudiv Start_2 Start_3) (bvurem Start_4 Start_4) (bvshl Start_1 Start_3) (bvlshr Start_1 Start) (ite StartBool_2 Start_1 Start_1)))
   (Start_1 (_ BitVec 8) (#b00000001 x (bvnot Start_6) (bvand Start_8 Start_8) (bvadd Start_11 Start) (bvudiv Start_1 Start_2) (bvurem Start_8 Start_4) (ite StartBool_2 Start_7 Start)))
   (Start_7 (_ BitVec 8) (#b00000000 y (bvneg Start_3) (bvadd Start_5 Start_6) (bvmul Start_3 Start_1) (bvudiv Start_4 Start_3) (bvurem Start_1 Start_3) (bvshl Start_6 Start) (bvlshr Start_5 Start_8) (ite StartBool_2 Start_2 Start_4)))
   (Start_8 (_ BitVec 8) (#b00000000 #b00000001 (bvand Start_4 Start_8) (bvmul Start_9 Start_4) (ite StartBool_3 Start_4 Start_8)))
   (StartBool_2 Bool (true false (and StartBool StartBool_3) (bvult Start_5 Start)))
   (Start_10 (_ BitVec 8) (#b00000001 x y #b10100101 (bvnot Start_5) (bvneg Start_9) (bvor Start_6 Start_1) (bvadd Start_5 Start_4) (bvudiv Start_5 Start_1) (bvurem Start_2 Start) (bvshl Start_6 Start_10) (ite StartBool_1 Start_10 Start_9)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_7) (bvadd Start Start_3) (bvshl Start_6 Start_3)))
   (Start_9 (_ BitVec 8) (x #b10100101 y (bvneg Start_9) (bvand Start_2 Start_1) (bvor Start_10 Start_4) (bvadd Start_4 Start_6) (bvmul Start_10 Start_5) (bvudiv Start_5 Start_1)))
   (StartBool_3 Bool (false (not StartBool_1) (and StartBool_1 StartBool_2) (or StartBool_2 StartBool_3)))
   (StartBool_1 Bool (false true (not StartBool_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvneg #b10100101) x)))

(check-synth)
