(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_12 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_4 Bool) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (Start_1 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvmul Start_1 Start_2) (bvlshr Start Start_1)))
   (StartBool Bool (false (not StartBool) (and StartBool_2 StartBool_1)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvneg Start_12) (bvor Start_10 Start_11) (bvadd Start_3 Start_6) (bvshl Start_1 Start_6) (ite StartBool_1 Start_5 Start_13)))
   (StartBool_2 Bool (true (not StartBool) (or StartBool_3 StartBool_4) (bvult Start_8 Start_12)))
   (StartBool_4 Bool (false (and StartBool_3 StartBool_4) (or StartBool_1 StartBool_1)))
   (Start_2 (_ BitVec 8) (y #b00000000 #b00000001 (bvnot Start_2) (bvand Start Start_3) (bvurem Start_3 Start_1) (bvshl Start_1 Start_2) (bvlshr Start Start_2) (ite StartBool_1 Start Start_2)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_1) (bvand Start_4 Start_5) (bvor Start Start_4) (bvmul Start_4 Start) (bvudiv Start Start_5) (bvurem Start_2 Start_2) (bvshl Start_4 Start_4) (bvlshr Start Start_4)))
   (Start_5 (_ BitVec 8) (#b00000001 y (bvand Start_6 Start_5) (bvor Start Start_2) (bvmul Start_4 Start_2) (bvudiv Start_1 Start_5) (bvshl Start_6 Start_1)))
   (Start_6 (_ BitVec 8) (#b00000000 x (bvnot Start_3) (bvneg Start_3) (bvand Start_5 Start) (bvadd Start Start_6) (bvmul Start_2 Start_4) (bvudiv Start_4 Start_5) (bvshl Start_5 Start_6) (bvlshr Start_1 Start_7)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool StartBool) (bvult Start_1 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000000 x #b00000001 (bvnot Start_2) (bvand Start Start_1) (bvmul Start_6 Start_5) (bvudiv Start_7 Start_8) (bvshl Start_10 Start_2)))
   (Start_7 (_ BitVec 8) (#b10100101 x y (bvnot Start_2) (bvand Start_3 Start_1) (bvor Start_2 Start_5) (bvadd Start_3 Start_1) (bvmul Start_4 Start_8) (bvshl Start_7 Start_5) (bvlshr Start_3 Start_3) (ite StartBool Start_8 Start_3)))
   (Start_8 (_ BitVec 8) (#b10100101 #b00000000 (bvadd Start_1 Start_2) (bvmul Start_4 Start_5) (bvudiv Start_5 Start_8) (bvurem Start_6 Start) (ite StartBool_1 Start_2 Start)))
   (StartBool_3 Bool (true false (not StartBool_1) (and StartBool_1 StartBool_2) (or StartBool StartBool_2) (bvult Start_7 Start_3)))
   (Start_1 (_ BitVec 8) (x y #b00000001 #b10100101 (bvand Start Start_7) (bvadd Start_5 Start_4) (bvurem Start_6 Start_7) (bvlshr Start_8 Start_8) (ite StartBool_1 Start_3 Start_9)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvadd Start_12 Start_9) (bvmul Start_9 Start_11) (bvudiv Start_9 Start_11) (ite StartBool_1 Start_12 Start_8)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvand Start_1 Start_8) (bvor Start_5 Start_2) (bvadd Start_1 Start_3) (bvudiv Start_7 Start_8) (bvurem Start_6 Start_7) (bvshl Start_7 Start_7)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvand Start_1 Start_11) (bvadd Start_4 Start_9) (bvmul Start_10 Start_7) (bvurem Start_1 Start_2) (bvlshr Start_10 Start_10)))
   (Start_11 (_ BitVec 8) (y #b00000000 #b10100101 (bvnot Start_9) (bvand Start_8 Start_2) (bvor Start Start_9) (bvadd Start_7 Start_4) (bvmul Start_4 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul (bvnot (bvand #b00000001 x)) (bvudiv (bvnot (bvneg #b10100101)) (bvmul y #b10100101)))))

(check-synth)
