(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (Start_11 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 (bvneg Start_1) (bvadd Start Start) (bvurem Start_2 Start_1) (bvshl Start_1 Start)))
   (StartBool Bool (true false (not StartBool) (and StartBool StartBool_5)))
   (StartBool_5 Bool (true (bvult Start_3 Start_4)))
   (Start_11 (_ BitVec 8) (x y #b10100101 #b00000000 #b00000001 (bvneg Start_2) (bvand Start_6 Start_3) (bvor Start_4 Start) (bvadd Start_3 Start_4) (bvudiv Start_13 Start_12) (bvurem Start_7 Start_10) (bvshl Start_8 Start_7) (bvlshr Start_12 Start) (ite StartBool_1 Start_13 Start_7)))
   (Start_13 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvand Start_7 Start_1) (bvadd Start_12 Start_10) (bvudiv Start_8 Start_7) (ite StartBool_2 Start Start_9)))
   (Start_1 (_ BitVec 8) (#b00000001 x y (bvnot Start_2) (bvmul Start_11 Start_8) (bvudiv Start_12 Start_12) (bvurem Start_4 Start_1) (bvlshr Start_11 Start_4) (ite StartBool_4 Start_6 Start_2)))
   (Start_6 (_ BitVec 8) (x (bvor Start Start_3) (bvurem Start_7 Start_7) (bvshl Start_3 Start_6) (ite StartBool_2 Start_1 Start)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_3) (bvadd Start Start_3) (bvmul Start Start) (bvurem Start_2 Start_1) (bvshl Start Start_3) (bvlshr Start Start_3) (ite StartBool_1 Start_2 Start_4)))
   (Start_4 (_ BitVec 8) (x (bvneg Start_2) (bvand Start_1 Start_2) (bvurem Start_1 Start)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_5) (bvadd Start_5 Start_2) (bvurem Start_2 Start_4) (bvlshr Start_5 Start_1) (ite StartBool_2 Start_2 Start_3)))
   (Start_7 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvadd Start Start_1) (bvmul Start Start_6) (bvurem Start_5 Start_8) (bvshl Start_6 Start_5) (ite StartBool_2 Start_2 Start_3)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvor Start_6 Start_2) (bvadd Start_10 Start_11) (bvmul Start_3 Start_7) (bvudiv Start_9 Start_8) (bvlshr Start_11 Start_5) (ite StartBool_1 Start_13 Start_5)))
   (StartBool_3 Bool (false (and StartBool StartBool_3) (or StartBool_2 StartBool_3) (bvult Start_1 Start)))
   (StartBool_4 Bool (true (not StartBool_3) (or StartBool StartBool_4) (bvult Start_10 Start_5)))
   (StartBool_2 Bool (false (bvult Start_4 Start_4)))
   (Start_5 (_ BitVec 8) (x (bvnot Start_5) (bvand Start_6 Start) (bvudiv Start Start) (bvshl Start Start) (ite StartBool_1 Start Start_1)))
   (Start_8 (_ BitVec 8) (#b00000000 x #b00000001 #b10100101 y (bvnot Start_2) (bvand Start_8 Start_4) (bvadd Start_6 Start_3) (bvmul Start_9 Start_10) (bvudiv Start_8 Start_1) (bvurem Start_10 Start_8)))
   (Start_10 (_ BitVec 8) (x (bvnot Start_2) (bvneg Start) (bvor Start Start_4) (bvudiv Start_6 Start_6) (ite StartBool_1 Start_2 Start_2)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool_2 StartBool) (or StartBool StartBool_3)))
   (Start_9 (_ BitVec 8) (x y #b10100101 #b00000000 (bvnot Start_6) (bvand Start_2 Start_8) (bvor Start_6 Start_1) (bvmul Start Start_1) (bvurem Start_8 Start_7) (bvshl Start_3 Start_9) (bvlshr Start_8 Start_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvlshr y x))))

(check-synth)
