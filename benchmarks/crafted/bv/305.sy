(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (StartBool_5 Bool) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (StartBool_4 Bool) (Start_8 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_1 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y #b10100101 (bvnot Start) (bvand Start_1 Start) (bvudiv Start_2 Start_1) (bvurem Start_1 Start) (bvshl Start_1 Start_2)))
   (StartBool Bool (false true (not StartBool_2) (and StartBool_3 StartBool_3) (or StartBool StartBool_4)))
   (StartBool_6 Bool (false true (not StartBool_4)))
   (StartBool_5 Bool (true (not StartBool_3) (or StartBool_3 StartBool_6) (bvult Start_12 Start_5)))
   (Start_12 (_ BitVec 8) (y #b00000001 (bvor Start_4 Start_4) (bvadd Start_1 Start_7) (bvudiv Start_12 Start_8) (bvurem Start_9 Start_6) (bvshl Start_5 Start_1) (bvlshr Start_12 Start_2)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_3) (bvor Start Start_8) (bvmul Start_5 Start_11) (bvlshr Start_4 Start_8)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool StartBool_1) (or StartBool StartBool)))
   (Start_5 (_ BitVec 8) (#b00000000 x (bvmul Start_5 Start_1) (bvudiv Start_1 Start) (bvlshr Start_4 Start_1)))
   (Start_3 (_ BitVec 8) (x (bvnot Start_10) (bvand Start_4 Start_6) (bvor Start_8 Start_8) (bvadd Start_3 Start) (bvlshr Start_8 Start_5) (ite StartBool_1 Start_9 Start_3)))
   (Start_4 (_ BitVec 8) (x (bvnot Start_1) (bvneg Start) (bvand Start_1 Start_6) (bvor Start_1 Start_6) (bvmul Start_3 Start_1) (bvshl Start Start_3) (bvlshr Start_2 Start_3)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_5) (bvneg Start_1) (bvand Start_4 Start_4) (bvadd Start_2 Start) (bvmul Start Start) (bvudiv Start_7 Start_4) (bvurem Start_3 Start_7) (ite StartBool Start_5 Start_7)))
   (StartBool_3 Bool (true (and StartBool StartBool_2) (or StartBool_2 StartBool_5) (bvult Start_12 Start_3)))
   (StartBool_1 Bool (true false (and StartBool StartBool_1) (or StartBool_2 StartBool_1) (bvult Start Start_2)))
   (Start_7 (_ BitVec 8) (#b10100101 (bvneg Start_6) (bvudiv Start_2 Start_4) (bvshl Start_2 Start_3) (bvlshr Start_8 Start_2)))
   (StartBool_4 Bool (false true (not StartBool) (or StartBool_1 StartBool_2) (bvult Start_2 Start_9)))
   (Start_8 (_ BitVec 8) (x #b10100101 (bvneg Start_1) (bvadd Start_8 Start_9) (bvudiv Start_3 Start_5) (bvurem Start_3 Start_9) (ite StartBool_1 Start_8 Start_2)))
   (Start_2 (_ BitVec 8) (x (bvnot Start_3) (bvand Start_1 Start) (bvor Start_4 Start_5) (bvadd Start_4 Start) (bvudiv Start_1 Start_3) (bvurem Start_2 Start_1) (bvlshr Start_1 Start_5) (ite StartBool_1 Start Start_5)))
   (Start_10 (_ BitVec 8) (y x (bvneg Start_10) (bvand Start_7 Start_6) (bvor Start_6 Start_1) (bvadd Start_5 Start_5) (bvudiv Start_3 Start_4) (bvurem Start_8 Start_7) (bvshl Start_2 Start_2) (ite StartBool Start_4 Start_9)))
   (Start_9 (_ BitVec 8) (y x #b00000000 (bvnot Start_7) (bvor Start_7 Start_9) (bvmul Start_10 Start_3) (bvshl Start_4 Start_2) (ite StartBool_1 Start_1 Start_3)))
   (Start_1 (_ BitVec 8) (#b00000000 (bvmul Start Start_1) (bvudiv Start_2 Start_11) (bvurem Start_11 Start_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvneg y))))

(check-synth)
