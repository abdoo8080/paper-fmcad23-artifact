(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_4 Bool) (StartBool_8 Bool) (StartBool_6 Bool) (Start_10 (_ BitVec 8)) (StartBool_5 Bool) (Start_9 (_ BitVec 8)) (StartBool_7 Bool) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_1 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 y (bvneg Start_1) (bvand Start_2 Start_3) (bvadd Start_3 Start_3) (bvmul Start_3 Start_3) (bvlshr Start_2 Start_1) (ite StartBool Start Start_4)))
   (StartBool Bool (true (and StartBool_4 StartBool_1) (or StartBool_5 StartBool_6)))
   (StartBool_4 Bool (true (not StartBool_4) (and StartBool_1 StartBool_1) (bvult Start_1 Start_1)))
   (StartBool_8 Bool (false true (not StartBool_4) (bvult Start_9 Start)))
   (StartBool_6 Bool (false (not StartBool_7) (and StartBool StartBool_5)))
   (Start_10 (_ BitVec 8) (y #b00000001 (bvnot Start_1) (bvneg Start_6) (bvand Start_2 Start_1) (bvor Start Start_7) (bvadd Start_4 Start_2) (bvudiv Start_2 Start_2) (bvshl Start_7 Start_1) (ite StartBool_1 Start_1 Start_4)))
   (StartBool_5 Bool (false true (and StartBool_4 StartBool_8) (or StartBool_1 StartBool_6) (bvult Start_10 Start_2)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvneg Start_4) (bvudiv Start_1 Start_1) (bvurem Start_9 Start_7) (bvshl Start_2 Start_5) (bvlshr Start_6 Start_5) (ite StartBool Start_3 Start_6)))
   (StartBool_7 Bool (false true (not StartBool_5) (bvult Start_1 Start_8)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvneg Start_3) (bvand Start_2 Start_5) (bvmul Start_4 Start_6) (bvlshr Start_4 Start_6)))
   (Start_6 (_ BitVec 8) (y #b10100101 x #b00000000 #b00000001 (bvnot Start_5) (bvneg Start_2) (bvand Start_5 Start) (bvadd Start_2 Start_4) (bvudiv Start Start_3) (bvurem Start_4 Start_3) (bvshl Start Start_5) (bvlshr Start_2 Start_1) (ite StartBool Start_7 Start_2)))
   (StartBool_1 Bool (true false (and StartBool StartBool_1) (or StartBool_1 StartBool_1)))
   (Start_7 (_ BitVec 8) (#b00000001 y (bvor Start_2 Start_3) (bvmul Start_4 Start_1) (bvurem Start_2 Start_7) (bvshl Start_5 Start_2) (ite StartBool_2 Start_7 Start_8)))
   (Start_8 (_ BitVec 8) (x (bvnot Start_6) (bvand Start_7 Start_1) (bvudiv Start_7 Start_1) (bvurem Start_9 Start_8) (bvlshr Start_1 Start_9) (ite StartBool Start_3 Start_9)))
   (Start_4 (_ BitVec 8) (#b00000001 y (bvmul Start_1 Start_3) (bvudiv Start_4 Start_4) (bvlshr Start_2 Start_1) (ite StartBool_1 Start_4 Start_1)))
   (StartBool_2 Bool (false (not StartBool_1) (or StartBool_2 StartBool_3) (bvult Start_7 Start_3)))
   (Start_5 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start_8) (bvlshr Start_4 Start_6)))
   (StartBool_3 Bool (false true (not StartBool) (or StartBool_3 StartBool)))
   (Start_2 (_ BitVec 8) (#b00000001 #b10100101 y x #b00000000 (bvnot Start_5) (bvneg Start) (bvand Start_7 Start_5) (bvor Start_9 Start_2) (bvadd Start_5 Start_7) (bvshl Start_4 Start_7) (bvlshr Start_9 Start_1)))
   (Start_1 (_ BitVec 8) (#b00000000 y #b00000001 #b10100101 (bvadd Start_4 Start_8) (bvmul Start_10 Start_9) (bvurem Start_10 Start_9) (bvshl Start Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd y (bvnot (bvudiv y (ite (bvult y #b00000001) y x))))))

(check-synth)
