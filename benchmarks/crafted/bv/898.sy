(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_6 Bool) (Start_13 (_ BitVec 8)) (StartBool_5 Bool) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_2 Bool) (Start_16 (_ BitVec 8)) (StartBool_3 Bool))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_1) (bvand Start_1 Start_2) (bvmul Start_1 Start_2) (bvurem Start Start_2) (bvshl Start_2 Start_3) (ite StartBool Start_4 Start_5)))
   (StartBool Bool (false true (not StartBool_6) (and StartBool_1 StartBool) (or StartBool_6 StartBool) (bvult Start_11 Start_10)))
   (Start_1 (_ BitVec 8) (#b10100101 x #b00000000 y (bvand Start_14 Start_1) (bvadd Start_3 Start_16) (bvmul Start_3 Start_3) (ite StartBool_4 Start_13 Start_12)))
   (Start_14 (_ BitVec 8) (x (bvor Start Start_8) (bvmul Start_9 Start_16) (bvudiv Start_15 Start_4) (bvshl Start_10 Start_16)))
   (StartBool_6 Bool (false true (not StartBool_5) (or StartBool_6 StartBool_1)))
   (Start_13 (_ BitVec 8) (y #b10100101 #b00000000 x #b00000001 (bvneg Start_14) (bvor Start_6 Start_6) (bvadd Start_9 Start_11) (bvudiv Start_10 Start_6) (bvurem Start_15 Start_14) (ite StartBool_6 Start_9 Start_16)))
   (StartBool_5 Bool (false true (and StartBool_3 StartBool_3)))
   (Start_12 (_ BitVec 8) (x #b00000001 y (bvand Start_2 Start_8) (bvor Start_13 Start_1) (bvmul Start_3 Start_6) (bvudiv Start_12 Start_4) (bvurem Start_5 Start_2) (bvlshr Start_3 Start_5) (ite StartBool_4 Start_13 Start_9)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_15) (bvmul Start_5 Start_11) (bvudiv Start_13 Start_5) (bvurem Start_11 Start_6) (bvshl Start_16 Start_10) (bvlshr Start_5 Start_14) (ite StartBool_3 Start_2 Start_7)))
   (Start_8 (_ BitVec 8) (#b00000001 x #b10100101 y #b00000000 (bvnot Start_4) (bvneg Start_7) (bvand Start_8 Start_3) (bvor Start_6 Start_1) (bvadd Start_1 Start) (bvudiv Start_9 Start) (bvlshr Start_3 Start_6) (ite StartBool_1 Start_2 Start_10)))
   (Start_4 (_ BitVec 8) (y (bvneg Start_1)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start_3) (bvand Start Start_3) (bvmul Start_1 Start) (bvudiv Start_5 Start_1) (bvurem Start_1 Start_6) (bvshl Start_2 Start_6) (bvlshr Start_5 Start_3) (ite StartBool Start_2 Start_7)))
   (Start_6 (_ BitVec 8) (#b00000000 #b10100101 y (bvneg Start_2) (bvmul Start_3 Start) (bvudiv Start Start_2) (bvshl Start_4 Start_3)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_2) (bvneg Start_1) (bvand Start Start) (bvmul Start_6 Start_4) (bvurem Start_1 Start_8)))
   (Start_10 (_ BitVec 8) (#b00000000 #b00000001 y (bvand Start_2 Start_4) (bvshl Start_2 Start_1) (ite StartBool_1 Start_2 Start_5)))
   (Start_15 (_ BitVec 8) (#b10100101 (bvneg Start_16) (bvor Start_14 Start_16) (bvadd Start_6 Start_8) (bvmul Start_2 Start_14) (bvurem Start_9 Start_15) (bvshl Start_10 Start_11)))
   (Start_2 (_ BitVec 8) (#b10100101 x (bvnot Start_5) (bvand Start_1 Start_5) (bvmul Start_11 Start_12) (bvudiv Start_11 Start_12) (bvshl Start_1 Start_4) (bvlshr Start_2 Start_7) (ite StartBool_2 Start_6 Start_1)))
   (StartBool_4 Bool (false (not StartBool_5)))
   (StartBool_1 Bool (true false (not StartBool) (bvult Start_9 Start_6)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvor Start_2 Start_9) (bvudiv Start Start_10) (bvurem Start_4 Start_10) (bvlshr Start_6 Start_9)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_6) (bvand Start_4 Start_6) (bvor Start_5 Start_6)))
   (StartBool_2 Bool (true false (not StartBool_1) (or StartBool_3 StartBool_3)))
   (Start_16 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_9) (bvneg Start_15) (bvand Start_10 Start_4) (bvor Start Start_16)))
   (StartBool_3 Bool (false true (and StartBool_2 StartBool) (or StartBool StartBool_3) (bvult Start_7 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv (bvshl x #b00000001) y)))

(check-synth)
