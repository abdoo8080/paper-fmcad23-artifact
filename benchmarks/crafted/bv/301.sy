(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 y (bvnot Start) (bvneg Start) (bvor Start_1 Start) (bvmul Start_2 Start_2) (bvudiv Start Start_2) (bvshl Start_2 Start_1) (bvlshr Start_2 Start_2)))
   (StartBool Bool (false true (not StartBool) (or StartBool_1 StartBool_1)))
   (Start_1 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start_2) (bvand Start_1 Start_3) (bvor Start_3 Start_2) (bvadd Start_3 Start_1) (bvmul Start_3 Start_4) (bvlshr Start_2 Start)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_2) (bvneg Start) (bvudiv Start_3 Start_3) (bvshl Start_4 Start_2) (bvlshr Start_1 Start_2)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_1) (or StartBool_1 StartBool_1)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvor Start_1 Start_4) (bvadd Start_2 Start) (bvmul Start_4 Start_3) (bvudiv Start Start_4) (bvlshr Start_2 Start_3) (ite StartBool_1 Start_1 Start_2)))
   (Start_2 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 y x (bvadd Start_2 Start_2) (bvudiv Start_3 Start_2) (bvlshr Start_4 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvnot #b10100101) (bvand y #b10100101))))

(check-synth)
