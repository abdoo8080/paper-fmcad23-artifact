(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_15 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_1 Bool) (Start_13 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_5 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvor Start Start) (bvmul Start_1 Start) (bvudiv Start_2 Start_3) (bvshl Start_3 Start_2)))
   (StartBool Bool (true (not StartBool_1) (and StartBool_2 StartBool) (or StartBool_1 StartBool) (bvult Start_5 Start_15)))
   (Start_15 (_ BitVec 8) (y (bvand Start_8 Start_12) (bvurem Start Start_1) (bvshl Start_14 Start_11) (ite StartBool_2 Start_1 Start_3)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start_10) (bvneg Start_12) (bvand Start_12 Start_12) (bvurem Start_10 Start_11) (bvshl Start_15 Start_11) (bvlshr Start_1 Start_8)))
   (Start_14 (_ BitVec 8) (#b00000001 (bvneg Start_9) (bvand Start_10 Start_8) (bvor Start_11 Start_12) (bvadd Start_12 Start_10) (bvudiv Start_1 Start_1) (bvshl Start_3 Start_12)))
   (Start_3 (_ BitVec 8) (x (bvneg Start_1) (bvand Start_4 Start_3) (bvor Start_2 Start_5) (bvadd Start_2 Start_5) (bvmul Start_2 Start_2) (bvudiv Start_4 Start_3) (bvurem Start_4 Start_6) (bvshl Start Start_5) (bvlshr Start_7 Start_4) (ite StartBool Start_2 Start_4)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvadd Start_2 Start_2) (bvshl Start_8 Start_7) (ite StartBool Start_5 Start_3)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvor Start_4 Start_11) (bvudiv Start_2 Start_4) (bvlshr Start_14 Start_13)))
   (Start_8 (_ BitVec 8) (y #b10100101 #b00000001 #b00000000 x (bvadd Start_6 Start_7) (bvurem Start_7 Start_9) (bvshl Start_9 Start_10) (bvlshr Start_8 Start_7) (ite StartBool Start_5 Start_7)))
   (StartBool_2 Bool (false))
   (Start_10 (_ BitVec 8) (x (bvadd Start_1 Start_5) (bvmul Start Start_2) (bvurem Start_2 Start_10) (ite StartBool Start_10 Start_7)))
   (Start_9 (_ BitVec 8) (#b10100101 x (bvnot Start_7) (bvneg Start_1) (bvudiv Start_7 Start) (bvurem Start_5 Start_4) (bvshl Start_4 Start_8) (ite StartBool_1 Start Start_11)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvneg Start_2) (bvand Start_5 Start_6) (bvor Start_6 Start) (bvadd Start_8 Start_12)))
   (StartBool_1 Bool (false true (or StartBool StartBool_1)))
   (Start_13 (_ BitVec 8) (#b10100101 x (bvnot Start_7) (bvneg Start_8) (bvshl Start_9 Start_13)))
   (Start_11 (_ BitVec 8) (#b00000001 y #b00000000 (bvnot Start_4) (bvneg Start_9) (bvor Start_7 Start_5) (bvadd Start_11 Start_10) (bvmul Start_3 Start_5) (bvurem Start_11 Start_11)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvnot Start_8) (bvneg Start_10) (bvor Start_2 Start) (bvadd Start_2 Start_1) (bvshl Start_1 Start_7) (bvlshr Start_13 Start_7)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start_10) (bvneg Start_11) (bvand Start_2 Start_13) (bvadd Start_1 Start_6)))
   (Start_5 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_10) (bvor Start_2 Start_4) (bvadd Start_4 Start_9) (bvudiv Start_12 Start_5) (bvurem Start_12 Start_13) (bvshl Start_13 Start_1) (bvlshr Start_1 Start_1) (ite StartBool Start_5 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvor x #b00000001) x)))

(check-synth)
