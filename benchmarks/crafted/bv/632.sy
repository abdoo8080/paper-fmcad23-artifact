(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_3 Bool) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_1 Bool) (Start_16 (_ BitVec 8)) (StartBool_2 Bool) (Start_13 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_14 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start_1) (bvneg Start_2) (bvmul Start Start_2) (bvudiv Start_3 Start) (bvshl Start_4 Start_1) (bvlshr Start Start_4)))
   (StartBool Bool (true))
   (Start_1 (_ BitVec 8) (x #b10100101 (bvneg Start_4) (bvadd Start Start_7) (bvmul Start_11 Start_16) (bvurem Start_9 Start_8) (bvshl Start_2 Start_14) (bvlshr Start_13 Start_14)))
   (Start_2 (_ BitVec 8) (#b00000001 #b00000000 y (bvand Start_9 Start_6) (bvlshr Start_2 Start_7)))
   (Start_15 (_ BitVec 8) (#b10100101 #b00000001 #b00000000 (bvand Start_9 Start_7) (bvlshr Start_8 Start_3)))
   (Start_6 (_ BitVec 8) (#b10100101 #b00000000 x y #b00000001 (bvnot Start_3) (bvor Start_7 Start_13) (bvadd Start_4 Start_15) (bvmul Start_4 Start_10) (bvudiv Start_2 Start_6)))
   (StartBool_4 Bool (true false (and StartBool StartBool_4) (or StartBool_3 StartBool_1)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool_4)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_2) (bvand Start_4 Start_3) (bvor Start_9 Start_14) (bvadd Start_12 Start_15) (bvmul Start_15 Start_3) (ite StartBool_3 Start Start_6)))
   (Start_5 (_ BitVec 8) (y (bvneg Start_5) (bvand Start_3 Start_2) (bvadd Start_2 Start_1) (bvmul Start_6 Start_7) (bvurem Start_2 Start_7) (bvshl Start_3 Start_3) (bvlshr Start_8 Start_3)))
   (Start_7 (_ BitVec 8) (#b10100101 x y (bvnot Start_5) (bvneg Start_2) (bvand Start_8 Start_6) (bvor Start_1 Start_5) (bvadd Start_6 Start_1) (ite StartBool_3 Start_11 Start_6)))
   (Start_4 (_ BitVec 8) (y #b10100101 #b00000000 (bvneg Start_1) (bvand Start_2 Start_2) (bvor Start_5 Start_4) (bvadd Start_3 Start_2) (bvlshr Start_5 Start_3)))
   (Start_9 (_ BitVec 8) (x #b00000000 (bvor Start_14 Start_6) (bvadd Start_13 Start_1) (bvurem Start_12 Start_13) (bvshl Start_13 Start_5) (bvlshr Start_9 Start_8) (ite StartBool_1 Start_12 Start)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start) (bvand Start_9 Start_4) (bvor Start_7 Start_3) (bvadd Start_8 Start) (bvmul Start_6 Start_6) (bvudiv Start_10 Start_1) (bvurem Start_1 Start_1) (bvshl Start_2 Start_9)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_5) (bvneg Start_3) (bvand Start_9 Start) (bvadd Start_4 Start_11) (bvlshr Start_12 Start_8)))
   (Start_12 (_ BitVec 8) (#b00000000 y x (bvneg Start) (bvand Start_7 Start_12) (bvadd Start_11 Start_7) (bvlshr Start_3 Start_2) (ite StartBool_1 Start_1 Start_2)))
   (StartBool_1 Bool (true false (not StartBool) (or StartBool_2 StartBool) (bvult Start_5 Start)))
   (Start_16 (_ BitVec 8) (#b10100101 #b00000001 x (bvand Start_15 Start_16) (bvadd Start_15 Start_3) (bvmul Start Start_4) (bvshl Start_16 Start_8)))
   (StartBool_2 Bool (true (and StartBool_1 StartBool)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_11) (bvneg Start_2) (bvand Start_5 Start_5) (bvurem Start_5 Start_8) (bvlshr Start_12 Start_8)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start_1) (bvurem Start_7 Start_12) (bvshl Start_13 Start_3) (bvlshr Start Start_11) (ite StartBool_1 Start_12 Start_4)))
   (Start_14 (_ BitVec 8) (x y #b00000001 (bvnot Start_7) (bvneg Start_4) (bvand Start_5 Start_4) (bvor Start_13 Start_12) (bvurem Start_2 Start_5) (bvshl Start_5 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvand x #b10100101) (bvadd #b00000001 y))))

(check-synth)
