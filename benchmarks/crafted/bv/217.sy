(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_2 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_9 Bool) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_7 Bool) (StartBool_10 Bool) (Start_7 (_ BitVec 8)) (StartBool_6 Bool) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_15 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_8 Bool) (Start_1 (_ BitVec 8)) (StartBool_4 Bool) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvand Start_1 Start_2) (bvor Start Start) (bvadd Start_3 Start_3) (bvudiv Start Start_1) (bvlshr Start_2 Start_3) (ite StartBool_1 Start_4 Start_5)))
   (StartBool Bool (false true (or StartBool_1 StartBool_3) (bvult Start_8 Start_1)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_12) (bvneg Start) (bvand Start Start) (bvshl Start_13 Start_7) (ite StartBool_7 Start Start_4)))
   (Start_14 (_ BitVec 8) (x y #b00000000 #b10100101 (bvand Start_7 Start) (bvor Start Start_7) (bvadd Start_1 Start_14) (bvmul Start_11 Start_8) (bvurem Start_11 Start_7) (bvshl Start_12 Start_14) (bvlshr Start_7 Start_1) (ite StartBool_1 Start_10 Start_9)))
   (StartBool_9 Bool (false (and StartBool_6 StartBool_10)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvneg Start_11) (bvor Start_8 Start_6) (bvmul Start_7 Start_1) (bvudiv Start_6 Start_10) (bvshl Start_11 Start_2) (bvlshr Start_4 Start_2) (ite StartBool_9 Start_13 Start_8)))
   (Start_12 (_ BitVec 8) (x #b00000000 (bvnot Start_6) (bvneg Start_6) (bvadd Start_13 Start_1)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvadd Start_1 Start_3) (bvmul Start Start_11) (bvshl Start_7 Start_12)))
   (Start_5 (_ BitVec 8) (#b00000000 (bvneg Start) (bvor Start_5 Start_4) (bvadd Start_4 Start_1) (bvudiv Start_5 Start) (bvurem Start Start_2)))
   (Start_3 (_ BitVec 8) (#b00000000 y (bvnot Start_11) (bvneg Start_8) (bvmul Start_4 Start_6) (bvurem Start_10 Start_11) (bvlshr Start_2 Start_9)))
   (StartBool_2 Bool (true false (not StartBool_3) (and StartBool_1 StartBool_3)))
   (StartBool_7 Bool (false true (and StartBool_3 StartBool_8)))
   (StartBool_10 Bool (false (and StartBool_3 StartBool_7)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvneg Start_9) (bvand Start_4 Start_5) (bvudiv Start_10 Start_8) (bvlshr Start Start) (ite StartBool_3 Start_1 Start_4)))
   (StartBool_6 Bool (true (not StartBool_8) (and StartBool_8 StartBool_7) (bvult Start_4 Start_1)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvneg Start_7) (bvor Start_1 Start_6) (bvadd Start_8 Start_4) (ite StartBool_2 Start_3 Start_3)))
   (StartBool_3 Bool (false (not StartBool_4) (or StartBool_2 StartBool_5) (bvult Start_1 Start_5)))
   (Start_15 (_ BitVec 8) (#b10100101 x #b00000001 y (bvand Start_3 Start_3) (bvor Start_15 Start_15) (bvadd Start Start_8) (bvudiv Start_10 Start_9) (bvlshr Start_8 Start_15)))
   (Start_11 (_ BitVec 8) (x #b00000001 (bvneg Start_11) (bvand Start_14 Start_1) (bvurem Start_3 Start_3) (bvlshr Start_12 Start_3) (ite StartBool_5 Start_5 Start_11)))
   (Start_4 (_ BitVec 8) (x (bvnot Start_5) (bvneg Start_2) (bvand Start_5 Start_6) (bvor Start_1 Start_4) (bvurem Start Start_4) (bvshl Start Start_6) (bvlshr Start_4 Start_6)))
   (StartBool_5 Bool (true false (not StartBool_3) (and StartBool_6 StartBool_7)))
   (StartBool_8 Bool (true false (not StartBool_4) (or StartBool_7 StartBool_8) (bvult Start_3 Start_2)))
   (Start_1 (_ BitVec 8) (y x (bvand Start_2 Start_9) (bvadd Start_9 Start_7) (bvmul Start_15 Start_10) (bvudiv Start_1 Start_9) (bvlshr Start_2 Start)))
   (StartBool_4 Bool (false (or StartBool_7 StartBool)))
   (Start_8 (_ BitVec 8) (x #b00000000 (bvneg Start_3) (bvmul Start Start_5) (bvudiv Start_1 Start_8) (bvshl Start_4 Start_4) (bvlshr Start_9 Start_5)))
   (StartBool_1 Bool (true (bvult Start_14 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000001 y (bvnot Start) (bvneg Start_3) (bvudiv Start_7 Start) (bvlshr Start_9 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvshl x y) x)))

(check-synth)
