(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_3 Bool))
  ((Start (_ BitVec 8) (#b10100101 (bvneg Start_1) (bvadd Start_1 Start) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (true false (not StartBool_2) (and StartBool_3 StartBool_2) (or StartBool_2 StartBool_2)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvnot Start_10) (bvneg Start_12) (bvand Start_5 Start_6) (bvor Start_12 Start) (bvmul Start_4 Start) (bvudiv Start_8 Start_3) (bvurem Start_12 Start_4) (bvlshr Start_9 Start_4)))
   (Start_3 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvnot Start_3) (bvand Start_6 Start_8) (bvadd Start_11 Start_6) (bvmul Start_5 Start_3) (bvudiv Start_7 Start_1) (bvshl Start_10 Start_12)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start_1) (bvand Start Start_1) (bvmul Start_1 Start_1) (bvurem Start_2 Start) (bvshl Start Start) (bvlshr Start_3 Start_4) (ite StartBool_1 Start_1 Start_3)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvand Start Start_5) (bvor Start Start_7) (bvudiv Start_3 Start_8) (bvshl Start_6 Start_8) (bvlshr Start Start_7)))
   (Start_9 (_ BitVec 8) (#b00000001 x #b10100101 #b00000000 y (bvnot Start_8) (bvneg Start_9) (bvor Start Start) (bvurem Start_7 Start_4) (bvshl Start_10 Start_10)))
   (Start_11 (_ BitVec 8) (x #b10100101 (bvneg Start_5) (bvand Start_2 Start_5) (bvor Start_10 Start_9) (bvadd Start_11 Start_7) (bvlshr Start_8 Start_10)))
   (StartBool_2 Bool (true false (not StartBool) (and StartBool_2 StartBool)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_11) (bvand Start_1 Start_2) (bvor Start_7 Start_4) (bvmul Start_9 Start_11) (bvurem Start_5 Start_9) (bvlshr Start_5 Start_7)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvand Start_2 Start_9) (bvor Start_11 Start_10) (bvmul Start_6 Start_7) (bvudiv Start_3 Start_10) (bvurem Start_10 Start_8) (bvlshr Start_2 Start_12) (ite StartBool_3 Start_5 Start_2)))
   (Start_12 (_ BitVec 8) (#b00000001 (bvor Start_7 Start_12) (bvmul Start_3 Start_5) (bvudiv Start_1 Start_5) (bvshl Start_9 Start_1) (bvlshr Start_11 Start_7) (ite StartBool_3 Start_9 Start_1)))
   (Start_4 (_ BitVec 8) (x y (bvurem Start_1 Start_4) (bvshl Start_5 Start_6) (bvlshr Start Start_1) (ite StartBool_2 Start_4 Start_1)))
   (Start_8 (_ BitVec 8) (y #b10100101 x #b00000000 #b00000001 (bvand Start_3 Start_6) (bvor Start_4 Start_2) (bvadd Start_8 Start) (bvmul Start_1 Start_7) (bvudiv Start_6 Start_9) (bvurem Start_7 Start_8) (bvshl Start_2 Start_7) (bvlshr Start_3 Start) (ite StartBool Start_2 Start_2)))
   (Start_7 (_ BitVec 8) (x y (bvnot Start_3) (bvand Start_1 Start_11) (bvor Start_11 Start_5) (bvmul Start_10 Start_2) (bvudiv Start_2 Start_6) (bvshl Start_6 Start_6) (bvlshr Start_8 Start_4) (ite StartBool_1 Start_9 Start_2)))
   (StartBool_1 Bool (false true (not StartBool_2) (or StartBool_2 StartBool_1)))
   (StartBool_3 Bool (false true (not StartBool_2) (bvult Start_8 Start_1)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvudiv y x) #b10100101)))

(check-synth)
