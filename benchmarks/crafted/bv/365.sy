(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_5 Bool) (Start_13 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (Start_4 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_4 Bool) (Start_7 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvor Start Start) (bvurem Start Start_1) (bvshl Start Start_1) (bvlshr Start_2 Start_3) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (false true (or StartBool_5 StartBool_1) (bvult Start_9 Start_12)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvand Start_4 Start_10) (bvadd Start_9 Start) (bvudiv Start_9 Start_10) (ite StartBool Start_7 Start_12)))
   (Start_2 (_ BitVec 8) (y (bvand Start_2 Start_3) (bvadd Start_9 Start_2) (bvudiv Start_10 Start_9) (bvlshr Start_9 Start) (ite StartBool_1 Start_5 Start_13)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000001 #b00000000 (bvnot Start_2) (bvadd Start_10 Start_13) (bvurem Start_13 Start_5)))
   (Start_10 (_ BitVec 8) (x y (bvor Start_4 Start_4) (bvmul Start_5 Start_9) (bvshl Start_1 Start_11)))
   (StartBool_5 Bool (false true (and StartBool_5 StartBool_5) (bvult Start Start_6)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start_8) (bvand Start Start_4) (bvor Start Start_5) (bvadd Start_13 Start_7) (bvurem Start_9 Start_7) (bvshl Start_11 Start_12) (ite StartBool_5 Start_4 Start)))
   (StartBool_1 Bool (false true (and StartBool_2 StartBool) (or StartBool StartBool_1) (bvult Start_2 Start_1)))
   (Start_6 (_ BitVec 8) (x (bvnot Start_3) (bvand Start_5 Start_8) (bvor Start_3 Start_2) (bvadd Start_4 Start_9) (bvudiv Start_5 Start_8) (bvshl Start_5 Start_5) (bvlshr Start Start_1)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000000 x (bvneg Start) (bvand Start Start_8) (bvmul Start_2 Start_7)))
   (Start_8 (_ BitVec 8) (#b00000001 (bvneg Start_10) (bvand Start_7 Start_10) (bvadd Start_7 Start_7) (bvmul Start_7 Start_1) (bvudiv Start_4 Start_6) (bvurem Start_4 Start_9) (bvlshr Start_8 Start_8) (ite StartBool Start_8 Start_11)))
   (StartBool_3 Bool (false true (bvult Start_2 Start_4)))
   (Start_4 (_ BitVec 8) (#b00000000 x (bvand Start_5 Start) (bvadd Start_3 Start_3) (bvudiv Start_3 Start_1) (bvshl Start_3 Start) (ite StartBool_2 Start Start_5)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvneg Start_2) (bvadd Start_5 Start_2) (bvmul Start_6 Start_5) (bvudiv Start_3 Start_4) (bvshl Start_3 Start_3) (ite StartBool_3 Start_7 Start)))
   (StartBool_2 Bool (true (not StartBool_3) (and StartBool_1 StartBool_1) (or StartBool_4 StartBool_3) (bvult Start_1 Start_3)))
   (StartBool_4 Bool (false (not StartBool)))
   (Start_7 (_ BitVec 8) (x (bvshl Start Start_7)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_5) (bvand Start_4 Start_2) (bvor Start_1 Start_4) (bvadd Start_6 Start_8) (bvmul Start_12 Start_4) (bvurem Start Start)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvnot Start_13) (bvudiv Start_12 Start_2) (bvurem Start_9 Start_4) (bvlshr Start_9 Start_6) (ite StartBool_1 Start_9 Start_12)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvor x #b10100101) #b00000001)))

(check-synth)
