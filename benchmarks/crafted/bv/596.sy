(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_7 Bool) (Start_15 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_5 Bool) (Start_5 (_ BitVec 8)) (StartBool_6 Bool) (Start_6 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_2 Bool) (Start_3 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_4 Bool) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y #b00000000 (bvnot Start_1) (bvand Start_2 Start) (bvadd Start_1 Start_3) (bvmul Start_1 Start_2) (bvurem Start Start) (bvshl Start_3 Start)))
   (StartBool Bool (true false (or StartBool_2 StartBool_6)))
   (StartBool_7 Bool (true false (not StartBool_7) (bvult Start Start)))
   (Start_15 (_ BitVec 8) (x #b00000001 (bvnot Start_4) (bvand Start_4 Start_11) (bvor Start_10 Start_14) (bvadd Start Start_11) (bvmul Start_13 Start_6) (bvurem Start_14 Start) (bvlshr Start_5 Start_7) (ite StartBool Start_14 Start_14)))
   (Start_1 (_ BitVec 8) (x #b00000001 #b10100101 (bvnot Start_10) (bvneg Start_12) (bvand Start_12 Start_9) (bvor Start Start) (bvadd Start Start_10) (bvudiv Start_15 Start_3) (bvshl Start_6 Start_3)))
   (Start_14 (_ BitVec 8) (y (bvnot Start_4) (bvneg Start) (bvand Start_11 Start_4) (bvadd Start_5 Start_13) (bvurem Start_12 Start_14) (bvshl Start_9 Start_9)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvor Start_14 Start_12) (bvmul Start_10 Start_8) (bvshl Start_13 Start_8) (ite StartBool_2 Start_4 Start_4)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_12) (bvmul Start_9 Start_3) (bvurem Start_11 Start_10) (bvshl Start_5 Start_3) (ite StartBool_2 Start_8 Start_7)))
   (StartBool_5 Bool (true false))
   (Start_5 (_ BitVec 8) (#b00000001 #b10100101 (bvnot Start) (bvneg Start_1) (bvand Start_5 Start_5) (bvadd Start Start_6) (bvurem Start_5 Start_1) (bvshl Start_4 Start) (bvlshr Start_6 Start)))
   (StartBool_6 Bool (false (not StartBool_7) (and StartBool_4 StartBool_2)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvand Start_4 Start_5) (bvadd Start_6 Start_1) (bvmul Start_5 Start) (bvudiv Start_5 Start_7) (bvlshr Start_3 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000001 #b00000000 y #b10100101 (bvnot Start_4) (bvand Start_4 Start_6) (bvadd Start_5 Start_3) (bvmul Start_2 Start_2) (bvurem Start_2 Start) (bvlshr Start_5 Start_5)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_3) (or StartBool_3 StartBool_2)))
   (Start_3 (_ BitVec 8) (y #b00000001 (bvneg Start_4) (bvmul Start_5 Start_1) (bvudiv Start Start_2) (bvurem Start_3 Start_1) (bvlshr Start_5 Start_4)))
   (StartBool_3 Bool (true false (or StartBool StartBool_4)))
   (StartBool_4 Bool (false true (and StartBool_3 StartBool_1) (or StartBool_2 StartBool_1)))
   (Start_8 (_ BitVec 8) (#b00000001 #b10100101 (bvnot Start_1) (bvand Start_2 Start_3) (bvadd Start Start_3) (bvudiv Start_4 Start_7)))
   (Start_9 (_ BitVec 8) (y #b00000000 (bvnot Start_13) (bvor Start_5 Start_5) (bvmul Start_1 Start_13) (bvshl Start_11 Start_7)))
   (StartBool_1 Bool (false (not StartBool) (and StartBool_1 StartBool_2) (bvult Start Start_1)))
   (Start_12 (_ BitVec 8) (x (bvadd Start_10 Start_10)))
   (Start_4 (_ BitVec 8) (y #b10100101 #b00000000 #b00000001 (bvand Start_3 Start_7) (bvadd Start_4 Start_3) (bvmul Start_8 Start_6) (bvshl Start_6 Start_6) (ite StartBool_1 Start_3 Start_1)))
   (Start_2 (_ BitVec 8) (x (bvand Start_1 Start_5) (bvor Start_5 Start_8) (bvadd Start_9 Start_2) (bvudiv Start_8 Start_6) (bvurem Start_10 Start_5) (bvshl Start_10 Start)))
   (Start_10 (_ BitVec 8) (x (bvor Start_2 Start_7) (bvadd Start_11 Start_9) (bvurem Start_11 Start_6) (bvlshr Start_12 Start_4) (ite StartBool_5 Start_1 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvurem #b00000000 y) #b10100101)))

(check-synth)
