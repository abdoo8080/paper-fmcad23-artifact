(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_5 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvor Start_1 Start_2) (bvadd Start_1 Start) (bvurem Start_1 Start_2) (bvlshr Start_2 Start_1) (ite StartBool Start Start_3)))
   (StartBool Bool (true))
   (Start_1 (_ BitVec 8) (#b00000000 x y #b00000001 #b10100101 (bvneg Start_4) (bvand Start Start_9) (bvadd Start_11 Start_13) (bvmul Start_3 Start_7) (bvudiv Start_3 Start_1) (ite StartBool_1 Start_11 Start_5)))
   (Start_13 (_ BitVec 8) (x (bvneg Start_5) (bvadd Start_6 Start_4) (bvmul Start_4 Start_12) (ite StartBool_2 Start_1 Start_7)))
   (StartBool_3 Bool (false (and StartBool_2 StartBool_3) (or StartBool_1 StartBool_1)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_10) (bvneg Start_4) (bvand Start_2 Start_9) (bvor Start_5 Start_9) (bvudiv Start_12 Start_13) (bvurem Start_12 Start_4) (bvshl Start_11 Start_3)))
   (Start_3 (_ BitVec 8) (x (bvor Start Start_2) (bvadd Start_4 Start_1) (bvmul Start Start_1) (bvudiv Start_1 Start) (bvlshr Start_3 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvneg Start) (bvand Start_2 Start_4) (bvor Start_1 Start_5) (bvmul Start_1 Start_6) (bvudiv Start_4 Start_3) (bvshl Start_7 Start)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start_7) (bvneg Start_5) (bvand Start_2 Start_3) (bvadd Start Start_5) (bvurem Start_1 Start_1) (bvlshr Start_4 Start_1) (ite StartBool_1 Start_7 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 y (bvor Start_1 Start_2) (bvmul Start_3 Start_3) (bvudiv Start_1 Start_5) (ite StartBool_2 Start_3 Start_4)))
   (StartBool_2 Bool (true (and StartBool StartBool_1) (bvult Start_3 Start_2)))
   (StartBool_1 Bool (false true (bvult Start_3 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000000 (bvneg Start_4) (bvand Start_8 Start_3) (bvor Start_3 Start_3) (bvadd Start_9 Start_3) (bvmul Start_8 Start_9) (bvudiv Start Start_1) (bvurem Start_7 Start_2)))
   (Start_11 (_ BitVec 8) (y #b00000001 #b00000000 x (bvneg Start_10) (bvor Start_12 Start_6) (bvadd Start_3 Start_8)))
   (Start_9 (_ BitVec 8) (y (bvneg Start_4) (bvand Start_5 Start) (bvor Start_2 Start_9) (bvmul Start_1 Start) (bvudiv Start_3 Start_10) (bvurem Start_9 Start_10) (bvlshr Start_11 Start_4) (ite StartBool_2 Start_3 Start_11)))
   (Start_8 (_ BitVec 8) (x #b00000001 y #b10100101 #b00000000 (bvmul Start_13 Start_5) (bvlshr Start_11 Start_10) (ite StartBool_3 Start_3 Start_10)))
   (Start_12 (_ BitVec 8) (#b00000001 y x #b10100101 #b00000000 (bvadd Start_8 Start_7) (bvmul Start_4 Start_5) (bvurem Start_6 Start_10) (bvshl Start_6 Start_7) (bvlshr Start_2 Start_11)))
   (Start_10 (_ BitVec 8) (x #b10100101 (bvand Start_8 Start_10) (bvmul Start_1 Start_11) (bvudiv Start_12 Start_2) (bvshl Start_4 Start_6) (bvlshr Start_8 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor x (bvor (bvudiv #b00000000 (bvshl y x)) #b00000001))))

(check-synth)
