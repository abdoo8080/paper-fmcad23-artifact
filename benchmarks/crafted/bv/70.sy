(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_1 Bool) (Start_10 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_2 Bool) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start) (bvneg Start) (bvand Start Start) (bvor Start Start_1) (bvmul Start_1 Start) (bvudiv Start_1 Start_2) (bvshl Start_2 Start_3) (bvlshr Start_3 Start_1)))
   (StartBool Bool (false true (and StartBool_2 StartBool_2) (or StartBool_2 StartBool_1) (bvult Start_10 Start_11)))
   (Start_11 (_ BitVec 8) (#b10100101 (bvneg Start_2) (bvadd Start_2 Start_5) (bvmul Start_11 Start_4) (bvudiv Start Start_11) (bvurem Start Start_6) (bvshl Start_5 Start_3) (bvlshr Start_6 Start_5)))
   (Start_1 (_ BitVec 8) (y #b00000000 #b10100101 (bvnot Start_9) (bvneg Start) (bvand Start_4 Start_5) (bvor Start_9 Start) (bvadd Start_6 Start_3) (bvmul Start_10 Start_6) (bvurem Start_6 Start_1) (bvlshr Start_8 Start_4) (ite StartBool_4 Start_5 Start_1)))
   (Start_5 (_ BitVec 8) (y (bvor Start_6 Start_2) (bvadd Start_4 Start_3) (bvurem Start_5 Start_7) (bvshl Start_5 Start_4) (bvlshr Start Start_6)))
   (Start_8 (_ BitVec 8) (#b00000001 x #b10100101 (bvneg Start_2) (bvor Start_2 Start) (bvurem Start_7 Start_7) (bvshl Start_9 Start) (bvlshr Start_3 Start_7) (ite StartBool_3 Start_2 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvneg Start_7) (bvand Start_7 Start) (bvor Start_7 Start_1) (bvurem Start_1 Start_1) (bvlshr Start Start_2)))
   (Start_4 (_ BitVec 8) (y #b10100101 (bvneg Start_2) (bvor Start_3 Start_2) (bvmul Start Start_3) (bvurem Start_4 Start_7) (ite StartBool_1 Start_4 Start_5)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_1) (bvand Start Start_4) (bvor Start Start_5) (bvadd Start_3 Start_3) (bvmul Start_1 Start_2) (bvudiv Start_3 Start_6) (bvurem Start_2 Start_5) (bvlshr Start_1 Start_6)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_7) (bvor Start_3 Start_1) (bvadd Start_7 Start_1) (bvmul Start_3 Start_1)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvnot Start_5) (bvneg Start_4) (bvor Start Start_3) (bvmul Start_6 Start) (bvurem Start_8 Start_4) (ite StartBool Start_3 Start_8)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool_1) (bvult Start_1 Start)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_1)))
   (Start_10 (_ BitVec 8) (y (bvand Start_6 Start_7) (bvor Start_8 Start_3) (bvadd Start_9 Start) (bvmul Start Start) (bvudiv Start_1 Start_10) (bvurem Start_3 Start_2) (bvlshr Start_8 Start_9) (ite StartBool Start_9 Start_8)))
   (StartBool_4 Bool (true (not StartBool) (and StartBool_2 StartBool) (or StartBool_2 StartBool_1)))
   (StartBool_2 Bool (false (not StartBool)))
   (Start_9 (_ BitVec 8) (y (bvneg Start_7) (bvand Start_1 Start) (bvor Start_2 Start_3) (bvmul Start_5 Start_5) (bvshl Start_3 Start_10) (bvlshr Start_10 Start_10) (ite StartBool_2 Start_9 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv #b00000000 (bvurem x #b00000000))))

(check-synth)
