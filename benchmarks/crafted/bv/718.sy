(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_3 Bool) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvor Start_1 Start_2) (bvadd Start Start_1) (bvmul Start Start_3) (bvudiv Start_4 Start_5) (bvshl Start_3 Start_4) (bvlshr Start Start_3)))
   (StartBool Bool (false true (not StartBool) (and StartBool_2 StartBool_2) (or StartBool_2 StartBool_3) (bvult Start_7 Start_5)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_3 StartBool)))
   (Start_13 (_ BitVec 8) (#b10100101 y #b00000001 (bvnot Start_9) (bvneg Start_10) (bvlshr Start_9 Start_10)))
   (Start_1 (_ BitVec 8) (x (bvnot Start_4) (bvand Start_7 Start_11) (bvor Start_12 Start_4) (bvadd Start_7 Start_9) (bvudiv Start_9 Start_5) (ite StartBool_1 Start_6 Start_7)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvand Start_5 Start_5) (bvmul Start_3 Start_5) (bvurem Start Start_6)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_3) (bvneg Start_9) (bvand Start_7 Start_9) (bvor Start_8 Start) (bvmul Start_6 Start_6) (bvudiv Start_10 Start_7) (bvshl Start_3 Start_4) (ite StartBool_2 Start_9 Start_1)))
   (Start_12 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_7) (bvand Start_8 Start_4) (bvor Start_8 Start_12) (bvudiv Start_2 Start_5) (bvurem Start_2 Start_9) (ite StartBool_2 Start_13 Start_1)))
   (Start_6 (_ BitVec 8) (#b10100101 #b00000001 (bvneg Start_7) (bvand Start_2 Start_5) (bvudiv Start_1 Start_1) (bvurem Start Start_3) (bvshl Start_7 Start) (bvlshr Start_4 Start_4)))
   (Start_9 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvnot Start_6) (bvneg Start_2) (bvor Start_3 Start_6) (bvadd Start Start_7) (bvudiv Start_10 Start_8) (bvurem Start_5 Start_4) (bvlshr Start Start_6) (ite StartBool Start_10 Start_11)))
   (Start_4 (_ BitVec 8) (#b00000001 x y #b00000000 (bvnot Start_4) (bvneg Start_7) (bvadd Start Start_3) (bvudiv Start Start_4) (ite StartBool Start_2 Start_3)))
   (Start_8 (_ BitVec 8) (y x (bvnot Start) (bvneg Start_3) (bvand Start_1 Start_7) (bvadd Start_5 Start_4) (bvlshr Start_8 Start_2) (ite StartBool_1 Start_3 Start_2)))
   (Start_3 (_ BitVec 8) (#b10100101 x (bvand Start_2 Start_5) (bvor Start_3 Start_3) (bvadd Start Start_6) (bvudiv Start_4 Start_7) (bvurem Start_5 Start_5) (ite StartBool Start_1 Start_8)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvand Start Start_6) (bvadd Start Start_3) (bvudiv Start_7 Start_3) (bvurem Start_8 Start_1)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool) (bvult Start_5 Start_6)))
   (Start_7 (_ BitVec 8) (y (bvnot Start_3) (bvand Start_3 Start_6) (bvadd Start_1 Start_2) (bvudiv Start Start_4) (bvshl Start_3 Start_1) (ite StartBool Start Start)))
   (StartBool_2 Bool (true (bvult Start_2 Start_11)))
   (Start_10 (_ BitVec 8) (y (bvnot Start) (bvneg Start_4) (bvudiv Start_8 Start_1) (bvshl Start_8 Start) (bvlshr Start_3 Start_3) (ite StartBool Start_6 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl y (bvnot x))))

(check-synth)
