(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_16 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_1 Bool) (Start_14 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 y (bvnot Start_1) (bvadd Start_1 Start_2) (bvmul Start_2 Start_2) (bvurem Start_2 Start) (bvlshr Start Start_3) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true (or StartBool StartBool_2) (bvult Start_10 Start_16)))
   (Start_16 (_ BitVec 8) (y #b00000001 x (bvurem Start_11 Start_11) (bvlshr Start_14 Start_14)))
   (Start_15 (_ BitVec 8) (#b00000001 (bvudiv Start_16 Start_14) (bvurem Start_2 Start_3)))
   (Start_12 (_ BitVec 8) (y #b00000000 (bvneg Start_8) (bvand Start_1 Start_5) (bvudiv Start_11 Start_1)))
   (StartBool_1 Bool (false (or StartBool StartBool_1)))
   (Start_14 (_ BitVec 8) (#b10100101 (bvneg Start_12) (bvadd Start_11 Start_5) (bvshl Start_13 Start_5) (bvlshr Start_6 Start_15)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvneg Start_4) (bvand Start_6 Start_6) (bvudiv Start_4 Start_5)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000001 y (bvand Start_3 Start_4) (bvadd Start Start_4) (bvmul Start Start_3) (bvshl Start_1 Start) (bvlshr Start_4 Start_5)))
   (Start_7 (_ BitVec 8) (y (bvudiv Start_2 Start_10) (bvshl Start_5 Start_8) (bvlshr Start_11 Start_10) (ite StartBool_2 Start_4 Start_9)))
   (Start_13 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start_10) (bvneg Start_10) (bvadd Start_5 Start_2) (bvmul Start_3 Start_1) (bvudiv Start_6 Start_4) (bvurem Start_5 Start) (bvshl Start_7 Start_6) (bvlshr Start_10 Start_8)))
   (Start_6 (_ BitVec 8) (y #b00000001 (bvnot Start_2) (bvand Start_1 Start_7) (bvlshr Start_1 Start_3) (ite StartBool Start_8 Start)))
   (Start_5 (_ BitVec 8) (#b00000000 #b00000001 x #b10100101 (bvnot Start_2) (bvand Start_6 Start_5) (bvadd Start_3 Start_6) (bvudiv Start_2 Start_3) (bvurem Start Start_4) (bvshl Start_5 Start_1)))
   (Start_8 (_ BitVec 8) (x #b00000000 #b10100101 (bvnot Start_5) (bvneg Start_3) (bvudiv Start_9 Start_9)))
   (Start_1 (_ BitVec 8) (#b00000000 #b10100101 (bvand Start_8 Start_12) (bvor Start_3 Start_12) (bvmul Start_8 Start_3) (bvurem Start_13 Start_14) (bvshl Start_10 Start_2)))
   (Start_9 (_ BitVec 8) (x (bvurem Start_7 Start_9) (bvshl Start_8 Start_7)))
   (StartBool_2 Bool (true (or StartBool_2 StartBool_1) (bvult Start_4 Start_6)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvand Start_1 Start_10) (bvor Start_1 Start_6) (bvmul Start_4 Start_6)))
   (Start_4 (_ BitVec 8) (y #b10100101 (bvand Start_6 Start_7) (bvor Start_7 Start_9) (bvmul Start_1 Start_3) (bvshl Start_11 Start_5)))
   (Start_2 (_ BitVec 8) (#b10100101 x (bvand Start_1 Start_11) (bvor Start_6 Start_5) (bvadd Start_9 Start_12) (bvmul Start Start_13) (bvshl Start_3 Start_13) (bvlshr Start_12 Start_13)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor (bvneg #b10100101) x)))

(check-synth)
