(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_16 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_6 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_5 Bool) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 #b00000001 x (bvnot Start) (bvneg Start_1) (bvmul Start Start_2) (bvlshr Start_2 Start_1)))
   (StartBool Bool (true false (not StartBool) (and StartBool_1 StartBool_2) (bvult Start_9 Start_16)))
   (Start_16 (_ BitVec 8) (x #b00000000 (bvnot Start_4) (bvor Start_3 Start_5) (bvmul Start_1 Start_9) (bvudiv Start_9 Start_2) (bvurem Start_15 Start_2) (bvlshr Start_8 Start_11)))
   (Start_15 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_4)))
   (Start_12 (_ BitVec 8) (x (bvnot Start_3) (bvand Start_3 Start_7) (bvor Start_3 Start_7) (bvmul Start_2 Start_5) (bvudiv Start_6 Start_15) (bvurem Start_11 Start_13) (bvshl Start_14 Start_4)))
   (Start_14 (_ BitVec 8) (x (bvand Start_9 Start_1) (bvor Start_6 Start_13) (bvadd Start_9 Start_1) (bvurem Start_4 Start_13) (bvshl Start_14 Start_12) (bvlshr Start Start_14)))
   (Start_13 (_ BitVec 8) (y x (bvnot Start_5) (bvand Start_10 Start) (bvadd Start_9 Start_14) (bvurem Start_7 Start_14) (bvshl Start_3 Start) (ite StartBool_1 Start_14 Start_7)))
   (Start_1 (_ BitVec 8) (#b10100101 x #b00000001 (bvneg Start_11) (bvand Start_10 Start_12) (bvudiv Start_13 Start_8) (bvshl Start_4 Start_12) (ite StartBool_2 Start_4 Start)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_3) (bvor Start_4 Start_15) (bvmul Start_15 Start_5) (bvudiv Start_10 Start_15) (bvurem Start_8 Start_11) (bvlshr Start_4 Start_14) (ite StartBool_1 Start_8 Start_10)))
   (StartBool_1 Bool (true (not StartBool_2) (or StartBool_4 StartBool_1)))
   (StartBool_6 Bool (true (not StartBool_3) (or StartBool_1 StartBool_6)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvneg Start_2) (bvlshr Start_1 Start) (ite StartBool_1 Start_3 Start_4)))
   (Start_4 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start) (bvneg Start_1) (bvor Start Start) (bvadd Start_1 Start_1) (bvmul Start_2 Start_5) (bvudiv Start_4 Start_3) (bvurem Start_6 Start_4) (bvlshr Start_7 Start_3) (ite StartBool_1 Start_1 Start_4)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_2) (bvor Start_10 Start_2) (bvadd Start_3 Start_9) (bvudiv Start Start) (bvurem Start Start_6) (bvshl Start_1 Start) (bvlshr Start_4 Start_4) (ite StartBool_5 Start_1 Start_10)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_2) (bvmul Start_6 Start_1) (bvudiv Start_4 Start_7) (bvurem Start_8 Start_3) (ite StartBool_2 Start_3 Start_2)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvnot Start_5) (bvand Start_4 Start_3) (bvadd Start_9 Start_6) (bvudiv Start_2 Start_4) (bvlshr Start_6 Start_5)))
   (Start_9 (_ BitVec 8) (#b00000000 x (bvneg Start) (bvand Start_1 Start_5) (bvor Start_8 Start_2) (bvshl Start_7 Start_8) (ite StartBool_2 Start_4 Start_7)))
   (Start_7 (_ BitVec 8) (x #b10100101 (bvneg Start_1) (bvudiv Start_1 Start_4) (bvshl Start_3 Start_2) (bvlshr Start_5 Start_6)))
   (StartBool_4 Bool (false (or StartBool_2 StartBool_4) (bvult Start_3 Start_9)))
   (StartBool_5 Bool (true (not StartBool) (or StartBool StartBool_6)))
   (Start_5 (_ BitVec 8) (y x #b00000001 (bvnot Start_3) (bvneg Start_6) (bvand Start_4 Start_8) (bvudiv Start_5 Start_2) (bvshl Start_1 Start_2) (bvlshr Start Start_8) (ite StartBool_3 Start_8 Start_3)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_4 StartBool_1)))
   (Start_3 (_ BitVec 8) (y x (bvnot Start_6) (bvadd Start_2 Start_6) (bvudiv Start_2 Start_2) (bvurem Start_10 Start_4) (bvshl Start_3 Start_3) (ite StartBool_1 Start_9 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvshl x y) #b00000001)))

(check-synth)
