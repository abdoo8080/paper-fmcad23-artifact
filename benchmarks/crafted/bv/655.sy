(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_3 Bool) (Start_14 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_3 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 x (bvneg Start_1) (bvor Start_1 Start_2) (bvadd Start_3 Start_4) (bvmul Start_1 Start_1) (ite StartBool Start_3 Start)))
   (StartBool Bool (false true (not StartBool)))
   (Start_1 (_ BitVec 8) (#b00000000 (bvneg Start) (bvand Start_8 Start_4) (bvudiv Start_6 Start_6) (bvlshr Start Start)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvneg Start_3) (bvand Start_14 Start_3) (bvor Start_7 Start_1) (bvudiv Start_12 Start_5) (bvlshr Start_2 Start_10)))
   (StartBool_3 Bool (true false (and StartBool_1 StartBool)))
   (Start_14 (_ BitVec 8) (y (bvnot Start_1) (bvand Start_1 Start_4) (bvor Start_14 Start_7) (bvurem Start_13 Start_8) (bvlshr Start_1 Start_3)))
   (Start_9 (_ BitVec 8) (y #b00000001 (bvneg Start_1) (bvor Start_8 Start_1) (bvadd Start_1 Start) (bvudiv Start_6 Start_8) (bvshl Start_10 Start_7) (bvlshr Start_5 Start_8) (ite StartBool_1 Start_2 Start_10)))
   (Start_7 (_ BitVec 8) (x (bvand Start_7 Start_7) (bvudiv Start_1 Start_5) (bvurem Start Start_8) (bvshl Start_1 Start_9) (ite StartBool Start_4 Start_1)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_1) (bvneg Start_8) (bvand Start_8 Start_5) (bvmul Start_8 Start_3) (bvudiv Start_3 Start_10) (bvurem Start_10 Start_10) (bvshl Start_6 Start_6) (ite StartBool_2 Start_4 Start_7)))
   (Start_5 (_ BitVec 8) (#b10100101 y #b00000000 #b00000001 (bvor Start_8 Start_4) (bvudiv Start_4 Start_11) (bvshl Start_6 Start_1) (bvlshr Start_9 Start_3) (ite StartBool_3 Start_14 Start_14)))
   (StartBool_1 Bool (true false (and StartBool StartBool_1) (bvult Start_11 Start_10)))
   (Start_3 (_ BitVec 8) (#b00000000 y x #b10100101 (bvneg Start_12) (bvand Start_4 Start_14) (bvor Start_9 Start_4) (bvurem Start Start_14) (ite StartBool_2 Start_12 Start_7)))
   (StartBool_2 Bool (true (not StartBool_1) (and StartBool_1 StartBool_2) (bvult Start_3 Start_11)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_10) (bvand Start_2 Start_6) (bvor Start_7 Start_4) (bvadd Start_3 Start_1) (bvurem Start_11 Start_12)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvadd Start_8 Start_3) (bvudiv Start_13 Start_10) (bvshl Start_9 Start_13) (ite StartBool Start_6 Start_4)))
   (Start_10 (_ BitVec 8) (#b00000000 #b00000001 x #b10100101 y (bvand Start_12 Start_12) (bvadd Start_9 Start_7) (bvmul Start_13 Start_7) (bvshl Start_11 Start_4) (bvlshr Start_7 Start_8)))
   (Start_4 (_ BitVec 8) (#b00000000 #b10100101 x #b00000001 y (bvneg Start_4) (bvadd Start_4 Start_5) (bvmul Start_2 Start_6) (bvurem Start_7 Start_7)))
   (Start_8 (_ BitVec 8) (y x (bvnot Start_9) (bvand Start_10 Start) (bvurem Start_3 Start_7) (ite StartBool_2 Start_10 Start_1)))
   (Start_6 (_ BitVec 8) (#b00000001 y #b10100101 x (bvudiv Start_8 Start_10) (bvurem Start_3 Start_8) (ite StartBool Start_9 Start_1)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem #b00000001 (bvmul x y))))

(check-synth)
