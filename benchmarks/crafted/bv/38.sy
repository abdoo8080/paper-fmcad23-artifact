(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_11 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_5 Bool) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvand Start Start_1) (bvadd Start_1 Start_1) (bvmul Start_1 Start_1) (bvlshr Start_1 Start) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (true false (and StartBool_3 StartBool_5) (or StartBool_3 StartBool_4) (bvult Start_9 Start_11)))
   (Start_11 (_ BitVec 8) (#b00000001 x y (bvneg Start) (bvudiv Start_3 Start) (bvlshr Start_10 Start_8)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvand Start_6 Start_11) (bvurem Start_9 Start) (bvshl Start_6 Start_3) (ite StartBool_5 Start_2 Start)))
   (Start_5 (_ BitVec 8) (#b10100101 x y (bvor Start_6 Start_2) (bvadd Start_2 Start_3) (bvudiv Start_3 Start_3) (bvshl Start_7 Start_1) (bvlshr Start_6 Start)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvor Start_2 Start_1) (bvadd Start_2 Start) (bvudiv Start_1 Start_3) (bvlshr Start_1 Start) (ite StartBool_1 Start_3 Start_4)))
   (StartBool_5 Bool (true false (not StartBool_1) (and StartBool StartBool)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvor Start_4 Start_4) (bvudiv Start_5 Start_2) (bvurem Start_6 Start_5) (bvshl Start_2 Start_2) (ite StartBool Start_3 Start_2)))
   (StartBool_2 Bool (false (not StartBool_3) (and StartBool_4 StartBool_1) (or StartBool_2 StartBool_2)))
   (StartBool_4 Bool (false (not StartBool) (or StartBool_3 StartBool)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvor Start_3 Start_3) (bvadd Start_5 Start_3) (bvmul Start_1 Start_7) (ite StartBool_2 Start_2 Start_4)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_3 StartBool_4) (or StartBool_3 StartBool) (bvult Start_1 Start_1)))
   (Start_7 (_ BitVec 8) (#b10100101 y #b00000001 #b00000000 x (bvnot Start_7) (bvand Start_2 Start_4) (bvor Start_3 Start_2) (bvmul Start_7 Start_4) (bvudiv Start_4 Start_6) (bvurem Start_7 Start_7) (ite StartBool_4 Start_7 Start_3)))
   (Start_12 (_ BitVec 8) (x (bvneg Start_1) (bvand Start_3 Start) (bvor Start_7 Start_5) (bvadd Start_7 Start_1) (bvudiv Start_2 Start_4) (bvlshr Start_4 Start_1) (ite StartBool_5 Start_3 Start_13)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_1) (bvand Start Start_2) (bvmul Start_7 Start_5) (bvlshr Start_3 Start_1) (ite StartBool_4 Start_7 Start_4)))
   (Start_13 (_ BitVec 8) (x #b00000000 (bvnot Start_2) (bvand Start_3 Start_8) (bvurem Start_7 Start_3) (bvlshr Start_4 Start_9) (ite StartBool Start Start_6)))
   (Start_8 (_ BitVec 8) (y (bvadd Start_10 Start) (bvmul Start_7 Start_1) (bvudiv Start_2 Start_12) (bvurem Start_10 Start_13)))
   (StartBool_1 Bool (false true (not StartBool_4)))
   (Start_1 (_ BitVec 8) (x (bvand Start_8 Start_2) (bvor Start_8 Start_2) (bvmul Start_9 Start_9)))
   (Start_9 (_ BitVec 8) (#b00000000 y (bvneg Start_7) (bvor Start_9 Start_8) (bvshl Start_6 Start_1) (ite StartBool_4 Start_8 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvlshr #b00000001 y) x)))

(check-synth)
