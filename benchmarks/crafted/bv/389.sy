(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_8 Bool) (StartBool_6 Bool) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_7 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_3 Bool) (Start_5 (_ BitVec 8)) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (StartBool_2 Bool) (Start_8 (_ BitVec 8)) (StartBool_5 Bool) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvneg Start) (bvand Start Start) (bvudiv Start_1 Start_2) (bvshl Start Start_2)))
   (StartBool Bool (true false (not StartBool_5) (and StartBool_4 StartBool_2) (or StartBool_4 StartBool_7) (bvult Start_12 Start_8)))
   (StartBool_8 Bool (false (not StartBool_3) (or StartBool_3 StartBool_4) (bvult Start Start_4)))
   (StartBool_6 Bool (true (bvult Start_11 Start_5)))
   (Start_13 (_ BitVec 8) (#b00000000 (bvneg Start_12) (bvor Start_2 Start) (bvmul Start_8 Start_13) (bvudiv Start_13 Start_1) (bvurem Start_4 Start) (bvlshr Start_2 Start_10)))
   (Start_12 (_ BitVec 8) (y (bvnot Start_3) (bvneg Start_4) (bvor Start Start_4) (bvudiv Start_4 Start_8) (bvshl Start_8 Start_2) (bvlshr Start_12 Start_9)))
   (StartBool_7 Bool (false true (or StartBool_8 StartBool_7)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_3) (bvand Start Start_3) (bvmul Start_3 Start) (ite StartBool Start_2 Start_4)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvmul Start_5 Start_3) (bvudiv Start_6 Start) (bvshl Start Start_7) (bvlshr Start_5 Start_1)))
   (Start_3 (_ BitVec 8) (y (bvand Start_6 Start_1) (bvor Start_12 Start_1) (bvudiv Start_9 Start_7) (bvurem Start_13 Start_11) (bvshl Start_5 Start_11) (bvlshr Start Start_2) (ite StartBool Start Start_2)))
   (Start_10 (_ BitVec 8) (#b00000001 x (bvneg Start_1) (bvand Start_7 Start_9) (bvmul Start_5 Start_3) (bvudiv Start_7 Start_11)))
   (Start_1 (_ BitVec 8) (#b00000000 #b00000001 (bvand Start_1 Start) (bvlshr Start_11 Start_11) (ite StartBool_6 Start_3 Start_2)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 x y (bvnot Start_8) (bvneg Start) (bvurem Start_7 Start_6) (bvshl Start_5 Start_9) (bvlshr Start_5 Start) (ite StartBool Start_9 Start_10)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvor Start_9 Start_10) (bvmul Start_9 Start_2) (bvudiv Start_2 Start_10) (bvshl Start_7 Start_1) (bvlshr Start_2 Start_4) (ite StartBool_1 Start_10 Start_6)))
   (StartBool_1 Bool (true false (not StartBool_2) (and StartBool StartBool_3) (bvult Start_11 Start)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_3 StartBool_2) (or StartBool_3 StartBool_3) (bvult Start_11 Start_10)))
   (Start_5 (_ BitVec 8) (x y #b00000001 #b00000000 #b10100101 (bvnot Start_5) (bvadd Start_1 Start_2) (bvudiv Start_7 Start_12) (bvurem Start_2 Start_6) (bvshl Start_12 Start_11) (ite StartBool_4 Start_1 Start_11)))
   (StartBool_4 Bool (false (or StartBool_4 StartBool_4)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvneg Start_12) (bvand Start_1 Start_5) (bvadd Start_11 Start_2) (bvurem Start_3 Start_6) (bvlshr Start_5 Start_2)))
   (StartBool_2 Bool (true (and StartBool_5 StartBool) (bvult Start_8 Start_6)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvmul Start_5 Start_10) (bvshl Start Start_10) (ite StartBool_3 Start_12 Start_1)))
   (StartBool_5 Bool (true))
   (Start_9 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_8) (bvand Start_10 Start_4) (bvor Start_7 Start_7) (bvadd Start_2 Start_4) (bvurem Start_8 Start_7) (ite StartBool_2 Start_4 Start_1)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul x (bvurem y x))))

(check-synth)
