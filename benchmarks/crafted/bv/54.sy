(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (StartBool_4 Bool) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_1 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x #b00000000 #b00000001 (bvnot Start) (bvneg Start) (bvor Start Start) (bvmul Start_1 Start_2) (bvudiv Start_1 Start) (bvurem Start Start_2) (bvlshr Start_3 Start_3) (ite StartBool Start_3 Start_3)))
   (StartBool Bool (false true (not StartBool_4)))
   (StartBool_5 Bool (true (not StartBool_1) (and StartBool_5 StartBool_3)))
   (StartBool_4 Bool (true (not StartBool_3) (and StartBool StartBool) (or StartBool_3 StartBool_5)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvnot Start) (bvand Start_4 Start_1) (bvor Start_5 Start_1) (bvadd Start_2 Start_5) (bvudiv Start_2 Start_2) (bvurem Start_2 Start_3) (bvlshr Start_5 Start_1)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool StartBool_2) (or StartBool StartBool_3) (bvult Start_2 Start_4)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvadd Start_5 Start_1) (bvudiv Start Start_2) (bvlshr Start_4 Start_4) (ite StartBool_1 Start_5 Start_4)))
   (StartBool_2 Bool (true))
   (StartBool_3 Bool (true (not StartBool_2) (and StartBool_1 StartBool) (or StartBool_1 StartBool_2)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvurem Start Start_2) (bvlshr Start_4 Start_2)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvneg Start_4) (bvudiv Start_3 Start_2) (bvshl Start_1 Start_4)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_2) (bvand Start_1 Start_3) (bvurem Start_1 Start_4) (ite StartBool Start_4 Start_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv #b00000000 (bvshl y x))))

(check-synth)
