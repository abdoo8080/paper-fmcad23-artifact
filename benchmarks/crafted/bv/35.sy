(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 x #b00000001 (bvneg Start_1) (bvmul Start_1 Start_1)))
   (StartBool Bool (false (or StartBool_1 StartBool) (bvult Start_3 Start_13)))
   (Start_15 (_ BitVec 8) (#b00000001 (bvand Start_11 Start_13) (bvadd Start_15 Start) (bvmul Start_9 Start_10) (bvudiv Start_4 Start_6) (bvurem Start_9 Start_9)))
   (Start_14 (_ BitVec 8) (x (bvneg Start_5) (bvor Start_3 Start_10) (bvadd Start_11 Start_7) (bvmul Start_12 Start_15) (bvudiv Start_11 Start_14) (bvurem Start_15 Start_13) (bvshl Start_2 Start_9)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvor Start_2 Start_9) (bvadd Start_9 Start_12) (ite StartBool_1 Start_13 Start_11)))
   (Start_13 (_ BitVec 8) (x #b10100101 (bvneg Start_9) (bvand Start_13 Start_13) (bvadd Start_10 Start_8) (bvshl Start_9 Start_14) (bvlshr Start_14 Start_4)))
   (Start_7 (_ BitVec 8) (#b00000001 y (bvnot Start_6) (bvneg Start_11) (bvor Start_9 Start_8) (bvadd Start_9 Start_4) (bvmul Start_9 Start) (bvurem Start_9 Start_3)))
   (Start_12 (_ BitVec 8) (#b00000001 (bvor Start_9 Start_4) (bvmul Start_8 Start_6) (bvshl Start_7 Start_4)))
   (Start_3 (_ BitVec 8) (x (bvnot Start_1) (bvor Start Start_2) (bvadd Start_3 Start_3) (bvudiv Start_4 Start) (bvurem Start_2 Start_2) (ite StartBool_1 Start_3 Start_5)))
   (Start_1 (_ BitVec 8) (#b10100101 x #b00000001 y (bvnot Start_2) (bvand Start_2 Start_2) (bvor Start_1 Start_2) (bvadd Start Start_3) (bvudiv Start_2 Start_1) (bvshl Start_2 Start)))
   (Start_6 (_ BitVec 8) (#b00000000 #b10100101 y x #b00000001 (bvnot Start) (bvneg Start_4) (bvand Start_7 Start_8) (bvmul Start_9 Start_3) (bvshl Start_9 Start) (ite StartBool_1 Start_1 Start_4)))
   (Start_5 (_ BitVec 8) (y (bvneg Start_6) (bvand Start_3 Start_6) (bvudiv Start_1 Start_2)))
   (Start_8 (_ BitVec 8) (#b10100101 #b00000001 (bvneg Start_2) (bvand Start_9 Start_4) (bvadd Start_6 Start_10) (bvmul Start_3 Start_9) (bvudiv Start_8 Start_1) (bvshl Start_8 Start_5) (bvlshr Start_5 Start_1)))
   (Start_9 (_ BitVec 8) (y (bvneg Start_1) (bvand Start_7 Start_9) (bvmul Start_2 Start_6) (bvurem Start_5 Start_7) (bvshl Start_5 Start_1)))
   (Start_10 (_ BitVec 8) (x #b00000001 #b10100101 (bvand Start_3 Start_5) (bvmul Start_10 Start_6) (bvudiv Start_3 Start_3) (bvurem Start_5 Start_3) (bvshl Start_7 Start_10) (ite StartBool_1 Start_6 Start_2)))
   (Start_11 (_ BitVec 8) (x #b10100101 #b00000001 #b00000000 y (bvnot Start_9) (bvand Start_9 Start_8) (bvadd Start_7 Start_4) (bvmul Start_10 Start_3) (bvudiv Start_4 Start_6) (bvlshr Start_7 Start_4)))
   (StartBool_1 Bool (false (or StartBool StartBool) (bvult Start_8 Start_4)))
   (Start_4 (_ BitVec 8) (x (bvnot Start_12) (bvneg Start_2) (bvadd Start_8 Start_12) (bvmul Start_12 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvurem y (bvneg #b10100101)) #b10100101)))

(check-synth)
