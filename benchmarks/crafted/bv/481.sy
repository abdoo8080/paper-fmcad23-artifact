(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (Start_15 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_5 Bool) (Start_2 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool) (Start_12 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_4 Bool) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 #b00000000 x (bvnot Start) (bvneg Start) (bvor Start Start_1) (bvadd Start Start_1) (bvmul Start Start_1) (bvudiv Start Start) (bvshl Start Start_2) (bvlshr Start Start_1)))
   (StartBool Bool (true (and StartBool_6 StartBool_1)))
   (StartBool_6 Bool (false (or StartBool_2 StartBool_2)))
   (Start_15 (_ BitVec 8) (#b00000001 (bvnot Start_7) (bvand Start_7 Start_7) (bvor Start_14 Start_7) (bvadd Start_2 Start_12) (bvudiv Start_7 Start_3) (ite StartBool_4 Start_7 Start_1)))
   (Start_13 (_ BitVec 8) (x #b10100101 (bvneg Start_4) (bvand Start Start_6) (bvor Start_13 Start_13) (bvadd Start_2 Start_14) (bvlshr Start_4 Start_7) (ite StartBool_4 Start_15 Start_3)))
   (Start_1 (_ BitVec 8) (x (bvneg Start_8) (bvand Start_5 Start_12) (bvadd Start_13 Start_4) (bvmul Start_1 Start_1) (bvudiv Start_8 Start_3) (bvurem Start_12 Start_9) (bvlshr Start_7 Start_10)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_5)))
   (Start_14 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 x y (bvnot Start_5) (bvneg Start_16) (bvadd Start_13 Start_14) (bvshl Start_10 Start_9)))
   (StartBool_5 Bool (false true (and StartBool_6 StartBool_3) (bvult Start_11 Start_14)))
   (Start_2 (_ BitVec 8) (#b00000001 #b10100101 y (bvnot Start_3) (bvneg Start_4) (bvand Start_2 Start_2) (bvmul Start_3 Start_5) (bvshl Start_1 Start_3) (bvlshr Start_1 Start_2) (ite StartBool_1 Start_1 Start_6)))
   (StartBool_1 Bool (false true (or StartBool_2 StartBool_3) (bvult Start Start_1)))
   (StartBool_2 Bool (false (or StartBool_3 StartBool_2) (bvult Start_2 Start)))
   (Start_12 (_ BitVec 8) (x (bvnot Start_7) (bvneg Start) (bvand Start_1 Start_9) (bvmul Start_8 Start_2)))
   (Start_5 (_ BitVec 8) (#b00000000 y #b10100101 x #b00000001 (bvnot Start_5) (bvand Start_1 Start_5) (bvmul Start_4 Start_5) (bvurem Start_6 Start_5) (bvlshr Start_5 Start_1) (ite StartBool_2 Start Start_5)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_1) (or StartBool_2 StartBool_1) (bvult Start_15 Start_3)))
   (Start_4 (_ BitVec 8) (#b00000000 #b10100101 x (bvand Start Start_6) (bvadd Start_2 Start_7) (bvurem Start_7 Start_5) (bvlshr Start_8 Start_5) (ite StartBool_3 Start_6 Start_7)))
   (Start_8 (_ BitVec 8) (x (bvnot Start_1) (bvneg Start_4) (bvand Start_9 Start) (bvor Start_7 Start_6) (bvadd Start Start_1) (bvudiv Start Start_3) (bvurem Start_4 Start_1) (bvshl Start_1 Start_10)))
   (Start_16 (_ BitVec 8) (#b10100101 x (bvnot Start_11) (bvneg Start_9) (bvor Start_10 Start_4) (bvadd Start_7 Start_1)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000000 y x #b00000001 (bvand Start_1 Start_9) (bvadd Start_3 Start_9) (bvurem Start_8 Start_1) (ite StartBool_1 Start_4 Start_2)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvneg Start_4) (bvudiv Start_4 Start_1) (bvurem Start_10 Start_3)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_1 StartBool_2) (or StartBool StartBool_1) (bvult Start_3 Start_6)))
   (Start_7 (_ BitVec 8) (#b00000001 y (bvnot Start_5) (bvneg Start_7) (bvadd Start_8 Start_6) (bvmul Start_4 Start_8) (bvudiv Start_2 Start_9) (bvurem Start Start_4) (bvshl Start_6 Start_6) (bvlshr Start_9 Start_7)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_8) (bvor Start_8 Start_9) (bvmul Start_3 Start_7) (bvurem Start_12 Start_8) (bvshl Start_4 Start_2) (bvlshr Start_3 Start_2)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvadd Start_11 Start_3) (bvmul Start_4 Start_6) (bvudiv Start Start_11) (bvurem Start Start_3) (bvshl Start_3 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvmul y (bvudiv y y)))))

(check-synth)
