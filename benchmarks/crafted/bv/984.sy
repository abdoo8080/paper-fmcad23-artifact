(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_8 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (#b00000000 (bvand Start_1 Start_1) (bvor Start_1 Start_1) (bvadd Start_2 Start_2) (bvurem Start Start) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (true (not StartBool_2) (and StartBool StartBool_3) (or StartBool_3 StartBool_2) (bvult Start_6 Start_5)))
   (Start_1 (_ BitVec 8) (x #b10100101 #b00000001 y #b00000000 (bvneg Start_7) (bvor Start_4 Start_11) (bvadd Start_6 Start_10) (bvudiv Start_12 Start_2) (ite StartBool Start_2 Start_10)))
   (Start_12 (_ BitVec 8) (x #b00000001 (bvnot Start_5) (bvadd Start_10 Start_4) (bvmul Start_12 Start_12) (bvurem Start_12 Start_4) (bvshl Start_2 Start_7)))
   (Start_3 (_ BitVec 8) (x (bvnot Start_5) (bvneg Start_6) (bvurem Start_10 Start_10) (bvshl Start_6 Start_1) (bvlshr Start_4 Start_1) (ite StartBool_1 Start_12 Start_8)))
   (StartBool_4 Bool (false true (not StartBool_1) (or StartBool_3 StartBool)))
   (StartBool_1 Bool (true (not StartBool_1) (bvult Start Start_1)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvneg Start) (bvadd Start_3 Start_3) (bvmul Start_3 Start) (bvudiv Start_2 Start_1) (ite StartBool_2 Start_4 Start_5)))
   (Start_5 (_ BitVec 8) (#b00000001 #b10100101 (bvnot Start_1) (bvneg Start_5) (bvand Start_3 Start_3) (bvor Start Start_3) (bvadd Start_4 Start) (bvmul Start Start_6) (bvshl Start_5 Start) (bvlshr Start_1 Start_5) (ite StartBool Start_4 Start_6)))
   (Start_6 (_ BitVec 8) (#b10100101 x y #b00000001 (bvnot Start_4) (bvmul Start_1 Start_4) (bvurem Start_7 Start_3) (ite StartBool_3 Start_4 Start_1)))
   (StartBool_3 Bool (true (not StartBool) (bvult Start_2 Start_2)))
   (Start_8 (_ BitVec 8) (#b10100101 #b00000001 x (bvnot Start_4) (bvor Start_3 Start_7) (bvadd Start_7 Start_5) (bvmul Start_8 Start_5)))
   (Start_4 (_ BitVec 8) (y #b00000001 #b10100101 (bvand Start Start_3) (bvor Start_3 Start) (bvadd Start_9 Start_5) (bvshl Start_6 Start_2)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000000 (bvneg Start_7) (bvand Start Start_4) (bvor Start_1 Start_8) (bvmul Start Start_4) (bvudiv Start_1 Start_2) (bvurem Start_7 Start_5)))
   (Start_9 (_ BitVec 8) (x #b00000000 (bvnot Start_1) (bvor Start_1 Start_6) (bvudiv Start_10 Start_5) (bvurem Start_1 Start_9) (bvlshr Start_10 Start_1)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_9) (bvadd Start_7 Start_8) (bvmul Start_9 Start) (bvlshr Start_8 Start_11) (ite StartBool_2 Start Start_1)))
   (Start_11 (_ BitVec 8) (y #b00000001 (bvnot Start_9) (bvneg Start_8) (bvmul Start_2 Start_3) (bvudiv Start_10 Start_1) (bvurem Start_4 Start_11) (bvlshr Start_8 Start_11)))
   (StartBool_2 Bool (true false (not StartBool_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv #b00000000 (bvlshr (bvlshr #b10100101 x) (bvlshr y x)))))

(check-synth)
