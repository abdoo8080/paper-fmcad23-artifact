(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (StartBool_1 Bool) (Start_14 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_4 Bool) (Start_4 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (StartBool_2 Bool) (Start_3 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_5 Bool))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvneg Start_1) (bvand Start_1 Start_1) (bvadd Start_1 Start)))
   (StartBool Bool (false true (bvult Start_2 Start_9)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start_15) (bvneg Start_12) (bvand Start_11 Start_4) (bvor Start_12 Start_4) (bvadd Start_7 Start_5) (bvurem Start_10 Start_15)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvneg Start_4) (bvand Start_4 Start_12) (bvor Start Start_3) (bvudiv Start_3 Start_1) (bvshl Start_9 Start_8) (bvlshr Start_11 Start_11)))
   (Start_7 (_ BitVec 8) (#b10100101 x #b00000000 (bvneg Start_12) (bvmul Start_7 Start_5) (bvlshr Start_4 Start_4)))
   (Start_8 (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_8) (bvand Start_6 Start_3) (bvor Start Start_10) (bvlshr Start_2 Start_6) (ite StartBool_4 Start_11 Start_2)))
   (Start_1 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvor Start Start_1) (bvadd Start_2 Start) (bvudiv Start_3 Start_2) (bvurem Start_1 Start_3) (bvshl Start_4 Start_4) (ite StartBool_1 Start_3 Start_5)))
   (Start_5 (_ BitVec 8) (y #b00000001 (bvor Start Start_6) (bvadd Start_5 Start) (bvmul Start_6 Start_2) (bvlshr Start_1 Start_6) (ite StartBool_2 Start Start_3)))
   (Start_6 (_ BitVec 8) (y #b10100101 x (bvor Start_5 Start_6) (bvadd Start Start) (bvudiv Start_3 Start_6) (bvurem Start_3 Start_1) (bvshl Start_4 Start) (bvlshr Start_1 Start_2) (ite StartBool Start_2 Start_5)))
   (StartBool_3 Bool (false true (not StartBool_2)))
   (Start_2 (_ BitVec 8) (x (bvneg Start_2) (bvand Start_4 Start_9) (bvor Start_13 Start_8) (bvadd Start_1 Start_4) (bvurem Start_1 Start_9) (bvlshr Start_14 Start)))
   (StartBool_1 Bool (true (not StartBool_3) (or StartBool_3 StartBool_4)))
   (Start_14 (_ BitVec 8) (y (bvneg Start_2) (bvor Start_12 Start) (bvadd Start_12 Start_2) (ite StartBool_3 Start_13 Start_3)))
   (Start_11 (_ BitVec 8) (#b10100101 (bvnot Start) (bvor Start_6 Start_11) (bvadd Start_6 Start_2) (bvshl Start_11 Start_7) (ite StartBool_1 Start_2 Start_1)))
   (StartBool_4 Bool (false (not StartBool_2) (or StartBool_4 StartBool) (bvult Start_6 Start_4)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start_1) (bvneg Start) (bvadd Start_2 Start) (bvurem Start_4 Start_6)))
   (Start_15 (_ BitVec 8) (#b10100101 (bvadd Start_9 Start_2) (bvudiv Start_5 Start_8)))
   (StartBool_2 Bool (false true (not StartBool)))
   (Start_3 (_ BitVec 8) (#b10100101 y x (bvnot Start_7) (bvor Start Start_5) (bvudiv Start_4 Start_1) (bvlshr Start_8 Start_9)))
   (Start_10 (_ BitVec 8) (y x (bvneg Start_7) (bvadd Start_6 Start_8) (bvurem Start_3 Start_2)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvadd Start_5 Start_8) (bvudiv Start Start_7) (bvlshr Start_9 Start_7) (ite StartBool_5 Start Start_10)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_5) (bvult Start_3 Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvlshr #b00000001 y) x)))

(check-synth)
