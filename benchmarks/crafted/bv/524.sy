(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_8 Bool) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_4 Bool) (Start_4 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_3 Bool) (Start_6 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_7 Bool))
  ((Start (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvor Start_2 Start_3) (bvudiv Start Start) (bvshl Start Start_4) (ite StartBool Start_3 Start_4)))
   (StartBool Bool (false (not StartBool_8) (and StartBool_5 StartBool_2) (or StartBool StartBool_4)))
   (StartBool_8 Bool (false true (or StartBool_8 StartBool_5)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start_7) (bvneg Start_8) (bvand Start_6 Start_9) (bvshl Start_5 Start_1) (bvlshr Start_6 Start) (ite StartBool_2 Start_5 Start_8)))
   (Start_5 (_ BitVec 8) (#b10100101 x (bvnot Start_5) (bvand Start_2 Start_4) (bvor Start_4 Start_3) (bvmul Start Start_9) (bvudiv Start_4 Start_8) (bvurem Start_9 Start_3) (bvshl Start_7 Start_2)))
   (Start_2 (_ BitVec 8) (#b10100101 x (bvnot Start_5) (bvor Start_2 Start_3) (bvadd Start_4 Start_8) (bvurem Start_1 Start_8) (bvshl Start_2 Start_4) (ite StartBool Start_7 Start_9)))
   (StartBool_6 Bool (true (not StartBool_7) (and StartBool_2 StartBool_3)))
   (StartBool_4 Bool (false (not StartBool_5) (and StartBool_7 StartBool_4) (or StartBool_3 StartBool_7) (bvult Start_1 Start_9)))
   (Start_4 (_ BitVec 8) (#b00000001 #b10100101 (bvnot Start) (bvudiv Start_3 Start_1) (bvshl Start_4 Start_1)))
   (Start_8 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 x y (bvnot Start_7) (bvand Start_9 Start_5) (bvor Start_5 Start_9) (bvmul Start_3 Start_2) (bvudiv Start_8 Start) (bvshl Start_3 Start_5) (ite StartBool_1 Start_8 Start)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvneg Start) (bvadd Start Start_6) (bvudiv Start_1 Start_5) (bvurem Start_2 Start_6) (bvshl Start_5 Start) (ite StartBool Start_4 Start_7)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvnot Start_1) (bvadd Start_2 Start_3) (bvudiv Start_7 Start_2) (bvurem Start_7 Start_6) (bvshl Start_7 Start_8) (ite StartBool Start_4 Start_8)))
   (StartBool_1 Bool (true false (not StartBool_1) (or StartBool StartBool) (bvult Start_4 Start_5)))
   (Start_9 (_ BitVec 8) (#b00000000 x #b10100101 #b00000001 y (bvneg Start_1) (bvand Start_2 Start_9) (bvadd Start_6 Start_3) (bvudiv Start_7 Start_6) (bvshl Start_8 Start_3) (ite StartBool_2 Start_6 Start_3)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_2 StartBool_1) (bvult Start_3 Start_6)))
   (StartBool_3 Bool (true false (not StartBool_4) (or StartBool_2 StartBool_5) (bvult Start_1 Start_4)))
   (Start_6 (_ BitVec 8) (x (bvneg Start_8) (bvand Start_9 Start) (bvor Start_2 Start_6) (bvudiv Start_1 Start_5) (bvurem Start Start_6) (bvshl Start_4 Start) (bvlshr Start_4 Start) (ite StartBool_3 Start_6 Start_8)))
   (StartBool_5 Bool (false true (not StartBool_1) (or StartBool_6 StartBool_5) (bvult Start_6 Start_7)))
   (StartBool_7 Bool (true false (not StartBool_3) (and StartBool StartBool_1) (or StartBool_2 StartBool_7) (bvult Start_5 Start_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvor #b10100101 (bvneg x)) (bvudiv #b00000001 x))))

(check-synth)
