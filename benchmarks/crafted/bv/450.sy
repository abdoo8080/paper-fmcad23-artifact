(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_6 Bool) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_5 Bool) (Start_6 (_ BitVec 8)) (StartBool_2 Bool) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_4 Bool) (Start_10 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_1 Bool) (StartBool_7 Bool))
  ((Start (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_1) (bvadd Start Start) (bvshl Start Start_2) (bvlshr Start Start_1) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (false (and StartBool_5 StartBool_5) (or StartBool StartBool_2)))
   (Start_1 (_ BitVec 8) (#b10100101 x #b00000000 (bvnot Start_1) (bvneg Start_2) (bvor Start_10 Start_12) (bvudiv Start Start_11) (bvurem Start_12 Start_11) (bvshl Start_11 Start_3) (bvlshr Start_1 Start_4)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvneg Start_9) (bvand Start_5 Start_4) (bvor Start_7 Start_3) (bvadd Start_13 Start) (bvudiv Start Start_4) (bvshl Start_12 Start_5) (bvlshr Start Start_9) (ite StartBool_7 Start_8 Start_3)))
   (Start_13 (_ BitVec 8) (#b00000001 (bvnot Start_12) (bvneg Start_8) (bvor Start_8 Start_6) (bvmul Start_12 Start_6) (bvudiv Start_7 Start_10) (bvshl Start_4 Start_9) (bvlshr Start_6 Start_7)))
   (Start_12 (_ BitVec 8) (y (bvnot Start) (bvand Start_5 Start_1) (bvor Start_10 Start_7) (bvadd Start_1 Start_3) (bvshl Start Start_9)))
   (Start_4 (_ BitVec 8) (x #b10100101 #b00000001 #b00000000 y (bvand Start Start_9) (bvmul Start_9 Start) (bvurem Start_11 Start_1) (bvshl Start_3 Start_6) (bvlshr Start_7 Start_10) (ite StartBool_7 Start_10 Start)))
   (Start_11 (_ BitVec 8) (x (bvnot Start_1) (bvadd Start_1 Start_7) (bvudiv Start_5 Start_6) (bvurem Start_5 Start_4) (bvshl Start Start_1) (ite StartBool_1 Start_12 Start_5)))
   (StartBool_6 Bool (false true (or StartBool_5 StartBool_5) (bvult Start Start_3)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_3) (bvand Start_1 Start_1) (bvadd Start_1 Start_4) (bvshl Start_4 Start_5)))
   (Start_5 (_ BitVec 8) (x (bvnot Start_6) (bvneg Start_6) (bvand Start_6 Start_3) (bvor Start_5 Start_4) (ite StartBool_1 Start Start_5)))
   (StartBool_5 Bool (true false (not StartBool_1)))
   (Start_6 (_ BitVec 8) (#b00000000 #b00000001 (bvmul Start_4 Start_9) (bvlshr Start_10 Start_10)))
   (StartBool_2 Bool (false true (not StartBool_3) (and StartBool_4 StartBool_2) (or StartBool_3 StartBool_4) (bvult Start_4 Start_7)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_2) (bvand Start Start_8) (bvor Start_3 Start_2) (bvadd Start_8 Start_4) (bvudiv Start_6 Start_3) (bvurem Start_1 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvnot Start) (bvor Start_1 Start_2) (bvadd Start_5 Start_6) (bvmul Start_9 Start_4) (bvurem Start_9 Start) (bvshl Start_4 Start_3) (bvlshr Start_4 Start_2) (ite StartBool Start_6 Start)))
   (Start_8 (_ BitVec 8) (#b00000000 x (bvnot Start_8) (bvneg Start_8) (bvor Start Start_7) (bvmul Start_9 Start_6)))
   (StartBool_4 Bool (true (and StartBool_5 StartBool_6) (bvult Start_5 Start_5)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvadd Start_3 Start_11) (bvurem Start_11 Start_9) (bvlshr Start_1 Start) (ite StartBool_6 Start_5 Start_10)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_7 StartBool_3)))
   (StartBool_1 Bool (false (not StartBool_2) (bvult Start_4 Start_2)))
   (StartBool_7 Bool (false (not StartBool_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvlshr #b10100101 y) #b00000001)))

(check-synth)
