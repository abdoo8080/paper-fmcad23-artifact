(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_5 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_2 Bool) (Start_4 (_ BitVec 8)) (StartBool_6 Bool) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 (bvneg Start_1) (bvand Start Start) (bvadd Start Start_1) (bvudiv Start_1 Start_1) (bvurem Start Start_1) (bvshl Start_2 Start_1) (bvlshr Start_2 Start) (ite StartBool_1 Start_3 Start_1)))
   (StartBool Bool (true))
   (Start_1 (_ BitVec 8) (x (bvneg Start_2) (bvor Start Start_4) (bvadd Start_2 Start_2) (bvudiv Start_4 Start_2) (bvurem Start_4 Start_2) (bvshl Start_4 Start_4)))
   (StartBool_3 Bool (false true (bvult Start_4 Start_3)))
   (StartBool_5 Bool (true (or StartBool_3 StartBool) (bvult Start_2 Start_4)))
   (StartBool_1 Bool (true (and StartBool_6 StartBool_6) (bvult Start_2 Start_4)))
   (StartBool_4 Bool (true (not StartBool_2) (or StartBool_5 StartBool_3)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool_4 StartBool) (bvult Start_3 Start_1)))
   (Start_4 (_ BitVec 8) (#b10100101 #b00000000 (bvneg Start_4) (bvmul Start_3 Start_3) (bvudiv Start_4 Start) (bvshl Start_1 Start_1) (ite StartBool_2 Start_3 Start)))
   (StartBool_6 Bool (true (not StartBool_6) (bvult Start_1 Start_3)))
   (Start_3 (_ BitVec 8) (#b00000000 x y (bvneg Start_2) (bvadd Start_1 Start_2) (bvudiv Start_2 Start_2) (bvurem Start_3 Start) (bvshl Start Start_1) (bvlshr Start_4 Start_1)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvand Start_2 Start_3) (bvor Start_1 Start_2) (bvmul Start Start_3) (bvudiv Start_1 Start) (bvshl Start_1 Start_4) (bvlshr Start_3 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr x (bvshl y x))))

(check-synth)
