(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_14 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_4 Bool) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool) (StartBool_3 Bool) (Start_12 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 (bvnot Start) (bvneg Start_1) (bvand Start_1 Start) (bvor Start_1 Start_1) (bvurem Start_1 Start) (bvshl Start_1 Start_2) (bvlshr Start_1 Start_2)))
   (StartBool Bool (false true (and StartBool_4 StartBool_4) (bvult Start_7 Start_6)))
   (Start_14 (_ BitVec 8) (#b10100101 (bvadd Start_8 Start_2) (bvudiv Start_9 Start_6) (bvshl Start_3 Start_14) (ite StartBool_3 Start_10 Start_3)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvand Start_13 Start_9) (bvor Start_8 Start_5) (bvadd Start_8 Start_8) (bvmul Start_2 Start_2) (bvudiv Start_1 Start_13) (bvshl Start Start_8) (ite StartBool_1 Start_3 Start_4)))
   (Start_1 (_ BitVec 8) (#b00000001 #b00000000 (bvand Start_13 Start_2) (bvadd Start_11 Start_7) (bvmul Start_12 Start_5) (bvudiv Start_1 Start_5) (bvlshr Start_8 Start_5) (ite StartBool_4 Start_6 Start_13)))
   (Start_10 (_ BitVec 8) (x (bvnot Start_6) (bvneg Start_9) (bvor Start Start_3) (bvmul Start_7 Start_4) (bvurem Start_9 Start_1) (bvlshr Start_3 Start)))
   (Start_2 (_ BitVec 8) (x (bvor Start_1 Start_2) (bvmul Start Start_3) (bvudiv Start_4 Start_4)))
   (StartBool_4 Bool (false (and StartBool StartBool_2) (or StartBool_3 StartBool)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvor Start_6 Start_7) (bvadd Start Start) (bvmul Start_5 Start_7) (bvudiv Start_10 Start_2)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_2) (bvneg Start_3) (bvor Start_5 Start_1) (bvadd Start_2 Start_3) (bvlshr Start_2 Start_3)))
   (Start_4 (_ BitVec 8) (#b10100101 #b00000001 (bvneg Start_4) (bvand Start_3 Start_3) (bvor Start_4 Start) (bvmul Start_1 Start_5) (bvshl Start_6 Start_2) (bvlshr Start_3 Start_2) (ite StartBool Start_4 Start_1)))
   (Start_7 (_ BitVec 8) (#b00000001 #b10100101 (bvneg Start_9) (bvand Start_2 Start_4) (bvor Start_2 Start_7) (bvadd Start_9 Start_9) (bvshl Start_11 Start_8) (bvlshr Start_7 Start_8) (ite StartBool_2 Start_8 Start_12)))
   (Start_3 (_ BitVec 8) (#b00000000 x #b10100101 (bvnot Start_8) (bvand Start_6 Start) (bvor Start_3 Start_2) (bvadd Start_4 Start_12) (bvmul Start_13 Start_10) (bvurem Start_4 Start_9) (bvlshr Start Start_14) (ite StartBool_2 Start_1 Start_7)))
   (Start_5 (_ BitVec 8) (x (bvneg Start_5) (bvor Start_7 Start_3) (bvadd Start_5 Start_6) (bvmul Start_1 Start_4) (bvurem Start Start_8) (bvshl Start_3 Start) (ite StartBool Start_8 Start_6)))
   (Start_13 (_ BitVec 8) (#b00000000 (bvadd Start Start_9) (bvmul Start_10 Start_7) (bvudiv Start_4 Start_5) (bvshl Start_2 Start_8)))
   (Start_8 (_ BitVec 8) (x (bvor Start_7 Start_1) (bvadd Start_1 Start_8) (bvmul Start_9 Start_2) (bvudiv Start_3 Start) (bvurem Start_3 Start_5) (bvshl Start_3 Start_7) (ite StartBool_1 Start Start_3)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_2)))
   (StartBool_2 Bool (true false (not StartBool) (and StartBool_3 StartBool_2) (bvult Start_7 Start_8)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool)))
   (Start_12 (_ BitVec 8) (y #b00000001 #b10100101 x (bvnot Start_4) (bvand Start_9 Start_7) (bvor Start_7 Start_13) (bvmul Start_3 Start_2) (bvurem Start_8 Start_7) (ite StartBool_2 Start_2 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvand (bvadd #b00000001 #b00000001) y) y)))

(check-synth)
