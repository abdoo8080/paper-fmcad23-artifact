(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_17 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (StartBool_5 Bool) (Start_13 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_3 (_ BitVec 8)) (StartBool_1 Bool) (Start_15 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_3 Bool) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_4 Bool))
  ((Start (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start) (bvand Start_1 Start_1) (bvor Start Start_2) (bvadd Start_1 Start_3) (bvmul Start_4 Start_5) (bvudiv Start_6 Start_2) (bvurem Start_5 Start_5) (bvshl Start_6 Start_7)))
   (StartBool Bool (false (not StartBool_3) (bvult Start_3 Start)))
   (Start_17 (_ BitVec 8) (#b00000000 y #b00000001 x (bvnot Start_6) (bvmul Start_4 Start_4) (bvudiv Start_4 Start_15) (bvlshr Start_12 Start)))
   (Start_16 (_ BitVec 8) (x #b00000000 y (bvor Start_2 Start_7) (bvmul Start_4 Start_14) (bvudiv Start_17 Start_6) (bvshl Start_3 Start_9) (ite StartBool_5 Start_9 Start_13)))
   (StartBool_5 Bool (true false (not StartBool_4)))
   (Start_13 (_ BitVec 8) (#b00000001 y (bvnot Start_7) (bvor Start_1 Start) (bvmul Start_3 Start_10) (bvshl Start_5 Start_8) (bvlshr Start_12 Start_3)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvnot Start_1) (bvand Start_11 Start_14) (bvmul Start_12 Start_7) (bvurem Start_7 Start_14) (bvshl Start_1 Start) (bvlshr Start_12 Start_11)))
   (Start_14 (_ BitVec 8) (y #b10100101 x (bvand Start_3 Start_4) (bvadd Start_15 Start_4) (bvudiv Start_4 Start_8) (bvlshr Start_2 Start_5)))
   (Start_10 (_ BitVec 8) (y (bvand Start_5 Start_9) (bvor Start_5 Start_12) (bvmul Start_11 Start_6) (bvudiv Start_12 Start) (bvurem Start_12 Start_10) (bvlshr Start_12 Start_3) (ite StartBool_3 Start Start_7)))
   (StartBool_2 Bool (true (bvult Start_5 Start_6)))
   (Start_3 (_ BitVec 8) (y (bvand Start_8 Start_9) (bvor Start_13 Start_5) (bvurem Start_14 Start_2)))
   (StartBool_1 Bool (true false (or StartBool StartBool_2) (bvult Start_1 Start_7)))
   (Start_15 (_ BitVec 8) (#b00000001 #b00000000 (bvneg Start_12) (bvor Start_3 Start_2) (bvmul Start_2 Start_5) (bvurem Start_6 Start_3) (bvlshr Start_9 Start_9) (ite StartBool_1 Start_9 Start_11)))
   (Start_4 (_ BitVec 8) (#b00000000 y x #b00000001 #b10100101 (bvneg Start_2) (bvand Start_8 Start_2) (bvor Start_3 Start_1) (bvadd Start_1 Start_2) (bvudiv Start_7 Start_9) (bvlshr Start_10 Start_11)))
   (StartBool_3 Bool (false true (and StartBool_1 StartBool_2)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvneg Start) (bvudiv Start_9 Start_7)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvor Start_1 Start_8) (bvmul Start_2 Start_1) (bvurem Start_2 Start) (bvshl Start_3 Start_9) (bvlshr Start_1 Start_4) (ite StartBool_3 Start Start_2)))
   (Start_5 (_ BitVec 8) (x (bvnot Start_6) (bvurem Start_9 Start_3) (bvshl Start Start_5) (bvlshr Start_9 Start_6)))
   (Start_7 (_ BitVec 8) (#b00000000 #b10100101 (bvneg Start_1) (bvadd Start_8 Start_3) (bvurem Start_5 Start_7) (bvlshr Start_2 Start_1) (ite StartBool_1 Start_2 Start_4)))
   (Start_11 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start_4) (bvmul Start_11 Start_9) (bvurem Start_12 Start_6) (bvshl Start Start_5) (bvlshr Start_7 Start_8)))
   (Start_1 (_ BitVec 8) (#b00000000 (bvneg Start) (bvor Start_2 Start_14) (bvshl Start_16 Start_1)))
   (Start_6 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvneg Start_5) (bvlshr Start_4 Start_6)))
   (Start_12 (_ BitVec 8) (y #b00000000 #b10100101 x #b00000001 (bvnot Start_1) (bvor Start_10 Start_5) (ite StartBool_4 Start_7 Start_3)))
   (StartBool_4 Bool (false))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl #b00000001 (bvneg (bvmul y y)))))

(check-synth)
