(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_8 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_4 Bool) (StartBool_5 Bool) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_7 Bool) (StartBool_3 Bool) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y #b00000001 x (bvneg Start) (bvand Start Start) (bvor Start Start_1) (bvmul Start_1 Start_2) (bvurem Start_2 Start_2) (bvshl Start_1 Start_1) (ite StartBool_1 Start_2 Start_3)))
   (StartBool Bool (true false (and StartBool_3 StartBool_7)))
   (Start_8 (_ BitVec 8) (#b00000001 #b10100101 (bvand Start_8 Start_5) (bvadd Start Start_2) (bvlshr Start_4 Start)))
   (Start_12 (_ BitVec 8) (#b00000001 #b00000000 (bvneg Start_5) (bvor Start_10 Start_8) (bvudiv Start_11 Start_9) (bvurem Start_1 Start_12) (bvlshr Start_6 Start)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_4) (bvmul Start_6 Start_5) (bvlshr Start_6 Start_5) (ite StartBool Start_4 Start_12)))
   (Start_11 (_ BitVec 8) (x (bvneg Start) (bvor Start_11 Start) (bvadd Start_4 Start_9) (bvmul Start_5 Start_5) (ite StartBool_7 Start_9 Start_11)))
   (Start_7 (_ BitVec 8) (#b10100101 (bvneg Start_4) (bvor Start_3 Start_2) (bvadd Start_2 Start_7) (bvmul Start_8 Start_6) (bvudiv Start_6 Start_9)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start) (bvmul Start_3 Start_6) (bvudiv Start_7 Start_6) (bvurem Start_1 Start_3) (bvshl Start_3 Start)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_3) (bvneg Start_6) (bvand Start_4 Start) (bvadd Start_3 Start) (bvudiv Start_6 Start_1) (bvurem Start_2 Start_5) (bvshl Start_5 Start) (ite StartBool_2 Start_3 Start)))
   (Start_6 (_ BitVec 8) (x (bvneg Start_6) (bvor Start_3 Start_5) (bvmul Start_4 Start_5) (bvudiv Start_2 Start_2) (ite StartBool_2 Start_1 Start)))
   (StartBool_2 Bool (false (or StartBool_3 StartBool_1) (bvult Start_4 Start_4)))
   (StartBool_4 Bool (false (not StartBool_5) (bvult Start_1 Start)))
   (StartBool_5 Bool (false true (not StartBool_1) (bvult Start_1 Start_1)))
   (Start_4 (_ BitVec 8) (y #b00000001 #b10100101 x (bvnot Start_5) (bvand Start_1 Start) (bvor Start_1 Start_3) (bvadd Start_1 Start) (bvurem Start_2 Start_4) (bvshl Start_1 Start_3) (bvlshr Start_5 Start_3) (ite StartBool_5 Start_1 Start_1)))
   (StartBool_1 Bool (true false (or StartBool_6 StartBool_4) (bvult Start_1 Start_5)))
   (Start_9 (_ BitVec 8) (y #b00000000 #b00000001 (bvnot Start_10) (bvand Start_11 Start_1) (bvadd Start_8 Start_2)))
   (Start_3 (_ BitVec 8) (#b10100101 y x #b00000001 #b00000000 (bvmul Start_1 Start_1) (bvudiv Start_4 Start_3) (bvshl Start Start_1) (ite StartBool_2 Start_3 Start)))
   (StartBool_6 Bool (true false (not StartBool_7) (and StartBool_6 StartBool_6)))
   (StartBool_7 Bool (true false (not StartBool_1) (or StartBool StartBool_5)))
   (StartBool_3 Bool (true (or StartBool_4 StartBool_3) (bvult Start Start_3)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000001 x (bvand Start_5 Start_5) (bvor Start_1 Start_4) (bvadd Start_4 Start_1) (bvshl Start Start_6) (ite StartBool Start_1 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand y (bvnot (bvand #b00000001 y)))))

(check-synth)
