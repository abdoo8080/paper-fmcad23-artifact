(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_8 Bool) (StartBool_5 Bool) (StartBool_4 Bool) (StartBool_3 Bool) (Start_6 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_7 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (Start_11 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_6 Bool) (Start_8 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (x (bvor Start Start) (bvadd Start_1 Start_1) (bvmul Start Start_1) (bvurem Start_1 Start_1) (bvlshr Start Start_2)))
   (StartBool Bool (false true (and StartBool_6 StartBool_8) (or StartBool_5 StartBool_3)))
   (StartBool_8 Bool (true (not StartBool_7) (and StartBool_7 StartBool)))
   (StartBool_5 Bool (true false (not StartBool) (and StartBool StartBool_6) (or StartBool_4 StartBool_7)))
   (StartBool_4 Bool (true (not StartBool_5) (or StartBool_4 StartBool_3)))
   (StartBool_3 Bool (false true (and StartBool_8 StartBool_2) (or StartBool_5 StartBool_5)))
   (Start_6 (_ BitVec 8) (#b10100101 #b00000001 x (bvadd Start_6 Start_4) (bvmul Start_6 Start_2) (bvudiv Start_1 Start_4) (ite StartBool_1 Start_6 Start_2)))
   (Start_7 (_ BitVec 8) (x y (bvor Start_1 Start) (bvadd Start_8 Start_9) (bvurem Start_10 Start_1) (bvshl Start_6 Start) (ite StartBool_1 Start_5 Start_1)))
   (Start_10 (_ BitVec 8) (#b00000001 x #b00000000 (bvand Start_1 Start_8) (bvmul Start Start_5) (bvurem Start_3 Start) (bvlshr Start_1 Start_4)))
   (StartBool_7 Bool (false (and StartBool_4 StartBool_1) (or StartBool_6 StartBool_1) (bvult Start_3 Start_11)))
   (Start_2 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 x (bvneg Start_2) (bvadd Start_2 Start_2) (bvmul Start_2 Start_3) (bvshl Start_2 Start_1) (bvlshr Start_3 Start_4) (ite StartBool Start_3 Start_4)))
   (Start_4 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 y (bvnot Start_4) (bvudiv Start Start_5) (bvshl Start_6 Start_4) (bvlshr Start_5 Start_2)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_1)))
   (Start_11 (_ BitVec 8) (x #b10100101 #b00000000 #b00000001 (bvneg Start_3) (bvand Start_11 Start_10) (bvor Start_5 Start) (bvmul Start_7 Start_4) (ite StartBool_1 Start_2 Start_9)))
   (Start_5 (_ BitVec 8) (#b00000001 x #b10100101 (bvand Start_2 Start_5) (bvadd Start_7 Start_6) (bvmul Start_5 Start_4) (bvudiv Start_5 Start) (bvurem Start_5 Start_6)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_4) (bvadd Start_10 Start) (bvudiv Start_3 Start) (bvshl Start_5 Start_2) (ite StartBool Start_2 Start_7)))
   (StartBool_6 Bool (false (not StartBool_2) (and StartBool_2 StartBool_1)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvneg Start_4) (bvudiv Start_3 Start_3) (ite StartBool Start_5 Start_3)))
   (Start_1 (_ BitVec 8) (x #b10100101 #b00000001 (bvneg Start_1) (bvand Start_9 Start) (bvadd Start_7 Start_9) (bvudiv Start_4 Start_10) (bvlshr Start_5 Start_9) (ite StartBool_2 Start_2 Start_5)))
   (Start_3 (_ BitVec 8) (#b00000001 #b00000000 (bvand Start_4 Start_1) (bvadd Start_1 Start) (bvmul Start_9 Start_10) (bvudiv Start_6 Start_6) (bvshl Start_5 Start_5) (bvlshr Start_2 Start_4)))
   (StartBool_2 Bool (false true (and StartBool_1 StartBool_3) (or StartBool StartBool_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr #b00000001 (bvudiv x #b10100101))))

(check-synth)
