(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y #b00000001 (bvneg Start_1) (bvmul Start Start) (ite StartBool_1 Start_2 Start_1)))
   (StartBool Bool (false (bvult Start_5 Start_1)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvadd Start_1 Start_1)))
   (StartBool_1 Bool (true false (and StartBool_3 StartBool)))
   (StartBool_2 Bool (true (bvult Start Start_5)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_1 StartBool_2)))
   (Start_7 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 (bvnot Start_7) (bvneg Start_2) (bvurem Start Start_2) (bvlshr Start_2 Start_1) (ite StartBool_2 Start_2 Start_3)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvand Start_4 Start_3) (bvadd Start_5 Start) (bvmul Start_1 Start_3) (bvshl Start Start_6) (ite StartBool_1 Start_2 Start_4)))
   (Start_4 (_ BitVec 8) (y (bvnot Start_2) (bvand Start_1 Start_1) (bvadd Start_5 Start_1) (bvudiv Start_5 Start_2)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvneg Start_1) (bvmul Start_5 Start_7) (bvudiv Start_3 Start_3) (bvshl Start_7 Start_4)))
   (Start_5 (_ BitVec 8) (y #b00000000 (bvnot Start_1) (bvand Start Start_2) (bvor Start_1 Start_5) (bvurem Start_3 Start)))
   (Start_2 (_ BitVec 8) (#b10100101 y (bvnot Start_1) (bvor Start_3 Start_2) (bvmul Start_3 Start) (bvudiv Start_4 Start_5) (bvurem Start Start_3) (bvlshr Start_5 Start_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor x (bvurem #b00000001 y))))

(check-synth)
