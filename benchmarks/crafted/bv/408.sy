(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_3 Bool) (Start_12 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (Start_15 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_13 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvudiv Start_1 Start_1) (bvurem Start_2 Start_1)))
   (StartBool Bool (true false (or StartBool_1 StartBool_3)))
   (StartBool_3 Bool (false (and StartBool_2 StartBool) (bvult Start_15 Start_13)))
   (Start_12 (_ BitVec 8) (#b10100101 x (bvneg Start_3) (bvand Start_3 Start_3) (bvor Start_5 Start_1) (bvmul Start_5 Start_1) (bvurem Start_11 Start_11) (bvlshr Start_11 Start_7)))
   (Start_2 (_ BitVec 8) (x (bvneg Start) (bvurem Start Start_3) (ite StartBool Start_3 Start_1)))
   (Start_8 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start) (bvand Start_7 Start) (bvor Start_9 Start_10) (bvmul Start_4 Start_8) (bvudiv Start_7 Start_9) (bvshl Start_10 Start_6) (bvlshr Start_3 Start)))
   (Start_3 (_ BitVec 8) (x (bvneg Start_4) (bvadd Start_3 Start_5) (bvmul Start_1 Start_3) (bvlshr Start_1 Start_6)))
   (Start_4 (_ BitVec 8) (y #b10100101 (bvnot Start_3) (bvor Start_3 Start_7) (bvadd Start_2 Start_7) (bvurem Start_6 Start_6)))
   (StartBool_1 Bool (true (or StartBool_2 StartBool) (bvult Start_2 Start_8)))
   (Start_15 (_ BitVec 8) (#b10100101 #b00000001 (bvneg Start_14) (bvadd Start_9 Start_13) (bvmul Start_10 Start_4) (bvshl Start_6 Start) (ite StartBool_3 Start_7 Start)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_3) (bvadd Start_2 Start_4) (bvmul Start_1 Start_1) (bvurem Start_4 Start) (bvshl Start_2 Start_3)))
   (Start_14 (_ BitVec 8) (#b10100101 x (bvnot Start_3) (bvneg Start_9) (bvand Start_2 Start_1) (bvmul Start_14 Start_2) (bvurem Start_1 Start_4) (bvshl Start_9 Start_5)))
   (Start_7 (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_4) (bvand Start_2 Start_5) (bvadd Start_3 Start) (bvmul Start_6 Start) (bvudiv Start_5 Start_6) (ite StartBool Start_2 Start_4)))
   (Start_9 (_ BitVec 8) (x #b00000001 #b00000000 #b10100101 y (bvudiv Start_8 Start_11) (bvurem Start Start_6) (bvshl Start_6 Start_6) (ite StartBool Start_7 Start_4)))
   (Start_1 (_ BitVec 8) (#b00000000 #b10100101 (bvand Start_7 Start_7) (bvadd Start_2 Start) (ite StartBool_1 Start_7 Start_5)))
   (Start_10 (_ BitVec 8) (x #b00000001 y (bvneg Start_7) (bvadd Start Start_6) (bvudiv Start_4 Start_4) (bvurem Start_6 Start_3) (bvlshr Start_4 Start_9) (ite StartBool_1 Start_11 Start_7)))
   (StartBool_2 Bool (true (not StartBool_3) (bvult Start_11 Start_10)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_12) (bvand Start_9 Start_10) (bvshl Start Start_7) (bvlshr Start_2 Start_11) (ite StartBool_2 Start_2 Start_13)))
   (Start_5 (_ BitVec 8) (x #b10100101 #b00000000 (bvnot Start_2) (bvneg Start_5) (bvand Start_2 Start_1) (bvor Start_6 Start_5) (bvadd Start_5 Start_4) (bvshl Start_3 Start) (bvlshr Start Start_7) (ite StartBool Start_5 Start_7)))
   (Start_13 (_ BitVec 8) (#b00000000 x y (bvor Start_3 Start_8) (bvadd Start_12 Start_11) (bvudiv Start_1 Start_14)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvurem (bvmul x y) x) x)))

(check-synth)
