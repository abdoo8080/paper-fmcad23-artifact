(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (StartBool_1 Bool) (Start_14 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_13 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 y x #b10100101 #b00000000 (bvnot Start_1) (bvand Start_2 Start_1) (bvor Start_1 Start_2) (bvadd Start_3 Start_1)))
   (StartBool Bool (true false (bvult Start_8 Start_11)))
   (Start_1 (_ BitVec 8) (y (bvnot Start_5) (bvneg Start_9) (bvor Start_13 Start_4) (bvmul Start Start_1) (bvudiv Start_8 Start_9) (bvurem Start_5 Start_2) (bvshl Start_6 Start_1) (bvlshr Start_7 Start_13)))
   (StartBool_1 Bool (true))
   (Start_14 (_ BitVec 8) (#b10100101 #b00000001 (bvand Start_5 Start_9) (bvor Start_6 Start_13) (bvudiv Start_8 Start_7) (bvshl Start_2 Start_9) (bvlshr Start_10 Start_6) (ite StartBool_1 Start_13 Start_1)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_3) (bvand Start_6 Start_2) (bvor Start_7 Start_2) (bvmul Start_12 Start_11) (bvudiv Start_8 Start_3) (bvurem Start_11 Start_7) (bvlshr Start_8 Start_8) (ite StartBool Start_12 Start_2)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvnot Start_8) (bvneg Start_5) (bvand Start_11 Start_9) (bvudiv Start_10 Start_12) (bvurem Start_14 Start_2) (bvshl Start_12 Start_10) (bvlshr Start_12 Start_13) (ite StartBool Start_3 Start_4)))
   (Start_5 (_ BitVec 8) (x #b10100101 (bvneg Start_1) (bvor Start Start_4) (bvadd Start_1 Start_2) (bvudiv Start_2 Start_5) (bvshl Start_5 Start_1)))
   (Start_12 (_ BitVec 8) (#b00000001 (bvand Start_5 Start) (bvor Start_5 Start_10) (bvadd Start_9 Start_8) (bvurem Start_8 Start_13) (bvlshr Start_6 Start_10)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvor Start_4 Start_2) (bvadd Start_4 Start_5) (bvudiv Start_3 Start_5) (bvurem Start_4 Start_2) (bvlshr Start_2 Start_1) (ite StartBool Start_3 Start_5)))
   (Start_8 (_ BitVec 8) (#b00000000 y #b00000001 (bvnot Start_9) (bvneg Start_1) (bvor Start_6 Start_1) (bvadd Start Start_5) (bvmul Start_1 Start_8) (bvudiv Start_5 Start_6) (bvshl Start_7 Start_5)))
   (Start_4 (_ BitVec 8) (x (bvnot Start_3) (bvor Start_1 Start_3) (bvadd Start_4 Start_4) (bvudiv Start_1 Start_6) (bvurem Start_3 Start_1) (bvshl Start_3 Start_7) (ite StartBool Start_8 Start_6)))
   (Start_9 (_ BitVec 8) (#b10100101 y #b00000001 x #b00000000 (bvor Start_6 Start_2) (bvurem Start_10 Start_8)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvneg Start_9) (bvadd Start_5 Start_5) (bvudiv Start_2 Start_3) (bvurem Start_7 Start_3) (ite StartBool Start_9 Start_5)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_1) (bvand Start_10 Start_8) (bvor Start Start_1) (bvmul Start_5 Start) (bvudiv Start_7 Start_6)))
   (Start_6 (_ BitVec 8) (y #b00000001 (bvnot Start_3) (bvmul Start_1 Start_10) (bvudiv Start_3 Start_10) (bvlshr Start_11 Start_5)))
   (Start_13 (_ BitVec 8) (#b10100101 x #b00000001 (bvneg Start_13) (bvudiv Start_1 Start_4) (bvurem Start_3 Start_13)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvurem #b10100101 (bvudiv #b00000000 (bvmul y #b10100101))))))

(check-synth)
