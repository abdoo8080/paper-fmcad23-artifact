(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_2) (bvand Start_1 Start) (bvor Start_3 Start_4) (bvmul Start_1 Start_5) (bvshl Start_5 Start_6)))
   (StartBool Bool (false))
   (Start_1 (_ BitVec 8) (#b10100101 #b00000001 (bvand Start_11 Start_8) (bvmul Start_3 Start_12) (bvudiv Start_12 Start_12) (bvshl Start_7 Start_2)))
   (Start_2 (_ BitVec 8) (#b10100101 x (bvand Start_1 Start_9) (bvor Start_8 Start_2) (bvadd Start_5 Start_3) (bvmul Start_1 Start_6) (bvudiv Start_10 Start_10) (bvurem Start_1 Start_7) (bvshl Start_3 Start_12)))
   (Start_3 (_ BitVec 8) (x (bvnot Start_6) (bvor Start_12 Start_10) (bvmul Start_7 Start_9) (bvudiv Start_8 Start) (bvurem Start_5 Start_12) (bvshl Start_10 Start_1) (ite StartBool Start_13 Start_5)))
   (Start_6 (_ BitVec 8) (x y (bvneg Start_5) (bvand Start_2 Start) (bvor Start_4 Start_3) (bvadd Start Start_3) (bvshl Start_1 Start_2) (ite StartBool_1 Start_6 Start_6)))
   (Start_5 (_ BitVec 8) (#b10100101 (bvneg Start_7) (bvudiv Start_5 Start_8) (bvurem Start_4 Start_7) (bvshl Start_3 Start_8) (ite StartBool_1 Start_1 Start_6)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvand Start_3 Start_6) (bvudiv Start_8 Start_8) (bvlshr Start_9 Start_6) (ite StartBool Start_3 Start_8)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool)))
   (Start_9 (_ BitVec 8) (y (bvnot Start) (bvneg Start_1) (bvor Start_1 Start_10) (bvadd Start_7 Start_1) (bvmul Start_8 Start_3) (bvudiv Start_2 Start_8) (ite StartBool_1 Start_9 Start)))
   (Start_10 (_ BitVec 8) (x (bvneg Start_4) (bvmul Start_6 Start_2) (bvudiv Start Start_8) (bvurem Start_4 Start_3) (bvshl Start_4 Start_5) (ite StartBool Start_6 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000000 y (bvnot Start) (bvand Start_8 Start_4) (bvmul Start_4 Start) (bvudiv Start_3 Start_2) (bvshl Start_8 Start_3) (bvlshr Start_1 Start_8)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvnot Start_10) (bvneg Start_6) (bvand Start_9 Start_9) (bvadd Start_10 Start_6) (bvmul Start_9 Start) (bvudiv Start_1 Start_11) (bvurem Start_1 Start_3) (bvshl Start_2 Start_7)))
   (Start_13 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_10) (bvneg Start_1) (bvand Start Start_13) (bvor Start_5 Start_2) (bvadd Start_13 Start_6) (bvudiv Start_2 Start_8) (bvurem Start_7 Start_12) (bvshl Start_11 Start) (bvlshr Start_8 Start_13) (ite StartBool_2 Start_11 Start_8)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_4) (bvand Start_11 Start_5) (bvurem Start_7 Start_4) (bvshl Start_10 Start_8) (bvlshr Start_12 Start_5) (ite StartBool Start_6 Start_9)))
   (Start_12 (_ BitVec 8) (#b00000001 y (bvnot Start_6) (bvmul Start_6 Start_4) (bvurem Start_12 Start_6) (bvshl Start_13 Start_5) (bvlshr Start_3 Start_1) (ite StartBool Start_6 Start)))
   (StartBool_2 Bool (true (bvult Start_13 Start_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem (bvneg #b10100101) x)))

(check-synth)
