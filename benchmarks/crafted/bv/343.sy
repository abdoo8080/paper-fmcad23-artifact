(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_12 Bool) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_6 Bool) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_7 Bool) (StartBool_2 Bool) (Start_14 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_3 Bool) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_18 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_11 Bool) (Start_12 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_4 Bool) (Start_19 (_ BitVec 8)) (Start_17 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (StartBool_8 Bool) (StartBool_10 Bool) (Start_20 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_9 Bool) (Start_21 (_ BitVec 8)) (Start_22 (_ BitVec 8)) (Start_6 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvneg Start_1) (bvor Start_2 Start_3) (bvadd Start_1 Start_3) (bvmul Start_2 Start_2) (bvudiv Start_4 Start_4) (bvurem Start_1 Start) (bvshl Start Start_4) (bvlshr Start Start_4) (ite StartBool_1 Start Start)))
   (StartBool Bool (false true (and StartBool_12 StartBool_7) (bvult Start_18 Start_10)))
   (StartBool_12 Bool (true (or StartBool_5 StartBool_1)))
   (Start_2 (_ BitVec 8) (x (bvor Start_9 Start_14) (bvmul Start_1 Start_5) (bvshl Start_20 Start_11) (bvlshr Start_7 Start_14) (ite StartBool_2 Start_18 Start_13)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_1) (bvand Start_19 Start) (bvor Start_22 Start_3) (bvudiv Start_13 Start_11) (bvlshr Start_2 Start_4)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000001 #b00000000 y x (bvnot Start_5) (bvadd Start_4 Start_10) (bvmul Start_9 Start_9) (bvurem Start_5 Start_1)))
   (StartBool_6 Bool (true false (and StartBool_5 StartBool_6)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvnot Start) (bvor Start_3 Start) (bvadd Start_5 Start_7) (bvmul Start_11 Start_1) (bvlshr Start_12 Start_6) (ite StartBool_4 Start_11 Start_6)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvnot Start_4) (bvand Start_1 Start_6) (bvor Start_6 Start_3) (bvadd Start_2 Start) (bvurem Start_8 Start_6) (bvshl Start_4 Start_8) (bvlshr Start_5 Start_8) (ite StartBool_2 Start_7 Start_6)))
   (StartBool_7 Bool (true (not StartBool_2)))
   (StartBool_2 Bool (false true (not StartBool_1) (or StartBool_3 StartBool_3) (bvult Start Start_8)))
   (Start_14 (_ BitVec 8) (#b00000001 x #b10100101 (bvnot Start_5) (bvor Start_12 Start_7) (bvadd Start_10 Start_8) (bvudiv Start_4 Start_6) (bvshl Start_2 Start_6) (ite StartBool_6 Start_12 Start_5)))
   (Start_13 (_ BitVec 8) (#b00000000 (bvneg Start_15) (bvand Start_15 Start_1) (bvor Start_11 Start_11) (bvmul Start_9 Start_3) (bvudiv Start_8 Start_16) (bvshl Start_6 Start_5) (bvlshr Start_6 Start_16)))
   (StartBool_5 Bool (true (not StartBool_5) (and StartBool_1 StartBool_2) (bvult Start_7 Start_7)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_3 StartBool_4) (or StartBool_4 StartBool_5)))
   (Start_8 (_ BitVec 8) (y (bvnot Start_8) (bvneg Start_8) (bvadd Start_4 Start_9) (bvudiv Start_5 Start) (ite StartBool_2 Start_6 Start_9)))
   (Start_5 (_ BitVec 8) (x #b00000000 y #b00000001 #b10100101 (bvnot Start_4) (bvneg Start_3) (bvand Start_6 Start_5) (bvmul Start_3 Start) (bvurem Start_7 Start_7) (bvshl Start_4 Start_2) (bvlshr Start_2 Start_7)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvor Start_18 Start_20) (bvadd Start_15 Start_5) (bvudiv Start_14 Start_6) (bvurem Start_2 Start_9) (bvshl Start_5 Start_5) (bvlshr Start_21 Start_15) (ite StartBool_8 Start_18 Start_5)))
   (Start_18 (_ BitVec 8) (#b10100101 (bvneg Start_10) (bvand Start_16 Start_11) (bvadd Start_11 Start_14) (bvudiv Start_6 Start_4) (bvshl Start_3 Start_18) (bvlshr Start_3 Start_6)))
   (StartBool_1 Bool (false true (not StartBool) (bvult Start_5 Start_3)))
   (StartBool_11 Bool (false true))
   (Start_12 (_ BitVec 8) (#b00000000 x #b10100101 (bvneg Start_8) (bvor Start_12 Start_2) (bvadd Start_13 Start_8) (bvmul Start_6 Start_5) (bvudiv Start_4 Start_1) (bvshl Start_3 Start_11) (ite StartBool_2 Start_12 Start_14)))
   (Start_1 (_ BitVec 8) (y #b00000001 #b10100101 (bvneg Start_10) (bvand Start_5 Start_18) (bvor Start_13 Start_16) (bvudiv Start_6 Start_21) (bvurem Start_12 Start_11) (ite StartBool_1 Start_5 Start_18)))
   (StartBool_4 Bool (true (or StartBool_6 StartBool_7) (bvult Start Start_1)))
   (Start_19 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvneg Start_17) (bvand Start_21 Start_12) (bvmul Start_8 Start_14) (bvshl Start_7 Start_10) (bvlshr Start_5 Start_16)))
   (Start_17 (_ BitVec 8) (#b00000001 y (bvor Start_1 Start_5) (bvmul Start_13 Start_18) (ite StartBool_8 Start_11 Start_18)))
   (Start_16 (_ BitVec 8) (#b10100101 (bvnot Start_13) (bvneg Start_14) (bvand Start_5 Start_6) (bvadd Start_6 Start_3) (bvmul Start_8 Start) (bvudiv Start_3 Start_3) (bvshl Start_8 Start_1)))
   (Start_15 (_ BitVec 8) (#b10100101 x (bvneg Start_12) (bvor Start_17 Start_8) (bvmul Start_7 Start_1) (bvshl Start_7 Start_7)))
   (StartBool_8 Bool (false (not StartBool_9) (and StartBool_10 StartBool_8) (bvult Start_3 Start_15)))
   (StartBool_10 Bool (false (not StartBool_4) (and StartBool_11 StartBool_11) (or StartBool StartBool_6)))
   (Start_20 (_ BitVec 8) (y (bvneg Start_2) (bvand Start_7 Start_7) (bvor Start_7 Start_8)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvand Start_4 Start_19) (bvadd Start_16 Start_8) (ite StartBool_7 Start_20 Start_3)))
   (StartBool_9 Bool (false (not StartBool_6) (and StartBool_3 StartBool_5)))
   (Start_21 (_ BitVec 8) (#b00000000 y #b10100101 #b00000001 x (bvadd Start_2 Start_13) (bvmul Start_3 Start_1) (bvudiv Start_15 Start_12) (bvurem Start_4 Start_2) (ite StartBool Start_12 Start_7)))
   (Start_22 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start) (bvand Start_2 Start_16) (bvor Start_2 Start_17) (bvmul Start_12 Start_13) (bvudiv Start_14 Start_7) (bvlshr Start_19 Start_17)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvneg Start_15) (bvor Start_15 Start_10) (bvmul Start_18 Start_21) (bvudiv Start_21 Start_4) (bvlshr Start_14 Start) (ite StartBool_4 Start_12 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvlshr x #b00000001))))

(check-synth)
