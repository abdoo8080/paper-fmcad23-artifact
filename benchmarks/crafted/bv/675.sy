(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (StartBool_4 Bool) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_6 Bool) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_7 Bool) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x #b00000000 y (bvand Start Start_1) (bvadd Start Start_1) (bvmul Start_2 Start) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (true (and StartBool_6 StartBool) (or StartBool_5 StartBool_5) (bvult Start_10 Start_1)))
   (StartBool_5 Bool (true))
   (StartBool_4 Bool (false true (or StartBool_5 StartBool_6) (bvult Start_1 Start_7)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_6) (bvand Start_5 Start_1) (bvadd Start_4 Start_5) (bvmul Start_9 Start_1) (bvurem Start_8 Start_2) (bvshl Start_2 Start_4) (ite StartBool_4 Start_3 Start_4)))
   (StartBool_1 Bool (false))
   (Start_6 (_ BitVec 8) (#b00000001 y (bvand Start_6 Start_2) (bvor Start_5 Start_4) (bvadd Start_7 Start) (bvurem Start_1 Start) (bvlshr Start_1 Start_4)))
   (Start_4 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvneg Start_1) (bvor Start_3 Start_9) (bvmul Start_6 Start_6) (ite StartBool Start_4 Start_1)))
   (Start_2 (_ BitVec 8) (#b00000000 x (bvnot Start) (bvand Start_1 Start_1) (bvadd Start_3 Start_2) (bvmul Start Start_3) (bvurem Start_2 Start_2) (bvlshr Start_1 Start_3)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvneg Start_4) (bvand Start_2 Start_2) (bvmul Start_4 Start_1) (bvudiv Start_5 Start_4) (bvshl Start_1 Start_6) (bvlshr Start_6 Start_4) (ite StartBool_2 Start Start_4)))
   (StartBool_6 Bool (false (or StartBool_3 StartBool_7)))
   (Start_1 (_ BitVec 8) (#b00000001 x (bvnot Start_2) (bvneg Start_5) (bvand Start_1 Start_11) (bvadd Start_4 Start_6) (bvshl Start_2 Start_6)))
   (StartBool_3 Bool (false (and StartBool StartBool_3)))
   (StartBool_7 Bool (true false (and StartBool_5 StartBool_6) (bvult Start_6 Start)))
   (StartBool_2 Bool (false true (or StartBool_2 StartBool_2) (bvult Start Start)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000001 x y (bvneg Start_3) (bvor Start_6 Start_6) (bvadd Start_6 Start_3) (bvlshr Start_10 Start_1)))
   (Start_10 (_ BitVec 8) (x #b00000001 (bvnot Start_10) (bvmul Start_5 Start_5) (bvudiv Start_5 Start_1) (bvurem Start_1 Start_2) (bvshl Start_10 Start_3)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvneg Start_1) (bvand Start_8 Start_3) (bvor Start_6 Start_6) (bvadd Start_3 Start_3) (bvmul Start_2 Start_9) (bvudiv Start Start_1) (bvurem Start_9 Start_2) (ite StartBool_3 Start_4 Start_6)))
   (Start_7 (_ BitVec 8) (y (bvneg Start_2) (bvand Start Start_7) (bvor Start_2 Start_4) (bvadd Start_8 Start_1) (bvmul Start_5 Start_5) (bvudiv Start_2 Start_6) (bvlshr Start_2 Start_2)))
   (Start_9 (_ BitVec 8) (x #b10100101 (bvneg Start_8) (bvand Start_5 Start_1) (bvshl Start_3 Start_7) (bvlshr Start_3 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvudiv #b00000000 x) #b10100101)))

(check-synth)
