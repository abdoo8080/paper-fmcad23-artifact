(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (StartBool_8 Bool) (StartBool_6 Bool) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_5 Bool) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_2 Bool) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_7 Bool) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_1) (bvadd Start Start) (bvshl Start_2 Start_3) (ite StartBool_1 Start_2 Start_2)))
   (StartBool Bool (false true (or StartBool StartBool_1)))
   (Start_1 (_ BitVec 8) (x (bvneg Start_2) (bvor Start_3 Start_1) (bvmul Start_10 Start_3) (bvurem Start_1 Start_6) (bvlshr Start_10 Start_2)))
   (StartBool_8 Bool (true false (not StartBool_5) (or StartBool_2 StartBool_3)))
   (StartBool_6 Bool (true false (not StartBool_7) (and StartBool_4 StartBool_8) (or StartBool_2 StartBool_2) (bvult Start_6 Start_10)))
   (Start_4 (_ BitVec 8) (x y #b00000001 (bvnot Start_5) (bvor Start_3 Start_2) (bvmul Start_3 Start_3) (bvudiv Start Start_5) (bvurem Start_3 Start_1) (ite StartBool Start_2 Start_6)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvnot Start_7) (bvmul Start_4 Start_7) (bvurem Start Start_1) (bvlshr Start_3 Start_7)))
   (Start_2 (_ BitVec 8) (x #b10100101 y (bvnot Start_3) (bvneg Start_3) (bvand Start_3 Start) (bvor Start_10 Start_5) (bvmul Start_9 Start_2) (ite StartBool_2 Start Start_1)))
   (Start_10 (_ BitVec 8) (#b00000000 y #b00000001 #b10100101 x (bvnot Start_9) (bvneg Start_6) (bvand Start_7 Start) (bvor Start_6 Start_1) (bvmul Start_2 Start_6) (bvurem Start_1 Start_4) (bvlshr Start_3 Start_10) (ite StartBool_2 Start_9 Start_2)))
   (StartBool_5 Bool (true false (not StartBool_1) (and StartBool_5 StartBool_4) (or StartBool_6 StartBool_2) (bvult Start Start_6)))
   (Start_8 (_ BitVec 8) (#b00000000 y (bvor Start_10 Start_4) (bvmul Start_6 Start_10) (bvudiv Start_7 Start_1) (bvurem Start_8 Start_4) (bvlshr Start_8 Start_7) (ite StartBool Start_2 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000001 x (bvneg Start_4) (bvand Start_5 Start_8) (bvor Start_8 Start_10) (bvudiv Start_10 Start_4) (bvshl Start_1 Start_9) (ite StartBool_3 Start_6 Start_5)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_7) (bvmul Start Start_3) (bvurem Start_2 Start_5)))
   (StartBool_3 Bool (true false (or StartBool_1 StartBool_3)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_4 StartBool)))
   (Start_7 (_ BitVec 8) (y #b00000001 (bvneg Start_8) (bvadd Start_1 Start_7) (bvmul Start_4 Start_1) (bvurem Start_9 Start_4) (bvshl Start_1 Start_10) (bvlshr Start_2 Start_6)))
   (StartBool_1 Bool (false (or StartBool_1 StartBool_2) (bvult Start_4 Start_1)))
   (StartBool_4 Bool (false (not StartBool_2) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_1)))
   (StartBool_7 Bool (false (bvult Start_9 Start_5)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvnot Start_2) (bvor Start Start_4) (bvmul Start_5 Start_1) (bvshl Start Start_2) (bvlshr Start Start_10) (ite StartBool_5 Start_2 Start_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvnot #b10100101) (bvadd (bvudiv #b00000001 (bvand #b00000001 y)) x))))

(check-synth)
