(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_4 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_3 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (StartBool_3 Bool) (Start_14 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 y (bvor Start_1 Start) (bvlshr Start Start)))
   (StartBool Bool (true (and StartBool_3 StartBool_2)))
   (Start_4 (_ BitVec 8) (x #b00000000 #b00000001 (bvneg Start_6) (bvor Start_6 Start_7) (bvudiv Start_7 Start_14) (bvurem Start_16 Start_9) (bvshl Start_9 Start_12) (bvlshr Start_12 Start_5)))
   (Start_5 (_ BitVec 8) (x y (bvneg Start_13) (bvor Start_14 Start_6) (bvmul Start_8 Start_8) (bvurem Start_15 Start_9) (ite StartBool Start_9 Start_6)))
   (Start_16 (_ BitVec 8) (x (bvneg Start_12) (bvand Start_8 Start_14) (bvor Start_16 Start_1) (bvadd Start_7 Start_6) (bvudiv Start_6 Start_14) (bvurem Start_11 Start_16) (bvshl Start_2 Start_4) (bvlshr Start_8 Start_12) (ite StartBool_1 Start_1 Start_1)))
   (Start_13 (_ BitVec 8) (x #b00000000 (bvnot Start_10) (bvand Start_1 Start_1) (bvlshr Start_7 Start_10)))
   (Start_1 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvand Start_1 Start) (bvor Start_2 Start_1) (bvudiv Start_1 Start_2) (bvurem Start_1 Start) (bvlshr Start Start_3) (ite StartBool_1 Start Start_3)))
   (Start_12 (_ BitVec 8) (#b10100101 y #b00000001 #b00000000 (bvnot Start_5) (bvand Start_7 Start_10) (bvmul Start Start) (bvudiv Start_14 Start_4) (bvurem Start Start_9) (bvshl Start_13 Start_2)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_2 StartBool_1)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvand Start_9 Start_3) (bvadd Start_1 Start_6) (bvmul Start_7 Start_1) (bvshl Start Start_3) (bvlshr Start_4 Start_6)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000000 (bvmul Start_11 Start_1) (bvurem Start_10 Start_2) (bvshl Start_9 Start_2) (bvlshr Start_5 Start_5) (ite StartBool_3 Start_7 Start_3)))
   (StartBool_1 Bool (true (not StartBool_2)))
   (Start_3 (_ BitVec 8) (#b00000000 #b10100101 x #b00000001 y (bvnot Start) (bvand Start_2 Start_1) (bvadd Start_1 Start_1) (bvmul Start Start) (bvudiv Start_1 Start)))
   (Start_15 (_ BitVec 8) (#b10100101 x #b00000000 y #b00000001 (bvadd Start_10 Start_3) (bvurem Start_7 Start_10) (ite StartBool Start_14 Start_10)))
   (StartBool_3 Bool (true false (and StartBool_1 StartBool) (or StartBool_2 StartBool_2)))
   (Start_14 (_ BitVec 8) (#b10100101 #b00000000 x #b00000001 y (bvnot Start_8) (bvneg Start_8) (bvand Start_14 Start_15) (bvadd Start_4 Start_2) (bvurem Start_16 Start_12)))
   (Start_11 (_ BitVec 8) (y #b10100101 #b00000001 (bvand Start_3 Start_10) (bvor Start_4 Start_7) (bvurem Start_4 Start_10) (bvshl Start_8 Start_4) (bvlshr Start_4 Start_9)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_4) (bvadd Start_12 Start) (bvmul Start_13 Start_1) (bvurem Start_7 Start_5)))
   (Start_2 (_ BitVec 8) (x (bvor Start_2 Start_4) (bvadd Start_3 Start_5) (bvmul Start_6 Start_7) (ite StartBool Start Start_1)))
   (Start_7 (_ BitVec 8) (x (bvand Start Start_1) (bvadd Start Start_3) (bvudiv Start_1 Start_1) (bvurem Start_7 Start_4) (bvlshr Start_2 Start_8) (ite StartBool_3 Start_2 Start)))
   (Start_8 (_ BitVec 8) (#b00000000 x #b10100101 #b00000001 (bvnot Start_2) (bvneg Start_8) (bvadd Start_1 Start_9) (bvmul Start_6 Start_5) (bvurem Start_1 Start_10) (bvshl Start_4 Start_4) (ite StartBool_3 Start Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvudiv (bvlshr x (bvudiv x y)) y))))

(check-synth)
