(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (Start_13 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_1 (_ BitVec 8)) (StartBool_1 Bool) (Start_10 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_7 Bool) (Start_6 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_2 Bool) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_4 Bool) (Start_8 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_5 Bool))
  ((Start (_ BitVec 8) (y (bvor Start Start) (bvadd Start_1 Start_1) (bvmul Start Start_1) (bvudiv Start_2 Start_3) (bvlshr Start_2 Start_2) (ite StartBool_1 Start_3 Start_1)))
   (StartBool Bool (false))
   (StartBool_6 Bool (false (not StartBool_7) (and StartBool StartBool_7)))
   (Start_13 (_ BitVec 8) (#b00000001 y #b10100101 #b00000000 x (bvand Start_6 Start_14) (bvadd Start_12 Start_1) (bvudiv Start_8 Start_8) (bvshl Start_10 Start_15)))
   (Start_15 (_ BitVec 8) (y (bvnot Start_11) (bvand Start_10 Start_13) (bvmul Start Start_6) (bvurem Start_5 Start_7) (bvlshr Start_2 Start_12) (ite StartBool_6 Start_2 Start_2)))
   (Start_14 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_15) (bvneg Start_13) (bvor Start_13 Start_5) (bvadd Start_8 Start_3) (bvmul Start_2 Start_8) (bvudiv Start_2 Start) (bvshl Start_5 Start_6) (bvlshr Start_3 Start_15) (ite StartBool_1 Start_3 Start_14)))
   (Start_5 (_ BitVec 8) (x (bvnot Start_2) (bvneg Start_2) (bvor Start_9 Start_6) (bvurem Start_4 Start_5)))
   (StartBool_3 Bool (true false (or StartBool_4 StartBool_4)))
   (Start_1 (_ BitVec 8) (y #b10100101 (bvneg Start_12) (bvadd Start_12 Start_7) (bvmul Start_7 Start_13) (bvudiv Start_13 Start_12) (bvurem Start_7 Start_14) (bvshl Start_14 Start_9) (bvlshr Start_10 Start_11)))
   (StartBool_1 Bool (true false (not StartBool_2) (bvult Start Start_1)))
   (Start_10 (_ BitVec 8) (#b00000000 y x (bvnot Start_2) (bvneg Start_3) (bvand Start_7 Start_10) (bvmul Start_1 Start_8) (bvurem Start Start_8) (bvshl Start_9 Start_10) (bvlshr Start Start_2) (ite StartBool_5 Start_11 Start)))
   (Start_3 (_ BitVec 8) (#b00000001 y (bvnot Start_3) (bvneg Start_2) (bvand Start_4 Start_2) (bvor Start_5 Start_6) (bvadd Start_2 Start_5) (bvmul Start Start_1)))
   (StartBool_7 Bool (false (not StartBool_3) (or StartBool_7 StartBool_5) (bvult Start_7 Start_15)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_7) (bvand Start_6 Start_3) (bvudiv Start_4 Start_6) (bvshl Start_6 Start_1)))
   (Start_12 (_ BitVec 8) (#b00000000 #b00000001 (bvadd Start_11 Start_9) (bvudiv Start_12 Start_1) (bvurem Start_3 Start_11) (bvshl Start_5 Start_1) (bvlshr Start_9 Start) (ite StartBool_4 Start_12 Start_3)))
   (StartBool_2 Bool (true (and StartBool StartBool) (or StartBool StartBool) (bvult Start_3 Start)))
   (Start_7 (_ BitVec 8) (x y #b00000001 (bvnot Start_8) (bvor Start_8 Start_9) (bvmul Start_4 Start_7) (bvudiv Start_4 Start_8) (bvlshr Start_5 Start_1)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvneg Start_9) (bvor Start_4 Start_2) (bvmul Start_5 Start_1) (bvurem Start_2 Start_2) (bvlshr Start_5 Start_6) (ite StartBool_3 Start_2 Start_8)))
   (StartBool_4 Bool (false true (not StartBool)))
   (Start_8 (_ BitVec 8) (#b00000000 y #b10100101 (bvneg Start_6) (bvand Start Start_7) (bvor Start_6 Start_7) (bvadd Start_7 Start_10) (bvmul Start_3 Start_1) (bvudiv Start_2 Start_10) (bvshl Start_7 Start_3)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvmul Start_8 Start_9) (bvudiv Start_11 Start_5) (bvshl Start Start_2) (bvlshr Start_5 Start_4)))
   (Start_11 (_ BitVec 8) (#b00000000 x (bvnot Start_11) (bvneg Start) (bvmul Start_11 Start_5) (bvudiv Start Start_6) (bvurem Start_8 Start_7) (bvlshr Start_11 Start)))
   (Start_4 (_ BitVec 8) (y (bvnot Start_10) (bvand Start_3 Start_9) (bvor Start_5 Start_2) (bvmul Start_8 Start_7) (bvurem Start Start_5)))
   (StartBool_5 Bool (false true (not StartBool) (bvult Start_11 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvneg (bvadd (bvshl x y) #b00000001))))

(check-synth)
