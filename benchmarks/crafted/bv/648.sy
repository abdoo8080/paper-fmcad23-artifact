(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_1 Bool) (Start_14 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_5 Bool) (Start_8 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (StartBool_4 Bool) (Start_13 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_21 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_17 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_18 (_ BitVec 8)) (StartBool_6 Bool) (Start_19 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_22 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_20 (_ BitVec 8)) (Start_23 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvneg Start_2) (bvmul Start_2 Start_3) (bvudiv Start_3 Start_4) (bvshl Start Start_4) (bvlshr Start_4 Start) (ite StartBool_1 Start Start_5)))
   (StartBool Bool (false (not StartBool_5) (and StartBool_6 StartBool_5) (or StartBool_1 StartBool_6)))
   (StartBool_1 Bool (false true (not StartBool_3) (and StartBool_2 StartBool_4) (or StartBool_5 StartBool) (bvult Start_5 Start_7)))
   (Start_14 (_ BitVec 8) (y #b10100101 (bvand Start_4 Start_10) (bvor Start Start_9) (bvadd Start_17 Start_11) (bvudiv Start_11 Start_12) (bvurem Start_10 Start_10) (bvshl Start_17 Start_5) (ite StartBool_5 Start_5 Start_16)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvand Start_2 Start_20) (bvor Start_15 Start_16) (bvadd Start_4 Start_16) (bvmul Start_11 Start_6) (bvurem Start_3 Start_16) (bvshl Start_13 Start_1)))
   (StartBool_3 Bool (false (not StartBool_2) (or StartBool_2 StartBool_5)))
   (StartBool_5 Bool (true (and StartBool StartBool_5) (or StartBool_2 StartBool_4)))
   (Start_8 (_ BitVec 8) (y (bvand Start_8 Start_3) (bvudiv Start Start_6) (bvurem Start_1 Start_4) (ite StartBool_1 Start_3 Start_5)))
   (Start_11 (_ BitVec 8) (#b00000000 y (bvnot Start_1) (bvadd Start_9 Start_11) (bvurem Start_10 Start_11) (bvshl Start_10 Start_1) (ite StartBool Start_2 Start_4)))
   (Start_6 (_ BitVec 8) (y #b00000001 (bvmul Start_7 Start_11) (bvudiv Start_6 Start) (bvlshr Start_11 Start_10)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvnot Start_4) (bvneg Start_9) (bvadd Start_1 Start_5) (bvmul Start_9 Start) (bvudiv Start_7 Start_2) (ite StartBool Start_10 Start_8)))
   (Start_3 (_ BitVec 8) (x #b10100101 (bvnot Start_10) (bvneg Start_6) (bvor Start_3 Start_19) (bvmul Start_4 Start) (bvudiv Start_5 Start_21) (bvshl Start_12 Start_20) (ite StartBool_1 Start_4 Start_13)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_1) (bvult Start Start_2)))
   (Start_5 (_ BitVec 8) (#b00000001 y (bvnot Start) (bvor Start_2 Start_2) (bvadd Start_2 Start_4) (bvmul Start_6 Start) (bvurem Start_5 Start_7) (bvlshr Start_5 Start_8) (ite StartBool_2 Start_2 Start_7)))
   (StartBool_4 Bool (true (not StartBool_2) (bvult Start_1 Start_6)))
   (Start_13 (_ BitVec 8) (#b00000001 y x #b00000000 (bvnot Start) (bvneg Start_1) (bvand Start_14 Start_9) (bvor Start_15 Start_2) (bvadd Start_3 Start) (bvmul Start_10 Start_1) (bvudiv Start_7 Start_15)))
   (Start_15 (_ BitVec 8) (#b00000000 (bvand Start_15 Start_2) (bvor Start_7 Start_8) (bvmul Start_1 Start_5) (bvurem Start_9 Start_3) (bvshl Start_7 Start_5) (bvlshr Start_7 Start_16)))
   (Start_9 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvneg Start_3) (bvor Start_9 Start_4) (bvadd Start_2 Start_3) (bvmul Start_7 Start_6) (bvurem Start_4 Start_10)))
   (Start_21 (_ BitVec 8) (#b10100101 (bvnot Start_12) (bvneg Start_18) (bvand Start_18 Start_21) (bvor Start_16 Start_10) (bvmul Start_6 Start_9) (bvudiv Start_17 Start_22) (bvshl Start_8 Start_19) (bvlshr Start_14 Start_4) (ite StartBool_1 Start_8 Start_15)))
   (Start_16 (_ BitVec 8) (#b00000001 x #b00000000 (bvnot Start_12) (bvneg Start_4) (bvand Start_6 Start_11) (bvor Start_15 Start_3) (bvmul Start_8 Start_4) (bvlshr Start_1 Start_8) (ite StartBool_2 Start_15 Start_6)))
   (Start_17 (_ BitVec 8) (#b10100101 (bvnot Start_10) (bvneg Start_18) (bvand Start_18 Start_7) (bvor Start_11 Start_8) (bvadd Start_15 Start_5) (bvmul Start_7 Start_13) (bvudiv Start Start_8) (bvshl Start_18 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000001 x #b00000000 y (bvnot Start_1) (bvand Start_6 Start_8) (bvor Start_4 Start_3) (bvadd Start_5 Start_4) (bvudiv Start_9 Start_6) (bvurem Start_6 Start_2) (bvshl Start_4 Start_8) (bvlshr Start_2 Start_9) (ite StartBool_1 Start Start_10)))
   (Start_18 (_ BitVec 8) (#b00000000 (bvnot Start_17) (bvor Start_5 Start_18) (bvmul Start_7 Start_2) (bvurem Start_6 Start_16) (bvshl Start_2 Start_19) (bvlshr Start_15 Start_14) (ite StartBool_6 Start_3 Start_6)))
   (StartBool_6 Bool (false (and StartBool_3 StartBool) (or StartBool StartBool_2) (bvult Start_14 Start_3)))
   (Start_19 (_ BitVec 8) (y #b00000001 (bvnot Start_12) (bvneg Start_15) (bvand Start_15 Start_10) (bvadd Start_9 Start_16) (bvmul Start_18 Start_9) (bvudiv Start_20 Start_19) (bvurem Start_15 Start) (ite StartBool_5 Start_4 Start_17)))
   (Start_4 (_ BitVec 8) (y #b10100101 #b00000001 x #b00000000 (bvneg Start_2) (bvand Start_9 Start_2) (bvor Start_12 Start_13) (bvshl Start_8 Start_8) (ite StartBool_4 Start_7 Start_2)))
   (Start_22 (_ BitVec 8) (#b10100101 #b00000000 (bvand Start_17 Start_8) (bvmul Start_22 Start_11) (bvudiv Start Start_9) (bvurem Start_16 Start_8) (ite StartBool Start_13 Start_19)))
   (Start_12 (_ BitVec 8) (#b10100101 x y (bvmul Start_1 Start_17) (bvudiv Start_10 Start) (bvlshr Start_16 Start_5)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvneg Start_23) (bvor Start_13 Start_23) (bvadd Start_19 Start_12) (bvurem Start_8 Start_7) (bvshl Start_20 Start_14) (bvlshr Start Start_2)))
   (Start_20 (_ BitVec 8) (y (bvnot Start_6) (bvor Start_19 Start_5) (bvlshr Start_2 Start_16)))
   (Start_23 (_ BitVec 8) (#b00000001 (bvneg Start_17) (bvand Start_23 Start_13) (bvor Start_7 Start_12) (bvudiv Start_17 Start_15) (bvshl Start_13 Start_16) (ite StartBool_4 Start Start_15)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor (bvor x #b10100101) (bvshl #b10100101 x))))

(check-synth)
