(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_4 Bool) (StartBool_3 Bool) (Start_12 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_2 Bool) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_6 Bool) (Start_13 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_5 Bool) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x y #b00000000 (bvnot Start) (bvand Start Start) (bvurem Start Start) (bvshl Start Start) (bvlshr Start_1 Start) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true false (bvult Start_5 Start_12)))
   (StartBool_4 Bool (true (not StartBool_2) (or StartBool_6 StartBool_6) (bvult Start_9 Start_2)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_5 StartBool_3) (bvult Start_4 Start_11)))
   (Start_12 (_ BitVec 8) (y (bvnot Start_6) (bvneg Start_6) (bvand Start_2 Start) (bvudiv Start Start_12) (bvshl Start Start_1) (ite StartBool Start_13 Start_9)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvadd Start_2 Start) (bvmul Start_2 Start_1) (bvurem Start_2 Start_3) (bvshl Start Start_1) (ite StartBool Start_3 Start_1)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000001 #b00000000 (bvnot Start_9) (bvneg Start) (bvand Start_8 Start_1) (bvor Start_4 Start) (bvadd Start_1 Start) (bvmul Start_6 Start_4) (bvurem Start_1 Start_8) (bvshl Start_6 Start_10) (bvlshr Start_9 Start_3) (ite StartBool Start_9 Start_2)))
   (StartBool_2 Bool (false (not StartBool) (and StartBool StartBool_2)))
   (Start_3 (_ BitVec 8) (#b00000001 #b00000000 x y #b10100101 (bvnot Start_3) (bvmul Start_3 Start_4) (bvudiv Start_1 Start_1) (bvshl Start Start_3) (bvlshr Start_4 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvor Start_7 Start_3) (bvmul Start_2 Start_6)))
   (StartBool_1 Bool (false true (or StartBool StartBool_2) (bvult Start_2 Start_2)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 (bvneg Start_5) (bvor Start_1 Start_4) (bvadd Start Start_4) (bvudiv Start_4 Start_4)))
   (Start_8 (_ BitVec 8) (y #b00000001 (bvnot Start_9) (bvand Start_8 Start_5)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvor Start_2 Start_5) (bvadd Start_2 Start_2) (bvurem Start_1 Start) (bvlshr Start_4 Start_5) (ite StartBool_1 Start_3 Start_1)))
   (Start_11 (_ BitVec 8) (#b10100101 y (bvand Start_4 Start_11) (bvor Start Start_2) (bvadd Start_12 Start_11) (bvmul Start_6 Start_6) (bvurem Start_4 Start_10) (bvshl Start_3 Start_6) (bvlshr Start_1 Start_12) (ite StartBool_1 Start_8 Start_1)))
   (Start_2 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvand Start_6 Start_1) (bvadd Start_2 Start_7) (bvurem Start_4 Start_3)))
   (StartBool_6 Bool (true (not StartBool_1) (and StartBool_3 StartBool_5) (or StartBool_6 StartBool_4) (bvult Start_13 Start_5)))
   (Start_13 (_ BitVec 8) (#b00000001 (bvnot Start_12) (bvor Start_10 Start_8) (bvlshr Start_6 Start_12) (ite StartBool_3 Start_7 Start_11)))
   (Start_6 (_ BitVec 8) (x (bvneg Start_3) (bvand Start_2 Start_6) (bvor Start_8 Start_7) (bvadd Start_1 Start_6) (bvmul Start_8 Start_2) (bvurem Start Start_7) (bvshl Start_8 Start_5) (bvlshr Start_7 Start_3)))
   (StartBool_5 Bool (true (and StartBool_1 StartBool_3)))
   (Start_10 (_ BitVec 8) (x (bvand Start Start_10) (bvor Start_3 Start_9) (bvmul Start_6 Start_4) (bvudiv Start Start_6) (bvshl Start_10 Start_2) (ite StartBool_2 Start_3 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul (ite (bvult (bvneg x) y) #b10100101 #b00000000) (bvmul y #b10100101))))

(check-synth)
