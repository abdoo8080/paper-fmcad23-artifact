(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_5 Bool) (Start_17 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_4 Bool) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_1 Bool) (Start_11 (_ BitVec 8)) (StartBool_2 Bool) (Start_8 (_ BitVec 8)) (StartBool_3 Bool))
  ((Start (_ BitVec 8) (#b10100101 #b00000000 x y (bvnot Start_1) (bvand Start Start_1) (bvor Start_2 Start) (bvudiv Start_3 Start_2) (bvurem Start_2 Start_1) (bvshl Start_3 Start_3) (bvlshr Start Start)))
   (StartBool Bool (true false (not StartBool_4) (and StartBool_5 StartBool_1) (or StartBool_2 StartBool_2) (bvult Start_6 Start_7)))
   (Start_1 (_ BitVec 8) (x y (bvor Start_15 Start_5) (bvmul Start_7 Start_4) (bvurem Start_17 Start_15) (bvshl Start_12 Start_16) (bvlshr Start_14 Start_13)))
   (Start_15 (_ BitVec 8) (#b10100101 x y (bvor Start_9 Start_5) (bvshl Start_1 Start_9) (bvlshr Start_10 Start) (ite StartBool_1 Start_14 Start_2)))
   (Start_14 (_ BitVec 8) (#b00000000 (bvmul Start_8 Start_13) (bvshl Start_8 Start_9) (bvlshr Start_10 Start_6)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvand Start_11 Start_5) (bvshl Start_1 Start_10) (bvlshr Start_16 Start_5)))
   (Start_3 (_ BitVec 8) (x (bvneg Start_3) (bvor Start_3 Start_3) (bvmul Start_3 Start_2) (bvurem Start Start_1) (bvlshr Start_2 Start) (ite StartBool Start_3 Start)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_4) (bvneg Start_1) (bvadd Start_3 Start_3) (bvshl Start_2 Start_5) (bvlshr Start Start_4)))
   (Start_5 (_ BitVec 8) (#b10100101 y (bvand Start_6 Start) (bvadd Start_6 Start) (bvmul Start_1 Start_4) (bvurem Start_5 Start_7) (bvshl Start Start_6) (bvlshr Start_3 Start_3)))
   (Start_16 (_ BitVec 8) (x (bvnot Start_15) (bvmul Start_6 Start_1) (bvudiv Start_3 Start_13) (bvlshr Start_12 Start_13)))
   (Start_13 (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvor Start_12 Start_2) (bvudiv Start_14 Start_5) (bvurem Start_12 Start_9) (ite StartBool_4 Start_9 Start_13)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvneg Start_6) (bvand Start_5 Start_3) (bvor Start_4 Start_8) (bvmul Start_4 Start_2) (bvurem Start_9 Start_6) (bvlshr Start_6 Start)))
   (StartBool_5 Bool (true (or StartBool_4 StartBool_2)))
   (Start_17 (_ BitVec 8) (#b00000000 #b10100101 (bvand Start_3 Start_11) (bvadd Start_11 Start_9) (bvmul Start_6 Start_6) (bvudiv Start_12 Start_16) (bvurem Start_3 Start_3) (bvlshr Start_15 Start_4)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_1) (bvadd Start_1 Start) (bvurem Start_9 Start_10)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvneg Start_12) (bvadd Start_6 Start_15) (bvmul Start_8 Start_14) (ite StartBool Start_1 Start_11)))
   (StartBool_4 Bool (false (not StartBool_2) (or StartBool_2 StartBool_4) (bvult Start_10 Start_5)))
   (Start_12 (_ BitVec 8) (y (bvneg Start_9) (bvand Start_7 Start_6) (bvudiv Start_9 Start_8) (bvshl Start_9 Start) (bvlshr Start_10 Start_13) (ite StartBool_2 Start_1 Start_2)))
   (Start_10 (_ BitVec 8) (#b00000001 x #b00000000 y #b10100101 (bvnot Start) (bvneg Start_4) (bvor Start_8 Start_10) (bvmul Start_6 Start_5) (bvudiv Start_5 Start_8) (bvurem Start_5 Start_11) (bvlshr Start_8 Start)))
   (StartBool_1 Bool (false true (not StartBool_2) (and StartBool_2 StartBool_2) (bvult Start_5 Start_10)))
   (Start_11 (_ BitVec 8) (#b10100101 (bvneg Start_11) (bvadd Start Start_1) (bvmul Start_4 Start_1) (bvudiv Start_11 Start_10) (ite StartBool_1 Start_4 Start_10)))
   (StartBool_2 Bool (true false (not StartBool_2) (bvult Start_5 Start_7)))
   (Start_8 (_ BitVec 8) (y (bvneg Start_9) (bvor Start_6 Start_7) (bvadd Start_4 Start) (bvmul Start_5 Start_10) (bvlshr Start_1 Start_12) (ite StartBool_3 Start_12 Start)))
   (StartBool_3 Bool (false (and StartBool_2 StartBool_3) (bvult Start_3 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvmul y #b10100101) (bvudiv x #b10100101))))

(check-synth)
