(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_7 Bool) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (Start_2 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_3 Bool) (Start_5 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y x #b00000001 (bvand Start Start) (bvurem Start_1 Start_1) (bvlshr Start_2 Start_2) (ite StartBool_1 Start_2 Start)))
   (StartBool Bool (false true (bvult Start_3 Start_10)))
   (Start_11 (_ BitVec 8) (#b00000001 #b10100101 (bvand Start Start_3) (bvor Start_11 Start_4) (ite StartBool_2 Start_10 Start_5)))
   (Start_1 (_ BitVec 8) (x #b00000001 #b10100101 (bvneg Start_1) (bvmul Start_5 Start_3) (bvlshr Start_7 Start_5) (ite StartBool_3 Start_2 Start)))
   (StartBool_7 Bool (true))
   (Start_9 (_ BitVec 8) (y x (bvand Start_9 Start_7) (bvadd Start_7 Start_8) (bvurem Start_1 Start_7) (ite StartBool_4 Start_5 Start_5)))
   (StartBool_1 Bool (false (or StartBool_1 StartBool_1)))
   (Start_4 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 (bvadd Start Start) (bvmul Start_3 Start_4) (bvudiv Start Start_3) (ite StartBool Start_1 Start)))
   (StartBool_6 Bool (false (and StartBool_5 StartBool) (bvult Start_2 Start_1)))
   (StartBool_2 Bool (false true (and StartBool_1 StartBool_3) (or StartBool_1 StartBool_2) (bvult Start_2 Start_7)))
   (StartBool_5 Bool (true false (not StartBool) (and StartBool_6 StartBool_3) (or StartBool_5 StartBool_7)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_3) (bvadd Start_2 Start) (bvmul Start_4 Start_1) (bvurem Start_4 Start_4) (bvlshr Start_1 Start_3) (ite StartBool_1 Start Start_4)))
   (Start_8 (_ BitVec 8) (#b00000001 (bvneg Start) (bvand Start_5 Start_4) (bvmul Start Start_3) (bvudiv Start_5 Start_3) (bvurem Start_8 Start) (bvshl Start_9 Start_6) (bvlshr Start_8 Start_3) (ite StartBool Start_7 Start_1)))
   (Start_6 (_ BitVec 8) (y #b10100101 (bvneg Start_5) (bvurem Start_2 Start_1) (bvshl Start Start_4) (bvlshr Start_3 Start_2) (ite StartBool Start_6 Start_5)))
   (Start_3 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 x (bvnot Start_1) (bvor Start_1 Start_3) (bvadd Start_5 Start_1) (bvudiv Start_5 Start_1) (bvurem Start_3 Start_3) (bvlshr Start_6 Start_6) (ite StartBool_2 Start Start_4)))
   (Start_10 (_ BitVec 8) (x (bvneg Start_3) (bvor Start_1 Start_11) (bvmul Start Start_3) (ite StartBool_2 Start_6 Start_3)))
   (Start_7 (_ BitVec 8) (x #b00000000 y #b10100101 #b00000001 (bvneg Start_7) (bvor Start Start_5) (bvadd Start_5 Start_2) (bvudiv Start_4 Start_5) (bvshl Start_1 Start_3) (bvlshr Start_5 Start_8) (ite StartBool_3 Start_4 Start_1)))
   (StartBool_4 Bool (false true (not StartBool) (bvult Start_7 Start_1)))
   (StartBool_3 Bool (false true (not StartBool_1) (and StartBool StartBool_4) (or StartBool_2 StartBool_1) (bvult Start Start_1)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000001 y (bvneg Start) (bvor Start_8 Start_6) (bvudiv Start_5 Start_6) (ite StartBool_5 Start_5 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl #b00000001 (bvudiv x #b10100101))))

(check-synth)
