(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_1 Bool) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 y #b10100101 (bvneg Start_1) (bvor Start Start) (bvurem Start_1 Start_2)))
   (StartBool Bool (false true (not StartBool_1) (and StartBool_1 StartBool)))
   (StartBool_1 Bool (true false (bvult Start Start)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_3) (bvudiv Start_3 Start_2) (bvurem Start_1 Start_2) (bvshl Start_1 Start_4) (bvlshr Start_1 Start)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvnot Start_1) (bvand Start_4 Start_3) (bvor Start_5 Start_4) (bvudiv Start_3 Start_2) (bvlshr Start_5 Start_3)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvnot Start) (bvand Start_4 Start) (bvadd Start_1 Start_1) (bvlshr Start_1 Start_3) (ite StartBool Start Start_2)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvneg Start) (bvadd Start_3 Start) (bvlshr Start_4 Start_4) (ite StartBool Start_4 Start_1)))
   (Start_5 (_ BitVec 8) (y (bvneg Start_5) (bvmul Start_4 Start) (bvurem Start Start_1) (bvlshr Start_3 Start_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvneg (bvnot y)))))

(check-synth)
