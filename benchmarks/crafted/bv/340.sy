(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_6 Bool) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_3 Bool) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvneg Start) (bvudiv Start Start) (bvurem Start Start_1) (ite StartBool Start_1 Start)))
   (StartBool Bool (true false (and StartBool_2 StartBool_1) (or StartBool_5 StartBool_5)))
   (Start_3 (_ BitVec 8) (#b00000000 #b00000001 y (bvnot Start_12) (bvadd Start_7 Start_2) (bvudiv Start_13 Start_10) (bvurem Start_6 Start_5) (bvlshr Start_1 Start_6)))
   (Start_4 (_ BitVec 8) (#b10100101 y #b00000001 (bvor Start Start_11) (bvurem Start_3 Start_13) (bvshl Start_4 Start_15) (bvlshr Start_4 Start_14) (ite StartBool_4 Start_9 Start_10)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvneg Start_12) (bvand Start_11 Start_2) (bvadd Start_2 Start_10) (bvshl Start_4 Start_1) (bvlshr Start_13 Start_15) (ite StartBool_4 Start_1 Start_14)))
   (Start_15 (_ BitVec 8) (x (bvnot Start) (bvand Start_9 Start_11) (bvmul Start_4 Start_7) (ite StartBool_1 Start_14 Start)))
   (Start_14 (_ BitVec 8) (#b00000000 (bvnot Start_2) (bvneg Start) (bvadd Start_1 Start_10) (bvmul Start_4 Start_4) (bvudiv Start_1 Start_12) (bvurem Start_14 Start_4) (bvshl Start_1 Start_10) (bvlshr Start_5 Start_15)))
   (StartBool_6 Bool (false true (not StartBool_6) (bvult Start Start_14)))
   (Start_5 (_ BitVec 8) (#b10100101 x y (bvneg Start) (bvand Start Start_10) (bvor Start_7 Start_13) (bvadd Start_1 Start_3) (bvmul Start_5 Start_1) (bvurem Start Start_10) (bvshl Start_9 Start_2) (bvlshr Start_12 Start_8) (ite StartBool_6 Start_4 Start_3)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_5) (bvor Start_9 Start_11) (bvudiv Start_10 Start_9) (bvurem Start_1 Start_9) (bvlshr Start_12 Start_4)))
   (Start_1 (_ BitVec 8) (#b00000001 x (bvnot Start_2) (bvneg Start_3) (bvand Start_2 Start_4) (bvudiv Start_4 Start_5) (bvurem Start_5 Start_3) (bvshl Start_6 Start_1)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvnot Start_4) (bvand Start_1 Start_4) (bvadd Start_7 Start_4) (bvmul Start Start_3) (bvudiv Start_1 Start_4) (bvurem Start_3 Start) (ite StartBool_1 Start Start_1)))
   (Start_9 (_ BitVec 8) (#b00000000 x #b00000001 (bvneg Start_1) (bvmul Start_4 Start_4) (bvurem Start_4 Start_9) (bvshl Start_6 Start_3) (ite StartBool_2 Start_7 Start_2)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_3 StartBool_4)))
   (Start_2 (_ BitVec 8) (#b00000000 x y #b00000001 #b10100101 (bvneg Start_12) (bvand Start_10 Start_5) (bvor Start_10 Start_13) (bvadd Start_3 Start_6) (bvurem Start_6 Start_5) (bvshl Start Start_15) (bvlshr Start_8 Start_3) (ite StartBool Start_2 Start_14)))
   (StartBool_4 Bool (false true (and StartBool_3 StartBool_4) (or StartBool_4 StartBool_4) (bvult Start_8 Start_8)))
   (StartBool_3 Bool (true (not StartBool_4) (and StartBool_2 StartBool_5) (or StartBool StartBool)))
   (Start_8 (_ BitVec 8) (y (bvand Start Start_1) (bvudiv Start_9 Start) (bvurem Start Start_5) (bvshl Start_5 Start_4)))
   (Start_7 (_ BitVec 8) (y #b00000000 (bvneg Start_6) (bvand Start_5 Start_5) (bvmul Start_6 Start_2) (bvurem Start_7 Start_7) (bvlshr Start_9 Start_10) (ite StartBool_4 Start_7 Start_11)))
   (StartBool_5 Bool (false true (not StartBool_5) (and StartBool_1 StartBool)))
   (StartBool_2 Bool (true))
   (Start_11 (_ BitVec 8) (#b00000001 (bvnot Start_7) (bvneg Start_5) (bvor Start_3 Start_12) (bvadd Start_9 Start_11) (bvmul Start_2 Start_3)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvnot Start) (bvmul Start_2 Start_6) (bvudiv Start_8 Start_8) (bvurem Start_10 Start_11) (ite StartBool_1 Start_9 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul (bvudiv #b10100101 y) (bvmul x #b10100101))))

(check-synth)
