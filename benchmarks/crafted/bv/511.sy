(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_16 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_4 Bool) (Start_5 (_ BitVec 8)) (Start_17 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_15 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvneg Start) (bvand Start Start) (bvor Start_1 Start_1) (bvurem Start Start_1) (bvshl Start_2 Start_1) (bvlshr Start_2 Start_2)))
   (StartBool Bool (false (and StartBool StartBool_1) (or StartBool_3 StartBool_3) (bvult Start_2 Start_3)))
   (Start_16 (_ BitVec 8) (y (bvor Start_7 Start_17) (bvudiv Start_5 Start_14) (bvurem Start_13 Start_12) (bvlshr Start_7 Start_15) (ite StartBool_2 Start_5 Start_6)))
   (Start_1 (_ BitVec 8) (x (bvneg Start) (bvand Start_6 Start_3) (bvor Start_9 Start_9) (bvadd Start_16 Start_14) (bvmul Start_13 Start_8) (bvlshr Start_17 Start_10) (ite StartBool_4 Start_1 Start_5)))
   (Start_3 (_ BitVec 8) (x (bvneg Start_12) (bvand Start Start_10) (bvadd Start_1 Start_11) (ite StartBool_3 Start_4 Start_9)))
   (StartBool_4 Bool (false))
   (Start_5 (_ BitVec 8) (x #b00000001 #b10100101 #b00000000 y (bvnot Start_7) (bvneg Start_8) (bvand Start_1 Start_4) (bvor Start_14 Start_11) (bvadd Start_13 Start) (bvudiv Start_15 Start_9) (bvurem Start_13 Start_15) (bvshl Start_14 Start_1) (bvlshr Start_8 Start_9) (ite StartBool_3 Start_13 Start_4)))
   (Start_17 (_ BitVec 8) (x #b10100101 (bvneg Start) (bvand Start_10 Start_11) (bvor Start_4 Start_8) (bvadd Start_14 Start_6) (bvmul Start_14 Start_10) (bvudiv Start_17 Start_14) (bvurem Start Start_3) (bvlshr Start_15 Start_3)))
   (Start_7 (_ BitVec 8) (x (bvadd Start_11 Start_9) (bvmul Start_6 Start_8) (bvurem Start_13 Start_4) (bvshl Start_6 Start_9)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvor Start_1 Start_15)))
   (Start_9 (_ BitVec 8) (y (bvnot Start_5) (bvand Start Start_3) (bvurem Start_7 Start_3) (bvshl Start_6 Start_3)))
   (StartBool_1 Bool (false true (or StartBool_2 StartBool_1) (bvult Start_6 Start_2)))
   (StartBool_3 Bool (true false (not StartBool_4) (bvult Start_4 Start_8)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvand Start_2 Start_2) (bvor Start_3 Start_2) (bvadd Start_4 Start_4) (bvmul Start_4 Start_4) (bvudiv Start Start_2) (bvlshr Start_1 Start_2) (ite StartBool Start_2 Start_2)))
   (Start_6 (_ BitVec 8) (x y #b10100101 #b00000001 (bvnot Start_7) (bvand Start_7 Start_8) (bvshl Start_9 Start_4) (bvlshr Start Start_6)))
   (Start_8 (_ BitVec 8) (#b00000000 y x #b10100101 (bvneg Start_7) (bvand Start_10 Start_8) (bvor Start_11 Start_2) (bvadd Start_7 Start_11) (bvlshr Start_6 Start_4) (ite StartBool_1 Start Start_6)))
   (StartBool_2 Bool (true (not StartBool_1) (and StartBool_2 StartBool_1)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_2) (bvurem Start_2 Start_4) (ite StartBool_2 Start_5 Start_9)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start) (bvand Start_3 Start_1) (bvadd Start_11 Start_5) (bvudiv Start_9 Start_2) (bvurem Start Start_9) (bvshl Start_11 Start_8) (bvlshr Start Start_13) (ite StartBool_2 Start_4 Start_14)))
   (Start_10 (_ BitVec 8) (y (bvneg Start_9) (bvor Start_1 Start_12) (bvmul Start_10 Start_13) (bvudiv Start_12 Start_3) (bvlshr Start_5 Start_7) (ite StartBool_2 Start Start_7)))
   (Start_14 (_ BitVec 8) (#b10100101 (bvnot Start_6) (bvneg Start) (bvadd Start_11 Start_15) (bvmul Start_1 Start_15) (bvurem Start_1 Start_5) (bvshl Start_12 Start_6) (ite StartBool_1 Start_10 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start) (bvand Start_5 Start_2) (bvadd Start_2 Start_4) (bvudiv Start Start_6) (bvurem Start_1 Start) (bvshl Start Start_2) (bvlshr Start_2 Start_1)))
   (Start_15 (_ BitVec 8) (#b00000001 (bvnot Start_10) (bvand Start_8 Start) (bvor Start_2 Start_1) (bvshl Start Start_13) (bvlshr Start_5 Start_10) (ite StartBool_1 Start_5 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem y (bvlshr (bvurem #b00000001 y) x))))

(check-synth)
