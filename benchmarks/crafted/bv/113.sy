(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_5 Bool) (Start_13 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_4 Bool))
  ((Start (_ BitVec 8) (#b00000001 #b00000000 y #b10100101 x (bvnot Start) (bvand Start Start_1) (bvor Start_2 Start) (bvmul Start_2 Start_1) (bvudiv Start_1 Start_1) (bvurem Start Start_1) (ite StartBool_1 Start Start)))
   (StartBool Bool (true false (not StartBool_5) (or StartBool_3 StartBool_4) (bvult Start_12 Start_7)))
   (Start_1 (_ BitVec 8) (x #b10100101 #b00000000 y #b00000001 (bvand Start_9 Start_10) (bvshl Start_12 Start_6) (ite StartBool_4 Start_3 Start_7)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvneg Start_9) (bvudiv Start Start_2) (ite StartBool Start_3 Start_13)))
   (StartBool_5 Bool (true false (and StartBool_2 StartBool_1) (bvult Start_8 Start_11)))
   (Start_13 (_ BitVec 8) (y (bvand Start_7 Start_8) (bvor Start_5 Start_2) (bvmul Start_11 Start_11) (bvlshr Start_6 Start_2) (ite StartBool Start_11 Start_12)))
   (Start_2 (_ BitVec 8) (x (bvneg Start) (bvadd Start_12 Start_12) (bvlshr Start_5 Start_1) (ite StartBool_5 Start_1 Start_7)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000000 (bvneg Start_4) (bvand Start_11 Start_4) (bvor Start_2 Start_8) (bvadd Start_7 Start_2) (bvmul Start_5 Start_10) (bvudiv Start_2 Start_5) (bvurem Start_3 Start_5) (bvlshr Start_9 Start_8)))
   (Start_4 (_ BitVec 8) (x (bvor Start_5 Start) (bvshl Start_3 Start_1) (ite StartBool_2 Start_1 Start_6)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_4) (bvneg Start_4) (bvor Start_1 Start_2) (bvshl Start_3 Start) (ite StartBool Start_1 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvand Start Start_1) (bvor Start_3 Start_2) (bvmul Start_2 Start_5) (bvudiv Start_4 Start_2) (bvlshr Start_2 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000001 x #b00000000 (bvor Start_1 Start_4) (bvmul Start_7 Start_6) (bvudiv Start_3 Start_7) (bvshl Start_5 Start_1) (bvlshr Start_3 Start_4)))
   (Start_5 (_ BitVec 8) (#b00000000 y #b00000001 x #b10100101 (bvand Start_5 Start_5) (bvor Start_9 Start_1)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_4) (bvneg Start_7) (bvand Start_4 Start_8) (bvadd Start Start) (bvmul Start_3 Start_7) (bvurem Start_3 Start_2) (ite StartBool_3 Start_8 Start)))
   (StartBool_1 Bool (true false (bvult Start_3 Start)))
   (StartBool_2 Bool (false (not StartBool_2) (bvult Start_8 Start_6)))
   (Start_8 (_ BitVec 8) (#b00000001 x (bvnot Start) (bvand Start_1 Start_2) (bvadd Start_4 Start) (bvmul Start_8 Start_6) (bvudiv Start_1 Start_7) (bvurem Start_3 Start_5) (bvshl Start_3 Start_2) (ite StartBool_2 Start_6 Start_2)))
   (Start_9 (_ BitVec 8) (y (bvnot Start_6) (bvor Start_3 Start_10) (bvadd Start_9 Start_7) (bvudiv Start_7 Start_11) (bvurem Start_4 Start_5)))
   (StartBool_3 Bool (true false (not StartBool_4) (bvult Start_2 Start_6)))
   (StartBool_4 Bool (true (and StartBool_1 StartBool_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr #b10100101 (bvneg x))))

(check-synth)
