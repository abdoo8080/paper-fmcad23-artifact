(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_7 Bool) (StartBool_6 Bool) (StartBool_3 Bool) (StartBool_4 Bool) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_5 Bool) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (x (bvneg Start) (bvand Start_1 Start_2) (bvor Start_1 Start_1) (bvudiv Start_3 Start_1) (bvurem Start Start_3) (bvshl Start Start_4) (bvlshr Start Start_3)))
   (StartBool Bool (false true (and StartBool_3 StartBool_4)))
   (StartBool_7 Bool (false (not StartBool_6) (or StartBool_4 StartBool_4)))
   (StartBool_6 Bool (false true (not StartBool) (or StartBool_7 StartBool_7) (bvult Start_7 Start_7)))
   (StartBool_3 Bool (false true (not StartBool) (and StartBool_4 StartBool_4) (or StartBool_2 StartBool_5) (bvult Start_9 Start_2)))
   (StartBool_4 Bool (false true))
   (Start_11 (_ BitVec 8) (y #b00000001 (bvneg Start_11) (bvand Start_11 Start_3) (bvudiv Start_7 Start_1) (bvlshr Start_4 Start_10)))
   (Start_4 (_ BitVec 8) (#b00000001 y #b10100101 (bvnot Start_1) (bvor Start_1 Start_1) (bvadd Start_2 Start_5) (bvurem Start_4 Start) (bvshl Start Start_4) (bvlshr Start_5 Start_1)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_6) (bvand Start_3 Start_8) (bvmul Start_1 Start_4) (bvshl Start Start_7)))
   (StartBool_5 Bool (false (not StartBool_6) (and StartBool_3 StartBool_2)))
   (Start_5 (_ BitVec 8) (x #b00000000 #b10100101 y #b00000001 (bvnot Start_5) (bvadd Start_4 Start) (bvmul Start_2 Start_1) (bvudiv Start_2 Start_3) (bvlshr Start_5 Start_6)))
   (StartBool_1 Bool (false true (or StartBool StartBool_2) (bvult Start_5 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 (bvurem Start Start_7) (bvshl Start Start_1)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvneg Start_2) (bvand Start_6 Start_8) (bvor Start_3 Start_2) (bvmul Start_6 Start_1) (bvlshr Start_7 Start_3)))
   (Start_1 (_ BitVec 8) (y #b00000001 (bvneg Start_9) (bvand Start_5 Start_9) (bvor Start_10 Start_7) (bvadd Start_9 Start_8) (bvurem Start_8 Start_1) (bvlshr Start_3 Start_11)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start_5) (bvor Start_4 Start_3) (bvshl Start_8 Start_2) (bvlshr Start Start_4) (ite StartBool Start_3 Start_8)))
   (Start_7 (_ BitVec 8) (#b00000000 x (bvnot Start_1) (bvneg Start_4) (bvand Start_1 Start) (bvor Start_5 Start_3) (bvmul Start_8 Start_4) (bvurem Start_8 Start) (ite StartBool Start_8 Start_1)))
   (Start_8 (_ BitVec 8) (#b10100101 #b00000001 #b00000000 y x (bvnot Start_5) (bvand Start_3 Start_7) (bvor Start Start_3) (bvadd Start_5 Start_1) (bvurem Start_3 Start_5) (bvshl Start_8 Start_7) (bvlshr Start_3 Start_9)))
   (Start_3 (_ BitVec 8) (x #b00000001 (bvor Start Start_2) (bvurem Start_8 Start_4) (bvshl Start_7 Start_4) (bvlshr Start_4 Start) (ite StartBool_1 Start_9 Start_7)))
   (StartBool_2 Bool (false true (not StartBool_2) (or StartBool_1 StartBool)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (ite (bvult x #b00000001) (bvneg #b10100101) #b10100101)))

(check-synth)
