(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_2 Bool) (StartBool_6 Bool) (StartBool_5 Bool) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_3 Bool) (Start_11 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (StartBool_4 Bool) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_1 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvneg Start) (bvand Start_1 Start) (bvadd Start Start_2)))
   (StartBool Bool (true false (not StartBool) (or StartBool_2 StartBool_3)))
   (StartBool_2 Bool (false true (not StartBool_1) (or StartBool StartBool_2)))
   (StartBool_6 Bool (true (and StartBool StartBool_5)))
   (StartBool_5 Bool (true (or StartBool_6 StartBool_2) (bvult Start_2 Start_8)))
   (Start_12 (_ BitVec 8) (y #b10100101 #b00000001 (bvmul Start_2 Start_10) (bvudiv Start_4 Start_1) (bvurem Start_3 Start_12) (bvshl Start_1 Start_7) (ite StartBool_5 Start_6 Start)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvand Start_2 Start) (bvor Start_6 Start_7) (bvadd Start_6 Start_1) (bvudiv Start_2 Start_11) (bvurem Start_11 Start_9) (bvshl Start_3 Start_10)))
   (StartBool_3 Bool (false true (not StartBool_3) (and StartBool_4 StartBool)))
   (Start_11 (_ BitVec 8) (y #b10100101 #b00000001 x #b00000000 (bvand Start_3 Start_7) (bvor Start_7 Start_4) (bvmul Start_12 Start_4) (bvudiv Start_3 Start_4)))
   (StartBool_1 Bool (false (not StartBool) (bvult Start_3 Start)))
   (Start_9 (_ BitVec 8) (#b10100101 x #b00000000 (bvnot Start_6) (bvor Start_4 Start_6) (bvadd Start_4 Start) (bvmul Start_8 Start_9) (bvudiv Start_1 Start_9) (bvurem Start_3 Start_2)))
   (StartBool_4 Bool (true (not StartBool) (bvult Start_5 Start_10)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvneg Start_3) (bvadd Start_4 Start_2) (bvshl Start_5 Start_3) (bvlshr Start_3 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvand Start_6 Start_3) (bvor Start_3 Start_1) (bvudiv Start_2 Start_4) (bvlshr Start_3 Start_3)))
   (Start_5 (_ BitVec 8) (y (bvand Start Start_5) (bvmul Start Start) (bvudiv Start Start_4) (bvurem Start_5 Start_2) (bvshl Start_5 Start) (bvlshr Start Start_4)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvneg Start_4) (bvadd Start_3 Start_7) (bvmul Start Start_1) (bvudiv Start_1 Start_5) (bvurem Start_2 Start_3) (bvshl Start_5 Start_6) (ite StartBool Start_8 Start_1)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvneg Start_2) (bvadd Start Start_1) (bvmul Start Start) (bvurem Start_3 Start_1) (bvlshr Start_2 Start_4) (ite StartBool_1 Start_2 Start_2)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvneg Start_5) (bvor Start_4 Start_4) (bvadd Start_2 Start_9) (bvurem Start_6 Start_4) (bvlshr Start_2 Start_6) (ite StartBool Start_4 Start_9)))
   (Start_7 (_ BitVec 8) (y #b10100101 x #b00000001 #b00000000 (bvand Start Start_7) (bvadd Start_7 Start_7) (bvmul Start Start) (bvudiv Start_5 Start_5) (bvurem Start_5 Start_6) (bvshl Start_4 Start_1) (bvlshr Start_4 Start)))
   (Start_1 (_ BitVec 8) (#b00000001 x #b10100101 y (bvnot Start_5) (bvor Start_8 Start_4) (bvadd Start_9 Start) (bvudiv Start_4 Start_9) (bvurem Start_8 Start_4) (bvshl Start_4 Start_8) (bvlshr Start_8 Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvmul (bvand (bvudiv y x) y) y)))

(check-synth)
