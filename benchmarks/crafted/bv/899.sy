(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_1 Bool) (StartBool_6 Bool) (StartBool_7 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (StartBool_3 Bool) (Start_3 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_4 Bool) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_8 Bool) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 (bvadd Start Start) (bvshl Start Start)))
   (StartBool Bool (false true (not StartBool) (and StartBool_1 StartBool) (or StartBool_2 StartBool_3) (bvult Start_1 Start_1)))
   (StartBool_1 Bool (false true (not StartBool_8) (and StartBool_4 StartBool) (or StartBool_1 StartBool_1) (bvult Start_2 Start_7)))
   (StartBool_6 Bool (true false (and StartBool_5 StartBool_1)))
   (StartBool_7 Bool (true false (not StartBool_5) (and StartBool_2 StartBool_8)))
   (StartBool_2 Bool (true (and StartBool_6 StartBool_7) (or StartBool_7 StartBool_4) (bvult Start Start_4)))
   (StartBool_5 Bool (true false (not StartBool) (and StartBool_4 StartBool_5) (or StartBool_2 StartBool_2) (bvult Start_6 Start_9)))
   (StartBool_3 Bool (false true (or StartBool_3 StartBool_5) (bvult Start_8 Start_4)))
   (Start_3 (_ BitVec 8) (#b10100101 x #b00000000 (bvneg Start_7) (bvor Start_10 Start_6) (bvadd Start_9 Start_3) (bvmul Start_1 Start_3) (bvudiv Start_8 Start_2) (bvurem Start_11 Start_11) (bvshl Start_8 Start_3) (bvlshr Start_10 Start_1)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvneg Start_2) (bvand Start_2 Start) (bvurem Start Start_2) (bvlshr Start Start_2)))
   (StartBool_4 Bool (false true (not StartBool_4) (and StartBool_3 StartBool_2)))
   (Start_2 (_ BitVec 8) (y #b10100101 #b00000000 (bvneg Start_3) (bvand Start_1 Start_1) (bvor Start_1 Start_1) (bvurem Start_3 Start_4) (bvlshr Start_5 Start_1)))
   (Start_5 (_ BitVec 8) (y (bvnot Start_1) (bvand Start_5 Start_1) (bvmul Start_3 Start_3) (bvurem Start_4 Start_2) (bvlshr Start_2 Start_6) (ite StartBool_4 Start Start_7)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvneg Start_7) (bvmul Start_7 Start_7) (bvudiv Start_1 Start_7) (bvshl Start_2 Start_7) (bvlshr Start_6 Start_7)))
   (Start_9 (_ BitVec 8) (y #b10100101 x #b00000001 #b00000000 (bvor Start_7 Start_5) (bvurem Start_8 Start_6) (bvlshr Start_9 Start_10)))
   (Start_6 (_ BitVec 8) (#b00000000 y x #b00000001 (bvnot Start_4) (bvneg Start_3) (bvand Start_4 Start_4) (bvor Start_4 Start_8) (bvurem Start_6 Start_2) (bvlshr Start_1 Start_2)))
   (Start_8 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 (bvnot Start_6) (bvneg Start_8) (bvand Start_9 Start_6) (bvadd Start_9 Start_2) (bvshl Start_4 Start_7) (ite StartBool_1 Start_7 Start_4)))
   (StartBool_8 Bool (false true (and StartBool_1 StartBool_5) (or StartBool_3 StartBool_1)))
   (Start_10 (_ BitVec 8) (#b00000000 x (bvadd Start_5 Start_10) (bvudiv Start_7 Start_1) (bvurem Start_3 Start_5) (ite StartBool_1 Start_5 Start_11)))
   (Start_11 (_ BitVec 8) (x y #b00000001 (bvand Start_6 Start_7) (bvudiv Start_6 Start_1) (ite StartBool_1 Start_10 Start_3)))
   (Start_4 (_ BitVec 8) (#b10100101 #b00000000 (bvadd Start_3 Start_4) (bvurem Start_4 Start_4) (bvlshr Start_3 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl #b10100101 (bvudiv #b00000000 y))))

(check-synth)
