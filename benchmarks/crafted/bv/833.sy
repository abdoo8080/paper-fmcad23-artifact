(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (StartBool_4 Bool) (Start_5 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_2 Bool) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 x #b00000001 (bvnot Start) (bvand Start_1 Start) (bvor Start Start_2) (bvmul Start_1 Start) (bvurem Start Start_1) (ite StartBool Start Start_3)))
   (StartBool Bool (true))
   (Start_12 (_ BitVec 8) (y (bvnot Start_7) (bvneg Start_7) (bvand Start Start_1) (bvudiv Start_10 Start_1) (bvurem Start_7 Start_2)))
   (Start_11 (_ BitVec 8) (#b00000000 #b00000001 x (bvnot Start_3) (bvadd Start_12 Start_1) (bvmul Start_12 Start_12) (bvurem Start_2 Start_5) (bvshl Start_6 Start_5)))
   (Start_10 (_ BitVec 8) (#b00000001 x (bvmul Start_6 Start_9) (bvudiv Start_1 Start_2) (bvurem Start_11 Start_10) (bvshl Start_10 Start_1) (bvlshr Start_2 Start_11) (ite StartBool_1 Start_10 Start)))
   (Start_1 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_6) (bvneg Start_6) (bvand Start_10 Start_9) (bvor Start_7 Start_4) (bvudiv Start_1 Start_9) (bvshl Start_8 Start_4) (bvlshr Start_1 Start_9) (ite StartBool_4 Start Start_8)))
   (Start_3 (_ BitVec 8) (x #b10100101 y (bvnot Start_1) (bvneg Start_1) (bvor Start_1 Start_1) (bvmul Start_2 Start_1) (bvurem Start Start_4) (bvshl Start Start_2) (bvlshr Start_2 Start_3) (ite StartBool_1 Start Start_4)))
   (StartBool_1 Bool (false (or StartBool_1 StartBool_2)))
   (Start_8 (_ BitVec 8) (#b00000000 #b10100101 x y #b00000001 (bvnot Start_8) (bvshl Start_2 Start_3) (bvlshr Start_5 Start_3)))
   (StartBool_3 Bool (true false (or StartBool_3 StartBool_4)))
   (Start_7 (_ BitVec 8) (y (bvnot Start_5) (bvudiv Start_2 Start_4)))
   (StartBool_4 Bool (false true (and StartBool_2 StartBool_2) (bvult Start_4 Start_5)))
   (Start_5 (_ BitVec 8) (x (bvnot Start_4) (bvneg Start_6) (bvand Start_3 Start_6) (bvor Start_1 Start_1) (bvadd Start_5 Start_1) (bvudiv Start_2 Start_4)))
   (Start_9 (_ BitVec 8) (y #b00000001 (bvnot Start_3) (bvneg Start_4) (bvand Start_5 Start_1)))
   (Start_6 (_ BitVec 8) (#b10100101 x #b00000000 #b00000001 (bvnot Start) (bvand Start Start_6) (bvor Start_4 Start_2) (bvurem Start_3 Start_3) (bvshl Start Start_5) (ite StartBool Start_2 Start_4)))
   (StartBool_2 Bool (true (or StartBool_2 StartBool_3)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvnot Start) (bvand Start_4 Start_2) (bvor Start_2 Start) (bvadd Start_1 Start_3) (bvmul Start_2 Start_2) (bvshl Start_7 Start_5) (ite StartBool_2 Start_8 Start_8)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_3) (bvneg Start) (bvand Start_2 Start_7) (bvor Start_2 Start) (bvmul Start_5 Start_8) (bvlshr Start_2 Start_2) (ite StartBool_1 Start_1 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvand (bvlshr #b00000001 (bvmul y y)) #b10100101)))

(check-synth)
