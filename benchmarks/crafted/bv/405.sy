(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_3 Bool) (Start_13 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (StartBool_2 Bool) (Start_15 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 #b00000000 x (bvneg Start) (bvand Start_1 Start_2) (bvmul Start_3 Start_2) (bvurem Start_2 Start_2) (bvlshr Start Start_2) (ite StartBool Start_3 Start_3)))
   (StartBool Bool (true false (not StartBool_1) (and StartBool_2 StartBool)))
   (Start_1 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_1) (bvneg Start_3) (bvand Start_16 Start_2) (bvmul Start_5 Start_4) (bvudiv Start_16 Start_10) (bvlshr Start_1 Start_6) (ite StartBool_3 Start_16 Start_6)))
   (Start_11 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_8) (bvneg Start_7) (bvurem Start_14 Start_2) (bvshl Start_12 Start_15) (bvlshr Start_13 Start_4)))
   (StartBool_3 Bool (true false (not StartBool_3) (and StartBool_2 StartBool_1)))
   (Start_13 (_ BitVec 8) (x #b10100101 y #b00000001 #b00000000 (bvneg Start_12) (bvadd Start_8 Start_9) (bvudiv Start_7 Start_9) (bvlshr Start_9 Start_10) (ite StartBool_3 Start Start_2)))
   (Start_8 (_ BitVec 8) (y (bvnot Start_1) (bvand Start_3 Start_8) (bvadd Start_3 Start_6) (bvlshr Start_1 Start_1)))
   (Start_12 (_ BitVec 8) (x (bvand Start_5 Start_3) (bvmul Start_1 Start_8) (bvurem Start_13 Start_1)))
   (StartBool_1 Bool (false true (and StartBool_2 StartBool_2) (or StartBool_2 StartBool_1) (bvult Start_3 Start_3)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_9) (bvneg Start_4) (bvurem Start_8 Start_6)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool StartBool_1) (bvult Start Start_3)))
   (Start_15 (_ BitVec 8) (#b00000001 (bvneg Start) (bvand Start_3 Start_12) (bvor Start Start_16) (bvadd Start_15 Start_9) (bvudiv Start_15 Start_6) (bvurem Start_12 Start) (bvlshr Start_6 Start_7)))
   (Start_4 (_ BitVec 8) (x #b10100101 #b00000000 (bvand Start_5 Start) (bvadd Start_1 Start_5) (bvmul Start_4 Start_5) (bvudiv Start_4 Start_1) (bvurem Start_6 Start_5) (bvshl Start_3 Start_6)))
   (Start_3 (_ BitVec 8) (#b00000001 x (bvnot Start_1) (bvneg Start_1) (bvmul Start_3 Start_1) (bvudiv Start Start_4) (ite StartBool_1 Start Start)))
   (Start_6 (_ BitVec 8) (#b10100101 x (bvnot Start_1) (bvor Start_3 Start) (bvadd Start_4 Start_1) (bvmul Start_5 Start) (bvudiv Start_7 Start_3) (bvlshr Start_2 Start)))
   (Start_14 (_ BitVec 8) (#b10100101 (bvnot Start_6) (bvneg Start_1) (bvadd Start_15 Start_1) (bvmul Start_13 Start_16) (bvurem Start_15 Start_7) (bvlshr Start_12 Start_10) (ite StartBool_1 Start_16 Start_1)))
   (Start_16 (_ BitVec 8) (y x #b00000000 (bvneg Start_2) (bvand Start_4 Start_11) (bvadd Start_12 Start_7) (bvlshr Start_6 Start_9) (ite StartBool_2 Start_11 Start_2)))
   (Start_5 (_ BitVec 8) (y #b00000001 #b10100101 #b00000000 x (bvneg Start_2) (bvor Start_8 Start_9) (bvudiv Start_10 Start_8) (bvurem Start_9 Start_3)))
   (Start_7 (_ BitVec 8) (y x (bvnot Start_3) (bvneg Start_3) (bvand Start_4 Start_8) (bvor Start_5 Start_8)))
   (Start_10 (_ BitVec 8) (x (bvand Start_6 Start_6) (bvor Start_8 Start_1) (bvudiv Start_5 Start_1) (bvurem Start_4 Start_3) (bvshl Start_3 Start_3) (bvlshr Start_8 Start_9) (ite StartBool_1 Start_8 Start_9)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_11) (bvand Start_4 Start_12) (bvor Start_6 Start_1) (bvmul Start_10 Start_11) (bvurem Start_7 Start_10) (bvshl Start_1 Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv (bvadd #b00000001 #b10100101) (bvnot x))))

(check-synth)
