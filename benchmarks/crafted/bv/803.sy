(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_14 (_ BitVec 8)) (StartBool_4 Bool) (Start_16 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (Start_6 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_17 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b10100101 x y #b00000001 (bvnot Start) (bvneg Start_1) (bvor Start Start_2) (bvudiv Start Start_3) (bvurem Start_2 Start)))
   (StartBool Bool (true false (not StartBool_3) (bvult Start_13 Start_11)))
   (Start_14 (_ BitVec 8) (y (bvadd Start_4 Start) (bvmul Start_3 Start_13) (bvudiv Start_12 Start_4) (bvshl Start_12 Start_12) (bvlshr Start_15 Start_16)))
   (StartBool_4 Bool (true false (or StartBool_4 StartBool) (bvult Start_9 Start_12)))
   (Start_16 (_ BitVec 8) (x y #b10100101 (bvneg Start_3) (bvand Start_9 Start_7) (bvmul Start_16 Start_13) (bvlshr Start_11 Start_17) (ite StartBool_4 Start_3 Start_2)))
   (Start_15 (_ BitVec 8) (#b00000001 y #b00000000 (bvnot Start_4) (bvand Start_4 Start) (bvor Start_14 Start_5) (bvurem Start_16 Start_1) (bvshl Start_4 Start_15) (bvlshr Start Start_16) (ite StartBool_2 Start_13 Start_13)))
   (Start_1 (_ BitVec 8) (#b00000000 y #b00000001 (bvnot Start_13) (bvshl Start_8 Start_14) (bvlshr Start_15 Start_9) (ite StartBool Start_4 Start_5)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvor Start_2 Start) (bvadd Start_4 Start_11) (bvudiv Start_6 Start_5) (bvurem Start_1 Start_12) (bvshl Start_1 Start) (ite StartBool_3 Start_5 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvand Start_12 Start_2) (bvadd Start_6 Start_11) (bvudiv Start_1 Start_5) (bvurem Start_8 Start_7) (bvlshr Start_7 Start_8)))
   (StartBool_1 Bool (true false (not StartBool_1) (and StartBool_1 StartBool_1) (or StartBool_1 StartBool)))
   (Start_2 (_ BitVec 8) (x (bvor Start Start_5) (bvudiv Start_1 Start_3) (bvshl Start_6 Start_3) (bvlshr Start_3 Start_3)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvand Start_3 Start_1) (bvadd Start_3 Start_4) (bvmul Start Start_1) (bvurem Start_4 Start_2) (bvlshr Start_1 Start_4) (ite StartBool_2 Start_1 Start_2)))
   (StartBool_2 Bool (false true (bvult Start_1 Start)))
   (Start_6 (_ BitVec 8) (x #b10100101 y #b00000001 (bvnot Start_6) (bvneg Start_7) (bvor Start_8 Start_4) (bvadd Start_7 Start_5) (bvmul Start Start_5) (bvurem Start Start_5) (bvlshr Start_1 Start_2)))
   (Start_13 (_ BitVec 8) (#b00000000 (bvudiv Start Start_7) (bvurem Start Start_4) (bvshl Start_2 Start_6)))
   (Start_17 (_ BitVec 8) (y (bvnot Start_5) (bvmul Start_14 Start_7) (bvudiv Start_9 Start_8) (bvlshr Start_8 Start_14) (ite StartBool_1 Start_16 Start_1)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvand Start_2 Start_8) (bvshl Start Start_6) (bvlshr Start_8 Start_5) (ite StartBool_3 Start_6 Start_4)))
   (StartBool_3 Bool (false (not StartBool) (and StartBool_1 StartBool_2)))
   (Start_7 (_ BitVec 8) (#b10100101 y (bvneg Start_8) (bvand Start_1 Start_6) (bvor Start_6 Start_4) (bvudiv Start_5 Start_9)))
   (Start_3 (_ BitVec 8) (x (bvand Start_4 Start_1) (bvor Start_1 Start_1) (bvurem Start_4 Start_1) (bvshl Start_3 Start_3) (bvlshr Start_1 Start_2) (ite StartBool_1 Start_3 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000000 x #b00000001 #b10100101 (bvnot Start_7) (bvneg Start_2) (bvand Start_5 Start_5) (bvor Start_6 Start_4) (bvadd Start_5 Start_3) (bvmul Start_4 Start_4) (bvudiv Start_3 Start_2) (bvurem Start_7 Start_2) (bvshl Start_3 Start_1) (ite StartBool Start_10 Start_8)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000000 (bvnot Start_11) (bvneg Start_3) (bvor Start_3 Start_2) (bvshl Start_2 Start)))
   (Start_11 (_ BitVec 8) (x (bvneg Start_11) (bvand Start_1 Start_8) (bvadd Start_8 Start) (bvmul Start_1 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvudiv y x))))

(check-synth)
