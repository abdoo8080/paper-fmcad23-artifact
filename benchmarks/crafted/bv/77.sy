(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_19 (_ BitVec 8)) (Start_18 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_17 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_15 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_3 Bool))
  ((Start (_ BitVec 8) (#b00000001 #b10100101 #b00000000 y (bvneg Start_1) (bvand Start_2 Start_2) (bvurem Start_3 Start_1) (bvshl Start Start_1) (bvlshr Start_2 Start_4)))
   (StartBool Bool (true (not StartBool) (and StartBool_1 StartBool_2) (bvult Start_6 Start_1)))
   (Start_1 (_ BitVec 8) (y #b10100101 (bvor Start_11 Start_10) (bvudiv Start_7 Start_14) (bvurem Start_7 Start_2) (bvshl Start Start)))
   (Start_19 (_ BitVec 8) (x #b00000000 (bvnot Start_2) (bvneg Start_8) (bvudiv Start_11 Start_18) (bvshl Start_11 Start_17)))
   (Start_18 (_ BitVec 8) (#b00000000 #b10100101 x (bvnot Start_8) (bvmul Start_5 Start_18) (bvurem Start_18 Start_13) (bvshl Start_18 Start)))
   (Start_16 (_ BitVec 8) (#b00000001 (bvnot Start) (bvadd Start_16 Start_13) (bvmul Start_11 Start_17) (bvurem Start_5 Start_9) (bvshl Start_8 Start_18) (bvlshr Start_4 Start_3)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvneg Start_11) (bvadd Start_1 Start_1) (bvshl Start_2 Start_11) (bvlshr Start_15 Start_4)))
   (Start_17 (_ BitVec 8) (#b10100101 (bvor Start_13 Start_18) (bvadd Start_2 Start_6) (bvmul Start_12 Start_19) (bvudiv Start_15 Start_4) (bvurem Start_2 Start_1) (bvlshr Start_1 Start_12)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvneg Start) (bvand Start_5 Start_4) (bvurem Start Start_1) (bvshl Start_2 Start_1) (ite StartBool Start_2 Start_2)))
   (Start_14 (_ BitVec 8) (y #b00000001 x #b00000000 #b10100101 (bvneg Start_13) (bvadd Start_9 Start_1) (bvmul Start_2 Start_4) (bvudiv Start_1 Start_10) (bvurem Start_6 Start_13) (ite StartBool_2 Start Start_7)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvnot Start_15) (bvneg Start_3) (bvand Start_14 Start_8) (bvudiv Start_17 Start_9) (bvlshr Start_13 Start_2)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvmul Start_16 Start_7) (bvudiv Start_5 Start_12) (bvurem Start_1 Start_5) (bvshl Start_4 Start_16) (bvlshr Start_9 Start_7)))
   (Start_5 (_ BitVec 8) (#b10100101 x (bvand Start_4 Start_6) (bvadd Start_3 Start_6) (bvmul Start_7 Start_6) (bvudiv Start_5 Start_4) (bvurem Start_3 Start_6) (bvlshr Start_6 Start_6)))
   (Start_7 (_ BitVec 8) (x y #b10100101 #b00000000 (bvor Start_8 Start) (bvadd Start_6 Start_3) (bvmul Start_5 Start_8) (bvudiv Start_7 Start_9) (bvshl Start Start_10)))
   (Start_10 (_ BitVec 8) (y (bvand Start Start_1) (bvor Start_10 Start_4) (bvadd Start_7 Start_9) (bvudiv Start_8 Start_3) (bvshl Start_7 Start_8)))
   (StartBool_2 Bool (true false (and StartBool StartBool_3)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_6) (bvand Start Start_1) (bvshl Start_7 Start_10) (bvlshr Start_6 Start_8) (ite StartBool Start_11 Start_4)))
   (StartBool_1 Bool (true))
   (Start_15 (_ BitVec 8) (#b00000000 (bvnot Start_15) (bvudiv Start_2 Start) (bvshl Start_14 Start_12) (bvlshr Start_9 Start_12)))
   (Start_8 (_ BitVec 8) (y #b10100101 #b00000001 x (bvnot Start_3) (bvneg Start_10) (bvor Start_10 Start_9) (bvadd Start_8 Start) (bvmul Start_5 Start_12) (bvudiv Start_3 Start) (bvurem Start_7 Start_4) (bvshl Start_8 Start_9) (ite StartBool_1 Start_13 Start_4)))
   (Start_13 (_ BitVec 8) (#b10100101 #b00000001 (bvor Start_11 Start_10) (bvadd Start_13 Start_10) (bvshl Start_4 Start_5) (bvlshr Start_9 Start_5) (ite StartBool_1 Start_14 Start_4)))
   (Start_3 (_ BitVec 8) (#b00000001 y x (bvneg Start_2) (bvand Start_19 Start_7) (bvor Start_15 Start_5) (bvadd Start_15 Start) (bvlshr Start_11 Start_5)))
   (Start_11 (_ BitVec 8) (#b00000000 x (bvand Start_8 Start_1) (bvudiv Start_4 Start_3)))
   (StartBool_3 Bool (false (not StartBool_2) (and StartBool_2 StartBool_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv y (bvneg y))))

(check-synth)
