(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_2 Bool) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_3 Bool) (Start_5 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 (bvneg Start_1) (bvand Start_2 Start_1) (bvor Start_1 Start) (bvadd Start_2 Start_3) (bvshl Start_2 Start_1)))
   (StartBool Bool (true false (and StartBool_1 StartBool_2) (or StartBool_3 StartBool) (bvult Start_6 Start_6)))
   (StartBool_2 Bool (false (not StartBool_2)))
   (Start_1 (_ BitVec 8) (y (bvand Start_5 Start) (bvor Start_5 Start_3) (bvudiv Start_4 Start_3) (bvurem Start_5 Start_4) (bvshl Start_5 Start_3)))
   (Start_6 (_ BitVec 8) (y #b00000000 x (bvudiv Start_3 Start_6)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvnot Start_8) (bvadd Start_4 Start_4) (bvudiv Start_8 Start_5) (bvshl Start_1 Start_2)))
   (Start_7 (_ BitVec 8) (#b00000001 y #b00000000 (bvneg Start_7) (bvor Start_2 Start_3) (bvmul Start_8 Start_8) (bvlshr Start_8 Start_5)))
   (StartBool_3 Bool (true false (and StartBool StartBool) (or StartBool_2 StartBool_3)))
   (Start_5 (_ BitVec 8) (#b00000000 (bvnot Start_5) (bvneg Start_3) (bvand Start Start_1) (bvudiv Start Start_4) (bvurem Start_6 Start_5) (bvlshr Start_5 Start_3) (ite StartBool_1 Start_7 Start_7)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvneg Start_4) (bvlshr Start_5 Start_2) (ite StartBool_1 Start_4 Start_3)))
   (StartBool_1 Bool (true false (bvult Start Start_1)))
   (Start_4 (_ BitVec 8) (#b00000001 #b10100101 y (bvnot Start_2) (bvurem Start_3 Start_4) (ite StartBool Start_4 Start_2)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvneg Start_4) (bvlshr Start Start) (ite StartBool Start_4 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr x (bvadd y y))))

(check-synth)
