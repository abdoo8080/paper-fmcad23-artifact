(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_1 Bool) (Start_3 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 y (bvand Start Start_1) (bvadd Start_1 Start_1) (bvmul Start_1 Start_1) (bvurem Start_1 Start_2) (ite StartBool_1 Start_1 Start_1)))
   (StartBool Bool (false true (bvult Start_4 Start_12)))
   (Start_1 (_ BitVec 8) (x (bvnot Start_4) (bvor Start_6 Start_6) (bvadd Start Start) (bvudiv Start_1 Start) (bvurem Start_7 Start_10) (bvlshr Start_2 Start_12)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvneg Start_9) (bvmul Start_11 Start_7) (bvshl Start_9 Start_12) (bvlshr Start_3 Start_6)))
   (StartBool_1 Bool (false (not StartBool_1) (and StartBool_1 StartBool) (bvult Start Start_2)))
   (Start_3 (_ BitVec 8) (#b00000001 x (bvnot Start_2) (bvneg Start) (bvand Start Start_2) (bvadd Start_2 Start) (bvmul Start_4 Start_3) (bvurem Start_2 Start_4) (bvlshr Start Start_1) (ite StartBool_2 Start Start_2)))
   (StartBool_2 Bool (false (not StartBool_3) (bvult Start_1 Start_1)))
   (Start_11 (_ BitVec 8) (#b00000000 y #b00000001 x #b10100101 (bvudiv Start_12 Start_4) (bvlshr Start_1 Start)))
   (StartBool_3 Bool (false (and StartBool_3 StartBool_3) (bvult Start_4 Start_1)))
   (Start_2 (_ BitVec 8) (#b00000001 y x (bvneg Start_2) (bvor Start_3 Start_1) (bvadd Start Start) (bvurem Start_3 Start_2) (bvshl Start_2 Start)))
   (Start_7 (_ BitVec 8) (y (bvnot Start_4) (bvneg Start_3) (bvor Start_2 Start) (bvadd Start_5 Start_7) (bvmul Start_8 Start_9) (bvshl Start_4 Start_8)))
   (Start_9 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvmul Start_7 Start_3) (bvlshr Start_5 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvand Start_4 Start_9) (bvor Start_6 Start_7) (bvmul Start_5 Start_4) (bvudiv Start_1 Start_7) (bvshl Start_8 Start_6) (ite StartBool Start_9 Start_10)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvnot Start_3) (bvand Start_4 Start_3) (bvadd Start_2 Start_2) (bvurem Start_5 Start_4) (bvlshr Start_2 Start_6) (ite StartBool_1 Start_2 Start_3)))
   (Start_6 (_ BitVec 8) (x y (bvneg Start_1) (bvor Start_3 Start_5) (bvadd Start_5 Start_7) (bvmul Start_4 Start_5) (bvudiv Start_5 Start_5) (bvurem Start_7 Start_6) (bvlshr Start Start_5) (ite StartBool_3 Start_1 Start_3)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvneg Start_8) (bvmul Start_6 Start) (bvudiv Start_7 Start_6) (bvurem Start_9 Start_4) (bvshl Start_7 Start_5) (ite StartBool_2 Start_6 Start_8)))
   (Start_10 (_ BitVec 8) (#b00000000 y #b00000001 (bvneg Start_9) (bvor Start_4 Start_7) (bvudiv Start_6 Start_5) (bvurem Start_1 Start_9) (bvshl Start_5 Start) (ite StartBool Start_6 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvmul #b10100101 #b10100101) x)))

(check-synth)
