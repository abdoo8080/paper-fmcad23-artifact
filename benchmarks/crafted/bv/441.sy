(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (StartBool_4 Bool) (Start_1 (_ BitVec 8)) (StartBool_1 Bool) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_2 Bool) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 (bvneg Start_1) (bvshl Start_1 Start) (ite StartBool_1 Start_2 Start_2)))
   (StartBool Bool (false (and StartBool StartBool_4)))
   (StartBool_5 Bool (true false (not StartBool_2) (bvult Start_7 Start_3)))
   (StartBool_4 Bool (false true (not StartBool_5) (and StartBool_3 StartBool_2)))
   (Start_1 (_ BitVec 8) (#b10100101 x (bvnot Start) (bvand Start_9 Start_10) (bvor Start_6 Start_1) (bvmul Start_11 Start_9) (bvlshr Start_10 Start_11) (ite StartBool_4 Start_10 Start_5)))
   (StartBool_1 Bool (false (or StartBool StartBool_3)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_7) (bvand Start_10 Start) (bvor Start_11 Start_8) (bvadd Start_4 Start_11) (bvudiv Start_5 Start_8) (bvurem Start_1 Start_2) (bvshl Start_6 Start_2)))
   (Start_5 (_ BitVec 8) (#b10100101 y (bvand Start Start_1) (bvmul Start_2 Start_6) (bvurem Start_4 Start) (bvlshr Start_3 Start_7) (ite StartBool Start_2 Start_3)))
   (StartBool_3 Bool (false true (and StartBool_3 StartBool_2) (bvult Start_5 Start_5)))
   (Start_7 (_ BitVec 8) (y (bvnot Start_3) (bvor Start_4 Start_2) (bvmul Start_7 Start) (bvshl Start_7 Start_1) (bvlshr Start_7 Start_2) (ite StartBool_2 Start Start_1)))
   (Start_6 (_ BitVec 8) (y #b10100101 #b00000001 (bvneg Start_2) (bvand Start_1 Start_3) (bvmul Start_9 Start) (bvurem Start Start_3) (bvshl Start_3 Start_8) (bvlshr Start_6 Start_6) (ite StartBool_1 Start_10 Start_2)))
   (Start_2 (_ BitVec 8) (#b00000001 #b00000000 x #b10100101 (bvneg Start_2) (bvadd Start_1 Start_2) (bvmul Start_3 Start_4) (bvudiv Start_4 Start_2) (bvshl Start_3 Start) (bvlshr Start_5 Start_4) (ite StartBool_1 Start_3 Start_2)))
   (StartBool_2 Bool (true (not StartBool_2) (and StartBool_3 StartBool_1) (or StartBool StartBool_2) (bvult Start_1 Start_8)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvneg Start_4) (bvand Start_6 Start_6) (bvor Start_8 Start_4) (bvmul Start_6 Start_5) (bvudiv Start_2 Start_5) (bvurem Start_1 Start_3) (ite StartBool Start_2 Start_3)))
   (Start_10 (_ BitVec 8) (x (bvnot Start_6) (bvneg Start_1) (bvor Start_10 Start_11) (bvadd Start_6 Start_3) (bvmul Start_7 Start_10) (bvurem Start_2 Start_2) (ite StartBool_1 Start_10 Start_9)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_9) (bvadd Start_4 Start_10) (bvmul Start_11 Start_10) (bvshl Start Start_6) (bvlshr Start_9 Start_10)))
   (Start_4 (_ BitVec 8) (y #b10100101 #b00000000 (bvnot Start_4) (bvand Start_5 Start_3) (bvudiv Start_9 Start_9) (bvurem Start_6 Start_1) (bvlshr Start_8 Start)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_3) (bvneg Start_6) (bvand Start_10 Start_4) (bvor Start_3 Start_7) (bvmul Start_2 Start_10) (bvudiv Start_6 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv #b10100101 (bvshl (bvmul x x) x))))

(check-synth)
