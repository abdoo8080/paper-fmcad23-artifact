(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_2 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (Start_16 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 (bvnot Start) (bvor Start Start_1) (bvudiv Start_1 Start_1) (bvshl Start_2 Start_1) (bvlshr Start_1 Start_3) (ite StartBool_1 Start Start)))
   (StartBool Bool (true (not StartBool) (and StartBool_4 StartBool_2)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvneg Start_14) (bvudiv Start_14 Start_12) (bvshl Start_2 Start_6) (bvlshr Start_9 Start_8)))
   (Start_15 (_ BitVec 8) (x y (bvneg Start_1) (bvand Start_4 Start_11) (bvor Start_6 Start_14) (bvmul Start_8 Start_8) (bvurem Start_6 Start_15) (bvlshr Start_3 Start_7) (ite StartBool Start_1 Start_4)))
   (Start_3 (_ BitVec 8) (#b00000000 #b00000001 y #b10100101 (bvadd Start_9 Start_8) (bvmul Start_12 Start_14) (bvshl Start_13 Start) (ite StartBool_4 Start_16 Start_13)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvand Start_9 Start_13) (bvor Start_13 Start) (bvmul Start_12 Start_11) (ite StartBool Start_9 Start_15)))
   (Start_14 (_ BitVec 8) (#b00000000 #b10100101 (bvneg Start_5) (bvand Start_13 Start_9) (bvor Start_3 Start_7) (bvmul Start_7 Start_4) (bvudiv Start_4 Start_10) (bvurem Start_4 Start_12) (bvshl Start_12 Start_15) (ite StartBool_5 Start_13 Start_13)))
   (StartBool_1 Bool (false (and StartBool_2 StartBool_1) (bvult Start_4 Start_1)))
   (StartBool_4 Bool (true false (not StartBool_5) (and StartBool StartBool_1) (bvult Start_8 Start_3)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_1) (bvand Start_2 Start) (bvmul Start_2 Start_5) (bvurem Start_3 Start_5) (ite StartBool Start_2 Start_5)))
   (Start_5 (_ BitVec 8) (#b10100101 #b00000000 (bvand Start_1 Start_5) (bvor Start_4 Start_4) (bvadd Start_2 Start_2) (bvmul Start_3 Start_7) (bvudiv Start_8 Start_1) (bvurem Start_8 Start_9) (bvshl Start_9 Start_8) (bvlshr Start_7 Start_9) (ite StartBool_3 Start Start_4)))
   (Start_9 (_ BitVec 8) (#b10100101 x #b00000000 (bvnot Start_5) (bvmul Start_7 Start_1) (bvshl Start Start_1) (bvlshr Start_7 Start_5) (ite StartBool_3 Start_4 Start_8)))
   (Start_4 (_ BitVec 8) (y #b00000001 #b10100101 x #b00000000 (bvnot Start_5) (bvor Start_5 Start) (bvudiv Start_1 Start_4) (ite StartBool_1 Start_6 Start_3)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool_2 StartBool_4) (bvult Start_5 Start_8)))
   (StartBool_2 Bool (true false (or StartBool_4 StartBool_1)))
   (StartBool_5 Bool (false (not StartBool_3) (or StartBool_3 StartBool_1)))
   (Start_16 (_ BitVec 8) (x (bvneg Start_16) (bvand Start_14 Start_12) (bvurem Start_5 Start_8)))
   (Start_8 (_ BitVec 8) (#b00000001 (bvnot Start_7) (bvneg Start_9) (bvadd Start_4 Start) (bvmul Start_4 Start_6) (bvudiv Start_4 Start) (bvurem Start_10 Start_1) (ite StartBool_5 Start_3 Start)))
   (Start_1 (_ BitVec 8) (#b10100101 y (bvnot Start_6) (bvor Start_7 Start_2) (bvmul Start_2 Start_12) (ite StartBool_3 Start_11 Start_3)))
   (Start_10 (_ BitVec 8) (x #b00000000 y (bvnot Start_6) (bvor Start_9 Start_1) (bvudiv Start_4 Start_5) (bvurem Start_3 Start_9) (bvshl Start_3 Start_1) (bvlshr Start_5 Start_5)))
   (Start_7 (_ BitVec 8) (x (bvand Start_11 Start_1) (bvor Start_12 Start_11) (bvadd Start_9 Start_9) (bvudiv Start_4 Start_7) (bvlshr Start_10 Start_8) (ite StartBool_3 Start_5 Start_13)))
   (Start_12 (_ BitVec 8) (#b10100101 y (bvneg Start_10) (bvand Start_15 Start_1) (ite StartBool Start_1 Start_15)))
   (Start_13 (_ BitVec 8) (x #b00000001 (bvneg Start_8) (bvand Start_10 Start_4) (bvadd Start_13 Start_4) (bvmul Start_11 Start_14)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd y (bvlshr y y))))

(check-synth)
