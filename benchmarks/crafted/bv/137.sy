(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_5 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvnot Start) (bvneg Start_1) (bvand Start Start) (bvmul Start Start_2) (bvlshr Start Start) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (false (or StartBool StartBool_1)))
   (Start_1 (_ BitVec 8) (x (bvnot Start_1) (bvadd Start_8 Start_8) (bvudiv Start_9 Start_11)))
   (Start_13 (_ BitVec 8) (y x #b00000001 #b10100101 (bvadd Start_8 Start_8)))
   (Start_3 (_ BitVec 8) (y x #b00000000 #b00000001 (bvnot Start_9) (bvneg Start_13) (bvand Start_2 Start_9) (bvurem Start_10 Start_6) (ite StartBool_3 Start_2 Start_10)))
   (Start_6 (_ BitVec 8) (x (bvneg Start_1) (bvand Start_7 Start) (bvadd Start Start_6) (bvurem Start Start_3)))
   (StartBool_3 Bool (false true (and StartBool_2 StartBool)))
   (Start_2 (_ BitVec 8) (#b00000001 (bvneg Start) (bvand Start_2 Start_3) (bvor Start_1 Start_4) (bvmul Start_5 Start_3) (bvudiv Start_4 Start_1) (bvlshr Start Start_6)))
   (Start_7 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvmul Start Start_7) (bvshl Start_6 Start_3) (ite StartBool_1 Start_2 Start_1)))
   (Start_12 (_ BitVec 8) (y #b10100101 #b00000000 #b00000001 (bvneg Start_4) (bvor Start Start) (bvadd Start_6 Start) (bvmul Start_5 Start_12) (bvudiv Start Start_8) (ite StartBool_1 Start_12 Start)))
   (StartBool_2 Bool (false (not StartBool) (or StartBool_1 StartBool_1) (bvult Start_2 Start_7)))
   (StartBool_1 Bool (true false (and StartBool_1 StartBool_2) (or StartBool_2 StartBool)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvand Start_6 Start_1) (bvor Start Start_2) (bvlshr Start_5 Start_4) (ite StartBool_2 Start_8 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000001 x #b00000000 (bvadd Start_5 Start_2) (bvudiv Start_3 Start_2) (bvurem Start_3 Start_4) (bvshl Start_2 Start_10)))
   (Start_8 (_ BitVec 8) (#b00000000 x #b00000001 (bvnot Start_3) (bvadd Start_8 Start_3) (bvmul Start_1 Start_3) (bvudiv Start_6 Start_6) (bvurem Start_8 Start_9) (bvshl Start_6 Start_9) (bvlshr Start Start_1) (ite StartBool Start_1 Start_8)))
   (Start_10 (_ BitVec 8) (#b10100101 #b00000001 #b00000000 y x (bvudiv Start Start_2) (bvurem Start_2 Start_3) (ite StartBool_3 Start_5 Start_8)))
   (Start_11 (_ BitVec 8) (#b10100101 #b00000000 y x #b00000001 (bvurem Start_6 Start_5) (bvshl Start_2 Start_3) (ite StartBool Start_1 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start_7) (bvadd Start_11 Start_4) (bvmul Start_5 Start_5) (bvudiv Start_10 Start_12) (bvurem Start_6 Start_2) (bvshl Start_10 Start_3) (bvlshr Start_10 Start_1) (ite StartBool Start_6 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd #b10100101 (bvurem #b10100101 y))))

(check-synth)
