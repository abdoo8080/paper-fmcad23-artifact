(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (StartBool_5 Bool) (Start_1 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_2 Bool) (StartBool_4 Bool))
  ((Start (_ BitVec 8) (y x #b00000000 #b00000001 #b10100101 (bvor Start Start_1) (bvudiv Start_2 Start_3) (bvshl Start_4 Start_1)))
   (StartBool Bool (true (or StartBool_5 StartBool_2) (bvult Start_8 Start_3)))
   (StartBool_6 Bool (true false (or StartBool_3 StartBool_3) (bvult Start_7 Start)))
   (StartBool_5 Bool (true (not StartBool_1) (and StartBool_1 StartBool_1) (or StartBool StartBool_6)))
   (Start_1 (_ BitVec 8) (x #b00000001 y (bvnot Start_5) (bvand Start_4 Start_6) (bvadd Start_2 Start_11) (bvurem Start_6 Start_1) (bvshl Start_10 Start_2) (bvlshr Start_10 Start) (ite StartBool Start_9 Start_8)))
   (Start_11 (_ BitVec 8) (#b10100101 (bvneg Start_4) (bvand Start_5 Start_5) (bvurem Start Start_1) (bvlshr Start_2 Start_2)))
   (Start_10 (_ BitVec 8) (x #b00000001 #b10100101 (bvnot Start_9) (bvneg Start_10) (bvor Start Start_9) (bvudiv Start_3 Start_10) (bvlshr Start_10 Start_3)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvneg Start_6) (bvand Start_2 Start_2) (bvmul Start_3 Start_3) (bvurem Start_2 Start_4) (bvshl Start_1 Start_4) (ite StartBool Start_5 Start_1)))
   (Start_5 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvneg Start_4) (bvadd Start_5 Start_6) (bvmul Start_4 Start_1) (bvlshr Start Start)))
   (StartBool_1 Bool (true (and StartBool StartBool_2) (or StartBool_2 StartBool_1) (bvult Start_8 Start_2)))
   (Start_2 (_ BitVec 8) (y (bvnot Start_6) (bvneg Start_6) (bvand Start_9 Start) (bvor Start_7 Start_3) (bvmul Start_8 Start_9) (bvudiv Start Start_1) (bvurem Start_2 Start_4) (bvshl Start_3 Start_7) (ite StartBool_2 Start_8 Start_8)))
   (Start_3 (_ BitVec 8) (y (bvnot Start_6) (bvneg Start_5) (bvand Start_1 Start_1) (bvadd Start_7 Start_7) (bvmul Start_8 Start_8) (bvudiv Start Start_3) (bvurem Start_8 Start_1) (ite StartBool Start_4 Start_2)))
   (Start_8 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 (bvand Start_7 Start_1) (bvmul Start_3 Start_5) (bvurem Start_4 Start) (bvlshr Start_5 Start)))
   (Start_7 (_ BitVec 8) (x #b00000000 #b10100101 (bvnot Start_8) (bvand Start_7 Start_7) (bvor Start_5 Start) (bvurem Start_1 Start_6) (ite StartBool_1 Start_3 Start_2)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvnot Start_5) (bvneg Start) (bvadd Start_1 Start_1) (bvmul Start_3 Start_5) (bvudiv Start_4 Start_1) (bvurem Start_2 Start_2) (bvshl Start Start_4) (bvlshr Start_2 Start_2) (ite StartBool Start_3 Start_2)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_6) (bvadd Start_10 Start_9) (bvudiv Start_6 Start_3) (bvshl Start_5 Start_8) (bvlshr Start_5 Start_11)))
   (StartBool_3 Bool (true false (not StartBool_3) (or StartBool_2 StartBool_4)))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool_1)))
   (StartBool_4 Bool (false))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem (bvneg x) #b00000000)))

(check-synth)
