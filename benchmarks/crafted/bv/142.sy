(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_6 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b10100101 #b00000000 y x (bvnot Start) (bvurem Start Start) (bvlshr Start Start) (ite StartBool Start Start_1)))
   (StartBool Bool (false (not StartBool) (and StartBool StartBool_1)))
   (Start_12 (_ BitVec 8) (y (bvneg Start_8) (bvand Start_3 Start) (bvmul Start_9 Start_10) (bvurem Start_9 Start_13) (bvshl Start Start_10) (bvlshr Start_11 Start_3) (ite StartBool Start_11 Start_13)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_3) (bvneg Start_11) (bvudiv Start_6 Start_13) (bvurem Start_13 Start_8)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_3) (bvmul Start Start) (bvudiv Start_2 Start_2) (bvshl Start_3 Start_3) (ite StartBool Start_2 Start_3)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvnot Start) (bvneg Start_2) (bvand Start_4 Start_2) (bvadd Start_1 Start_4) (bvmul Start_1 Start_3) (bvudiv Start_2 Start_1) (bvurem Start_5 Start_1) (bvshl Start_1 Start_5) (bvlshr Start_5 Start_3)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvand Start_3 Start_6) (bvmul Start_1 Start_1) (bvudiv Start_3 Start_1) (bvurem Start_7 Start_1)))
   (Start_7 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvneg Start_4) (bvand Start Start_8) (bvor Start_3 Start_5) (bvadd Start_3 Start_5) (bvurem Start_2 Start_6) (bvlshr Start_9 Start_5)))
   (StartBool_1 Bool (true false (bvult Start_4 Start_4)))
   (Start_4 (_ BitVec 8) (x (bvnot Start_3) (bvneg Start_10) (bvmul Start Start_8) (bvurem Start_6 Start_5) (bvshl Start_12 Start_8) (bvlshr Start_7 Start_9) (ite StartBool Start_7 Start_3)))
   (Start_1 (_ BitVec 8) (x (bvnot Start_1) (bvneg Start_1) (bvadd Start_2 Start_2) (bvurem Start_2 Start_2) (bvshl Start_3 Start) (bvlshr Start_1 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000000 (bvnot Start_10) (bvneg Start) (bvand Start_4 Start_2) (bvor Start_4 Start_1) (bvadd Start_6 Start_10) (bvmul Start_11 Start_9) (bvudiv Start_9 Start_4) (bvurem Start_1 Start_2) (bvlshr Start_6 Start)))
   (Start_11 (_ BitVec 8) (#b00000000 y x #b10100101 #b00000001 (bvnot Start_6) (bvneg Start_10) (bvand Start_2 Start_7) (bvmul Start_2 Start_2) (bvudiv Start_3 Start_9) (bvlshr Start_3 Start_7) (ite StartBool Start_9 Start_6)))
   (Start_8 (_ BitVec 8) (x (bvand Start_2 Start_10) (bvadd Start_8 Start_5)))
   (Start_10 (_ BitVec 8) (x #b00000000 (bvnot Start_4) (bvand Start_7 Start_5) (bvmul Start_1 Start_4) (bvurem Start_9 Start_9) (bvlshr Start_6 Start_8) (ite StartBool Start_4 Start_10)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_6) (bvor Start_5 Start_4) (bvadd Start_8 Start_10) (bvmul Start_10 Start_1) (bvudiv Start_6 Start_2) (bvurem Start_7 Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvnot (bvudiv y x)) (bvor x #b00000001))))

(check-synth)
