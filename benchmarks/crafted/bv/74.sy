(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (Start_2 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_3 Bool))
  ((Start (_ BitVec 8) (#b00000001 (bvnot Start) (bvadd Start_1 Start) (bvurem Start_2 Start_2) (bvshl Start_1 Start_3) (bvlshr Start Start) (ite StartBool_1 Start_3 Start_1)))
   (StartBool Bool (false true (not StartBool_3) (and StartBool_1 StartBool_6) (bvult Start_1 Start_3)))
   (StartBool_6 Bool (false true (or StartBool_1 StartBool_2) (bvult Start_11 Start_2)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvnot Start_6) (bvneg Start_9) (bvand Start_3 Start) (bvor Start_8 Start_12) (bvurem Start_12 Start_9) (bvshl Start_4 Start_11)))
   (Start_1 (_ BitVec 8) (#b00000000 (bvmul Start_9 Start_9) (bvurem Start_4 Start_11) (bvshl Start_4 Start_5) (ite StartBool_2 Start_11 Start_7)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvneg Start_1) (bvand Start_1 Start_3) (bvor Start_6 Start_5) (bvadd Start_7 Start_4) (bvudiv Start_4 Start_5) (bvshl Start_7 Start_3) (ite StartBool_2 Start_5 Start_4)))
   (Start_10 (_ BitVec 8) (x #b10100101 #b00000001 (bvnot Start_6) (bvadd Start_7 Start_2) (bvmul Start Start_11) (bvudiv Start_5 Start_4) (bvurem Start_10 Start_1) (bvlshr Start_8 Start_7) (ite StartBool_3 Start_8 Start_3)))
   (StartBool_5 Bool (false true (not StartBool_4) (or StartBool_3 StartBool_4) (bvult Start_2 Start)))
   (StartBool_1 Bool (false true (bvult Start Start_4)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvadd Start Start_2) (bvurem Start_8 Start) (bvshl Start_8 Start_13)))
   (Start_3 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_4) (bvor Start_3 Start) (bvudiv Start_2 Start) (bvurem Start_3 Start_2) (bvshl Start_4 Start_3) (ite StartBool_1 Start Start_4)))
   (Start_12 (_ BitVec 8) (#b00000001 #b10100101 y x (bvand Start_5 Start_13) (bvadd Start Start_7) (bvmul Start_4 Start_5) (bvurem Start_9 Start_4) (bvlshr Start Start_3)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvnot Start_2) (bvneg Start_4) (bvor Start_3 Start_3) (bvadd Start_4 Start_2) (bvmul Start_1 Start) (bvurem Start Start_3) (ite StartBool Start_3 Start_4)))
   (StartBool_2 Bool (false true (not StartBool_3) (or StartBool_4 StartBool_1) (bvult Start_5 Start_8)))
   (Start_2 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvnot Start_5) (bvneg Start_2) (bvor Start_3 Start) (bvadd Start Start_4) (bvurem Start_1 Start_5) (bvshl Start_3 Start_6)))
   (Start_13 (_ BitVec 8) (x y #b00000000 (bvneg Start_8) (bvadd Start_12 Start_8) (bvmul Start_10 Start_4) (bvshl Start_8 Start_10) (bvlshr Start_4 Start) (ite StartBool_5 Start_7 Start_4)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvneg Start_2) (bvor Start_6 Start_3) (bvadd Start Start_2) (bvurem Start_1 Start_5) (bvlshr Start_1 Start)))
   (Start_8 (_ BitVec 8) (y #b00000001 (bvor Start_1 Start_8) (bvadd Start Start_9) (bvmul Start_6 Start_9) (bvurem Start_1 Start_1) (bvshl Start_9 Start_8) (bvlshr Start_5 Start_8) (ite StartBool_2 Start_5 Start_1)))
   (Start_9 (_ BitVec 8) (#b00000000 #b10100101 (bvneg Start_7) (bvudiv Start_7 Start_1) (bvurem Start_1 Start_6) (bvshl Start_5 Start_2)))
   (StartBool_4 Bool (false true (and StartBool_1 StartBool_3) (bvult Start_9 Start_4)))
   (StartBool_3 Bool (true (not StartBool_3) (and StartBool_2 StartBool_3) (bvult Start_2 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv y y)))

(check-synth)
