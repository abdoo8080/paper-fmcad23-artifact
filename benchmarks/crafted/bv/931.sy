(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_4 Bool) (StartBool_3 Bool) (StartBool_2 Bool) (StartBool_5 Bool) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvneg Start) (bvand Start Start_1) (bvor Start_2 Start_3) (bvadd Start_2 Start_2) (bvmul Start_2 Start_3) (bvudiv Start_4 Start_1) (ite StartBool_1 Start Start_1)))
   (StartBool Bool (true false (or StartBool_5 StartBool) (bvult Start_1 Start_5)))
   (Start_1 (_ BitVec 8) (#b00000000 x (bvnot Start_3) (bvand Start_8 Start_9) (bvmul Start_6 Start_8) (bvurem Start_5 Start_8) (bvlshr Start_9 Start_7) (ite StartBool_5 Start_1 Start_9)))
   (Start_3 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start) (bvadd Start_1 Start_9) (bvmul Start_3 Start_10) (bvudiv Start_10 Start_8) (bvshl Start_1 Start_3) (ite StartBool_5 Start_2 Start_2)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvand Start_11 Start_10) (bvor Start_2 Start_10) (bvshl Start_11 Start_1) (bvlshr Start_10 Start_2)))
   (Start_2 (_ BitVec 8) (y x (bvnot Start) (bvneg Start_3) (bvand Start_11 Start_6) (bvor Start_9 Start_11) (bvadd Start_11 Start_9) (bvmul Start_11 Start_5) (bvudiv Start_10 Start_7) (bvurem Start Start_7) (bvshl Start_6 Start_1) (bvlshr Start_7 Start_4) (ite StartBool Start_10 Start_8)))
   (StartBool_1 Bool (false (not StartBool_2)))
   (StartBool_4 Bool (true (or StartBool_4 StartBool_3) (bvult Start Start_4)))
   (StartBool_3 Bool (true false (or StartBool_5 StartBool_3) (bvult Start_1 Start_4)))
   (StartBool_2 Bool (true (not StartBool_3) (and StartBool_4 StartBool)))
   (StartBool_5 Bool (false true (not StartBool_4) (and StartBool_1 StartBool_5) (bvult Start_5 Start_6)))
   (Start_6 (_ BitVec 8) (y (bvneg Start_7) (bvmul Start Start_8) (bvlshr Start Start)))
   (Start_8 (_ BitVec 8) (x #b00000001 (bvnot Start_3) (bvor Start_1 Start_2) (bvurem Start_6 Start_8) (ite StartBool_4 Start_8 Start_1)))
   (Start_5 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvadd Start_5 Start_7) (bvshl Start_8 Start_5)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvadd Start_4 Start_4) (bvurem Start_7 Start_7) (bvlshr Start_2 Start_7)))
   (Start_4 (_ BitVec 8) (x #b00000000 #b00000001 (bvnot Start_6) (bvshl Start_7 Start_9) (ite StartBool_5 Start_3 Start_5)))
   (Start_10 (_ BitVec 8) (x (bvnot Start_5) (bvor Start_9 Start_5) (bvmul Start_6 Start_9) (bvudiv Start_5 Start_8) (bvurem Start_7 Start_10) (bvshl Start_1 Start_8) (bvlshr Start_3 Start_3) (ite StartBool_4 Start_11 Start_8)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_8) (bvand Start_10 Start_5) (bvmul Start Start_7) (bvurem Start_7 Start_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv (bvlshr x #b00000001) y)))

(check-synth)
