(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (StartBool_7 Bool) (StartBool_8 Bool) (StartBool_6 Bool) (Start_12 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (Start_4 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_2 Bool) (Start_9 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_10 (_ BitVec 8)) (StartBool_4 Bool))
  ((Start (_ BitVec 8) (x #b00000001 (bvneg Start) (bvor Start_1 Start_2) (bvadd Start_1 Start_2) (bvmul Start_1 Start_1) (bvurem Start_1 Start_1) (bvlshr Start_1 Start_1)))
   (StartBool Bool (false true (not StartBool_5) (and StartBool_5 StartBool) (or StartBool_6 StartBool_6)))
   (StartBool_5 Bool (true false (not StartBool_3) (and StartBool_6 StartBool_6)))
   (StartBool_7 Bool (false true (not StartBool) (and StartBool_2 StartBool_7) (or StartBool_2 StartBool_8)))
   (StartBool_8 Bool (false (not StartBool)))
   (StartBool_6 Bool (true (and StartBool_7 StartBool_3) (or StartBool_3 StartBool_7)))
   (Start_12 (_ BitVec 8) (#b00000001 y (bvnot Start_6) (bvor Start_4 Start_8) (bvmul Start_4 Start_7) (bvudiv Start_3 Start_8) (bvurem Start Start_12)))
   (Start_11 (_ BitVec 8) (y #b10100101 (bvneg Start_7) (bvadd Start_11 Start) (bvudiv Start_5 Start_1) (bvurem Start_3 Start_1) (bvshl Start_5 Start_7) (bvlshr Start_12 Start_5) (ite StartBool_4 Start_1 Start)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvneg Start_1) (bvshl Start_8 Start_4)))
   (Start_2 (_ BitVec 8) (y #b10100101 #b00000000 (bvneg Start) (bvand Start_3 Start_3) (bvurem Start_2 Start) (bvshl Start Start_4)))
   (Start_7 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvand Start_8 Start_6) (bvor Start_5 Start) (bvadd Start_8 Start_7) (bvmul Start_1 Start_5) (bvudiv Start_2 Start_2) (bvurem Start_4 Start_5) (bvlshr Start_6 Start_5) (ite StartBool_1 Start_7 Start_2)))
   (StartBool_1 Bool (false true (not StartBool) (bvult Start_7 Start_5)))
   (Start_4 (_ BitVec 8) (y x (bvnot Start_2) (bvneg Start_5) (bvand Start_1 Start_6) (bvor Start Start_3) (bvurem Start_2 Start_4) (bvshl Start_7 Start_5)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvneg Start_7) (bvand Start_2 Start_1) (bvor Start_9 Start_8) (bvadd Start_1 Start_4) (bvudiv Start_3 Start_3) (ite StartBool_3 Start_11 Start_7)))
   (Start_8 (_ BitVec 8) (y (bvneg Start_5) (bvand Start_5 Start_9) (bvmul Start_6 Start_9) (bvudiv Start_4 Start_6) (bvlshr Start_5 Start_1) (ite StartBool_2 Start_2 Start_5)))
   (StartBool_2 Bool (false (and StartBool_1 StartBool_2)))
   (Start_9 (_ BitVec 8) (#b10100101 x (bvneg Start_2) (bvand Start_2 Start) (bvadd Start Start_3) (bvshl Start_6 Start_5) (ite StartBool_2 Start_4 Start_2)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvand Start_9 Start_6) (bvadd Start_6 Start_8) (bvurem Start_1 Start_3) (bvlshr Start_2 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000001 y x (bvnot Start) (bvand Start_3 Start) (bvor Start_10 Start_10) (bvudiv Start_4 Start_4) (bvurem Start_7 Start_2) (bvlshr Start Start_5)))
   (StartBool_3 Bool (true false (or StartBool_4 StartBool_1)))
   (Start_10 (_ BitVec 8) (#b00000000 y (bvneg Start_3) (bvmul Start_7 Start_8) (ite StartBool_3 Start_5 Start_7)))
   (StartBool_4 Bool (false (and StartBool StartBool_3) (bvult Start_6 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv (bvor y #b00000001) (bvadd #b10100101 x))))

(check-synth)
