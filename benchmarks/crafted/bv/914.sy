(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_14 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_5 Bool) (Start_12 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_8 Bool) (Start_10 (_ BitVec 8)) (StartBool_7 Bool) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (Start_9 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvudiv Start_1 Start_1) (bvshl Start Start) (ite StartBool Start_2 Start_1)))
   (StartBool Bool (false true (or StartBool_4 StartBool_5)))
   (Start_14 (_ BitVec 8) (x (bvneg Start_6) (bvor Start_7 Start_7) (bvmul Start_6 Start_2) (bvudiv Start_1 Start_13) (bvshl Start_5 Start_5) (bvlshr Start_5 Start_1) (ite StartBool Start_1 Start_9)))
   (Start_13 (_ BitVec 8) (y (bvadd Start_3 Start_8) (bvmul Start_14 Start_13) (bvudiv Start_1 Start) (bvurem Start_9 Start_3) (bvshl Start_5 Start_13) (bvlshr Start_9 Start_13) (ite StartBool_8 Start_2 Start_10)))
   (StartBool_6 Bool (false (and StartBool StartBool_1) (or StartBool_1 StartBool_5) (bvult Start_13 Start_12)))
   (StartBool_5 Bool (true (not StartBool) (and StartBool_6 StartBool_7)))
   (Start_12 (_ BitVec 8) (#b10100101 x #b00000000 (bvand Start_9 Start_4) (bvadd Start_8 Start_7) (bvmul Start_9 Start_4) (bvurem Start_9 Start_3) (bvlshr Start_2 Start_5)))
   (Start_1 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 y x (bvneg Start_3) (bvand Start_6 Start_11) (bvor Start_5 Start_7) (bvadd Start_2 Start_2) (bvudiv Start Start_1) (bvlshr Start_3 Start_2) (ite StartBool Start_9 Start_12)))
   (StartBool_4 Bool (true (bvult Start_5 Start_3)))
   (StartBool_8 Bool (false (bvult Start_2 Start_5)))
   (Start_10 (_ BitVec 8) (x (bvnot Start_5) (bvshl Start_7 Start_6) (ite StartBool_3 Start_2 Start_5)))
   (StartBool_7 Bool (false true (or StartBool_7 StartBool_5) (bvult Start_2 Start_9)))
   (Start_3 (_ BitVec 8) (#b00000001 #b10100101 y (bvor Start_5 Start_2) (bvadd Start_10 Start_9) (bvudiv Start_7 Start_10) (bvlshr Start_5 Start_2)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start) (bvneg Start_1) (bvand Start_6 Start_4) (bvadd Start_5 Start_2) (bvmul Start_4 Start) (bvurem Start Start_5) (ite StartBool_1 Start_7 Start_7)))
   (Start_4 (_ BitVec 8) (#b00000001 y x (bvnot Start_2) (bvneg Start_5) (bvadd Start_2 Start_2) (bvudiv Start_5 Start) (bvshl Start_3 Start)))
   (StartBool_2 Bool (false (or StartBool StartBool)))
   (StartBool_1 Bool (true (bvult Start_6 Start_8)))
   (Start_8 (_ BitVec 8) (#b00000001 #b10100101 x (bvneg Start_9) (bvand Start_6 Start_4) (bvor Start_6 Start_10) (bvmul Start Start_10) (bvudiv Start_1 Start_5) (bvlshr Start_1 Start_1) (ite StartBool_2 Start_9 Start_1)))
   (StartBool_3 Bool (true false (bvult Start_8 Start)))
   (Start_9 (_ BitVec 8) (#b10100101 (bvnot Start) (bvneg Start_6) (bvor Start_8 Start_3) (bvadd Start_4 Start_10) (bvshl Start_9 Start_6) (bvlshr Start_5 Start_9) (ite StartBool Start_2 Start_10)))
   (Start_7 (_ BitVec 8) (y #b00000000 (bvneg Start_4) (bvor Start_1 Start_2) (bvudiv Start_4 Start_6) (ite StartBool_2 Start_2 Start_4)))
   (Start_2 (_ BitVec 8) (x (bvnot Start) (bvneg Start) (bvand Start Start_2) (bvor Start_1 Start_2) (bvmul Start_2 Start) (bvudiv Start_1 Start_3) (bvurem Start_2 Start_1) (bvshl Start_3 Start) (ite StartBool Start_3 Start_4)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvand Start_4 Start_9) (bvor Start_8 Start_1) (bvmul Start_9 Start_3) (bvudiv Start_9 Start_2) (bvurem Start Start_11) (ite StartBool_1 Start Start_2)))
   (Start_11 (_ BitVec 8) (#b00000000 (bvadd Start_4 Start_10) (bvudiv Start_6 Start_1) (bvurem Start_3 Start_10) (bvlshr Start_7 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr y (bvudiv x y))))

(check-synth)
