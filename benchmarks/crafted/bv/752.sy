(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_17 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_3 Bool) (Start_8 (_ BitVec 8)) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_1 Bool) (Start_10 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_2 Bool) (Start_3 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvand Start Start_1) (bvadd Start_1 Start) (bvmul Start Start) (bvshl Start Start_2) (bvlshr Start_1 Start_2)))
   (StartBool Bool (true (not StartBool_2) (and StartBool_4 StartBool_3) (or StartBool StartBool) (bvult Start_16 Start_3)))
   (Start_17 (_ BitVec 8) (#b00000000 y x (bvnot Start_11) (bvneg Start_6) (bvand Start_8 Start_7) (bvor Start Start_14) (bvmul Start_1 Start_8) (bvudiv Start_11 Start_4) (bvurem Start_4 Start_12)))
   (Start_16 (_ BitVec 8) (y #b00000000 #b10100101 (bvneg Start_16) (bvor Start_6 Start_4) (bvmul Start_10 Start_11) (bvurem Start_8 Start_11) (bvshl Start Start_6) (bvlshr Start_3 Start_17) (ite StartBool_4 Start_17 Start_14)))
   (Start_15 (_ BitVec 8) (#b10100101 #b00000001 y x (bvor Start_12 Start_10) (bvudiv Start_5 Start_15) (ite StartBool_2 Start_13 Start)))
   (Start_13 (_ BitVec 8) (x (bvor Start_12 Start_9) (bvadd Start_5 Start_3) (bvmul Start_2 Start_4) (bvudiv Start Start_12) (ite StartBool_2 Start_14 Start_5)))
   (Start_12 (_ BitVec 8) (#b00000000 x (bvand Start_12 Start_6) (bvadd Start_9 Start_4) (bvmul Start_4 Start_6) (bvudiv Start_8 Start_12) (bvurem Start_4 Start_8) (bvlshr Start_8 Start_1) (ite StartBool_4 Start_13 Start_5)))
   (StartBool_3 Bool (false true))
   (Start_8 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_4) (bvor Start_5 Start_3) (bvadd Start_3 Start_9) (bvudiv Start_4 Start_4) (ite StartBool Start_6 Start_7)))
   (StartBool_4 Bool (false (not StartBool_4) (and StartBool StartBool_1)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_7) (bvand Start Start_5) (bvor Start_8 Start_8) (bvmul Start_9 Start_5) (bvudiv Start_1 Start_2) (bvurem Start_2 Start_7) (ite StartBool_1 Start_9 Start_8)))
   (Start_1 (_ BitVec 8) (y #b00000000 (bvand Start Start_10) (bvadd Start_10 Start_11) (bvmul Start_11 Start_8) (bvudiv Start_3 Start_4) (bvurem Start_8 Start_10) (bvshl Start_4 Start_12) (bvlshr Start_11 Start_2) (ite StartBool Start_5 Start)))
   (Start_9 (_ BitVec 8) (x (bvnot Start_1) (bvneg Start) (bvor Start_5 Start_1) (bvadd Start Start_9) (ite StartBool_2 Start_5 Start_7)))
   (StartBool_1 Bool (true false (bvult Start_4 Start_1)))
   (Start_10 (_ BitVec 8) (y (bvneg Start_6) (bvand Start_7 Start_6) (bvmul Start_2 Start_5) (bvudiv Start_9 Start_11) (bvurem Start_8 Start_11) (bvlshr Start_2 Start_8) (ite StartBool_3 Start_7 Start_8)))
   (Start_4 (_ BitVec 8) (y x #b00000000 (bvnot Start) (bvand Start_1 Start_3) (bvmul Start_5 Start_4) (bvudiv Start_3 Start_4) (bvlshr Start_5 Start_1)))
   (Start_5 (_ BitVec 8) (x (bvand Start_2 Start_3) (bvadd Start_1 Start_1) (bvudiv Start_2 Start_3) (bvlshr Start_1 Start_1) (ite StartBool_1 Start Start_4)))
   (Start_14 (_ BitVec 8) (x y (bvnot Start_6) (bvand Start_12 Start_10) (bvor Start_15 Start_11) (bvadd Start_12 Start_11) (bvmul Start_7 Start_6) (bvurem Start_4 Start_8)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvnot Start_2) (bvneg Start_6) (bvand Start_10 Start_7) (bvadd Start_7 Start_7) (bvshl Start_1 Start_11)))
   (Start_2 (_ BitVec 8) (x #b00000000 (bvneg Start_3) (bvudiv Start_2 Start) (bvshl Start_3 Start) (bvlshr Start_3 Start_1) (ite StartBool_1 Start_1 Start_3)))
   (StartBool_2 Bool (true false (not StartBool_2) (or StartBool_2 StartBool)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvneg Start_1) (bvmul Start Start_2) (bvurem Start_4 Start) (bvlshr Start_1 Start_6)))
   (Start_11 (_ BitVec 8) (x (bvnot Start_9) (bvneg Start_11) (bvurem Start_1 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvlshr #b10100101 #b00000001))))

(check-synth)
