(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_2 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_5 Bool) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (StartBool_3 Bool) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (StartBool_2 Bool) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_2) (bvor Start Start_3) (bvmul Start Start_2) (bvudiv Start_1 Start) (bvurem Start_1 Start) (bvshl Start Start_3) (bvlshr Start_1 Start_3)))
   (StartBool Bool (true false (not StartBool_3) (and StartBool_5 StartBool_1) (or StartBool_5 StartBool_5)))
   (Start_2 (_ BitVec 8) (x (bvnot Start_1) (bvor Start_3 Start_7) (bvadd Start_13 Start_10) (bvmul Start Start_12)))
   (Start_15 (_ BitVec 8) (#b00000000 x (bvneg Start_15) (bvand Start_15 Start) (bvmul Start_5 Start_2)))
   (Start_14 (_ BitVec 8) (x (bvnot Start_5) (bvand Start_11 Start_4) (bvor Start_13 Start_4) (bvudiv Start_7 Start_7) (bvurem Start_4 Start_7) (bvshl Start_13 Start_4) (bvlshr Start_8 Start_14) (ite StartBool_4 Start_11 Start_9)))
   (Start_13 (_ BitVec 8) (#b00000001 #b00000000 x (bvnot Start_7) (bvneg Start_1) (bvudiv Start Start_14) (bvlshr Start_10 Start_3)))
   (Start_12 (_ BitVec 8) (x y #b00000001 (bvneg Start_3) (bvand Start_9 Start_6) (bvadd Start_12 Start_5) (bvudiv Start_2 Start) (bvurem Start_3 Start_13) (bvshl Start_8 Start_3) (bvlshr Start_5 Start_8) (ite StartBool Start_7 Start_6)))
   (StartBool_5 Bool (false true))
   (Start_3 (_ BitVec 8) (x (bvnot Start_3) (bvor Start_2 Start_1) (bvadd Start_4 Start_2) (bvmul Start_5 Start_6) (bvudiv Start_5 Start_3) (bvshl Start Start_2) (ite StartBool_1 Start_3 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start_4) (bvand Start_7 Start_6) (bvor Start Start_3) (bvadd Start_6 Start_4) (bvudiv Start_2 Start_3) (bvshl Start Start_1) (ite StartBool Start_7 Start_7)))
   (Start_4 (_ BitVec 8) (#b10100101 #b00000001 x #b00000000 y (bvnot Start_15) (bvand Start_12 Start_7) (bvor Start_1 Start_5) (bvudiv Start_15 Start_12) (bvurem Start_3 Start_2) (bvshl Start_12 Start_10) (ite StartBool_1 Start_6 Start_14)))
   (StartBool_1 Bool (true false (or StartBool StartBool)))
   (StartBool_4 Bool (false true (not StartBool_2) (or StartBool_2 StartBool_4)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_1) (bvneg Start_3) (bvand Start Start_5) (bvor Start_5 Start_6) (bvadd Start_3 Start_2) (bvurem Start_4 Start) (ite StartBool Start_4 Start_3)))
   (StartBool_3 Bool (false (not StartBool_3) (or StartBool_1 StartBool_2) (bvult Start_9 Start_4)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvnot Start_8) (bvand Start_4 Start) (bvadd Start_8 Start) (bvudiv Start_5 Start_10) (bvurem Start_11 Start)))
   (Start_7 (_ BitVec 8) (#b00000001 y x #b00000000 (bvnot Start_6) (bvneg Start_3) (bvand Start_1 Start_5) (bvmul Start_2 Start_7) (bvudiv Start_6 Start_3) (ite StartBool_2 Start_1 Start_6)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvnot Start_5) (bvor Start_13 Start_5) (bvmul Start_6 Start_13)))
   (StartBool_2 Bool (false true (not StartBool_2) (and StartBool_1 StartBool) (or StartBool StartBool_3) (bvult Start_8 Start_7)))
   (Start_9 (_ BitVec 8) (#b00000000 (bvnot Start_9) (bvneg Start_10) (bvudiv Start_9 Start_3) (bvurem Start_2 Start_8) (ite StartBool_4 Start_3 Start_4)))
   (Start_8 (_ BitVec 8) (y #b00000001 x #b00000000 #b10100101 (bvnot Start_7) (bvneg Start_2) (bvor Start_6 Start_7) (bvmul Start_1 Start_3) (bvudiv Start_3 Start_7) (bvshl Start_2 Start_1) (bvlshr Start_8 Start_5)))
   (Start_11 (_ BitVec 8) (#b00000001 (bvor Start_3 Start_8) (bvmul Start_1 Start_12) (bvshl Start_9 Start_10) (ite StartBool_4 Start Start_12)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvudiv #b00000000 y))))

(check-synth)
