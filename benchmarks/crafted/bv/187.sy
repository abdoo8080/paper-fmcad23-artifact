(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_14 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 x (bvnot Start) (bvneg Start) (bvand Start_1 Start_1) (bvor Start Start_1) (bvadd Start Start_1) (bvmul Start Start_2) (bvudiv Start Start) (bvurem Start_2 Start_2) (bvshl Start_2 Start_1) (bvlshr Start_2 Start) (ite StartBool Start_1 Start_3)))
   (StartBool Bool (false (and StartBool_1 StartBool_3)))
   (Start_14 (_ BitVec 8) (x (bvand Start_5 Start_6) (bvmul Start_8 Start_10) (bvudiv Start_1 Start_2) (bvshl Start_3 Start_8) (bvlshr Start_12 Start_1) (ite StartBool_2 Start_11 Start_5)))
   (Start_10 (_ BitVec 8) (y #b00000001 (bvnot Start_4) (bvor Start_13 Start_8) (bvmul Start_14 Start_3) (bvurem Start_12 Start_11) (bvshl Start_6 Start_1) (ite StartBool_1 Start_12 Start_11)))
   (Start_12 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 (bvneg Start_6) (bvadd Start_4 Start_11) (bvmul Start_9 Start_13) (bvudiv Start_12 Start_12) (bvshl Start_4 Start_7) (ite StartBool_1 Start_1 Start_10)))
   (Start_13 (_ BitVec 8) (y (bvnot Start_9) (bvor Start_10 Start_10) (bvmul Start_3 Start_1) (bvurem Start_8 Start_5) (bvlshr Start_4 Start_11) (ite StartBool_1 Start Start_4)))
   (StartBool_1 Bool (true (not StartBool) (or StartBool_2 StartBool) (bvult Start Start_1)))
   (Start_8 (_ BitVec 8) (#b00000001 y (bvudiv Start_3 Start_3) (bvurem Start_4 Start_2) (bvshl Start_2 Start_9) (bvlshr Start_4 Start_9)))
   (Start_5 (_ BitVec 8) (x (bvneg Start_4) (bvshl Start_6 Start_6)))
   (Start_3 (_ BitVec 8) (#b00000001 x (bvnot Start_3) (bvor Start_2 Start_3) (bvmul Start_4 Start_4) (bvudiv Start_4 Start) (bvurem Start Start) (bvshl Start_3 Start) (bvlshr Start_1 Start_2) (ite StartBool Start_3 Start_5)))
   (Start_6 (_ BitVec 8) (#b10100101 #b00000000 y x (bvand Start_3 Start) (bvor Start_4 Start) (bvadd Start_3 Start_1) (bvshl Start_6 Start)))
   (Start_2 (_ BitVec 8) (x #b10100101 (bvnot Start_5) (bvudiv Start_1 Start_4)))
   (Start_4 (_ BitVec 8) (y (bvnot Start_4) (bvand Start_5 Start_3) (bvadd Start_7 Start_4) (bvlshr Start_3 Start_1)))
   (StartBool_2 Bool (true false))
   (Start_11 (_ BitVec 8) (x (bvand Start_8 Start_11) (bvor Start_2 Start_12) (bvmul Start_12 Start_4) (bvudiv Start_13 Start_12) (bvurem Start_9 Start_11) (bvlshr Start_5 Start_4)))
   (StartBool_3 Bool (false (not StartBool) (bvult Start_11 Start_5)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_4) (bvand Start_5 Start_6) (bvor Start_4 Start_6) (bvadd Start_6 Start_6) (bvudiv Start Start_3) (ite StartBool_1 Start_1 Start)))
   (Start_1 (_ BitVec 8) (x (bvnot Start) (bvand Start Start_3) (bvor Start_3 Start_6) (bvudiv Start_4 Start_3) (bvshl Start_8 Start_3)))
   (Start_9 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 x y (bvnot Start_2) (bvneg Start_10) (bvor Start_1 Start_10) (bvmul Start_11 Start) (bvudiv Start_2 Start_4) (bvurem Start_5 Start_1) (bvshl Start_8 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor (bvneg y) #b10100101)))

(check-synth)
