(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_11 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_4 Bool) (Start_1 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_3 Bool) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool))
  ((Start (_ BitVec 8) (#b10100101 (bvnot Start) (bvor Start Start_1) (bvmul Start_1 Start) (bvudiv Start_1 Start_1) (bvurem Start_1 Start)))
   (StartBool Bool (true false (not StartBool_3) (or StartBool StartBool_3)))
   (Start_11 (_ BitVec 8) (y #b00000000 #b10100101 (bvnot Start_12) (bvand Start_6 Start_2) (bvor Start_12 Start_7) (bvadd Start_2 Start_11) (bvurem Start_6 Start_8) (ite StartBool Start_11 Start_10)))
   (Start_12 (_ BitVec 8) (y x (bvnot Start_11) (bvand Start_3 Start) (bvadd Start_12 Start_10) (bvudiv Start_1 Start_5) (bvurem Start_7 Start_6) (ite StartBool Start Start_6)))
   (Start_2 (_ BitVec 8) (#b00000001 x #b00000000 (bvnot Start_5) (bvor Start_4 Start_11) (bvadd Start_12 Start_6) (bvurem Start_12 Start_12)))
   (StartBool_4 Bool (true false (or StartBool_1 StartBool)))
   (Start_1 (_ BitVec 8) (x y (bvnot Start_2) (bvneg Start_3) (bvmul Start_4 Start) (bvshl Start_4 Start_1) (ite StartBool Start_1 Start_2)))
   (Start_3 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 y (bvneg Start) (bvor Start_6 Start_7) (bvadd Start_2 Start_7) (bvudiv Start_4 Start_1) (bvlshr Start_1 Start_10) (ite StartBool_1 Start_2 Start)))
   (StartBool_3 Bool (true false (not StartBool_4) (and StartBool_2 StartBool_4) (or StartBool_4 StartBool_4) (bvult Start_5 Start_2)))
   (Start_4 (_ BitVec 8) (#b00000000 x (bvnot Start_5) (bvneg Start) (bvadd Start_6 Start) (bvudiv Start_2 Start_2) (bvurem Start Start) (bvlshr Start_4 Start_5)))
   (Start_9 (_ BitVec 8) (y (bvnot Start) (bvand Start Start_8) (bvadd Start_5 Start_6) (bvmul Start_1 Start_2) (bvurem Start_1 Start_1) (bvlshr Start_9 Start_10) (ite StartBool Start Start_3)))
   (Start_7 (_ BitVec 8) (#b00000000 x #b10100101 (bvnot Start) (bvneg Start_3) (bvand Start_6 Start_5) (bvor Start_2 Start_9) (bvadd Start_7 Start_2) (bvmul Start_7 Start_1) (bvshl Start_7 Start_5)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvand Start_1 Start_1) (bvurem Start_5 Start)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvand Start_2 Start_3) (bvor Start_7 Start_3) (bvmul Start_3 Start_1) (bvudiv Start_2 Start_4) (bvurem Start_7 Start_7)))
   (Start_5 (_ BitVec 8) (#b10100101 (bvnot Start_3) (bvor Start_3 Start_1) (bvadd Start Start_3) (bvudiv Start Start_7) (bvshl Start_8 Start_1) (ite StartBool Start_7 Start_7)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvnot Start_7) (bvor Start Start_1) (bvudiv Start_2 Start) (bvlshr Start_6 Start_6)))
   (StartBool_1 Bool (true (not StartBool_1) (and StartBool_1 StartBool_2) (or StartBool_1 StartBool_2) (bvult Start_4 Start)))
   (StartBool_2 Bool (true false (and StartBool_2 StartBool_1) (or StartBool_3 StartBool_3) (bvult Start_4 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr #b00000001 (bvudiv #b00000000 y))))

(check-synth)
