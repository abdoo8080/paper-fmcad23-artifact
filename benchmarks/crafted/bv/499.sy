(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_13 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_2 Bool) (Start_5 (_ BitVec 8)) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 y (bvnot Start_1) (bvadd Start_2 Start_2) (bvudiv Start_1 Start) (bvurem Start_2 Start_2) (bvlshr Start Start_2)))
   (StartBool Bool (false (bvult Start_8 Start_14)))
   (Start_13 (_ BitVec 8) (x y (bvand Start_9 Start_4) (bvmul Start_11 Start_8) (bvudiv Start_10 Start_5) (bvurem Start_3 Start_6) (bvshl Start_1 Start_7) (bvlshr Start_9 Start_7)))
   (Start_1 (_ BitVec 8) (y #b00000001 (bvnot Start_12) (bvor Start_7 Start_11) (bvadd Start_3 Start_12) (bvudiv Start_10 Start_3) (bvurem Start_4 Start_8)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start) (bvneg Start_5) (bvand Start_9 Start) (bvmul Start_4 Start_8) (bvudiv Start_10 Start_8) (bvurem Start_10 Start_2)))
   (Start_2 (_ BitVec 8) (#b00000001 #b10100101 y (bvneg Start) (bvand Start_1 Start_3) (bvor Start Start_1) (bvadd Start Start_1) (bvurem Start_1 Start_2) (bvshl Start Start_4)))
   (Start_12 (_ BitVec 8) (#b00000001 x y (bvneg Start_4) (bvadd Start_11 Start_5) (bvmul Start_10 Start_3) (bvudiv Start_2 Start_3) (bvlshr Start_4 Start_13)))
   (Start_4 (_ BitVec 8) (#b00000000 y (bvnot Start_5) (bvadd Start_4 Start) (bvudiv Start Start_6)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvneg Start_7) (bvand Start_4 Start_10) (bvmul Start_2 Start_1) (ite StartBool_1 Start_3 Start_2)))
   (Start_15 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvmul Start_4 Start_4) (bvudiv Start_6 Start) (bvurem Start_6 Start_6)))
   (Start_6 (_ BitVec 8) (#b10100101 #b00000001 y (bvnot Start_2) (bvor Start_6 Start_5) (bvadd Start_4 Start_1) (bvmul Start_3 Start_6) (bvudiv Start_5 Start_6) (bvlshr Start_2 Start_6) (ite StartBool Start_3 Start_3)))
   (Start_10 (_ BitVec 8) (y (bvneg Start_2) (bvor Start_3 Start_10) (bvmul Start_2 Start_7) (bvurem Start_8 Start_2) (bvshl Start Start) (bvlshr Start_8 Start_3)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvneg Start_11) (bvand Start_6 Start_11) (bvor Start_2 Start_3) (bvadd Start_7 Start_3) (bvudiv Start_7 Start_1) (bvshl Start_5 Start_3)))
   (Start_11 (_ BitVec 8) (x (bvnot Start_9) (bvor Start_11 Start_2) (bvadd Start_4 Start_5) (bvudiv Start_3 Start_7) (bvurem Start_3 Start) (bvlshr Start_5 Start_11)))
   (Start_14 (_ BitVec 8) (#b10100101 y #b00000000 x (bvnot Start_5) (bvand Start_8 Start_10) (bvor Start_8 Start) (bvadd Start_12 Start_9) (bvmul Start_10 Start_13) (bvudiv Start_1 Start_3) (bvurem Start_15 Start_11)))
   (StartBool_1 Bool (false (not StartBool) (or StartBool_2 StartBool_2) (bvult Start_9 Start_8)))
   (StartBool_2 Bool (true))
   (Start_5 (_ BitVec 8) (#b10100101 (bvadd Start_7 Start_8) (bvurem Start_3 Start_9) (bvlshr Start_9 Start_2) (ite StartBool Start Start)))
   (Start_3 (_ BitVec 8) (y #b10100101 x (bvnot Start_2) (bvand Start_8 Start_5) (bvor Start_9 Start_3) (bvurem Start_1 Start_11) (ite StartBool Start_4 Start_5)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem (bvneg (bvor y x)) #b10100101)))

(check-synth)
