(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_7 Bool) (StartBool_5 Bool) (Start_10 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_2 Bool) (Start_14 (_ BitVec 8)) (StartBool_6 Bool) (StartBool_1 Bool) (Start_11 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_3 Bool) (Start_5 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_13 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvneg Start) (bvor Start Start_1) (bvadd Start Start_1) (bvmul Start_2 Start) (bvudiv Start_1 Start) (bvurem Start Start_2) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true false (not StartBool_4) (or StartBool_5 StartBool_6)))
   (StartBool_7 Bool (true false))
   (StartBool_5 Bool (true false (not StartBool_7) (or StartBool_6 StartBool_3)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvnot Start_12) (bvneg Start_4) (bvudiv Start_5 Start_6) (bvurem Start_4 Start_8) (bvshl Start_11 Start_13) (bvlshr Start Start_11)))
   (StartBool_4 Bool (false true (not StartBool_5) (or StartBool_6 StartBool) (bvult Start_13 Start_7)))
   (StartBool_2 Bool (true (and StartBool_2 StartBool_3) (or StartBool_3 StartBool_1) (bvult Start_13 Start_8)))
   (Start_14 (_ BitVec 8) (x #b00000001 #b00000000 (bvnot Start_10) (bvneg Start_6) (bvadd Start Start) (bvshl Start_8 Start_2) (ite StartBool_2 Start Start_12)))
   (StartBool_6 Bool (true false (and StartBool_4 StartBool) (bvult Start_5 Start_1)))
   (StartBool_1 Bool (false true (and StartBool StartBool) (or StartBool StartBool_1) (bvult Start_1 Start)))
   (Start_11 (_ BitVec 8) (#b00000001 x (bvnot Start_5) (bvneg Start_10) (bvor Start_13 Start_11) (bvlshr Start_8 Start_4) (ite StartBool_1 Start_5 Start_1)))
   (Start_2 (_ BitVec 8) (x (bvneg Start) (bvand Start_3 Start_3) (bvadd Start_3 Start_3) (bvshl Start_4 Start_4)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvnot Start_12) (bvadd Start Start_8) (bvmul Start_11 Start_12) (bvurem Start_9 Start_9) (bvshl Start_6 Start_1)))
   (Start_3 (_ BitVec 8) (x #b00000000 #b00000001 y (bvnot Start_1) (bvand Start_3 Start_3) (bvor Start_3 Start_7) (bvadd Start_4 Start) (bvurem Start_8 Start_8) (bvlshr Start_4 Start_5) (ite StartBool_1 Start_8 Start_8)))
   (Start_1 (_ BitVec 8) (#b10100101 x y #b00000001 #b00000000 (bvand Start_5 Start_12) (bvor Start_8 Start_7) (bvadd Start_3 Start_4) (bvmul Start_8 Start_4) (bvurem Start_11 Start_5) (ite StartBool_2 Start_5 Start_4)))
   (Start_6 (_ BitVec 8) (y (bvnot Start_3) (bvor Start_2 Start_6) (bvadd Start Start_3) (bvmul Start_1 Start_3) (bvudiv Start_3 Start)))
   (Start_9 (_ BitVec 8) (y #b00000001 x (bvor Start_5 Start_7) (bvshl Start_3 Start_1) (bvlshr Start_3 Start_2)))
   (Start_4 (_ BitVec 8) (#b00000000 (bvnot Start) (bvneg Start_3) (bvor Start_5 Start_6) (bvmul Start Start_5) (bvlshr Start_2 Start)))
   (Start_7 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvand Start_6 Start_6) (bvadd Start_10 Start_11) (bvmul Start_1 Start_3) (bvurem Start_1 Start_10) (bvshl Start_8 Start_12) (bvlshr Start_1 Start_10)))
   (StartBool_3 Bool (false (not StartBool_3) (and StartBool_1 StartBool_4)))
   (Start_5 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvor Start_2 Start_6) (bvudiv Start_4 Start_3) (bvshl Start_6 Start_6)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvneg Start_1) (bvand Start Start_4) (bvor Start Start_5) (bvmul Start_9 Start) (bvudiv Start_8 Start_2) (bvlshr Start_2 Start_9)))
   (Start_13 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 y (bvnot Start_14) (bvand Start_6 Start_4) (bvmul Start_8 Start_8) (bvudiv Start_1 Start_14) (bvlshr Start Start_4) (ite StartBool_1 Start_13 Start_13)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr #b10100101 (bvadd (bvneg (bvnot y)) x))))

(check-synth)
