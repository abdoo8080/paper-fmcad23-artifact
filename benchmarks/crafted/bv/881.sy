(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_2 Bool) (StartBool_4 Bool) (Start_13 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_3 Bool) (Start_6 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (Start_2 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_1) (bvmul Start_2 Start_3) (bvudiv Start_4 Start_4) (bvurem Start_4 Start) (bvshl Start Start_2) (ite StartBool_1 Start_1 Start_2)))
   (StartBool Bool (true false (and StartBool_2 StartBool_3) (or StartBool_3 StartBool_4) (bvult Start_3 Start)))
   (StartBool_2 Bool (true (and StartBool_3 StartBool_2)))
   (StartBool_4 Bool (false true (bvult Start_13 Start_8)))
   (Start_13 (_ BitVec 8) (#b00000001 (bvnot Start_10) (bvand Start_3 Start_11) (bvor Start_9 Start_14) (bvmul Start_2 Start_3) (bvudiv Start_1 Start_14)))
   (Start_14 (_ BitVec 8) (#b00000000 (bvnot Start_8) (bvand Start_9 Start_11) (bvudiv Start_9 Start_2) (bvurem Start Start_14) (bvshl Start_8 Start_13) (bvlshr Start_6 Start_12)))
   (Start_11 (_ BitVec 8) (y (bvneg Start_3) (bvand Start Start_1) (bvadd Start_8 Start_6) (bvshl Start Start_6) (bvlshr Start_3 Start_12)))
   (Start_1 (_ BitVec 8) (y (bvnot Start) (bvneg Start_14) (bvadd Start_4 Start_4) (bvudiv Start_2 Start_14) (bvlshr Start_6 Start) (ite StartBool_1 Start_6 Start_12)))
   (Start_10 (_ BitVec 8) (x (bvurem Start_1 Start_6) (bvshl Start_1 Start_10)))
   (Start_9 (_ BitVec 8) (#b00000000 (bvneg Start_11) (bvor Start_4 Start_1) (bvadd Start_11 Start_6) (bvmul Start_4 Start_7) (bvudiv Start Start_3) (bvshl Start_8 Start_8) (bvlshr Start_12 Start_4) (ite StartBool_1 Start_12 Start_4)))
   (Start_12 (_ BitVec 8) (#b10100101 (bvneg Start_4) (bvand Start Start) (bvurem Start_8 Start_3) (bvlshr Start_4 Start_11)))
   (Start_7 (_ BitVec 8) (x (bvnot Start_9) (bvneg Start_8) (bvurem Start_9 Start_1) (ite StartBool_1 Start_2 Start_3)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvneg Start_5) (bvand Start_1 Start_6) (bvudiv Start_7 Start_4) (bvurem Start_6 Start_8) (bvshl Start Start_8) (ite StartBool_1 Start Start_5)))
   (Start_5 (_ BitVec 8) (x (bvnot Start) (bvand Start_5 Start_2) (bvmul Start_3 Start_11) (bvudiv Start_6 Start_8) (bvurem Start_12 Start_10) (bvshl Start_4 Start_11)))
   (StartBool_3 Bool (true false (or StartBool_1 StartBool_3) (bvult Start_14 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_6)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_4) (bvneg Start_10) (bvor Start_7 Start_5) (bvadd Start_8 Start_5) (bvshl Start_10 Start_11) (bvlshr Start_10 Start_4)))
   (StartBool_1 Bool (false))
   (Start_8 (_ BitVec 8) (#b10100101 y #b00000000 (bvnot Start_5) (bvneg Start_6) (bvand Start_5 Start_7) (bvadd Start_1 Start_5) (bvmul Start_9 Start_2) (bvudiv Start_5 Start_8) (bvshl Start_10 Start_11) (bvlshr Start_4 Start_3) (ite StartBool Start_4 Start_10)))
   (Start_2 (_ BitVec 8) (#b10100101 (bvnot Start_13) (bvneg Start_4) (bvadd Start_2 Start_11) (bvmul Start_13 Start_5) (bvudiv Start_14 Start_12) (bvurem Start_14 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd (bvneg (bvlshr #b10100101 #b00000001)) (bvneg x))))

(check-synth)
