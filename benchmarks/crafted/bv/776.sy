(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_16 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_2 Bool) (Start_1 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_1 Bool) (StartBool_3 Bool) (Start_3 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvadd Start Start) (bvmul Start_1 Start_2) (bvshl Start_3 Start_3) (ite StartBool Start_2 Start_3)))
   (StartBool Bool (false))
   (Start_16 (_ BitVec 8) (y #b00000000 #b10100101 x (bvand Start_14 Start_12) (bvor Start_13 Start) (bvmul Start_16 Start_6) (bvudiv Start_5 Start_7) (bvshl Start_15 Start_3) (ite StartBool_2 Start_9 Start_10)))
   (Start_4 (_ BitVec 8) (#b00000001 #b10100101 x y #b00000000 (bvnot Start_11) (bvneg Start_6) (bvand Start_12 Start_2) (bvshl Start_12 Start_13) (bvlshr Start_6 Start_3)))
   (Start_2 (_ BitVec 8) (#b00000001 #b00000000 x #b10100101 (bvand Start_6 Start_15) (bvshl Start Start_10) (bvlshr Start_1 Start_8)))
   (Start_14 (_ BitVec 8) (#b00000000 #b00000001 #b10100101 y (bvnot Start_3) (bvneg Start_8) (bvshl Start_5 Start_5)))
   (StartBool_4 Bool (false (or StartBool_4 StartBool_4) (bvult Start_14 Start_4)))
   (StartBool_2 Bool (false true (not StartBool_1) (or StartBool_3 StartBool)))
   (Start_1 (_ BitVec 8) (x (bvnot Start_8) (bvmul Start_16 Start_16) (bvudiv Start Start_15) (bvshl Start_9 Start_14)))
   (Start_15 (_ BitVec 8) (x y #b00000000 #b10100101 (bvnot Start_4) (bvneg Start_15) (bvor Start_2 Start_5) (bvurem Start_1 Start) (bvlshr Start_12 Start_13)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvneg Start_5) (bvor Start_5 Start_6) (bvmul Start Start_1) (bvudiv Start_8 Start_6) (ite StartBool_2 Start Start_5)))
   (StartBool_1 Bool (false true (not StartBool) (and StartBool_2 StartBool_2) (bvult Start_2 Start_1)))
   (StartBool_3 Bool (false true (not StartBool_2) (and StartBool StartBool)))
   (Start_3 (_ BitVec 8) (#b00000001 #b10100101 (bvnot Start_4) (bvand Start_5 Start_1) (bvadd Start_5 Start) (bvudiv Start_2 Start_5) (bvurem Start_2 Start_6) (bvshl Start_1 Start) (ite StartBool_1 Start_2 Start)))
   (Start_8 (_ BitVec 8) (x (bvnot Start_9) (bvneg Start_10) (bvand Start_5 Start_2) (bvmul Start_9 Start_6) (bvudiv Start_3 Start_3) (bvlshr Start_6 Start_2)))
   (Start_6 (_ BitVec 8) (y x (bvand Start Start_6) (bvmul Start_4 Start_7) (bvudiv Start_4 Start_2) (bvurem Start_5 Start_2) (bvlshr Start_2 Start_1) (ite StartBool_1 Start_7 Start_7)))
   (Start_11 (_ BitVec 8) (y #b00000000 x (bvnot Start_5) (bvneg Start_10) (bvand Start_3 Start_13) (bvadd Start_9 Start_5) (bvmul Start_11 Start_13) (bvurem Start_13 Start_7) (bvshl Start_9 Start) (bvlshr Start_5 Start_2)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start_6) (bvand Start_4 Start_3) (bvadd Start_4 Start_8) (bvudiv Start_6 Start_3) (bvshl Start_5 Start_4) (bvlshr Start_9 Start_4) (ite StartBool Start_9 Start_5)))
   (Start_9 (_ BitVec 8) (y (bvneg Start_1) (bvadd Start_7 Start_3) (bvmul Start_1 Start_4) (bvurem Start_1 Start_10) (bvshl Start_7 Start_1) (bvlshr Start_3 Start_5)))
   (Start_5 (_ BitVec 8) (x y (bvneg Start_9) (bvand Start_2 Start_6) (bvor Start_9 Start) (bvmul Start_7 Start_3) (bvudiv Start_2 Start_5) (bvshl Start_2 Start_7) (bvlshr Start_11 Start_10) (ite StartBool_4 Start_8 Start_12)))
   (Start_12 (_ BitVec 8) (x (bvnot Start_13) (bvadd Start_10 Start_13)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvneg Start_5) (bvor Start_1 Start_11) (bvadd Start_1 Start_13) (bvmul Start_4 Start_5) (bvudiv Start_13 Start_4) (bvlshr Start_9 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor (bvurem #b00000001 y) #b00000001)))

(check-synth)
