(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_18 (_ BitVec 8)) (Start_16 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_17 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_4 Bool) (Start_6 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_5 Bool) (Start_11 (_ BitVec 8)) (StartBool_3 Bool) (Start_9 (_ BitVec 8)) (StartBool_2 Bool) (Start_7 (_ BitVec 8)) (StartBool_1 Bool))
  ((Start (_ BitVec 8) (#b10100101 (bvneg Start_1) (bvmul Start Start_2) (bvshl Start_2 Start_1) (bvlshr Start_3 Start) (ite StartBool Start_4 Start_5)))
   (StartBool Bool (false (and StartBool_4 StartBool_5) (bvult Start_10 Start_8)))
   (Start_18 (_ BitVec 8) (y x #b00000000 #b10100101 (bvnot Start_1) (bvneg Start_11) (bvand Start_14 Start_3) (bvor Start_18 Start_14) (bvadd Start_9 Start_7) (bvlshr Start_17 Start_11)))
   (Start_16 (_ BitVec 8) (x y (bvneg Start_1) (bvand Start Start_10) (bvor Start_10 Start_13) (bvurem Start_4 Start_17) (bvshl Start_18 Start_6) (bvlshr Start_16 Start_14)))
   (Start_12 (_ BitVec 8) (y #b10100101 #b00000001 (bvnot Start_12) (bvand Start_1 Start_9) (bvor Start_6 Start_15) (bvurem Start_7 Start_1) (bvlshr Start_6 Start_6) (ite StartBool_3 Start_2 Start_11)))
   (Start_14 (_ BitVec 8) (y (bvnot Start_10) (bvneg Start_5) (bvor Start_4 Start_5) (bvadd Start_10 Start_11) (bvudiv Start_9 Start) (bvurem Start_7 Start_1) (bvshl Start_3 Start) (bvlshr Start_14 Start_9) (ite StartBool_3 Start_8 Start_3)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000001 (bvneg Start_10) (bvadd Start_11 Start_1) (bvurem Start_6 Start_14) (bvlshr Start_4 Start_5)))
   (Start_13 (_ BitVec 8) (y (bvand Start_4 Start_4) (bvadd Start_6 Start_10) (bvurem Start_13 Start_11) (bvlshr Start_2 Start_9) (ite StartBool_3 Start_6 Start_14)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvnot Start_12) (bvand Start_12 Start_4) (bvadd Start_4 Start) (bvmul Start_13 Start_12) (bvlshr Start_9 Start_13) (ite StartBool_2 Start_4 Start_11)))
   (Start_1 (_ BitVec 8) (y (bvadd Start_13 Start_10) (bvmul Start_8 Start_17) (bvudiv Start_14 Start) (bvurem Start_12 Start_8) (bvshl Start Start_9) (bvlshr Start_5 Start_5) (ite StartBool Start_16 Start_9)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvnot Start_10) (bvand Start_10 Start_6) (bvor Start_1 Start_2) (bvmul Start_5 Start_3) (bvshl Start_5 Start_8)))
   (Start_15 (_ BitVec 8) (#b00000001 #b10100101 x (bvor Start_14 Start) (bvadd Start_11 Start_16) (bvmul Start_5 Start_15) (bvurem Start_13 Start_4) (bvlshr Start_16 Start_13)))
   (Start_5 (_ BitVec 8) (x (bvmul Start_6 Start) (bvudiv Start Start_1)))
   (Start_17 (_ BitVec 8) (#b00000000 #b00000001 y x #b10100101 (bvneg Start_15) (ite StartBool_2 Start_1 Start_9)))
   (Start_10 (_ BitVec 8) (y #b10100101 x #b00000000 #b00000001 (bvnot Start_4) (bvneg Start_1) (bvmul Start Start_1) (bvudiv Start_1 Start_9) (bvurem Start_3 Start_8) (bvshl Start_11 Start_1)))
   (StartBool_4 Bool (false true (or StartBool_3 StartBool_4)))
   (Start_6 (_ BitVec 8) (#b10100101 (bvnot Start_2) (bvand Start_7 Start_6) (bvor Start_2 Start) (bvmul Start_4 Start_8) (bvudiv Start_1 Start_2) (ite StartBool Start_3 Start_2)))
   (Start_8 (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_5) (bvand Start_4 Start_9) (bvmul Start_8 Start_1) (ite StartBool Start_10 Start_4)))
   (StartBool_5 Bool (true false (not StartBool_1) (or StartBool_2 StartBool_1) (bvult Start_1 Start_3)))
   (Start_11 (_ BitVec 8) (y (bvnot Start_9) (bvneg Start_7) (bvadd Start_3 Start_9) (bvmul Start_4 Start_6) (bvurem Start_6 Start_3) (bvshl Start Start_3) (bvlshr Start_2 Start_10)))
   (StartBool_3 Bool (true false (not StartBool) (or StartBool_2 StartBool_4)))
   (Start_9 (_ BitVec 8) (x (bvneg Start_8) (bvadd Start_5 Start_7) (bvshl Start_3 Start_11) (bvlshr Start Start_3)))
   (StartBool_2 Bool (true (not StartBool_5)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvor Start_5 Start_1) (bvadd Start Start_9) (bvmul Start_7 Start_1) (bvlshr Start Start_9) (ite StartBool_1 Start_7 Start_10)))
   (StartBool_1 Bool (false (or StartBool_2 StartBool_3) (bvult Start_2 Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem (bvlshr y y) y)))

(check-synth)
