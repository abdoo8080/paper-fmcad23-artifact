(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_1 (_ BitVec 8)) (Start_15 (_ BitVec 8)) (StartBool_2 Bool) (Start_2 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_5 Bool) (StartBool_6 Bool) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (Start_11 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_14 (_ BitVec 8)) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (y (bvnot Start_1) (bvand Start_1 Start_2) (bvadd Start_2 Start_3) (bvmul Start_3 Start_4) (bvurem Start_1 Start_4) (bvshl Start_2 Start_1) (bvlshr Start_2 Start_4) (ite StartBool_1 Start_3 Start)))
   (StartBool Bool (true false (not StartBool_5)))
   (Start_1 (_ BitVec 8) (#b10100101 #b00000001 (bvand Start_9 Start_14) (bvurem Start_2 Start_5) (bvlshr Start_10 Start_4)))
   (Start_15 (_ BitVec 8) (x y #b10100101 #b00000001 (bvnot Start_10) (bvand Start_6 Start) (bvor Start_10 Start_1) (bvadd Start Start_6) (bvudiv Start_3 Start_11) (bvshl Start_14 Start_4) (bvlshr Start_4 Start_6)))
   (StartBool_2 Bool (true (not StartBool_2) (and StartBool_3 StartBool_6) (or StartBool_6 StartBool_2) (bvult Start_1 Start_12)))
   (Start_2 (_ BitVec 8) (y (bvand Start_2 Start_2) (bvmul Start_13 Start_14) (bvlshr Start Start_10)))
   (Start_13 (_ BitVec 8) (x (bvor Start Start_6) (bvmul Start_11 Start_13) (bvshl Start_5 Start_2) (ite StartBool_5 Start_13 Start_12)))
   (Start_12 (_ BitVec 8) (y #b00000000 (bvor Start_1 Start_7) (bvadd Start_8 Start_4) (bvmul Start_1 Start_13) (ite StartBool_3 Start_7 Start_13)))
   (StartBool_5 Bool (true (and StartBool_2 StartBool_4)))
   (StartBool_6 Bool (false true (or StartBool_5 StartBool_6)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start_6) (bvneg Start_5) (bvand Start_2 Start_3) (bvmul Start Start_2) (bvudiv Start_6 Start_3) (bvurem Start_1 Start_3) (bvlshr Start_1 Start_1)))
   (Start_4 (_ BitVec 8) (y (bvneg Start_2) (bvand Start_3 Start_1) (bvor Start_5 Start) (bvadd Start_3 Start_5) (ite StartBool Start Start_7)))
   (Start_7 (_ BitVec 8) (#b00000000 (bvneg Start_5) (bvmul Start_5 Start_5) (bvurem Start_7 Start_5) (bvshl Start_4 Start_3) (bvlshr Start_7 Start_1)))
   (Start_6 (_ BitVec 8) (#b00000001 x #b10100101 y #b00000000 (bvmul Start_4 Start) (bvurem Start_1 Start_1) (bvshl Start_3 Start) (bvlshr Start_6 Start_5) (ite StartBool Start Start_1)))
   (Start_3 (_ BitVec 8) (y #b10100101 #b00000001 #b00000000 (bvnot Start_7) (bvneg Start_1) (bvand Start_6 Start_7) (bvor Start_2 Start_1) (bvadd Start_5 Start_5) (bvmul Start_3 Start_8) (bvurem Start_3 Start_4) (bvshl Start_8 Start_7) (ite StartBool Start Start_8)))
   (Start_8 (_ BitVec 8) (x #b00000000 (bvneg Start_1) (bvadd Start_3 Start_1) (bvurem Start_1 Start_2) (bvshl Start Start_5) (bvlshr Start_4 Start_7) (ite StartBool_2 Start_9 Start_8)))
   (StartBool_3 Bool (false true))
   (StartBool_1 Bool (false true (and StartBool StartBool_1) (or StartBool_1 StartBool_1) (bvult Start_2 Start_5)))
   (StartBool_4 Bool (true false (and StartBool_5 StartBool_1) (or StartBool_3 StartBool_6)))
   (Start_11 (_ BitVec 8) (#b00000001 y #b10100101 #b00000000 (bvnot Start_9) (bvand Start_10 Start_7) (bvor Start_5 Start_5) (bvmul Start_10 Start_9) (bvudiv Start_1 Start_2) (bvurem Start_12 Start_8) (bvshl Start_11 Start_2) (bvlshr Start_1 Start_8) (ite StartBool_4 Start Start)))
   (Start_9 (_ BitVec 8) (#b00000000 #b00000001 (bvand Start_8 Start_2) (bvor Start_8 Start_2) (bvudiv Start_7 Start_5) (bvshl Start_2 Start_10) (ite StartBool_3 Start_10 Start_6)))
   (Start_14 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start_6) (bvneg Start_5) (bvand Start_9 Start_2) (bvor Start_12 Start_9) (bvmul Start_9 Start) (bvurem Start_3 Start_8) (bvshl Start_14 Start_10) (bvlshr Start_5 Start_15) (ite StartBool_5 Start Start_13)))
   (Start_10 (_ BitVec 8) (#b00000000 x (bvudiv Start_1 Start_1) (bvlshr Start_6 Start_7) (ite StartBool_3 Start_1 Start_11)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvlshr #b00000001 y) #b00000001)))

(check-synth)
