(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_8 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool))
  ((Start (_ BitVec 8) (#b00000001 y (bvnot Start) (bvneg Start_1) (bvand Start Start) (bvadd Start_1 Start_1) (bvurem Start_2 Start_3) (bvlshr Start_3 Start_1) (ite StartBool_1 Start Start_2)))
   (StartBool Bool (true (bvult Start_8 Start_1)))
   (Start_8 (_ BitVec 8) (x #b10100101 (bvnot Start_3) (bvneg Start_1) (bvand Start_4 Start_6) (bvmul Start Start_7) (bvlshr Start_6 Start_1) (ite StartBool Start Start_5)))
   (Start_3 (_ BitVec 8) (#b00000001 (bvand Start_2 Start_6) (bvadd Start_6 Start_2) (bvmul Start_2 Start_7) (bvudiv Start_6 Start_6)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvadd Start_3 Start_6) (ite StartBool Start_4 Start_2)))
   (Start_2 (_ BitVec 8) (y (bvand Start_6 Start_7) (bvor Start_1 Start_7) (bvadd Start_3 Start_3) (bvurem Start_4 Start_4) (bvshl Start_1 Start_2)))
   (Start_4 (_ BitVec 8) (x #b00000000 #b10100101 y #b00000001 (bvneg Start_1) (bvadd Start_5 Start_6) (bvmul Start_6 Start_2) (bvurem Start_6 Start_5) (bvlshr Start_5 Start_6)))
   (Start_1 (_ BitVec 8) (x #b10100101 (bvor Start_8 Start_4) (bvadd Start_2 Start_6) (bvmul Start Start_6) (bvurem Start_2 Start_4) (bvshl Start_7 Start_7)))
   (Start_7 (_ BitVec 8) (y x #b10100101 (bvadd Start Start) (bvurem Start_1 Start_3) (bvlshr Start_8 Start_8)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvor Start_5 Start_6) (bvmul Start_2 Start_2) (bvshl Start_3 Start) (bvlshr Start_2 Start_4)))
   (StartBool_2 Bool (true false (and StartBool StartBool) (or StartBool_2 StartBool) (bvult Start_4 Start_4)))
   (StartBool_1 Bool (true false (not StartBool_2)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd #b10100101 (bvor y x))))

(check-synth)
