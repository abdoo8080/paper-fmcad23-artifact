(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_3 Bool) (Start_1 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (Start_8 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b10100101 (bvadd Start_1 Start_1) (bvurem Start_1 Start) (bvlshr Start Start_2) (ite StartBool Start_3 Start)))
   (StartBool Bool (true false (not StartBool_3)))
   (StartBool_3 Bool (true false (and StartBool_1 StartBool_1)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start) (bvand Start_9 Start) (bvadd Start_12 Start_13) (bvlshr Start Start_3) (ite StartBool_2 Start_11 Start_1)))
   (Start_2 (_ BitVec 8) (y #b10100101 #b00000001 #b00000000 x (bvneg Start_8) (bvand Start_5 Start_4) (bvshl Start_5 Start_9)))
   (Start_4 (_ BitVec 8) (x (bvneg Start_13) (bvor Start_13 Start_8) (bvadd Start_9 Start_7) (bvmul Start_10 Start_1) (bvlshr Start_10 Start_1)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvnot Start_1) (bvmul Start_1 Start_3) (bvudiv Start Start_4) (bvurem Start_2 Start_1) (bvshl Start_1 Start) (ite StartBool Start_4 Start_5)))
   (Start_5 (_ BitVec 8) (y #b00000000 #b00000001 (bvnot Start) (bvor Start_1 Start_4) (bvmul Start_2 Start) (bvudiv Start_5 Start_5) (bvurem Start_6 Start_3) (bvshl Start_7 Start_6) (ite StartBool_1 Start Start_2)))
   (Start_6 (_ BitVec 8) (#b00000000 (bvneg Start_8) (bvand Start_8 Start_8) (bvor Start_7 Start_11) (bvadd Start_1 Start_11) (bvmul Start_12 Start_7) (bvurem Start Start_12) (bvshl Start_13 Start) (bvlshr Start_10 Start_4) (ite StartBool Start_3 Start_13)))
   (Start_12 (_ BitVec 8) (y (bvnot Start_6) (bvand Start_2 Start_4) (bvor Start_5 Start_1) (bvmul Start_3 Start) (bvudiv Start_12 Start_8) (ite StartBool Start_13 Start_5)))
   (Start_10 (_ BitVec 8) (x #b00000000 (bvmul Start_6 Start_2) (bvudiv Start_11 Start_3) (bvurem Start_10 Start_6) (bvlshr Start_7 Start_8)))
   (Start_7 (_ BitVec 8) (x (bvand Start_4 Start_1) (bvudiv Start_6 Start_2) (bvlshr Start_4 Start_8)))
   (StartBool_1 Bool (true (not StartBool) (bvult Start_4 Start_4)))
   (Start_8 (_ BitVec 8) (#b10100101 x #b00000001 (bvadd Start_6 Start_5) (bvmul Start_3 Start_3) (bvurem Start_7 Start_9)))
   (Start_9 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_9) (bvand Start_7 Start_4) (bvmul Start_9 Start_7) (bvudiv Start_7 Start_3) (bvurem Start_10 Start_4) (bvlshr Start_5 Start)))
   (Start_13 (_ BitVec 8) (#b10100101 (bvnot Start_9) (bvneg Start_11) (bvand Start_4 Start_6) (bvor Start_13 Start_5) (bvadd Start_8 Start_7) (bvmul Start_3 Start_9) (bvudiv Start_11 Start_2) (bvlshr Start_10 Start_2)))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool_1)))
   (Start_11 (_ BitVec 8) (x y (bvnot Start_10) (bvneg Start_12) (bvand Start_10 Start_2) (bvadd Start_8 Start_7) (bvudiv Start_9 Start_11) (bvurem Start_4 Start_10) (bvlshr Start_7 Start_8) (ite StartBool_1 Start_8 Start_6)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvadd y (bvand #b00000001 y))))

(check-synth)
