(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_7 Bool) (Start_10 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (StartBool_6 Bool) (Start_5 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_5 Bool) (StartBool_3 Bool) (StartBool_1 Bool) (StartBool_4 Bool) (Start_8 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_6 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvnot Start) (bvneg Start_1) (bvor Start_2 Start_2) (bvmul Start_2 Start_3) (bvurem Start_1 Start_2) (bvshl Start_1 Start_2) (ite StartBool_1 Start_3 Start_3)))
   (StartBool Bool (false (not StartBool) (bvult Start_1 Start_4)))
   (Start_13 (_ BitVec 8) (y (bvand Start_5 Start) (bvor Start_3 Start_2) (bvadd Start_7 Start_9) (bvmul Start_3 Start) (ite StartBool_7 Start_13 Start_8)))
   (Start_12 (_ BitVec 8) (x (bvnot Start_11) (bvand Start_8 Start_5) (bvor Start_10 Start_3) (bvmul Start_11 Start_6) (bvudiv Start_3 Start_13) (ite StartBool_7 Start_1 Start_7)))
   (Start_1 (_ BitVec 8) (y (bvnot Start_9) (bvneg Start_2) (bvor Start_10 Start_7) (bvadd Start_11 Start_3) (bvurem Start_10 Start_9)))
   (Start_9 (_ BitVec 8) (x (bvand Start_7 Start_4) (bvor Start_9 Start_1) (bvshl Start_8 Start_7) (bvlshr Start_2 Start_7) (ite StartBool_6 Start_4 Start_4)))
   (StartBool_7 Bool (true (not StartBool_3) (and StartBool_5 StartBool_6) (or StartBool_7 StartBool)))
   (Start_10 (_ BitVec 8) (#b00000001 (bvand Start Start_3) (bvor Start_12 Start_7) (bvadd Start Start_12) (bvmul Start Start_3) (bvudiv Start_8 Start) (bvurem Start_7 Start_9) (ite StartBool_6 Start_9 Start_12)))
   (Start_3 (_ BitVec 8) (y x #b10100101 (bvnot Start) (bvneg Start_2) (bvand Start_4 Start_4)))
   (Start_4 (_ BitVec 8) (#b00000001 #b00000000 (bvor Start_4 Start_5) (bvadd Start_4 Start_5) (bvmul Start_6 Start) (bvurem Start_1 Start_4) (bvshl Start_7 Start_2) (bvlshr Start Start) (ite StartBool_3 Start_8 Start_6)))
   (StartBool_6 Bool (true (not StartBool_5) (bvult Start_1 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000001 (bvnot Start_1) (bvneg Start_7) (bvudiv Start_8 Start_7) (bvlshr Start_8 Start_8)))
   (Start_11 (_ BitVec 8) (y (bvor Start_12 Start_6) (bvlshr Start_11 Start_4)))
   (StartBool_2 Bool (false true (not StartBool_3) (and StartBool_1 StartBool_4)))
   (StartBool_5 Bool (true))
   (StartBool_3 Bool (true false (or StartBool_4 StartBool_5) (bvult Start Start)))
   (StartBool_1 Bool (true (not StartBool_2) (and StartBool_2 StartBool_1) (or StartBool_2 StartBool)))
   (StartBool_4 Bool (true (and StartBool_5 StartBool_6)))
   (Start_8 (_ BitVec 8) (x y (bvand Start_4 Start_3) (bvor Start_2 Start_2) (bvadd Start_4 Start_2) (bvshl Start_1 Start_1) (ite StartBool_6 Start_5 Start)))
   (Start_7 (_ BitVec 8) (x (bvneg Start_4) (bvand Start_6 Start_4) (bvudiv Start_6 Start_2) (bvshl Start_7 Start_7) (bvlshr Start_3 Start_4)))
   (Start_2 (_ BitVec 8) (x (bvnot Start_5) (bvneg Start_1) (bvand Start_6 Start_1) (bvadd Start_2 Start_3) (bvmul Start_8 Start_6) (bvurem Start_3 Start_9) (bvlshr Start_9 Start_8) (ite StartBool_7 Start_3 Start_6)))
   (Start_6 (_ BitVec 8) (x (bvnot Start_4) (bvand Start_8 Start_3) (bvudiv Start_1 Start) (bvshl Start_6 Start_4)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl #b10100101 (bvlshr #b10100101 y))))

(check-synth)
