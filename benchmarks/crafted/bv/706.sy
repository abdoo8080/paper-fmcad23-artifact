(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_6 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (Start_2 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_5 Bool) (Start_1 (_ BitVec 8)) (StartBool_2 Bool) (Start_3 (_ BitVec 8)) (StartBool_3 Bool) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x #b00000001 (bvneg Start) (bvor Start Start) (bvshl Start_1 Start) (bvlshr Start_1 Start_1) (ite StartBool_1 Start Start)))
   (StartBool Bool (false (not StartBool_3) (and StartBool_1 StartBool_3)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_9) (bvadd Start_8 Start_10) (bvmul Start_8 Start_6) (bvurem Start_7 Start_3) (ite StartBool_5 Start_5 Start_2)))
   (Start_9 (_ BitVec 8) (x #b00000001 (bvneg Start_10) (bvand Start_5 Start_11) (bvor Start_12 Start) (bvudiv Start_8 Start_1) (bvlshr Start_12 Start_10) (ite StartBool_3 Start_12 Start_10)))
   (Start_8 (_ BitVec 8) (y #b10100101 (bvneg Start_6) (bvand Start_7 Start_5) (bvadd Start_2 Start_8) (bvmul Start_6 Start_3) (bvurem Start_9 Start_10) (bvlshr Start_2 Start_4) (ite StartBool_4 Start_6 Start_2)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_2)))
   (Start_2 (_ BitVec 8) (x (bvnot Start) (bvneg Start_4) (bvor Start Start_1) (bvshl Start_3 Start_5)))
   (StartBool_4 Bool (true (not StartBool) (and StartBool_1 StartBool_3)))
   (StartBool_5 Bool (false (and StartBool StartBool) (or StartBool_3 StartBool_2) (bvult Start_10 Start_4)))
   (Start_1 (_ BitVec 8) (#b00000001 (bvnot Start_1) (bvadd Start Start) (bvmul Start_1 Start_1) (bvudiv Start_2 Start_3) (bvlshr Start_3 Start)))
   (StartBool_2 Bool (false (and StartBool StartBool_3) (or StartBool_2 StartBool_4)))
   (Start_3 (_ BitVec 8) (y x (bvnot Start_1) (bvudiv Start_2 Start_2) (ite StartBool_4 Start_4 Start_1)))
   (StartBool_3 Bool (true false (not StartBool_1) (or StartBool StartBool_2) (bvult Start Start)))
   (Start_5 (_ BitVec 8) (#b00000001 #b00000000 (bvnot Start_6) (bvneg Start_3) (bvor Start_3 Start_1) (bvmul Start_6 Start_6) (bvudiv Start_7 Start_1)))
   (Start_4 (_ BitVec 8) (#b00000001 (bvadd Start_2 Start_4) (bvmul Start Start) (bvudiv Start_1 Start) (bvurem Start_2 Start_2)))
   (Start_12 (_ BitVec 8) (x #b00000000 (bvnot Start_8) (bvneg Start_10) (bvor Start_5 Start_7) (bvmul Start_12 Start_10) (bvlshr Start_5 Start_4)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvneg Start_5) (bvor Start Start_2) (bvmul Start_3 Start_8) (bvudiv Start_1 Start_7)))
   (Start_11 (_ BitVec 8) (#b10100101 x (bvneg Start_8) (bvmul Start_7 Start_2) (bvurem Start_5 Start_7)))
   (Start_10 (_ BitVec 8) (x (bvmul Start_9 Start_5) (bvurem Start_2 Start_5) (bvshl Start_7 Start_6) (bvlshr Start_5 Start_10) (ite StartBool Start_5 Start_1)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvudiv x (bvnot x))))

(check-synth)
