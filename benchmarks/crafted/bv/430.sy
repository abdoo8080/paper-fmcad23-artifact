(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_6 Bool) (Start_14 (_ BitVec 8)) (StartBool_7 Bool) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_4 Bool) (StartBool_2 Bool) (StartBool_1 Bool) (StartBool_5 Bool) (Start_2 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (StartBool_3 Bool) (Start_9 (_ BitVec 8)) (Start_10 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 #b00000001 #b10100101 (bvnot Start) (bvand Start Start) (bvurem Start Start_1) (bvlshr Start Start_2) (ite StartBool Start_2 Start_2)))
   (StartBool Bool (true false (not StartBool_3) (and StartBool_4 StartBool_2) (or StartBool_1 StartBool_5) (bvult Start_3 Start_5)))
   (StartBool_6 Bool (true false (and StartBool_7 StartBool_5) (or StartBool_4 StartBool_6) (bvult Start_13 Start_9)))
   (Start_14 (_ BitVec 8) (y (bvnot Start_6) (bvadd Start_11 Start_13) (bvurem Start_11 Start_2) (bvlshr Start_10 Start_1)))
   (StartBool_7 Bool (true false (not StartBool_6)))
   (Start_1 (_ BitVec 8) (y #b00000000 #b00000001 (bvneg Start_13) (bvand Start_3 Start_10) (bvmul Start_6 Start_11) (bvudiv Start_9 Start_5) (bvurem Start_6 Start_2) (bvshl Start_1 Start_1)))
   (Start_12 (_ BitVec 8) (#b00000001 y #b00000000 #b10100101 (bvneg Start_11) (bvudiv Start_3 Start_7) (ite StartBool Start_5 Start_8)))
   (StartBool_4 Bool (true (not StartBool_2)))
   (StartBool_2 Bool (true false (and StartBool_1 StartBool) (or StartBool StartBool)))
   (StartBool_1 Bool (false true (not StartBool_3) (bvult Start_11 Start_4)))
   (StartBool_5 Bool (false (not StartBool_4) (or StartBool_6 StartBool)))
   (Start_2 (_ BitVec 8) (x (bvand Start Start_1) (bvor Start_1 Start) (bvadd Start_3 Start_4) (bvurem Start_2 Start) (bvlshr Start_4 Start_1)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvneg Start_3) (bvmul Start_2 Start_2) (bvudiv Start_5 Start_1) (ite StartBool_1 Start Start_6)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvnot Start_6) (bvmul Start_6 Start_5) (bvurem Start_2 Start_5) (bvshl Start_5 Start_2) (bvlshr Start_7 Start_7)))
   (Start_7 (_ BitVec 8) (#b10100101 #b00000001 (bvnot Start_2) (bvand Start_6 Start_4) (bvor Start Start_6) (bvadd Start_3 Start_8) (bvmul Start_7 Start_4) (bvshl Start_3 Start_4) (bvlshr Start_6 Start_8) (ite StartBool Start Start_2)))
   (Start_13 (_ BitVec 8) (y #b00000001 (bvneg Start_12) (bvor Start_7 Start_12) (bvadd Start_8 Start_10) (bvmul Start_8 Start_5) (bvudiv Start_8 Start_10) (bvurem Start_14 Start_1) (bvlshr Start Start_6) (ite StartBool_4 Start_4 Start_8)))
   (Start_3 (_ BitVec 8) (#b00000000 #b00000001 (bvand Start_1 Start_12) (bvadd Start_4 Start_12) (bvshl Start_12 Start_10) (bvlshr Start_7 Start_1)))
   (Start_5 (_ BitVec 8) (#b00000001 #b00000000 y #b10100101 x (bvand Start_11 Start_9) (bvudiv Start_11 Start_3) (bvurem Start_2 Start_5) (bvshl Start_5 Start_10)))
   (Start_11 (_ BitVec 8) (y #b00000001 (bvneg Start_1) (bvor Start_4 Start) (bvudiv Start_4 Start) (bvlshr Start_1 Start_4) (ite StartBool_1 Start Start_11)))
   (Start_8 (_ BitVec 8) (#b00000000 #b10100101 x y #b00000001 (bvnot Start_6) (bvneg Start_2) (bvand Start_8 Start_1) (bvor Start Start_8) (bvmul Start_6 Start_5) (bvurem Start_3 Start_1) (bvshl Start_8 Start_1) (bvlshr Start_8 Start_9) (ite StartBool_2 Start_8 Start_2)))
   (StartBool_3 Bool (false true))
   (Start_9 (_ BitVec 8) (x #b00000000 (bvnot Start) (bvand Start_10 Start_4) (bvadd Start_7 Start_7) (bvurem Start_7 Start_8) (bvlshr Start_11 Start_1) (ite StartBool_3 Start_1 Start_3)))
   (Start_10 (_ BitVec 8) (y (bvnot Start_10) (bvadd Start_4 Start) (bvudiv Start_10 Start_10) (bvlshr Start_11 Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem (bvnot #b00000001) y)))

(check-synth)
