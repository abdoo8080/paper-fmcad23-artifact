(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_13 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_2 Bool) (Start_4 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000001 (bvnot Start) (bvand Start_1 Start_2) (bvor Start_1 Start_2) (bvadd Start Start_2) (bvmul Start_3 Start_2) (bvudiv Start Start) (bvurem Start_3 Start) (ite StartBool Start_1 Start_3)))
   (StartBool Bool (true false (not StartBool_1) (and StartBool StartBool_1)))
   (Start_13 (_ BitVec 8) (x #b10100101 (bvneg Start) (bvudiv Start_11 Start_8) (bvurem Start_13 Start_5) (bvlshr Start_8 Start_6)))
   (Start_11 (_ BitVec 8) (x y #b00000001 (bvnot Start_2) (bvneg Start_10) (bvor Start_13 Start_9) (bvmul Start_7 Start_5) (bvurem Start_1 Start_4) (bvshl Start_5 Start_2)))
   (Start_8 (_ BitVec 8) (#b00000000 (bvadd Start_3 Start_3) (bvshl Start_1 Start_3) (ite StartBool_1 Start_3 Start_3)))
   (Start_3 (_ BitVec 8) (#b10100101 (bvand Start_2 Start_1) (bvor Start Start_3) (bvudiv Start_1 Start_4) (bvshl Start Start_1) (bvlshr Start_2 Start_2)))
   (Start_5 (_ BitVec 8) (#b00000001 x (bvnot Start_2) (bvor Start Start_6) (bvadd Start_5 Start_3) (bvudiv Start_6 Start) (bvshl Start_2 Start_4) (bvlshr Start_6 Start_7)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvnot Start_6) (bvneg Start) (bvmul Start Start_4) (bvudiv Start_8 Start_1) (bvurem Start_6 Start_7) (bvlshr Start_8 Start)))
   (StartBool_1 Bool (false (or StartBool StartBool) (bvult Start_2 Start_5)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvor Start_8 Start) (bvadd Start_2 Start_7) (bvudiv Start_7 Start_4)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvnot Start_6) (bvneg Start_10) (bvand Start_9 Start_4) (bvor Start_9 Start_10) (bvadd Start_1 Start_8) (bvmul Start_2 Start_9) (bvudiv Start_2 Start_4) (bvshl Start_3 Start_10) (bvlshr Start Start_10) (ite StartBool_2 Start Start_3)))
   (StartBool_2 Bool (true false))
   (Start_4 (_ BitVec 8) (#b00000000 #b00000001 (bvurem Start_5 Start_1) (bvlshr Start_3 Start_2)))
   (Start_2 (_ BitVec 8) (#b00000000 (bvand Start_3 Start_1) (bvor Start_3 Start_2) (bvmul Start_8 Start_8) (bvurem Start_5 Start_3) (bvshl Start_3 Start_9) (bvlshr Start_10 Start_9) (ite StartBool Start Start_3)))
   (Start_1 (_ BitVec 8) (#b00000001 #b10100101 (bvshl Start_7 Start_3) (ite StartBool_1 Start_9 Start_7)))
   (Start_12 (_ BitVec 8) (y #b00000000 #b10100101 (bvand Start_11 Start_7) (bvor Start_2 Start_7) (bvudiv Start_11 Start)))
   (Start_9 (_ BitVec 8) (#b10100101 y x #b00000001 (bvand Start_11 Start_9) (bvor Start_7 Start_12) (bvudiv Start_7 Start_6) (bvshl Start Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvnot (bvurem #b00000001 y))))

(check-synth)
