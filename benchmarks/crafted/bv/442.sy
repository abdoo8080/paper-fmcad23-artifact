(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (Start_1 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (StartBool_4 Bool) (Start_4 (_ BitVec 8)) (StartBool_3 Bool) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (StartBool_1 Bool) (Start_13 (_ BitVec 8)) (StartBool_2 Bool) (Start_2 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_11 (_ BitVec 8)) (Start_9 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvor Start Start) (bvlshr Start_1 Start_2) (ite StartBool_1 Start_3 Start_1)))
   (StartBool Bool (false true (and StartBool_3 StartBool_2) (or StartBool_2 StartBool_5)))
   (StartBool_5 Bool (true (and StartBool_5 StartBool_5) (or StartBool_2 StartBool)))
   (Start_1 (_ BitVec 8) (x #b10100101 y #b00000001 #b00000000 (bvneg Start_6) (bvor Start_10 Start_12) (bvudiv Start_10 Start_4) (bvshl Start_4 Start_13)))
   (Start_12 (_ BitVec 8) (#b00000001 #b00000000 x #b10100101 y (bvor Start Start_12) (bvadd Start_10 Start_9) (bvudiv Start_9 Start_7) (bvurem Start_8 Start_10) (bvshl Start_12 Start_6)))
   (StartBool_4 Bool (false))
   (Start_4 (_ BitVec 8) (#b00000001 #b00000000 (bvand Start_5 Start_3)))
   (StartBool_3 Bool (false))
   (Start_7 (_ BitVec 8) (x #b00000000 (bvneg Start_4) (bvand Start_12 Start_5) (bvadd Start Start_4) (bvmul Start_5 Start_4) (bvudiv Start_3 Start_4) (bvurem Start_7 Start) (bvshl Start_2 Start_1) (ite StartBool_2 Start_8 Start_9)))
   (Start_3 (_ BitVec 8) (y (bvand Start_2 Start_4) (bvadd Start_3 Start_4)))
   (Start_5 (_ BitVec 8) (y (bvnot Start_6) (bvneg Start_3) (bvudiv Start_4 Start_6) (bvurem Start Start) (ite StartBool_1 Start_4 Start_4)))
   (Start_6 (_ BitVec 8) (#b00000000 #b00000001 x (bvneg Start_1) (bvor Start_5 Start_3) (bvadd Start_2 Start_5)))
   (StartBool_1 Bool (false true (not StartBool_2) (or StartBool_3 StartBool_1)))
   (Start_13 (_ BitVec 8) (#b00000000 (bvnot Start_7) (bvor Start Start) (bvudiv Start_1 Start_8) (bvshl Start_1 Start_12) (ite StartBool_4 Start_2 Start_8)))
   (StartBool_2 Bool (true false (or StartBool_3 StartBool) (bvult Start_7 Start_8)))
   (Start_2 (_ BitVec 8) (x (bvmul Start_1 Start_3) (bvurem Start_10 Start_10) (bvshl Start_10 Start) (bvlshr Start_3 Start_10)))
   (Start_10 (_ BitVec 8) (y #b00000000 #b10100101 x (bvnot Start_2) (bvneg Start_11) (bvadd Start_8 Start_8) (ite StartBool Start_7 Start_9)))
   (Start_8 (_ BitVec 8) (x #b00000000 #b10100101 (bvnot Start_6) (bvneg Start_9) (bvand Start_1 Start_8) (bvor Start_10 Start_9) (bvmul Start_3 Start_9)))
   (Start_11 (_ BitVec 8) (#b00000000 #b00000001 (bvadd Start Start_4) (bvurem Start_4 Start) (bvshl Start_7 Start_11) (bvlshr Start_6 Start_3) (ite StartBool_1 Start_2 Start_11)))
   (Start_9 (_ BitVec 8) (#b00000001 x #b10100101 (bvnot Start_3) (bvor Start_5 Start_7) (bvmul Start_4 Start_5) (bvudiv Start_5 Start) (bvlshr Start_7 Start_11) (ite StartBool_3 Start_7 Start_9)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor (bvadd #b00000001 #b10100101) y)))

(check-synth)
