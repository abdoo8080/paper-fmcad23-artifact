(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_14 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_2 Bool) (Start_10 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_3 Bool) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x #b00000001 (bvnot Start) (bvneg Start) (bvlshr Start Start)))
   (StartBool Bool (true (not StartBool_1) (and StartBool_2 StartBool_2)))
   (Start_14 (_ BitVec 8) (#b00000001 (bvand Start_7 Start_14) (bvadd Start_5 Start_7) (bvmul Start_7 Start) (bvurem Start_1 Start) (bvshl Start_12 Start_10) (bvlshr Start_11 Start_3)))
   (Start_12 (_ BitVec 8) (x (bvnot Start_12) (bvneg Start_6) (bvand Start_13 Start_7) (bvor Start_4 Start_14) (bvadd Start_3 Start_4) (bvmul Start_9 Start_8) (bvudiv Start_11 Start_10) (bvshl Start_9 Start_9) (bvlshr Start_12 Start_13) (ite StartBool_1 Start_13 Start_9)))
   (Start_13 (_ BitVec 8) (x (bvnot Start_7)))
   (Start_3 (_ BitVec 8) (y #b10100101 #b00000000 #b00000001 x (bvnot Start_7) (bvneg Start_5) (bvand Start_12 Start_5) (bvmul Start_5 Start_2) (bvurem Start_2 Start_5) (bvshl Start_10 Start_13) (bvlshr Start_2 Start_3) (ite StartBool_3 Start_5 Start_11)))
   (Start_5 (_ BitVec 8) (x #b10100101 #b00000000 y #b00000001 (bvnot Start_6) (bvneg Start_3) (bvand Start_1 Start) (bvor Start_2 Start_7) (bvadd Start_7 Start_1) (bvudiv Start_6 Start_3) (bvshl Start_8 Start_3)))
   (StartBool_2 Bool (false true (bvult Start_1 Start_2)))
   (Start_10 (_ BitVec 8) (x #b00000001 y (bvnot Start_3) (bvneg Start_8) (bvand Start_8 Start_9) (bvmul Start_6 Start_3) (bvudiv Start_5 Start_2) (bvurem Start_4 Start_2) (bvlshr Start_8 Start_4)))
   (Start_1 (_ BitVec 8) (#b00000000 #b00000001 (bvor Start_4 Start_12) (bvadd Start_5 Start_2) (bvlshr Start_13 Start_5)))
   (Start_6 (_ BitVec 8) (#b00000001 (bvand Start_5 Start) (bvor Start_5 Start) (bvurem Start_4 Start)))
   (Start_2 (_ BitVec 8) (#b00000001 y x (bvnot Start_3) (bvand Start_3 Start_4) (bvmul Start_1 Start_5) (bvudiv Start Start_3) (bvshl Start Start_1) (ite StartBool_3 Start_5 Start_3)))
   (StartBool_3 Bool (true false (and StartBool_3 StartBool_3) (bvult Start_1 Start_5)))
   (Start_8 (_ BitVec 8) (x #b10100101 (bvor Start_5 Start_9) (bvudiv Start_2 Start)))
   (StartBool_1 Bool (false true (not StartBool_1) (or StartBool StartBool_2) (bvult Start_5 Start_5)))
   (Start_7 (_ BitVec 8) (#b00000001 (bvand Start_7 Start_6) (bvadd Start_3 Start_8) (bvudiv Start_3 Start_3) (bvshl Start Start_6) (bvlshr Start_6 Start_7)))
   (Start_9 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start_10) (bvand Start_7 Start_3) (bvor Start Start_6) (bvadd Start_1 Start_2) (bvmul Start Start_8) (bvudiv Start_5 Start)))
   (Start_4 (_ BitVec 8) (y (bvnot Start_2) (bvadd Start_8 Start_4) (bvmul Start_2 Start_1) (bvudiv Start_10 Start_3) (bvurem Start Start_8) (bvlshr Start_3 Start_11)))
   (Start_11 (_ BitVec 8) (x #b10100101 (bvor Start_10 Start_7) (bvudiv Start_1 Start_9) (bvurem Start_8 Start_10) (bvshl Start_1 Start_6) (ite StartBool_1 Start_11 Start_10)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl x (bvshl y x))))

(check-synth)
