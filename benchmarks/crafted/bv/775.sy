(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (StartBool_6 Bool) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (Start_2 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_13 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_2 Bool) (StartBool_1 Bool) (Start_3 (_ BitVec 8)) (StartBool_4 Bool) (Start_9 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_11 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x y #b00000000 #b10100101 #b00000001 (bvadd Start Start) (bvudiv Start_1 Start_2) (ite StartBool_1 Start Start)))
   (StartBool Bool (true false (not StartBool_5) (and StartBool_1 StartBool_6) (bvult Start_11 Start_6)))
   (StartBool_5 Bool (true false (not StartBool_4) (and StartBool_6 StartBool_2)))
   (StartBool_6 Bool (false true (or StartBool_4 StartBool_5)))
   (Start_1 (_ BitVec 8) (#b00000000 x (bvadd Start_2 Start_11) (bvudiv Start_1 Start_4) (bvlshr Start_11 Start_3) (ite StartBool_4 Start_12 Start_8)))
   (StartBool_3 Bool (false (not StartBool_1) (and StartBool_3 StartBool_3) (or StartBool_4 StartBool_4)))
   (Start_2 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvneg Start_11) (bvor Start Start_10) (bvurem Start_9 Start_8) (ite StartBool Start_3 Start_13)))
   (Start_12 (_ BitVec 8) (x #b00000001 #b10100101 (bvneg Start_7) (bvor Start_5 Start_9) (bvmul Start_10 Start_3) (bvudiv Start_8 Start_9) (bvurem Start_4 Start_10) (bvshl Start_12 Start_8) (ite StartBool_3 Start_5 Start_2)))
   (Start_13 (_ BitVec 8) (#b00000001 (bvnot Start_3) (bvneg Start_2) (bvand Start_5 Start_6) (bvmul Start_12 Start_5) (bvudiv Start_6 Start_10)))
   (Start_5 (_ BitVec 8) (#b00000000 y (bvnot Start_4) (bvneg Start_3) (bvand Start_4 Start_5) (bvmul Start_2 Start_5) (bvudiv Start_5 Start_2) (bvurem Start_1 Start_5) (bvshl Start_6 Start_7) (bvlshr Start_6 Start_3)))
   (StartBool_2 Bool (false true (not StartBool_3) (bvult Start_1 Start_3)))
   (StartBool_1 Bool (true false (not StartBool_2) (or StartBool_2 StartBool) (bvult Start_1 Start_1)))
   (Start_3 (_ BitVec 8) (#b10100101 #b00000000 y (bvand Start_1 Start_1) (bvmul Start Start_3) (bvurem Start_4 Start_2) (bvshl Start_1 Start_4) (ite StartBool Start_3 Start_5)))
   (StartBool_4 Bool (true (not StartBool_3) (and StartBool_4 StartBool_4)))
   (Start_9 (_ BitVec 8) (y #b10100101 (bvneg Start_1) (bvand Start_9 Start_4) (bvadd Start_5 Start_2) (bvmul Start_3 Start_7) (bvurem Start_8 Start_3)))
   (Start_7 (_ BitVec 8) (#b00000001 y (bvand Start_4 Start_1) (bvor Start_5 Start_4) (bvadd Start_3 Start_8) (bvmul Start_5 Start_4) (bvshl Start_6 Start_2) (bvlshr Start_3 Start_9) (ite StartBool_3 Start_3 Start_5)))
   (Start_8 (_ BitVec 8) (#b00000000 x #b00000001 y #b10100101 (bvudiv Start_5 Start_8) (bvlshr Start Start_6) (ite StartBool Start_7 Start_5)))
   (Start_6 (_ BitVec 8) (x #b10100101 #b00000000 (bvor Start_3 Start_2) (bvmul Start_8 Start_9) (bvudiv Start_6 Start_2) (bvurem Start_2 Start_4) (bvlshr Start_4 Start_7) (ite StartBool_2 Start_3 Start_5)))
   (Start_10 (_ BitVec 8) (#b10100101 (bvneg Start_7) (bvor Start_4 Start_4) (bvadd Start_7 Start_3) (bvurem Start_9 Start_6) (bvlshr Start_7 Start_5) (ite StartBool_3 Start_11 Start)))
   (Start_4 (_ BitVec 8) (#b10100101 (bvand Start_9 Start_9) (bvadd Start_8 Start_5) (bvlshr Start_5 Start_8) (ite StartBool Start_10 Start_4)))
   (Start_11 (_ BitVec 8) (x #b00000000 (bvnot Start_12) (bvneg Start) (bvand Start_5 Start_2) (bvor Start Start_7) (bvmul Start_3 Start_7) (bvurem Start_7 Start_7) (bvlshr Start_9 Start_12) (ite StartBool_3 Start_11 Start_7)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvor (bvnot (bvadd y y)) #b00000001)))

(check-synth)
