(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_4 Bool) (Start_13 (_ BitVec 8)) (Start_12 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (Start_1 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (Start_8 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (StartBool_1 Bool) (Start_7 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (StartBool_2 Bool) (Start_11 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (StartBool_3 Bool) (Start_6 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 y #b00000001 (bvnot Start) (bvneg Start) (bvor Start_1 Start_1) (bvmul Start Start_1) (bvudiv Start_2 Start_3) (ite StartBool Start_1 Start_2)))
   (StartBool Bool (true false (and StartBool_4 StartBool) (or StartBool_3 StartBool_4)))
   (StartBool_4 Bool (true (not StartBool_2) (bvult Start_3 Start_2)))
   (Start_13 (_ BitVec 8) (#b00000000 #b10100101 (bvnot Start_2) (bvand Start_12 Start_2) (bvor Start_3 Start_8) (bvmul Start_10 Start_9)))
   (Start_12 (_ BitVec 8) (#b00000000 (bvnot Start_12) (bvneg Start_12) (bvand Start_8 Start_3) (bvor Start_6 Start_1) (bvmul Start_10 Start_9) (bvshl Start Start_2) (ite StartBool_4 Start_7 Start_13)))
   (Start_2 (_ BitVec 8) (y (bvnot Start) (bvneg Start_1) (bvand Start_1 Start_11) (bvadd Start_12 Start_4) (bvudiv Start_3 Start) (bvshl Start_5 Start_5) (bvlshr Start_11 Start_12)))
   (Start_1 (_ BitVec 8) (#b10100101 (bvneg Start_5) (bvand Start_10 Start_5) (bvmul Start_1 Start_1) (ite StartBool_1 Start_3 Start_1)))
   (Start_10 (_ BitVec 8) (#b00000001 x #b10100101 (bvand Start_7 Start) (bvor Start_1 Start_4) (bvmul Start_3 Start_9) (bvshl Start_8 Start_8) (ite StartBool_2 Start Start_10)))
   (Start_8 (_ BitVec 8) (#b10100101 (bvadd Start_11 Start) (bvurem Start_11 Start_3) (ite StartBool_1 Start_6 Start_6)))
   (Start_5 (_ BitVec 8) (x (bvneg Start_5) (bvand Start_4 Start_4) (bvadd Start_5 Start_3) (bvudiv Start Start) (ite StartBool_1 Start_1 Start)))
   (StartBool_1 Bool (true))
   (Start_7 (_ BitVec 8) (#b00000000 #b00000001 y #b10100101 (bvand Start_5 Start_4) (bvmul Start_4 Start_2) (ite StartBool_1 Start_1 Start_1)))
   (Start_3 (_ BitVec 8) (#b00000000 (bvneg Start) (bvudiv Start_4 Start_3) (bvlshr Start_5 Start_5)))
   (StartBool_2 Bool (true (not StartBool_3) (or StartBool StartBool)))
   (Start_11 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvadd Start_9 Start_11) (ite StartBool_2 Start_8 Start_7)))
   (Start_4 (_ BitVec 8) (#b00000000 #b10100101 y (bvnot Start_4) (bvand Start_6 Start_7) (bvor Start_4 Start_4) (bvmul Start_3 Start_1) (bvudiv Start_7 Start) (bvurem Start_2 Start_3) (bvshl Start Start) (bvlshr Start_1 Start_2) (ite StartBool_1 Start_6 Start_1)))
   (Start_9 (_ BitVec 8) (#b10100101 #b00000000 #b00000001 (bvnot Start_1) (bvneg Start_10) (bvand Start_5 Start_3) (bvurem Start_8 Start_5) (bvshl Start_5 Start_4) (bvlshr Start_2 Start_2) (ite StartBool Start_10 Start_10)))
   (StartBool_3 Bool (false (and StartBool_1 StartBool_3) (or StartBool_1 StartBool)))
   (Start_6 (_ BitVec 8) (#b00000001 #b00000000 y (bvneg Start_3) (bvand Start_6 Start_8) (bvmul Start_9 Start_8) (bvurem Start_3 Start_9) (bvlshr Start_2 Start_3)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvlshr (bvnot (bvshl #b00000001 x)) (bvnot x))))

(check-synth)
