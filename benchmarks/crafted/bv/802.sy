(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (Start_7 (_ BitVec 8)) (Start_2 (_ BitVec 8)) (StartBool_1 Bool) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_4 (_ BitVec 8)) (Start_3 (_ BitVec 8)) (Start_1 (_ BitVec 8)))
  ((Start (_ BitVec 8) (#b00000000 (bvneg Start) (bvurem Start Start) (bvlshr Start_1 Start_1) (ite StartBool Start_1 Start)))
   (StartBool Bool (false true (not StartBool) (and StartBool_1 StartBool) (or StartBool StartBool_1)))
   (Start_7 (_ BitVec 8) (x (bvand Start_4 Start) (bvor Start Start_7) (bvlshr Start_3 Start_6)))
   (Start_2 (_ BitVec 8) (x (bvnot Start_7) (bvneg Start_5) (bvshl Start_3 Start_1)))
   (StartBool_1 Bool (false true (and StartBool_1 StartBool_1) (or StartBool_1 StartBool_1)))
   (Start_6 (_ BitVec 8) (#b00000001 #b00000000 #b10100101 (bvneg Start_5) (bvadd Start_5 Start_1) (bvshl Start_1 Start) (bvlshr Start_4 Start_1)))
   (Start_5 (_ BitVec 8) (x (bvnot Start_2) (bvand Start_5 Start_3) (bvor Start_6 Start_3) (bvmul Start_4 Start) (bvudiv Start_3 Start) (bvshl Start_3 Start_4)))
   (Start_4 (_ BitVec 8) (y #b00000001 (bvudiv Start_5 Start_2) (bvurem Start_2 Start_2) (ite StartBool Start_2 Start_4)))
   (Start_3 (_ BitVec 8) (#b00000000 y (bvneg Start) (bvor Start Start_4) (bvmul Start_3 Start_3) (bvurem Start Start)))
   (Start_1 (_ BitVec 8) (y #b00000001 (bvnot Start_1) (bvneg Start_2) (bvand Start_2 Start_3) (bvmul Start_3 Start) (bvshl Start Start_3) (ite StartBool Start Start)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvshl (bvurem (bvadd #b00000001 #b10100101) y) (bvadd #b10100101 (bvand #b00000001 x)))))

(check-synth)
