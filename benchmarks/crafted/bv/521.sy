(set-logic BV)

(synth-fun f ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8)
  ((Start (_ BitVec 8)) (StartBool Bool) (StartBool_5 Bool) (Start_2 (_ BitVec 8)) (Start_10 (_ BitVec 8)) (StartBool_4 Bool) (Start_1 (_ BitVec 8)) (StartBool_3 Bool) (Start_4 (_ BitVec 8)) (StartBool_2 Bool) (Start_8 (_ BitVec 8)) (StartBool_1 Bool) (Start_11 (_ BitVec 8)) (Start_6 (_ BitVec 8)) (Start_5 (_ BitVec 8)) (Start_7 (_ BitVec 8)) (Start_9 (_ BitVec 8)) (Start_3 (_ BitVec 8)))
  ((Start (_ BitVec 8) (x (bvnot Start) (bvneg Start) (bvmul Start Start_1) (ite StartBool Start_1 Start_1)))
   (StartBool Bool (true false (and StartBool_4 StartBool_1) (or StartBool_4 StartBool_5)))
   (StartBool_5 Bool (true))
   (Start_2 (_ BitVec 8) (#b00000001 #b10100101 (bvneg Start_11) (bvor Start_2 Start_4) (bvudiv Start_6 Start_7) (bvurem Start_10 Start_8) (bvlshr Start_7 Start_8)))
   (Start_10 (_ BitVec 8) (#b00000000 (bvand Start_2 Start_1) (bvadd Start Start_4) (bvmul Start_3 Start_6) (bvshl Start_7 Start) (bvlshr Start_4 Start_11)))
   (StartBool_4 Bool (false true (not StartBool_1) (or StartBool StartBool) (bvult Start Start_5)))
   (Start_1 (_ BitVec 8) (#b00000001 x y #b00000000 #b10100101 (bvnot Start_2) (bvand Start_3 Start_2) (bvor Start_2 Start_2) (bvadd Start_3 Start_4) (bvshl Start Start_4)))
   (StartBool_3 Bool (true false (and StartBool_2 StartBool_3) (or StartBool_2 StartBool_1)))
   (Start_4 (_ BitVec 8) (#b00000001 #b10100101 #b00000000 (bvnot Start_1) (bvneg Start_1) (bvor Start_5 Start_2) (bvudiv Start_2 Start_5) (bvshl Start_6 Start_1) (bvlshr Start_3 Start) (ite StartBool_1 Start_1 Start_2)))
   (StartBool_2 Bool (false (not StartBool_1) (and StartBool_4 StartBool_2) (or StartBool_4 StartBool_3)))
   (Start_8 (_ BitVec 8) (#b00000000 #b10100101 #b00000001 (bvshl Start_1 Start_3) (bvlshr Start_3 Start_5)))
   (StartBool_1 Bool (false (not StartBool_2) (and StartBool_3 StartBool_1)))
   (Start_11 (_ BitVec 8) (#b00000000 x (bvadd Start Start_2) (bvmul Start_8 Start_9) (bvudiv Start Start_10) (bvshl Start_5 Start_8) (bvlshr Start_5 Start_4) (ite StartBool_1 Start_6 Start_11)))
   (Start_6 (_ BitVec 8) (#b00000000 y x #b00000001 #b10100101 (bvnot Start_5) (bvand Start_3 Start_6) (bvor Start_5 Start_2) (bvadd Start_1 Start_5) (bvmul Start_6 Start_7) (bvudiv Start Start_7) (ite StartBool_2 Start_6 Start_8)))
   (Start_5 (_ BitVec 8) (y x (bvnot Start_7) (bvneg Start_2) (bvand Start Start_3) (bvmul Start_1 Start_9) (bvudiv Start_1 Start_7) (bvurem Start_2 Start_3) (bvlshr Start_5 Start_1)))
   (Start_7 (_ BitVec 8) (#b00000000 #b00000001 (bvnot Start_4) (bvneg Start_8) (bvand Start_3 Start_5) (bvadd Start_3 Start_2) (bvudiv Start_1 Start_4) (bvurem Start_3 Start_2) (bvshl Start_5 Start_3) (bvlshr Start_5 Start_4)))
   (Start_9 (_ BitVec 8) (#b00000001 y (bvand Start_7 Start_8) (bvor Start_5 Start) (bvadd Start_9 Start_7) (bvmul Start_1 Start_4) (bvudiv Start_3 Start_4) (bvurem Start_1 Start_9) (bvlshr Start_3 Start_1) (ite StartBool Start_8 Start_5)))
   (Start_3 (_ BitVec 8) (y #b00000001 (bvneg Start_6) (bvor Start_2 Start_4) (bvadd Start_2 Start_4) (bvudiv Start_7 Start_7) (bvshl Start_2 Start_7) (bvlshr Start_10 Start_8)))))

(declare-var x (_ BitVec 8))
(declare-var y (_ BitVec 8))

(constraint (= (f x y) (bvurem #b00000000 (bvand y #b10100101))))

(check-synth)
